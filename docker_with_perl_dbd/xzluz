'Saurashtra',
],
'sgnw' => 
[
'Sgnw',
'SignWriting',
],
'shaw' => 
[
'Shaw',
'Shavian',
],
'shrd' => 
[
'Shrd',
'Sharada',
],
'sidd' => 
[
'Sidd',
'Siddham',
],
'sind' => 
[
'Sind',
'Khudawadi',
],
'sinh' => 
[
'Sinh',
'Sinhala',
],
'sogd' => 
[
'Sogd',
'Sogdian',
],
'sogo' => 
[
'Sogo',
'Old_Sogdian',
],
'sora' => 
[
'Sora',
'Sora_Sompeng',
],
'soyo' => 
[
'Soyo',
'Soyombo',
],
'sund' => 
[
'Sund',
'Sundanese',
],
'sylo' => 
[
'Sylo',
'Syloti_Nagri',
],
'syrc' => 
[
'Syrc',
'Syriac',
],
'tagb' => 
[
'Tagb',
'Tagbanwa',
],
'takr' => 
[
'Takr',
'Takri',
],
'tale' => 
[
'Tale',
'Tai_Le',
],
'talu' => 
[
'Talu',
'New_Tai_Lue',
],
'taml' => 
[
'Taml',
'Tamil',
],
'tang' => 
[
'Tang',
'Tangut',
],
'tavt' => 
[
'Tavt',
'Tai_Viet',
],
'telu' => 
[
'Telu',
'Telugu',
],
'tfng' => 
[
'Tfng',
'Tifinagh',
],
'tglg' => 
[
'Tglg',
'Tagalog',
],
'thaa' => 
[
'Thaa',
'Thaana',
],
'thai' => 
[
'Thai',
],
'tibt' => 
[
'Tibt',
'Tibetan',
],
'tirh' => 
[
'Tirh',
'Tirhuta',
],
'tnsa' => 
[
'Tnsa',
'Tangsa',
],
'toto' => 
[
'Toto',
],
'ugar' => 
[
'Ugar',
'Ugaritic',
],
'vaii' => 
[
'Vaii',
'Vai',
],
'vith' => 
[
'Vith',
'Vithkuqi',
],
'wara' => 
[
'Wara',
'Warang_Citi',
],
'wcho' => 
[
'Wcho',
'Wancho',
],
'xpeo' => 
[
'Xpeo',
'Old_Persian',
],
'xsux' => 
[
'Xsux',
'Cuneiform',
],
'yezi' => 
[
'Yezi',
'Yezidi',
],
'yiii' => 
[
'Yiii',
'Yi',
],
'zanb' => 
[
'Zanb',
'Zanabazar_Square',
],
'zinh' => 
[
'Zinh',
'Inherited',
'Qaai',
],
'zyyy' => 
[
'Zyyy',
'Common',
],
'zzzz' => 
[
'Zzzz',
'Unknown',
],
},
'sd' => 
{
'n' => 
[
'N',
'No',
'F',
'False',
],
'y' => 
[
'Y',
'Yes',
'T',
'True',
],
},
'sterm' => 
{
'n' => 
[
'N',
'No',
'F',
'False',
],
'y' => 
[
'Y',
'Yes',
'T',
'True',
],
},
'term' => 
{
'n' => 
[
'N',
'No',
'F',
'False',
],
'y' => 
[
'Y',
'Yes',
'T',
'True',
],
},
'uideo' => 
{
'n' => 
[
'N',
'No',
'F',
'False',
],
'y' => 
[
'Y',
'Yes',
'T',
'True',
],
},
'upper' => 
{
'n' => 
[
'N',
'No',
'F',
'False',
],
'y' => 
[
'Y',
'Yes',
'T',
'True',
],
},
'vo' => 
{
'r' => 
[
'R',
'Rotated',
],
'tr' => 
[
'Tr',
'Transformed_Rotated',
],
'tu' => 
[
'Tu',
'Transformed_Upright',
],
'u' => 
[
'U',
'Upright',
],
},
'vs' => 
{
'n' => 
[
'N',
'No',
'F',
'False',
],
'y' => 
[
'Y',
'Yes',
'T',
'True',
],
},
'wb' => 
{
'cr' => 
[
'CR',
],
'dq' => 
[
'DQ',
'Double_Quote',
],
'eb' => 
[
'EB',
'E_Base',
],
'ebg' => 
[
'EBG',
'E_Base_GAZ',
],
'em' => 
[
'EM',
'E_Modifier',
],
'ex' => 
[
'EX',
'ExtendNumLet',
],
'extend' => 
[
'Extend',
],
'fo' => 
[
'FO',
'Format',
],
'gaz' => 
[
'GAZ',
'Glue_After_Zwj',
],
'hl' => 
[
'HL',
'Hebrew_Letter',
],
'ka' => 
[
'KA',
'Katakana',
],
'le' => 
[
'LE',
'ALetter',
],
'lf' => 
[
'LF',
],
'mb' => 
[
'MB',
'MidNumLet',
],
'ml' => 
[
'ML',
'MidLetter',
],
'mn' => 
[
'MN',
'MidNum',
],
'nl' => 
[
'NL',
'Newline',
],
'nu' => 
[
'NU',
'Numeric',
],
'ri' => 
[
'RI',
'Regional_Indicator',
],
'sq' => 
[
'SQ',
'Single_Quote',
],
'wsegspace' => 
[
'WSegSpace',
],
'xx' => 
[
'XX',
'Other',
],
'zwj' => 
[
'ZWJ',
],
},
'wspace' => 
{
'n' => 
[
'N',
'No',
'F',
'False',
],
'y' => 
[
'Y',
'Yes',
'T',
'True',
],
},
'xidc' => 
{
'n' => 
[
'N',
'No',
'F',
'False',
],
'y' => 
[
'Y',
'Yes',
'T',
'True',
],
},
'xids' => 
{
'n' => 
[
'N',
'No',
'F',
'False',
],
'y' => 
[
'Y',
'Yes',
'T',
'True',
],
},
);

# Ordered (by code point ordinal) list of the ranges of code points whose
# names are algorithmically determined.  Each range entry is an anonymous hash
# of the start and end points and a template for the names within it.
@Unicode::UCD::algorithmic_named_code_points = (

{
'high' => 19903,
'low' => 13312,
'name' => 'CJK UNIFIED IDEOGRAPH-<code point>',
},
{
'high' => 40959,
'low' => 19968,
'name' => 'CJK UNIFIED IDEOGRAPH-<code point>',
},
{
'high' => 55203,
'low' => 44032,
'name' => '<hangul syllable>',
},
{
'high' => 64109,
'low' => 63744,
'name' => 'CJK COMPATIBILITY IDEOGRAPH-<code point>',
},
{
'high' => 64217,
'low' => 64112,
'name' => 'CJK COMPATIBILITY IDEOGRAPH-<code point>',
},
{
'high' => 100343,
'low' => 94208,
'name' => 'TANGUT IDEOGRAPH-<code point>',
},
{
'high' => 101589,
'low' => 101120,
'name' => 'KHITAN SMALL SCRIPT CHARACTER-<code point>',
},
{
'high' => 101640,
'low' => 101632,
'name' => 'TANGUT IDEOGRAPH SUPPLEMENT-<code point>',
},
{
'high' => 111355,
'low' => 110960,
'name' => 'NUSHU CHARACTER-<code point>',
},
{
'high' => 173791,
'low' => 131072,
'name' => 'CJK UNIFIED IDEOGRAPH-<code point>',
},
{
'high' => 177977,
'low' => 173824,
'name' => 'CJK UNIFIED IDEOGRAPH-<code point>',
},
{
'high' => 178205,
'low' => 177984,
'name' => 'CJK UNIFIED IDEOGRAPH-<code point>',
},
{
'high' => 183969,
'low' => 178208,
'name' => 'CJK UNIFIED IDEOGRAPH-<code point>',
},
{
'high' => 191456,
'low' => 183984,
'name' => 'CJK UNIFIED IDEOGRAPH-<code point>',
},
{
'high' => 195101,
'low' => 194560,
'name' => 'CJK COMPATIBILITY IDEOGRAPH-<code point>',
},
{
'high' => 201546,
'low' => 196608,
'name' => 'CJK UNIFIED IDEOGRAPH-<code point>',
},
{
'high' => 205743,
'low' => 201552,
'name' => 'CJK UNIFIED IDEOGRAPH-<code point>',
},
,
);

# The properties that as-is have two meanings, and which must be disambiguated
%Unicode::UCD::ambiguous_names = (
'cf' => 1,
'isc' => 1,
'lc' => 1,
'sc' => 1,
);

# Keys are the prop-val combinations which are the default values for the
# given property, expressed in standard loose form
%Unicode::UCD::loose_defaults = (
'age=na' => 1,
'age=unassigned' => 1,
'ahex=f' => 1,
'ahex=false' => 1,
'ahex=n' => 1,
'ahex=no' => 1,
'alpha=f' => 1,
'alpha=false' => 1,
'alpha=n' => 1,
'alpha=no' => 1,
'bc=l' => 1,
'bc=lefttoright' => 1,
'bidic=f' => 1,
'bidic=false' => 1,
'bidic=n' => 1,
'bidic=no' => 1,
'bidim=f' => 1,
'bidim=false' => 1,
'bidim=n' => 1,
'bidim=no' => 1,
'blk=nb' => 1,
'blk=noblock' => 1,
'bpt=n' => 1,
'bpt=none' => 1,
'cased=f' => 1,
'cased=false' => 1,
'cased=n' => 1,
'cased=no' => 1,
'ccc=0' => 1,
'ccc=notreordered' => 1,
'ccc=nr' => 1,
'ce=f' => 1,
'ce=false' => 1,
'ce=n' => 1,
'ce=no' => 1,
'ci=f' => 1,
'ci=false' => 1,
'ci=n' => 1,
'ci=no' => 1,
'cn' => 1,
'compex=f' => 1,
'compex=false' => 1,
'compex=n' => 1,
'compex=no' => 1,
'cwcf=f' => 1,
'cwcf=false' => 1,
'cwcf=n' => 1,
'cwcf=no' => 1,
'cwcm=f' => 1,
'cwcm=false' => 1,
'cwcm=n' => 1,
'cwcm=no' => 1,
'cwkcf=f' => 1,
'cwkcf=false' => 1,
'cwkcf=n' => 1,
'cwkcf=no' => 1,
'cwl=f' => 1,
'cwl=false' => 1,
'cwl=n' => 1,
'cwl=no' => 1,
'cwt=f' => 1,
'cwt=false' => 1,
'cwt=n' => 1,
'cwt=no' => 1,
'cwu=f' => 1,
'cwu=false' => 1,
'cwu=n' => 1,
'cwu=no' => 1,
'dash=f' => 1,
'dash=false' => 1,
'dash=n' => 1,
'dash=no' => 1,
'dep=f' => 1,
'dep=false' => 1,
'dep=n' => 1,
'dep=no' => 1,
'di=f' => 1,
'di=false' => 1,
'di=n' => 1,
'di=no' => 1,
'dia=f' => 1,
'dia=false' => 1,
'dia=n' => 1,
'dia=no' => 1,
'dt=none' => 1,
'ea=n' => 1,
'ea=neutral' => 1,
'ebase=f' => 1,
'ebase=false' => 1,
'ebase=n' => 1,
'ebase=no' => 1,
'ecomp=f' => 1,
'ecomp=false' => 1,
'ecomp=n' => 1,
'ecomp=no' => 1,
'emod=f' => 1,
'emod=false' => 1,
'emod=n' => 1,
'emod=no' => 1,
'emoji=f' => 1,
'emoji=false' => 1,
'emoji=n' => 1,
'emoji=no' => 1,
'epres=f' => 1,
'epres=false' => 1,
'epres=n' => 1,
'epres=no' => 1,
'ext=f' => 1,
'ext=false' => 1,
'ext=n' => 1,
'ext=no' => 1,
'extpict=f' => 1,
'extpict=false' => 1,
'extpict=n' => 1,
'extpict=no' => 1,
'gc=cn' => 1,
'gc=unassigned' => 1,
'gcb=other' => 1,
'gcb=xx' => 1,
'grbase=f' => 1,
'grbase=false' => 1,
'grbase=n' => 1,
'grbase=no' => 1,
'grext=f' => 1,
'grext=false' => 1,
'grext=n' => 1,
'grext=no' => 1,
'hex=f' => 1,
'hex=false' => 1,
'hex=n' => 1,
'hex=no' => 1,
'hst=na' => 1,
'hst=notapplicable' => 1,
'hyphen=f' => 1,
'hyphen=false' => 1,
'hyphen=n' => 1,
'hyphen=no' => 1,
'idc=f' => 1,
'idc=false' => 1,
'idc=n' => 1,
'idc=no' => 1,
'identifierstatus=restricted' => 1,
'identifiertype=notcharacter' => 1,
'ideo=f' => 1,
'ideo=false' => 1,
'ideo=n' => 1,
'ideo=no' => 1,
'ids=f' => 1,
'ids=false' => 1,
'ids=n' => 1,
'ids=no' => 1,
'idsb=f' => 1,
'idsb=false' => 1,
'idsb=n' => 1,
'idsb=no' => 1,
'idst=f' => 1,
'idst=false' => 1,
'idst=n' => 1,
'idst=no' => 1,
'in=na' => 1,
'in=unassigned' => 1,
'innb' => 1,
'innoblock' => 1,
'inpc=na' => 1,
'insc=other' => 1,
'iscn' => 1,
'isnb' => 1,
'isnoblock' => 1,
'isunassigned' => 1,
'isunknown' => 1,
'iszzzz' => 1,
'jg=nojoininggroup' => 1,
'joinc=f' => 1,
'joinc=false' => 1,
'joinc=n' => 1,
'joinc=no' => 1,
'jt=nonjoining' => 1,
'jt=u' => 1,
'lb=unknown' => 1,
'lb=xx' => 1,
'loe=f' => 1,
'loe=false' => 1,
'loe=n' => 1,
'loe=no' => 1,
'lower=f' => 1,
'lower=false' => 1,
'lower=n' => 1,
'lower=no' => 1,
'math=f' => 1,
'math=false' => 1,
'math=n' => 1,
'math=no' => 1,
'nb' => 1,
'nchar=f' => 1,
'nchar=false' => 1,
'nchar=n' => 1,
'nchar=no' => 1,
'nfcqc=y' => 1,
'nfcqc=yes' => 1,
'nfdqc=y' => 1,
'nfdqc=yes' => 1,
'nfkcqc=y' => 1,
'nfkcqc=yes' => 1,
'nfkdqc=y' => 1,
'nfkdqc=yes' => 1,
'noblock' => 1,
'nt=none' => 1,
'nv=nan' => 1,
'patsyn=f' => 1,
'patsyn=false' => 1,
'patsyn=n' => 1,
'patsyn=no' => 1,
'patws=f' => 1,
'patws=false' => 1,
'patws=n' => 1,
'patws=no' => 1,
'pcm=f' => 1,
'pcm=false' => 1,
'pcm=n' => 1,
'pcm=no' => 1,
'qmark=f' => 1,
'qmark=false' => 1,
'qmark=n' => 1,
'qmark=no' => 1,
'radical=f' => 1,
'radical=false' => 1,
'radical=n' => 1,
'radical=no' => 1,
'ri=f' => 1,
'ri=false' => 1,
'ri=n' => 1,
'ri=no' => 1,
'sb=other' => 1,
'sb=xx' => 1,
'sc=unknown' => 1,
'sc=zzzz' => 1,
'scx=unknown' => 1,
'scx=zzzz' => 1,
'sd=f' => 1,
'sd=false' => 1,
'sd=n' => 1,
'sd=no' => 1,
'sterm=f' => 1,
'sterm=false' => 1,
'sterm=n' => 1,
'sterm=no' => 1,
'term=f' => 1,
'term=false' => 1,
'term=n' => 1,
'term=no' => 1,
'uideo=f' => 1,
'uideo=false' => 1,
'uideo=n' => 1,
'uideo=no' => 1,
'unassigned' => 1,
'unknown' => 1,
'upper=f' => 1,
'upper=false' => 1,
'upper=n' => 1,
'upper=no' => 1,
'vo=r' => 1,
'vo=rotated' => 1,
'vs=f' => 1,
'vs=false' => 1,
'vs=n' => 1,
'vs=no' => 1,
'wb=other' => 1,
'wb=xx' => 1,
'wspace=f' => 1,
'wspace=false' => 1,
'wspace=n' => 1,
'wspace=no' => 1,
'xidc=f' => 1,
'xidc=false' => 1,
'xidc=n' => 1,
'xidc=no' => 1,
'xids=f' => 1,
'xids=false' => 1,
'xids=n' => 1,
'xids=no' => 1,
'zzzz' => 1,
);

# The properties that are combinations, in that they have both a map table and
# a match table.  This is actually for UCD.t, so it knows how to test for
# these.
%Unicode::UCD::combination_property = (

);

# All combinations of names that are suppressed.
# This is actually for UCD.t, so it knows which properties shouldn't have
# entries.  If it got any bigger, would probably want to put it in its own
# file to use memory only when it was needed, in testing.
@Unicode::UCD::suppressed_properties = (

'cjkaccountingnumeric',
'cjkcompatibilityvariant',
'cjkiicore',
'cjkirggsource',
'cjkirghsource',
'cjkirgjsource',
'cjkirgkpsource',
'cjkirgksource',
'cjkirgmsource',
'cjkirgssource',
'cjkirgtsource',
'cjkirguksource',
'cjkirgusource',
'cjkirgvsource',
'cjkothernumeric',
'cjkprimarynumeric',
'cjkrsunicode',
'expandsonnfc',
'expandsonnfd',
'expandsonnfkc',
'expandsonnfkd',
'fcnfkc',
'fcnfkcclosure',
'graphemelink',
'grlink',
'jamoshortname',
'jsn',
'kaccountingnumeric',
'kcompatibilityvariant',
'kiicore',
'kirggsource',
'kirghsource',
'kirgjsource',
'kirgkpsource',
'kirgksource',
'kirgmsource',
'kirgssource',
'kirgtsource',
'kirguksource',
'kirgusource',
'kirgvsource',
'kothernumeric',
'kprimarynumeric',
'krsunicode',
'oalpha',
'odi',
'ogrext',
'oidc',
'oids',
'olower',
'omath',
'otheralphabetic',
'otherdefaultignorablecodepoint',
'othergraphemeextend',
'otheridcontinue',
'otheridstart',
'otherlowercase',
'othermath',
'otheruppercase',
'oupper',
'sc=hrkt',
'sc=katakanaorhiragana',
'script=hrkt',
'script=katakanaorhiragana',
'scriptextensions=hrkt',
'scriptextensions=katakanaorhiragana',
'scx=hrkt',
'scx=katakanaorhiragana',
'unicoderadicalstroke',
'urs',
'xonfc',
'xonfd',
'xonfkc',
'xonfkd',
,
);

1;
                                                    usr/local/lib/perl5/5.40.0/unicore/lib/                                                             0000755 0000000 0000000 00000000000 14714567415 015720  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        usr/local/lib/perl5/5.40.0/unicore/lib/Age/                                                         0000755 0000000 0000000 00000000000 14714567415 016414  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        usr/local/lib/perl5/5.40.0/unicore/lib/Age/NA.pl                                                    0000444 0000000 0000000 00000021313 14714567415 017245  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        # !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# This file is machine-generated by lib/unicore/mktables from the Unicode
# database, Version 15.0.0.  Any changes made here will be lost!

# !!!!!!!   INTERNAL PERL USE ONLY   !!!!!!!
# This file is for internal use by core Perl only.  The format and even the
# name or existence of this file are subject to change without notice.  Don't
# use it directly.  Use Unicode::UCD to access the Unicode character data
# base.


return <<'END';
V1429
888
890
896
900
907
908
