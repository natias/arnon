           2007 David Glasser
License: Apache-2.0

Files: subversion/bindings/swig/python/tests/trac/*
Copyright: 2003, 2004, 2005 Edgewall Software
           2003, 2004, 2005 Jonas Borgstr√∂m <jonas@edgewall.com>
           2005 Christopher Lenz <cmlenz@gmx.de>
License: BSD-3-clause or Apache-2.0

Files: subversion/libsvn_subr/utf_width.c
Copyright: 2007 Markus Kuhn
License: Utfwidth
 Permission to use, copy, modify, and distribute this software
 for any purpose and without fee is hereby granted.  The author
 disclaims all warranties with regard to this software.

Files: tools/dist/security/_gnupg.py
Copyright: 2008-2014 Vinay Sajip
License: BSD-3-clause

Files: debian/bin/svnwrap
       debian/man/svnwrap.1
Copyright: 2006 Peter Samuelson
License: Svnwrap
 Permission is granted to everyone to use and distribute this work,
 without limitation, modified or unmodified, in any way, for any purpose.

Files: debian/contrib/svn-clean
       debian/contrib/svn_apply_autoprops.py
       debian/contrib/emacs/psvn.el
       debian/contrib/emacs/dsvn.el
Copyright: 2004, 2005, 2006 Simon Perreault
           2005,2006 Blair Zajac <blair@orcaware.com>
           2002-2009 Stefan Reichoer
           2006-2010 Virtutech AB
           2010 Intel
License: GPL-2+

Files: debian/bin/svn-bisect
       debian/man/svn-bisect.1
Copyright: 2008,2009 by Robert Millan
           2009 by Peter Samuelson
License: GPL-3+

Files: debian/contrib/svn_load_dirs/*
Copyright: 2002,2003,2004,2005,2006,2007,2009 Dolby.  All rights reserved.
License: AFL-3

Files: subversion/libsvn_subr/utf8proc/*
Copyright: 2014-2015 Steven G. Johnson, Jiahao Chen, Tony Kelman, Jonas Fonseca, and other contributors listed in the git history
           2009, 2013 Public Software Group e. V., Berlin, Germany
           1991-2007 Unicode, Inc.
License: Expat and Unicode

Files: subversion/libsvn_subr/lz4/*
Copyright: 2011-2016, Yann Collet
License: BSD-2-clause

Files: subversion/libsvn_subr/x509.h
       subversion/libsvn_subr/x509parse.c
Copyright: 2006-2008 Christophe Devine
           2009 Paul Bakker <polarssl_maintainer at polarssl dot org>
License: BSD-3-clause

Files: tools/dev/svnmover/linenoise/*
Copyright: 2010-2013, Peter Noordhuis <pcnoordhuis at gmail dot com>
           2010-2014, Salvatore Sanfilippo <anitrez at gmail dot com>
License: BSD-2-clause

Files: build/ac-macros/ax_boost_base.m4
       build/ac-macros/ax_boost_unit_test_framework.m4
Copyright: 2008 Thome Porschberg <thomas@randspringer.de>
           2009 Peter Adolphs
License: BoostAcMacros

License: GPL-2+
 On Debian systems, the complete text of the GPL version 2 license can be
 found in `/usr/share/common-licenses/GPL-2'.

License: GPL-3+
 On Debian systems, the complete text of the GPL version 3 license can be
 found in `/usr/share/common-licenses/GPL-3'.

License: Apache-2.0
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at
 .
     http://www.apache.org/licenses/LICENSE-2.0
 .
 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.

License: BSD-3-clause
 All rights reserved.
 .
 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions
 are met:
 .
 1. Redistributions of source code must retain the above copyright
 notice, this list of conditions and the following disclaimer.
 2. Redistributions in binary form must reproduce the above copyright
 notice, this list of conditions and the following disclaimer in the
 the documentation and/or other materials provided with the
 distribution.
 3. The name of the author may not be used to endorse or promote
 products derived from this software without specific prior written
 permission.
 .
 THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS
 OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
 IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
 IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

License: BSD-2-clause
 All rights reserved.
 .
 Redistribution and use in source and binary forms, with or without modification,
 are permitted provided that the following conditions are met:
 .
 * Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.
 .
 * Redistributions in binary form must reproduce the above copyright notice, this
   list of conditions and the following disclaimer in the documentation and/or
   other materials provided with the distribution.
 .
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

License: Expat
 Permission is hereby granted, free of charge, to any person obtaining a
 copy of this software and associated documentation files (the "Software"),
 to deal in the Software without restriction, including without limitation
 the rights to use, copy, modify, merge, publish, distribute, sublicense,
 and/or sell copies of the Software, and to permit persons to whom the
 Software is furnished to do so, subject to the following conditions:
 .
 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.
 .
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 DEALINGS IN THE SOFTWARE.

License: Unicode
 Permission is hereby granted, free of charge, to any person obtaining a
 copy of the Unicode data files and any associated documentation (the "Data
 Files") or Unicode software and any associated documentation (the
 "Software") to deal in the Data Files or Software without restriction,
 including without limitation the rights to use, copy, modify, merge,
 publish, distribute, and/or sell copies of the Data Files or Software, and
 to permit persons to whom the Data Files or Software are furnished to do
 so, provided that (a) the above copyright notice(s) and this permission
 notice appear with all copies of the Data Files or Software, (b) both the
 above copyright notice(s) and this permission notice appear in associated
 documentation, and (c) there is clear notice in each modified Data File or
 in the Software as well as in the documentation associated with the Data
 File(s) or Software that the data or software has been modified.
 .
 THE DATA FILES AND SOFTWARE ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
 KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF
 THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS
 INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR
 CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
 USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
 TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 PERFORMANCE OF THE DATA FILES OR SOFTWARE.
 .
 Except as contained in this notice, the name of a copyright holder shall
 not be used in advertising or otherwise to promote the sale, use or other
 dealings in these Data Files or Software without prior written
 authorization of the copyright holder.
 .
 Unicode and the Unicode logo are trademarks of Unicode, Inc., and may be
 registered in some jurisdictions. All other trademarks and registered
 trademarks mentioned herein are the property of their respective owners.

License: AFL-3
 This Academic Free License (the "License") applies to any original
 work of authorship (the "Original Work") whose owner (the "Licensor")
 has placed the following licensing notice adjacent to the copyright
 notice for the Original Work:
 .
     Licensed under the Academic Free License version 3.0
 .
  1) Grant of Copyright License. Licensor grants You a worldwide,
     royalty-free, non-exclusive, sublicensable license, for the
     duration of the copyright, to do the following:
     a) to reproduce the Original Work in copies, either alone or as
        part of a collective work;
     b) to translate, adapt, alter, transform, modify, or arrange the
        Original Work, thereby creating derivative works ("Derivative
        Works") based upon the Original Work;
     c) to distribute or communicate copies of the Original Work and
        Derivative Works to the public, under any license of your
        choice that does not contradict the terms and conditions,
        including Licensor's reserved rights and remedies, in this
        Academic Free License;
     d) to perform the Original Work publicly; and
     e) to display the Original Work publicly.
 .
  2) Grant of Patent License. Licensor grants You a worldwide,
     royalty-free, non- exclusive, sublicensable license, under patent
     claims owned or controlled by the Licensor that are embodied in
     the Original Work as furnished by the Licensor, for the duration
     of the patents, to make, use, sell, offer for sale, have made, and
     import the Original Work and Derivative Works.
 .
  3) Grant of Source Code License. The term "Source Code" means the
     preferred form of the Original Work for making modifications to it
     and all available documentation describing how to modify the
     Original Work. Licensor agrees to provide a machine-readable copy
     of the Source Code of the Original Work along with each copy of
     the Original Work that Licensor distributes. Licensor reserves the
     right to satisfy this obligation by placing a machine-readable
     copy of the Source Code in an information repository reasonably
     calculated to permit inexpensive and convenient access by You for
     as long as Licensor continues to distribute the Original Work.
 .
  4) Exclusions From License Grant. Neither the names of Licensor, nor
     the names of any contributors to the Original Work, nor any of
     their trademarks or service marks, may be used to endorse or
     promote products derived from this Original Work without express
     prior permission of the Licensor. Except as expressly stated
     herein, nothing in this License grants any license to Licensor's
     trademarks, copyrights, patents, trade secrets or any other
     intellectual property. No patent license is granted to make, use,
     sell, offer for sale, have made, or import embodiments of any
     patent claims other than the licensed claims defined in Section
     2. No license is granted to the trademarks of Licensor even if
     such marks are included in the Original Work. Nothing in this
     License shall be interpreted to prohibit Licensor from licensing
     under terms different from this License any Original Work that
     Licensor otherwise would have a right to license.
 .
  5) External Deployment. The term "External Deployment" means the use,
     distribution, or communication of the Original Work or Derivative
     Works in any way such that the Original Work or Derivative Works
     may be used by anyone other than You, whether those works are
     distributed or communicated to those persons or made available as
     an application intended for use over a network. As an express
     condition for the grants of license hereunder, You must treat any
     External Deployment by You of the Original Work or a Derivative
     Work as a distribution under section 1(c).
 .
  6) Attribution Rights. You must retain, in the Source Code of any
     Derivative Works that You create, all copyright, patent, or
     trademark notices from the Source Code of the Original Work, as
     well as any notices of licensing and any descriptive text
     identified therein as an "Attribution Notice." You must cause the
     Source Code for any Derivative Works that You create to carry a
     prominent Attribution Notice reasonably calculated to inform
     recipients that You have modified the Original Work.
 .
  7) Warranty of Provenance and Disclaimer of Warranty. Licensor
     warrants that the copyright in and to the Original Work and the
     patent rights granted herein by Licensor are owned by the Licensor
     or are sublicensed to You under the terms of this License with the
     permission of the contributor(s) of those copyrights and patent
     rights. Except as expressly stated in the immediately preceding
     sentence, the Original Work is provided under this License on an
     "AS IS" BASIS and WITHOUT WARRANTY, either express or implied,
     including, without limitation, the warranties of non-infringement,
     merchantability or fitness for a particular purpose. THE ENTIRE
     RISK AS TO THE QUALITY OF THE ORIGINAL WORK IS WITH YOU.  This
     DISCLAIMER OF WARRANTY constitutes an essential part of this
     License. No license to the Original Work is granted by this
     License except under this disclaimer.
 .
  8) Limitation of Liability. Under no circumstances and under no legal
     theory, whether in tort (including negligence), contract, or
     otherwise, shall the Licensor be liable to anyone for any
     indirect, special, incidental, or consequential damages of any
     character arising as a result of this License or the use of the
     Original Work including, without limitation, damages for loss of
     goodwill, work stoppage, computer failure or malfunction, or any
     and all other commercial damages or losses. This limitation of
     liability shall not apply to the extent applicable law prohibits
     such limitation.
 .
  9) Acceptance and Termination. If, at any time, You expressly
     assented to this License, that assent indicates your clear and
     irrevocable acceptance of this License and all of its terms and
     conditions. If You distribute or communicate copies of the
     Original Work or a Derivative Work, You must make a reasonable
     effort under the circumstances to obtain the express assent of
     recipients to the terms of this License. This License conditions
     your rights to undertake the activities listed in Section 1,
     including your right to create Derivative Works based upon the
     Original Work, and doing so without honoring these terms and
     conditions is prohibited by copyright law and international
     treaty. Nothing in this License is intended to affect copyright
     exceptions and limitations (including "fair use" or "fair
     dealing"). This License shall terminate immediately and You may no
     longer exercise any of the rights granted to You by this License
     upon your failure to honor the conditions in Section 1(c).
 .
 10) Termination for Patent Action. This License shall terminate
     automatically and You may no longer exercise any of the rights
     granted to You by this License as of the date You commence an
     action, including a cross-claim or counterclaim, against¬†Licensor
     or any licensee alleging that the Original Work infringes a
     patent. This termination provision shall not apply for an action
     alleging patent infringement by combinations of the Original Work
     with other software or hardware.
 .
 11) Jurisdiction, Venue and Governing Law. Any action or suit relating
     to this License may be brought only in the courts of a
     jurisdiction wherein the Licensor resides or in which Licensor
     conducts its primary business, and under the laws of that
     jurisdiction excluding its conflict-of-law provisions. The
     application of the United Nations Convention on Contracts for the
     International Sale of Goods is expressly excluded. Any use of the
     Original Work outside the scope of this License or after its
     termination shall be subject to the requirements and penalties of
     copyright or patent law in the appropriate jurisdiction. This
     section shall survive the termination of this License.
 .
 12) Attorneys' Fees. In any action to enforce the terms of this
     License or seeking damages relating thereto, the prevailing party
     shall be entitled to recover its costs and expenses, including,
     without limitation, reasonable attorneys' fees and costs incurred
     in connection with such action, including any appeal of such
     action. This section shall survive the termination of this
     License.
 .
 13) Miscellaneous. If any provision of this License is held to be
     unenforceable, such provision shall be reformed only to the extent
     necessary to make it enforceable.
 .
 14) Definition of "You" in This License. "You" throughout this
     License, whether in upper or lower case, means an individual or a
     legal entity exercising rights under, and complying with all of
     the terms of, this License. For legal entities, "You" includes any
     entity that controls, is controlled by, or is under common control
     with you. For purposes of this definition, "control" means (i) the
     power, direct or indirect, to cause the direction or management of
     such entity, whether by contract or otherwise, or (ii) ownership
     of fifty percent (50%) or more of the outstanding shares, or (iii)
     beneficial ownership of such entity.
 .
 15) Right to Use. You may use the Original Work in all ways not
     otherwise restricted or conditioned by this License or by law, and
     Licensor promises not to interfere with or be responsible for such
     uses by You.
 .
 16) Modification of This License. This License is Copyright ¬© 2005
     Lawrence Rosen. Permission is granted to copy, distribute, or
     communicate this License without modification. Nothing in this
     License permits You to modify this License as applied to the
     Original Work or to Derivative Works. However, You may modify the
     text of this License and copy, distribute or communicate your
     modified version (the "Modified License") and apply it to other
     original works of authorship subject to the following conditions:
     (i) You may not indicate in any way that your Modified License is
     the "Academic Free License" or "AFL" and you may not use those
     names in the name of your Modified License; (ii) You must replace
     the notice specified in the first paragraph above with the notice
     "Licensed under <insert your license name here>" or with a notice
     of your own that is not confusingly similar to the notice in this
     License; and (iii) You may not claim that your original works are
     open source software unless your Modified License has been
     approved by Open Source Initiative (OSI) and You comply with its
     license review and certification process.

License: BoostAcMacros
 Copying and distribution of this file, with or without modification, are
 permitted in any medium without royalty provided the copyright notice
 and this notice are preserved. This file is offered as-is, without any
 warranty.
                                                                                                                                                                                                                                                                                                                                                                                                                                     usr/share/doc/subversion/examples/                                                                  0000755 0000000 0000000 00000000000 14714551120 015741  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        usr/share/doc/subversion/examples/gnuify-changelog.pl                                               0000755 0000000 0000000 00000015374 11301315700 021530  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        #!/usr/bin/perl -w
# ====================================================================
#    Licensed to the Apache Software Foundation (ASF) under one
#    or more contributor license agreements.  See the NOTICE file
#    distributed with this work for additional information
#    regarding copyright ownership.  The ASF licenses this file
#    to you under the Apache License, Version 2.0 (the
#    "License"); you may not use this file except in compliance
#    with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing,
#    software distributed under the License is distributed on an
#    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#    KIND, either express or implied.  See the License for the
#    specific language governing permissions and limitations
#    under the License.
# ====================================================================
# a script to munge the output of 'svn log' into something approaching the
# style of a GNU ChangeLog.
#
# to use this, just fill in the 'hackers' hash with the usernames and
# name/emails of the people who work on your project, go to the top level
# of your working copy, and run:
#
# $ svn log | /path/to/gnuify-changelog.pl > ChangeLog

require 5.0;
use strict;

my %hackers = (
    "svn"          => 'Collab.net Subversion Team',
    "jimb"         => 'Jim Blandy  <jimb@redhat.com>',
    "sussman"      => 'Ben Collins-Sussman  <sussman@collab.net>',
    "kfogel"       => 'Karl Fogel  <kfogel@collab.net>',
    "gstein"       => 'Greg Stein  <gstein@lyra.org>',
    "brane"        => 'Branko Cibej  <brane@xbc.nu>',
    "joe"          => 'Joe Orton  <joe@light.plus.com>',
    "ghudson"      => 'Greg Hudson  <ghudson@mit.edu>',
    "lefty"        => 'Lee P. W. Burgess  <lefty@red-bean.com>',
    "fitz"         => 'Brian Fitzpatrick  <fitz@red-bean.com>',
    "mab"          => 'Matthew Braithwaite  <matt@braithwaite.net>',
    "daniel"       => 'Daniel Stenberg  <daniel@haxx.se>',
    "mmurphy"      => 'Mark Murphy  <mmurphy@collab.net>',
    "cmpilato"     => 'C. Michael Pilato  <cmpilato@collab.net>',
    "kevin"        => 'Kevin Pilch-Bisson  <kevin@pilch-bisson.net>',
    "philip"       => 'Philip Martin  <philip@codematters.co.uk>',
    "jerenkrantz"  => 'Justin Erenkrantz  <jerenkrantz@apache.org>',
    "rooneg"       => 'Garrett Rooney  <rooneg@electricjellyfish.net>',
    "bcollins"     => 'Ben Collins  <bcollins@debian.org>',
    "blair"        => 'Blair Zajac  <blair@orcaware.com>',
    "striker"      => 'Sander Striker  <striker@apache.org>',
    "XelaRellum"   => 'Alexander Mueller  <alex@littleblue.de>',
    "yoshiki"      => 'Yoshiki Hayashi  <yoshiki@xemacs.org>',
    "david"        => 'David Summers  <david@summersoft.fay.ar.us>',
    "rassilon"     => 'Bill Tutt  <rassilon@lyra.org>',
    "kbohling"     => 'Kirby C. Bohling  <kbohling@birddog.com>',
    "breser"       => 'Ben Reser  <ben@reser.org>',
    "bliss"        => 'Tobias Ringstrom  <tobias@ringstrom.mine.nu>',
    "dionisos"     => 'Erik Huelsmann  <e.huelsmann@gmx.net>',
    "josander"     => 'Jostein Andersen  <jostein@josander.net>',
    "julianfoad"   => 'Julian Foad  <julianfoad@btopenworld.com>',
    "clkao"        => 'Chia-Liang Kao  <clkao@clkao.org>',
    "xsteve"       => 'Stefan Reich√∂r  <reichoer@web.de>',
    "mbk"          => 'Mark Benedetto King  <mbk@lowlatency.com>',
    "patrick"      => 'Patrick Mayweg  <mayweg@qint.de>',
    "jrepenning"   => 'Jack Repenning  <jrepenning@collab.net>',
    "epg"          => 'Eric Gillespie  <epg@pretzelnet.org>',
    "dwhedon"      => 'David Kimdon  <David_Kimdon@alumni.hmc.edu>',
    "djh"          => 'D.J. Heap  <dj@shadyvale.net>',
    "mprice"       => 'Michael Price  <mprice@atl.lmco.com>',
    "jszakmeister" => 'John Szakmeister  <john@szakmeister.net>',
    "bdenny"       => 'Brian Denny  <brian@briandenny.net>',
    "rey4"         => 'Russell Yanofsky  <rey4@columbia.edu>',
    "maxb"         => 'Max Bowsher  <maxb@ukf.net>',
    "dlr"          => 'Daniel Rall  <dlr@finemaltcoding.com>',
    "jaa"          => 'Jani Averbach  <jaa@iki.fi>',
    "pll"          => 'Paul Lussier  <p.lussier@comcast.net>',
    "shlomif"      => 'Shlomi Fish  <shlomif@vipe.technion.ac.il>',
    "jpieper"      => 'Josh Pieper  <jpieper@andrew.cmu.edu>',
    "dimentiy"     => 'Dmitriy O. Popkov  <dimentiy@dimentiy.info>',
    "kellin"       => 'Shamim Islam  <files@poetryunlimited.com>',
    "sergeyli"     => 'Sergey A. Lipnevich  <sergey@optimaltec.com>',
    "kraai"        => 'Matt Kraai  <kraai@alumni.cmu.edu>',
    "ballbach"     => 'Michael Ballbach  <ballbach@rten.net>',
    "kon"          => 'Kalle Olavi Niemitalo  <kon@iki.fi>',
    "knacke"       => 'Kai Nacke  <kai.nacke@redstar.de>',
    "gthompson"    => 'Glenn A. Thompson  <gthompson@cdr.net>',
    "jespersm"     => 'Jesper Steen M√∏ller  <jesper@selskabet.org>',
    "naked"        => 'Nuutti Kotivuori  <naked@iki.fi>',
    "niemeyer"     => 'Gustavo Niemeyer  <niemeyer@conectiva.com>',
    "trow"         => 'Jon Trowbridge  <trow@ximian.com>',
    "mmacek"       => 'Marko Macek  <Marko.Macek@gmx.net>',
    "zbrown"       => 'Zack Brown  <zbrown@tumblerings.org>',
    "morten"       => 'Morten Ludvigsen  <morten@2ps.dk>',
    "fmatias"      => 'F√©liciano Matias  <feliciano.matias@free.fr>',
    "nsd"          => 'Nick Duffek  <nick@duffek.com>',
);

my $parse_next_line = 0;
my $last_line_empty = 0;
my $last_rev = "";

while (my $entry = <>) {

  # Axe windows style line endings, since we should try to be consistent, and
  # the repos has both styles in its log entries
  $entry =~ s/\r\n$/\n/;

  # Remove trailing whitespace
  $entry =~ s/\s+$/\n/;

  my $this_line_empty = $entry eq "\n";

  # Avoid duplicate empty lines
  next if $this_line_empty and $last_line_empty;

  # Don't fail on valid dash-only lines
  if ($entry =~ /^-+$/ and length($entry) >= 72) {

    # We're at the start of a log entry, so we need to parse the next line
    $parse_next_line = 1;

    # Check to see if the final line of the commit message was blank,
    # if not insert one
    print "\n" if $last_rev ne "" and !$last_line_empty;

  } elsif ($parse_next_line) {

    # Transform from svn style to GNU style
    $parse_next_line = 0;

    my @parts = split (/ /, $entry);
    $last_rev  = $parts[0];
    my $hacker = $parts[2];
    my $tstamp = $parts[4];

    # Use alias if we can't resolve to name, email
    $hacker = $hackers{$hacker} if defined $hackers{$hacker};

    printf "%s  %s\n", $tstamp, $hacker;

  } elsif ($this_line_empty) {

    print "\n";

  } else {

    print "\t$entry";

  }

  $last_line_empty = $this_line_empty;
}

# As a HERE doc so it also sets the final changelog's coding
print <<LOCAL;
;; Local Variables:
;; coding: utf-8
;; End:
LOCAL

1;
                                                                                                                                                                                                                                                                    usr/share/doc/subversion/examples/merge-graph.py                                                    0000755 0000000 0000000 00000004136 12713674260 020530  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        #!/usr/bin/env python

# ====================================================================
#    Licensed to the Apache Software Foundation (ASF) under one
#    or more contributor license agreements.  See the NOTICE file
#    distributed with this work for additional information
#    regarding copyright ownership.  The ASF licenses this file
#    to you under the Apache License, Version 2.0 (the
#    "License"); you may not use this file except in compliance
#    with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing,
#    software distributed under the License is distributed on an
#    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#    KIND, either express or implied.  See the License for the
#    specific language governing permissions and limitations
#    under the License.
# ====================================================================

args_message = '[-f png|svg|gif|dia... [-f ...]] GRAPH_CONFIG_FILE...'
help_message = """Produce pretty graphs representing branches and merging.
For each config file specified, construct a graph and write it as a PNG file
(or other graphical file formats)."""

import sys
import getopt
from mergegraph import MergeDot


# If run as a program, process each input filename as a graph config file.
if __name__ == '__main__':
  optlist, args = getopt.getopt(sys.argv[1:], 'f:', ['format'])

  prog_name = sys.argv[0]
  if not args:
    usage = '%s: usage: "%s %s"\n' % (prog_name, prog_name, args_message)
    sys.stderr.write(usage)
    sys.exit(1)

  formats = []

  for opt, opt_arg in optlist:
    if opt == '-f':
      formats.append(opt_arg)

  if not formats:
    formats.append('png')

  for config_filename in args:
    sys.stdout.write("%s: reading '%s', " % (prog_name, config_filename))
    graph = MergeDot(config_filename, rankdir='LR', dpi='72')
    for format in formats:
      filename = '%s.%s' % (graph.basename, format)
      sys.stdout.write("writing '%s' " % filename)
      graph.save(format=format, filename=filename)
    print
                                                                                                                                                                                                                                                                                                                                                                                                                                  usr/share/doc/subversion/examples/mergegraph/                                                       0000755 0000000 0000000 00000000000 14714551120 020062  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        usr/share/doc/subversion/examples/mergegraph/__init__.py                                            0000644 0000000 0000000 00000002005 11713751253 022175  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        # ====================================================================
#    Licensed to the Apache Software Foundation (ASF) under one
#    or more contributor license agreements.  See the NOTICE file
#    distributed with this work for additional information
#    regarding copyright ownership.  The ASF licenses this file
#    to you under the Apache License, Version 2.0 (the
#    "License"); you may not use this file except in compliance
#    with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing,
#    software distributed under the License is distributed on an
#    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#    KIND, either express or implied.  See the License for the
#    specific language governing permissions and limitations
#    under the License.
# ====================================================================

from mergegraph import MergeDot, MergeGraph, MergeSubgraph
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           usr/share/doc/subversion/examples/mergegraph/mergegraph.py                                          0000644 0000000 0000000 00000024230 12711077535 022566  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        #!/usr/bin/env python

# ====================================================================
#    Licensed to the Apache Software Foundation (ASF) under one
#    or more contributor license agreements.  See the NOTICE file
#    distributed with this work for additional information
#    regarding copyright ownership.  The ASF licenses this file
#    to you under the Apache License, Version 2.0 (the
#    "License"); you may not use this file except in compliance
#    with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing,
#    software distributed under the License is distributed on an
#    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#    KIND, either express or implied.  See the License for the
#    specific language governing permissions and limitations
#    under the License.
# ====================================================================

# Config file format:
example = """
  [graph]
  filename = merge-sync-1.png
  title = Sync Merge: CC vs SVN
  # Branches: (branch name, branched from node, first rev, last rev).
  branches = [
    ('A', 'O0', 1, 4),
    ('O', None, 0, 0),
    ('B', 'O0', 1, 5)
    ]
  # Changes: nodes in which a change was committed; merge targets need not
  # be listed here.
  changes = [
    'A1', 'A2', 'A3', 'A4',
    'B1', 'B2', 'B3', 'B4', 'B5'
    ]
  # Merges: (base node, source-right node, target node, label).
  # Base is also known as source-left.
  merges = [
    ('O0', 'A:1', 'B3', 'sync'),
    ('A2', 'A:3', 'B5', 'sync'),
    ]
  # Annotations for nodes: (node, annotation text).
  annotations = [
    ('A2', 'cc:YCA')
    ]
"""

# Notes about different kinds of merge.
#
# A basic 3-way merge is ...
#
# The ClearCase style of merge is a 3-way merge.
#
# The Subversion style of merge (that is, one phase of a Subversion merge)
# is a three-way merge with its base (typically the YCA) on the source branch.


import sys
import pydot
from pydot import Node, Edge


def mergeinfo_to_node_list(mi):
  """Convert a mergeinfo string such as '/foo:1,3-5*' into a list of
     node names such as ['foo1', 'foo3', 'foo4', 'foo5'].
  """
  ### Doesn't yet strip the leading slash.
  l = []
  if mi:
    for mi_str in mi.split(' '):
      path, ranges = mi_str.split(':')
      for r in ranges.split(','):
        if r.endswith('*'):
          # TODO: store & use this 'non-inheritable' flag
          # Remove the flag
          r = r[:-1]
        rlist = r.split('-')
        r1 = int(rlist[0])
        if len(rlist) == 2:
          r2 = int(rlist[1])
        else:
          r2 = r1
        for rev in range(r1, r2 + 1):
          l.append(path + str(rev))
  return l


class MergeGraph(pydot.Graph):
  """Base class, not intended for direct use.  Use MergeDot for the main
     graph and MergeSubgraph for a subgraph.
  """

  def mk_origin_node(graph, name, label):
    """Add a node to the graph"""
    graph.add_node(Node(name, label=label, shape='plaintext'))

  def mk_invis_node(graph, name):
    """Add a node to the graph"""
    graph.add_node(Node(name, style='invis'))

  def mk_node(graph, name, label=None):
    """Add a node to the graph, if not already present"""
    if not graph.get_node(name):
      if not label:
        label = name
      if name in graph.changes:
        graph.add_node(Node(name, label=label))
      else:
        graph.add_node(Node(name, color='grey', label=''))

  def mk_merge_target(graph, target_node, important):
    """Add a merge target node to the graph."""
    if important:
      color = 'red'
    else:
      color = 'black'
    graph.add_node(Node(target_node, color=color, fontcolor=color, style='bold'))

  def mk_edge(graph, name1, name2, **attrs):
    """Add an ordinary edge to the graph"""
    graph.add_edge(Edge(name1, name2, dir='none', style='dotted', color='grey', **attrs))

  def mk_br_edge(graph, name1, name2):
    """Add a branch-creation edge to the graph"""
    # Constraint=false to avoid the Y-shape skewing the nice parallel branch lines
    graph.mk_edge(name1, name2, constraint='false')

  def mk_merge_edge(graph, src_node, tgt_node, kind, label, important):
    """Add a merge edge to the graph"""
    if important:
      color = 'red'
    else:
      color = 'grey'
    e = Edge(src_node, tgt_node, constraint='false',
             label='"' + label + '"',
             color=color, fontcolor=color,
             style='bold')
    if kind.startswith('cherry'):
      e.set_style('dashed')
    graph.add_edge(e)

  def mk_mergeinfo_edge(graph, base_node, src_node, important):
    """"""
    if important:
      color = 'red'
    else:
      color = 'grey'
    graph.add_edge(Edge(base_node, src_node,
                        dir='both', arrowtail='odot', arrowhead='tee',
                        color=color, constraint='false'))

  def mk_invis_edge(graph, name1, name2):
    """Add an invisible edge to the graph"""
    graph.add_edge(Edge(name1, name2, style='invis'))

  def add_merge(graph, merge, important):
    """Add a merge"""
    base_node, src_node, tgt_node, kind = merge

    if base_node and src_node:  # and not kind.startwith('cherry'):
      graph.mk_mergeinfo_edge(base_node, src_node, important)

    # Merge target node
    graph.mk_merge_target(tgt_node, important)

    # Merge edge
    graph.mk_merge_edge(src_node, tgt_node, kind, kind, important)

  def add_annotation(graph, node, label, color='lightblue'):
    """Add a graph node that serves as an annotation to a normal node.
       More than one annotation can be added to the same normal node.
    """
    subg_name = node + '_annotations'

    def get_subgraph(graph, name):
      """Equivalent to pydot.Graph.get_subgraph() when there is no more than
         one subgraph of the given name, but working aroung a bug in
         pydot.Graph.get_subgraph().
      """
      for subg in graph.get_subgraph_list():
        if subg.get_name() == name:
          return subg
      return None

    g = get_subgraph(graph, subg_name)
    if not g:
      g = pydot.Subgraph(subg_name, rank='same')
      graph.add_subgraph(g)

    ann_node = node + '_'
    while g.get_node(ann_node):
      ann_node = ann_node + '_'
    g.add_node(Node(ann_node, shape='box', style='filled', color=color,
                    label='"' + label + '"'))
    g.add_edge(Edge(ann_node, node, style='solid', color=color,
                    dir='none', constraint='false'))

class MergeSubgraph(MergeGraph, pydot.Subgraph):
  """"""
  def __init__(graph, **attrs):
    """"""
    MergeGraph.__init__(graph)
    pydot.Subgraph.__init__(graph, **attrs)

class MergeDot(MergeGraph, pydot.Dot):
  """
  # TODO: In the 'merges' input, find the predecessor automatically.
  """
  def __init__(graph, config_filename=None,
               filename=None, title=None, branches=None, changes=None,
               merges=[], annotations=[], **attrs):
    """Return a new MergeDot graph generated from a config file or args."""
    MergeGraph.__init__(graph)
    pydot.Dot.__init__(graph, **attrs)

    if config_filename:
      graph.read_config(config_filename)
    else:
      graph.filename = filename
      graph.title = title
      graph.branches = branches
      graph.changes = changes
      graph.merges = merges
      graph.annotations = annotations

    graph.construct()

  def read_config(graph, config_filename):
    """Initialize a MergeDot graph's input data from a config file."""
    import ConfigParser
    if config_filename.endswith('.txt'):
      default_basename = config_filename[:-4]
    else:
      default_basename = config_filename

    config = ConfigParser.SafeConfigParser({ 'basename': default_basename,
                                             'title': None,
                                             'merges': '[]',
                                             'annotations': '[]' })
    files_read = config.read(config_filename)
    if len(files_read) == 0:
      sys.stderr.write('graph: unable to read graph config from "' + config_filename + '"\n')
      sys.exit(1)
    graph.basename = config.get('graph', 'basename')
    graph.title = config.get('graph', 'title')
    graph.branches = eval(config.get('graph', 'branches'))
    graph.changes = eval(config.get('graph', 'changes'))
    graph.merges = eval(config.get('graph', 'merges'))
    graph.annotations = eval(config.get('graph', 'annotations'))

  def construct(graph):
    """"""
    # Origin nodes (done first, in an attempt to set the order)
    for br, orig, r1, head in graph.branches:
      name = br + '0'
      if r1 > 0:
        graph.mk_origin_node(name, br)
      else:
        graph.mk_node(name, label=br)

    # Edges and target nodes for merges
    for merge in graph.merges:
      # Emphasize the last merge, as it's the important one
      important = (merge == graph.merges[-1])
      graph.add_merge(merge, important)

    # Parallel edges for basic lines of descent
    for br, orig, r1, head in graph.branches:
      sub_g = MergeSubgraph(ordering='out')
      for i in range(1, head + 1):
        prev_n = br + str(i - 1)
        this_n = br + str(i)

        # Normal edges and nodes
        if i < r1:
          graph.mk_invis_node(this_n)
        else:
          graph.mk_node(this_n)
        if i <= r1:
          graph.mk_invis_edge(prev_n, this_n)
        else:
          graph.mk_edge(prev_n, this_n)

      # Branch creation edges
      if orig:
        sub_g.mk_br_edge(orig, br + str(r1))

      graph.add_subgraph(sub_g)

    # Annotations
    for node, label in graph.annotations:
      graph.add_annotation(node, label)

    # A title for the graph (added last so it goes at the top)
    if graph.title:
      graph.add_node(Node('title', shape='plaintext', label='"' + graph.title + '"'))

  def save(graph, format='png', filename=None):
    """Save this merge graph to the given file format. If filename is None,
       construct a filename from the basename of the original file (as passed
       to the constructor and then stored in graph.basename) and the suffix
       according to the given format.
    """
    if not filename:
      filename = graph.basename + '.' + format
    if format == 'sh':
      import save_as_sh
      save_as_sh.write_sh_file(graph, filename)
    else:
      pydot.Dot.write(graph, filename, format=format)
                                                                                                                                                                                                                                                                                                                                                                        usr/share/doc/subversion/examples/mergegraph/save_as_sh.py                                          0000644 0000000 0000000 00000011301 12711102005 022530  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        #!/usr/bin/env python

# ====================================================================
#    Licensed to the Apache Software Foundation (ASF) under one
#    or more contributor license agreements.  See the NOTICE file
#    distributed with this work for additional information
#    regarding copyright ownership.  The ASF licenses this file
#    to you under the Apache License, Version 2.0 (the
#    "License"); you may not use this file except in compliance
#    with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing,
#    software distributed under the License is distributed on an
#    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#    KIND, either express or implied.  See the License for the
#    specific language governing permissions and limitations
#    under the License.
# ====================================================================


# This module writes a sequence of 'svn' commands to a file, that when
# run will perform the branching and merging described by a given MergeDot
# graph description object.


def shebang_line(out):
  out.write('#!/bin/sh\n')

def command(out, cmd, *args):
  """Write the shell command CMD with the arguments ARGS to the file-like
     object OUT.
  """
  out.write(' '.join((cmd,) + args) + "\n")

def svn(out, subcmd, *args):
  """Write an svn command with the given subcommand and arguments.  Write
     to the file-like object OUT.
  """
  command(out, 'svn', subcmd, *args)

def comment(out, text):
  """Write the comment TEXT to the file-like object OUT.
  """
