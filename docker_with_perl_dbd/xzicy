
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                  Урок 4.1: ПОЗИЦІЯ КУРСОРА І СТАТУС ФАЙЛУ

  ** Введіть CTRL-G щоб побачити вашу позицію в файлі, і його статус.
     Введіть G  щоб переміститись на потрібний рядок файлу. **

  ПРИМІТКА: Прочитайте увесь урок перед виконанням будь-яких кроків!!

  1. Затисніть кнопку Ctrl і натисніть g . Це називається CTRL-G.
     Внизу з'явиться повідомлення з назвою файлу, і позицією в файлі. 
     Запам'ятайте номер рядка для кроку 3.

ПРИМІТКА: Ви бачите позицію курсора в нижньому правому кутку екрану.
          Це трапляється коли включена опція 'ruler' (читайте :help 'ruler'  )

  2. Натисніть G щоб переміститись до кінця файлу.
     Наберіть  gg щоб переміститись до початку файлу.

  3. Наберіть номер рядка де ви були а потім G. Це перенесе вас до потрібного
     рядка.

  4. Якщо ви запам'ятали три попередні кроки, то виконуйте.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                        Урок 4.2: КОМАНДА ПОШУКУ


         ** Введіть  / (слеш) і фразу, щоб шукати її в тексті. **

  1. В звичайному режимі введіть символ  /  . Зауважте що він і курсор 
     з'являються в низу екрану, як і з командою  :   .

  2. Тепер введіть 'очепятка' <ENTER>. Це буде словом яке ви шукатимете.

  3. Щоб здійснити пошук цієї фрази ще раз введіть  n .
     Щоб шукати в протилежному напрямку введіть  N .

  4. Щоб шукати фразу в зворотньому напрямку використайте  ?  замість  / .

  5. Щоб переміститись назад до того місця звідки прийшли натисніть CTRL-O.
     Повторіть щоб повернутись ще далі. (Це як кнопка назад в браузері)
     CTRL-I переміщує вперед.

--->  "очепятка" не є способом написати опечатка; очепятка це опечатка.
Примітка: Коли пошук досягає кінця файлу він продовжує з початку, хіба що 
          опція 'wrapscan' була виключена.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                   Урок 4.3: ПОШУК ПАРНИХ ДУЖОК


              ** Введіть  %  щоб знайти парну ),], чи } . **

  1. Помістіть курсор над будь-якою (, [, чи { в рядку нижче позначеному --->.

  2. Тепер введіть символ  %  .

  3. Курсор переміститься до відповідної дужки.

  4. Введіть  %  щоб перемістити курсор до іншої парної дужки.

  5. Спробуйте з іншими дужками, і подивіться що вийде.

---> Це ( тестовий рядок ( з такими [ такими ] і такими { дужками } в ньому. ))


Примітка: Це корисно при відлагоджуванні програми з неправильними дужками. 
          І взагалі в кожному тексті дужки мають стояти правильно!



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      Урок 4.4: КОМАНДА ЗАМІНИ


        ** Наберіть :s/старе/нове/g щоб замінити 'старе' на 'нове'. **

  1. Перемістіть курсор до лінії нижче позначеної  --->.

  2. Введіть :s/(біп)/блять [ENTER] . Зауважте що ця команда змінює тільки перше
     входження (біп) в рядку.

  3. Потім наберіть  :s/(біп)/блять/g .  Додавання  g  вказує що заміни 
     робляться у всьому рядку глобально.

---> люди не лю(біп), коли в слові "лю(біп)" "(біп)" заміняють на "(бiп)".

  4. Щоб замінити кожне входження послідовності символів між двома рядками 
     наберіть  :#,#s/старе/нове/g    де #,# діапазон рядків в яких робиться 
                                     заміна.
     Введіть   :%s/старе/нове/g      щоб змінити кожне входження у цілому файлі.
     Введіть   :%s/старе/нове/gc        щоб замінити, кожне входження у файлі з
                                     підтвердженням кожної заміни.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               ПІДСУМОК УРОКУ 4 


  1. CTRL-G  виводить вашу позицію в файлі і назву файлу.
             G  переміщує в кінець файлу.
     число   G  переміщує до рядка з вказаним номером.
            gg  переміщує до першого рядка.

  2. Ввід  /    і послідовності символів шукає послідовність ПІСЛЯ курсора.
     Ввід  ?       і послідовності символів шукає послідовність ПЕРЕД курсором.
 
     Після пошуку введіть  n  щоб знайти наступне входження в тому ж напрямку
     або  N  щоб шукати в протилежному напрямку.
     CTRL-O відносить вас до старішої позиції, CTRL-I до новішої позиції.

  3. Ввід  %       коли курсор знаходиться над дужкою (,),[,],{, чи } переносить
     курсор до протилежної дужки.

  4. Щоб замінити перше входження старого слова на нове    :s/старе/нове
     Щоб замінити всі старі слова рядка на нові            :s/старе/нове/g
     Щоб замінити фрази між двома рядками                  :#,#s/старе/нове/g
     Щоб замінити всі входження в файлі                    :%s/старе/нове/g
     Щоб щоразу підтверджувати заміну додайте 'c'          :%s/старе/нове/gc

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                Урок 5.1: ЯК ВИКОНАТИ ЗОВНІШНЮ КОМАНДУ


   ** Введіть  :!  і зовнішню команду, щоб виконати ту команду. **

  1. Введіть відому команду  :  щоб встановити курсор в низу екрану.
     Це дозволяє вводити команди командного рядка.

  2. Тепер введіть  !  (символ знаку оклику) .  Це дозволить вам виконати
     будь-яку зовнішню команду.

  3. Як приклад введіть :!ls [ENTER].  Це покаже список файлів каталогу, так
     так ніби ви знаходитесь в оболонці терміналу. Або використайте :!dir
     якщо ви раптом знаходитесь в Windows.

Примітка:  Можна запускати будь-яку зовнішню команду таким способом, навіть з
           аргументами.

Примітка:  Всі команди що починаються з  :  мають закінчуватись натисканням
           [ENTER]. Більше на цьому не наголошуватиметься.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      Урок 5.2: ЩЕ ПРО ЗАПИС ФАЙЛІВ


     ** Щоб зберегти змінений текст, введіть :w НАЗВА_ФАЙЛУ **

  1. Введіть  :!dir  чи  :!ls  щоб переглянути вміст вашої директорії.
     Вам вже казали що після цього тиснуть [ENTER].

  2. Виберіть ім'я файлу яке ще не використовується, наприклад TEST.
     (Взагалі то це не обов'язково, якщо вміст обраного файлу не 
     є цінним)

  3. Тепер введіть:      :w TEST   (де TEST це назва яку ви обрали.)

  4. Це зберігає увесь файл (підручник Vim ) під ім'ям TEST.
     Щоб перевірити знову наберіть  :!ls   щоб побачити зміни в каталозі.

Примітка: Якщо ви вийдете з Vim і запустите його знову командою vim TEST, 
          файл що ви відкриєте буде точною копією цього, коли ви його зберегли.

  5. Зараз видаліть файл ввівши (Unix):         :!rm TEST
                             чи (MS-DOS):       :!del TEST


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    Урок 5.3: ВИБІР ТЕКСТУ ДЛЯ ЗАПИСУ


  ** Щоб зберегти частину файлу, наберіть  v  переміщення  :w НАЗВА_ФАЙЛУ **

  1. Перемістіть курсор до цього рядка.

  2. Натисніть  v  і перемістіть курсор на п'ять пунктів нижче. Зауважте, що 
     текст виділяється.

  3. Натисніть символ  :  .  Внизу екрану з'являються символи  :'<,'> .

  4. Введіть w TEST  , де TEST назва файлу що ще не використовується.  
     Переконайтесь що ви бачите  :'<,'>w TEST  перед тим як натиснути [ENTER].

  5. Vim запише вибрані рядки в файл TEST.  Використайте :!dir  чи  !ls
     щоб побачити це. Поки що не видаляйте його! Ми використаємо TEST в
     наступному уроці.

Зауваження: Натискання v починає режим візуального виділення. Ви можете
            переміщувати курсор щоб змінити розмір вибраної частини.
            Потім можна використати оператор щоб зробити щось з текстом.
            Наприклад  d  видалить текст.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                   Урок 5.4: ОТРИМАННЯ І ЗЛИТТЯ ФАЙЛІВ


       ** Щоб вставити вміст файлу введіть  :r НАЗВА_ФАЙЛУ  **

  1. Помістіть курсор десь над цим рядком.

Зауваження:  Після виконання кроку 2 ви побачите текст з уроку 5.3. Тоді
             перемістіться вниз, щоб побачити вміст цього уроку знову.

  2. Тоді отримайте вміст вашого файлу TEST використавши команду  :r TEST  ,
     де TEST назва файлу що ви використали.
     Файл що ви отримуєте поміщується під рядком курсора.

  3. Щоб перевірити що файл вставлено, прокрутіть текст назад, і переконаєтесь
     що тепер є дві копії урок 5.3, the original and the file version.

Примітка:  Також ви можете вставляти вивід зовнішньої програми. Наприклад
           :r !ls  читає вивід команди  ls  і вставляє його під курсором.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               Підсумок 5 уроку


  1.  :!команда  виконує зовнішню команду.

  2.  :w НАЗВА_ФАЙЛУ записує поточний файл на диск під назвою НАЗВА_ФАЙЛУ.

  3.  v  переміщення  :w НАЗВА_ФАЙЛУ зберігає візуально виділену частину тексту       
       в файл НАЗВА_ФАЙЛУ.

  4.  :r НАЗВА_ФАЙЛУ  отримує з диску файл НАЗВА_ФАЙЛУ і вставляє його під 
      курсором.

  5.  :r !ls  читає вивід команди ls і вставляє її під поточною позицією курсора



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         Урок 6.1: КОМАНДА ВСТАВКИ

        
           ** Введіть o щоб вставити новий рядок під курсором. **

  1. Перемістіть курсор на рядок нижче, позначений --->.

  2. Натисніть  o  щоб вставити новий рядок ПІД курсором та перейти в 
     режим вставки.

  3. Тепер введіть текст і натисніть [ESC] щоб вийти з режиму вставки.

---> Після натискання  o  курсор ставиться на наступний рядок в режимі вставки.

  4. Щоб вставити рядок НАД ABOVE курсором пишуть  O  в верхньому регістрі, 
     замість o. Спробуйте на рядку нижче.

---> Щоб вставити рядок над цим введіть  O  .




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                        Урок 6.2: КОМАНДА ДОПИСУВАННЯ


             ** Натисніть  a  щоб вставити текст після курсору. **

  1. Перемістіть курсор до початку рядка внизу позначеного --->.
  
  2. Тисніть  e  поки курсор не буде в кінці ря .

  3. Натисніть  a  (маленьке) щоб додати текст ПІСЛЯ курсору.

  4. Допишіть слова як рядок внизу.  Натисніть [ESC] щоб вийти з режиму
     вставки.

  5. Використайте  e  щоб переміститись до наступного неповного слова та
     to move to the next incomplete word and repeat steps 3 and 4.
  
---> Цей ря дозволить вам попрактикува в дописува тексту до рядка.
---> Цей рядок дозволить вам попрактикуватись в дописуванні тексту до рядка.

Примітка:  a, i  і  A  переходять в один і той же режим вставки, єдиною різницею
           є тільки те, де вставляються символи.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    Урок 6.3: ІНШИЙ СПОСІБ ЗАМІНИ


        ** Введіть велику  R  щоб замінити більш ніж один символ. **

  1. Перемістіть курсор до першого рядка внизу позначеного --->.  
     Перемістіть курсор до першого  xxx .

  2. Тепер натисніть  R  і введіть номер під ним з другого рядка, так що він
     замінює xxx .

  3. Натисніть [ESC] щоб покинути режим заміни.  Зауважте, що решта рядка 
     залишається незмінною.

  4. Повторіть кроки від 1 до 3 щоб замінити всі xxx на числа з другого рядка.

---> Додавання 123 до xxx дає xxx.
---> Додавання 123 до 456 дає 579.

Зауваження:  Режим заміни подібний до режиму вставки, тільки кожен введений 
             символ видаляє символ який стояв на його місці.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                        Урок 6.4: КОПІЮВАННЯ І ВСТАВКА


  ** Використайте оператор  y  щоб копіювати текст і  p  щоб його вставити **

  1. Перейдіть до рядка нижче позначеного ---> і покладіть курсор після "а)".
  
  2. Перейдіть в візуальний режим за допомогою клавіші  v  і перемістіть курсор
     якраз перед словом "один".
  
  3. Введіть  y  щоб копіювати (yank) виділений текст.

  4. Перемістіть курсор до кінця наступного рядка:  j$

  5. Натисніть  p  щоб вставити (put) текст.  Тоді введіть :  два [ESC] .

  6. так само додайте третій рядочок.

--->  а) це рядок номер один
      б)

  Зауваження: також можна використовувати  y  як оператор;  
              yw  копіює одне слово.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                            Урок 6.5: ВСТАНОВЛЕННЯ ОПЦІЙ


     ** Встановити опцію так що пошук чи заміна буде ігнорувати регістр **

  1. Знайдіть слово 'ігнорувати' ввівши :   /ігнорувати
     Повторіть кілька разів натискаючи  n .

  2. Встановіть опцію ігнорування регістру 'ic' (Ignore case) ввівши:  :set ic

  3. Тепер пошукайте 'ігнорувати' знову ввівши  n
     Зауважте що Ігнорувати та ІГНОРУВАТИ тепер також знаходяться.

  4. Ввімкніть 'hlsearch' (підсвітку пошуку) і 'incsearch' (інтерактивність)
     командою :set hls is  .

  5. Тепер пошукайте щось знову і зауважте зміни:  /ігнорувати [ENTER]

  6. Щоб вимкнути ігнорування регістру напишіть:  :set noic

Примітка:  Щоб вимкнути підсвітку співпадінь введіть:   :nohlsearch 
Примітка:  Якщо ви хочете не брати до уваги регістр тільки під час одного пошуку           
           використайте ключ  \c. Наприклад:  /ігнорувати\c  [ENTER]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               ПІДСУМОК УРОКУ 6

  1. Введіть  о  щоб додати рядок ПІД курсором і почати режим вставки.
     Введіть  O  щоб додати рядок НАД курсором.

  2. Введіть  a  щоб вставити текст ПІСЛЯ курсора.
     Введіть  A  щоб додати текст до рядка.

  3. Переміщення  e  переміщує нас до кінця слова.

  4. Оператор  y  копіює текст,  p  вставляє його.

  5. Введення  R  переносить нас в режим заміни до натискання [ESC].

  6. Набір ":set xxx" встановлює опцію "xxx".  Деякі опції:
        'ic' 'ignorecase'       ігнорувати верхній/нижній регістр при пошуку
        'is' 'incsearch'        показувати співпадіння пошуку під час введення
                                фрази
        'hls' 'hlsearch'        пісвічувати всі співпадіння
     Можна одночасно використовувати і коротку і довгу форму запису опції.

  7. Використайте префікс "no" щоб вимкнути опцію:   :set noic

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                       Урок 7.1: ОТРИМАННЯ ДОПОМОГИ


              ** Використання вбудованої довідкової системи **

  Vim має всеосяжну систему довідки. Щоб ознайомитись з нею спробуйте один з
  таких способів:
        - натисніть кнопку [HELP] (якщо така є)
        - натисніть [F1]
        - наберіть   :help

  Прочитайте текст в вікні допомоги, щоб вияснити як вона працює.
  Натисніть CTRL-W  двічі щоб змінити вікно
  Наберіть   :q  щоб закрити вікно довідки.

  Можна знайти довідку майже на будь-яку тему додаючи аргумент після команди
  ":help" . Спробуйте одну з наступних (не забувайте натискати  [ENTER]):

        :help w
        :help c_CTRL-D
        :help insert-index
        :help user-manual
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      Урок 7.2: СТВОРЕННЯ СКРИПТА АВТОЗАПУСКУ


                      ** Ввімкнення додаткових функцій Vim **

  Vim має набагато більше функцій ніж Vi, але більшість з них відключені за 
  замовчуванням.  Щоб почати використання додаткових функцій потрібно створити
  файл "vimrc".

  1. Почніть редагування файлу "vimrc" .  Це залежить від вашої системи:
        :e ~/.vimrc          для Unix
        :e ~/_vimrc          для MS-Windows

  2. Тепер прочитайте приклад вмісту "vimrc" :
        :r $VIMRUNTIME/vimrc_example.vim

  3. Збережіть файл:
        :w

  Наступного разу коли ви запустите Vim він буде використовувати підсвітку 
  синтаксису. Можна додати всі ваші улюблені налаштування в цей файл. Для більш
  детальної інформації введіть  :help vimrc-intro

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                             Урок 7.3: АВТОДОПОВНЕННЯ


              ** Автодоповнення за допомогою CTRL-D і [TAB] **

  1. Переконайтесь що в Vim не включена зворотня сумісність:  :set nocp

  2. Подивіться що за файли існують в каталозі:  :!ls   чи  :!dir

  3. Введіть початок команди:  :e

  4. Натисніть  CTRL-D  і Vim покаже список команд що починаються з "e".

  5. Натисніть [TAB]  і  Vim доповнить команду до ":edit".

  6. Тепер додайте пропуск і початок існуючого імені файлу:  :edit FIL

  7. Натисніть [TAB].  Vim доповнить ім'я (якщо воно унікальне).

Зауваження:  Доповнення працює для багатьох команд. Просто натискайте CTRL-D і
             [TAB]. Це особливо корисно для команди  :help .

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               ПІДСУМОК УРОКУ 7


  1. Введіть  :help  або натисніть [F1] щоб відкрити вікно довідки.

  2. Введіть  :help тема  щоб знайти довідку про  тему .

  3. Введіть  CTRL-W CTRL-W  щоб змінити вікно.

  4. Наберіть  :q  щоб закрити вікно

  5. Створіть скрипт vimrc щоб змінювати ваші налаштування при запуску.

  6. При наборі команди що починається з двокрапки  :  натисніть CTRL-D 
     щоб побачити можливі доповнення. Натисніть [TAB] щоб побачити одне з
     доповнень.







~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  Це завершує уроки Vim .  Вони були націлені щоб дати вам короткий вступ в 
  редактор Vim, достатній для того щоб використовувати редактор комфортно.
  Ці уроки зовсім далеко від повних, бо Vim має набагато більше команд. Можна 
  прочитати інструкцію користувача : ":help user-manual".

  Для подальшого читання і вивчення рекомендується така книжка:
        Vim - Vi Improved - by Steve Oualline
        Publisher: New Riders
  Особливо корисна для початківців.
  Там багато прикладів і ілюстрацій.
  Дивіться https://iccf-holland.org/click5.html

  Ці уроки були написані Майклом С. Пірсом та Робертом Уаром.

  Модифіковано для Vim Бремом Муленаром.
  

  Переклад на українську Буник Т.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                                                                                                           usr/share/vim/vim90/tutor/tutor.utf-8                                                               0000644 0000000 0000000 00000101457 14424703754 016157  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        ===============================================================================
=    W e l c o m e   t o   t h e   V I M   T u t o r    -    Version 1.7      =
===============================================================================

     Vim is a very powerful editor that has many commands, too many to
     explain in a tutor such as this.  This tutor is designed to describe
     enough of the commands that you will be able to easily use Vim as
     an all-purpose editor.

     The approximate time required to complete the tutor is 30 minutes,
     depending upon how much time is spent with experimentation.

     ATTENTION:
     The commands in the lessons will modify the text.  Make a copy of this
     file to practice on (if you started "vimtutor" this is already a copy).

     It is important to remember that this tutor is set up to teach by
     use.  That means that you need to execute the commands to learn them
     properly.  If you only read the text, you will forget the commands!

     Now, make sure that your Caps-Lock key is NOT depressed and press
     the   j   key enough times to move the cursor so that lesson 1.1
     completely fills the screen.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Lesson 1.1:  MOVING THE CURSOR


   ** To move the cursor, press the h,j,k,l keys as indicated. **
	     ^
	     k		    Hint:  The h key is at the left and moves left.
       < h	 l >		   The l key is at the right and moves right.
	     j			   The j key looks like a down arrow.
	     v
  1. Move the cursor around the screen until you are comfortable.

  2. Hold down the down key (j) until it repeats.
     Now you know how to move to the next lesson.

  3. Using the down key, move to lesson 1.2.

NOTE: If you are ever unsure about something you typed, press <ESC> to place
      you in Normal mode.  Then retype the command you wanted.

NOTE: The cursor keys should also work.  But using hjkl you will be able to
      move around much faster, once you get used to it.  Really!

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			    Lesson 1.2: EXITING VIM


  !! NOTE: Before executing any of the steps below, read this entire lesson!!

  1. Press the <ESC> key (to make sure you are in Normal mode).

  2. Type:	:q! <ENTER>.
     This exits the editor, DISCARDING any changes you have made.

  3. Get back here by executing the command that got you into this tutor. That
     might be:  vimtutor <ENTER>

  4. If you have these steps memorized and are confident, execute steps
     1 through 3 to exit and re-enter the editor.

NOTE:  :q! <ENTER>  discards any changes you made.  In a few lessons you
       will learn how to save the changes to a file.

  5. Move the cursor down to lesson 1.3.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     Lesson 1.3: TEXT EDITING - DELETION


	   ** Press  x  to delete the character under the cursor. **

  1. Move the cursor to the line below marked --->.

  2. To fix the errors, move the cursor until it is on top of the
     character to be deleted.

  3. Press the	x  key to delete the unwanted character.

  4. Repeat steps 2 through 4 until the sentence is correct.

---> The ccow jumpedd ovverr thhe mooon.

  5. Now that the line is correct, go on to lesson 1.4.

NOTE: As you go through this tutor, do not try to memorize, learn by usage.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		      Lesson 1.4: TEXT EDITING - INSERTION


			** Press  i  to insert text. **

  1. Move the cursor to the first line below marked --->.

  2. To make the first line the same as the second, move the cursor on top
     of the character BEFORE which the text is to be inserted.

  3. Press  i  and type in the necessary additions.

  4. As each error is fixed press <ESC> to return to Normal mode.
     Repeat steps 2 through 4 to correct the sentence.

---> There is text misng this .
---> There is some text missing from this line.

  5. When you are comfortable inserting text move to lesson 1.5.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     Lesson 1.5: TEXT EDITING - APPENDING


			** Press  A  to append text. **

  1. Move the cursor to the first line below marked --->.
     It does not matter on what character the cursor is in that line.

  2. Press  A  and type in the necessary additions.

  3. As the text has been appended press <ESC> to return to Normal mode.

  4. Move the cursor to the second line marked ---> and repeat
     steps 2 and 3 to correct this sentence.

---> There is some text missing from th
     There is some text missing from this line.
---> There is also some text miss
     There is also some text missing here.

  5. When you are comfortable appending text move to lesson 1.6.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     Lesson 1.6: EDITING A FILE

		    ** Use  :wq  to save a file and exit. **

  !! NOTE: Before executing any of the steps below, read this entire lesson!!

  1.  If you have access to another terminal, do the following there.
      Otherwise, exit this tutor as you did in lesson 1.2:  :q!

  2. At the shell prompt type this command:  vim file.txt <ENTER>
     'vim' is the command to start the Vim editor, 'file.txt' is the name of
     the file you wish to edit.  Use the name of a file that you can change.

  3. Insert and delete text as you learned in the previous lessons.

  4. Save the file with changes and exit Vim with:  :wq <ENTER>

  5. If you have quit vimtutor in step 1 restart the vimtutor and move down to
     the following summary.

  6. After reading the above steps and understanding them: do it.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       Lesson 1 SUMMARY


  1. The cursor is moved using either the arrow keys or the hjkl keys.
	 h (left)	j (down)       k (up)	    l (right)

  2. To start Vim from the shell prompt type:  vim FILENAME <ENTER>

  3. To exit Vim type:	   <ESC>   :q!	 <ENTER>  to trash all changes.
	     OR type:	   <ESC>   :wq	 <ENTER>  to save the changes.

  4. To delete the character at the cursor type:  x

  5. To insert or append text type:
	 i   type inserted text   <ESC>		insert before the cursor
	 A   type appended text   <ESC>         append after the line

NOTE: Pressing <ESC> will place you in Normal mode or will cancel
      an unwanted and partially completed command.

Now continue with lesson 2.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Lesson 2.1: DELETION COMMANDS


		       ** Type  dw  to delete a word. **

  1. Press  <ESC>  to make sure you are in Normal mode.

  2. Move the cursor to the line below marked --->.

  3. Move the cursor to the beginning of a word that needs to be deleted.

  4. Type   dw	 to make the word disappear.

  NOTE: The letter  d  will appear on the last line of the screen as you type
	it.  Vim is waiting for you to type  w .  If you see another character
	than  d  you typed something wrong; press  <ESC>  and start over.

---> There are a some words fun that don't belong paper in this sentence.

  5. Repeat steps 3 and 4 until the sentence is correct and go to lesson 2.2.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		      Lesson 2.2: MORE DELETION COMMANDS


	   ** Type  d$	to delete to the end of the line. **

  1. Press  <ESC>  to make sure you are in Normal mode.

  2. Move the cursor to the line below marked --->.

  3. Move the cursor to the end of the correct line (AFTER the first . ).

  4. Type    d$    to delete to the end of the line.

---> Somebody typed the end of this line twice. end of this line twice.


  5. Move on to lesson 2.3 to understand what is happening.





~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     Lesson 2.3: ON OPERATORS AND MOTIONS


  Many commands that change text are made from an operator and a motion.
  The format for a delete command with the  d  delete operator is as follows:

  	d   motion

  Where:
    d      - is the delete operator.
    motion - is what the operator will operate on (listed below).

  A short list of motions:
    w - until the start of the next word, EXCLUDING its first character.
    e - to the end of the current word, INCLUDING the last character.
    $ - to the end of the line, INCLUDING the last character.

  Thus typing  de  will delete from the cursor to the end of the word.

NOTE:  Pressing just the motion while in Normal mode without an operator will
       move the cursor as specified.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     Lesson 2.4: USING A COUNT FOR A MOTION


   ** Typing a number before a motion repeats it that many times. **

  1. Move the cursor to the start of the line below marked --->.

  2. Type  2w  to move the cursor two words forward.

  3. Type  3e  to move the cursor to the end of the third word forward.

  4. Type  0  (zero) to move to the start of the line.

  5. Repeat steps 2 and 3 with different numbers.

---> This is just a line with words you can move around in.

  6. Move on to lesson 2.5.




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     Lesson 2.5: USING A COUNT TO DELETE MORE


   ** Typing a number with an operator repeats it that many times. **

  In the combination of the delete operator and a motion mentioned above you
  insert a count before the motion to delete more:
	 d   number   motion

  1. Move the cursor to the first UPPER CASE word in the line marked --->.

  2. Type  d2w  to delete the two UPPER CASE words.

  3. Repeat steps 1 and 2 with a different count to delete the consecutive
     UPPER CASE words with one command.

--->  this ABC DE line FGHI JK LMN OP of words is Q RS TUV cleaned up.





~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			 Lesson 2.6: OPERATING ON LINES


		   ** Type  dd   to delete a whole line. **

  Due to the frequency of whole line deletion, the designers of Vi decided
  it would be easier to simply type two d's to delete a line.

  1. Move the cursor to the second line in the phrase below.
  2. Type  dd  to delete the line.
  3. Now move to the fourth line.
  4. Type   2dd   to delete two lines.

--->  1)  Roses are red,
--->  2)  Mud is fun,
--->  3)  Violets are blue,
--->  4)  I have a car,
--->  5)  Clocks tell time,
--->  6)  Sugar is sweet
--->  7)  And so are you.

Doubling to operate on a line also works for operators mentioned below.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			 Lesson 2.7: THE UNDO COMMAND


   ** Press  u	to undo the last commands,   U  to fix a whole line. **

  1. Move the cursor to the line below marked ---> and place it on the
     first error.
  2. Type  x  to delete the first unwanted character.
  3. Now type  u  to undo the last command executed.
  4. This time fix all the errors on the line using the  x  command.
  5. Now type a capital  U  to return the line to its original state.
  6. Now type  u  a few times to undo the  U  and preceding commands.
  7. Now type CTRL-R (keeping CTRL key pressed while hitting R) a few times
     to redo the commands (undo the undos).

---> Fiix the errors oon thhis line and reeplace them witth undo.

  8. These are very useful commands.  Now move on to the lesson 2 Summary.




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       Lesson 2 SUMMARY

  1. To delete from the cursor up to the next word type:        dw
  2. To delete from the cursor up to the end of the word type:  de
  3. To delete from the cursor to the end of a line type:       d$
  4. To delete a whole line type:                               dd

  5. To repeat a motion prepend it with a number:   2w
  6. The format for a change command is:
               operator   [number]   motion
     where:
       operator - is what to do, such as  d  for delete
       [number] - is an optional count to repeat the motion
       motion   - moves over the text to operate on, such as  w (word),
		  e (end of word),  $ (end of the line), etc.

  7. To move to the start of the line use a zero:  0

  8. To undo previous actions, type:           u  (lowercase u)
     To undo all the changes on a line, type:  U  (capital U)
     To undo the undos, type:                  CTRL-R

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			 Lesson 3.1: THE PUT COMMAND


       ** Type	p  to put previously deleted text after the cursor. **

  1. Move the cursor to the first line below marked --->.

  2. Type  dd  to delete the line and store it in a Vim register.

  3. Move the cursor to the c) line, ABOVE where the deleted line should go.

  4. Type   p   to put the line below the cursor.

  5. Repeat steps 2 through 4 to put all the lines in correct order.

---> d) Can you learn too?
---> b) Violets are blue,
---> c) Intelligence is learned,
---> a) Roses are red,



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		       Lesson 3.2: THE REPLACE COMMAND


       ** Type  rx  to replace the character at the cursor with  x . **

  1. Move the cursor to the first line below marked --->.

  2. Move the cursor so that it is on top of the first error.

  3. Type   r	and then the character which should be there.

  4. Repeat steps 2 and 3 until the first line is equal to the second one.

--->  Whan this lime was tuoed in, someone presswd some wrojg keys!
--->  When this line was typed in, someone pressed some wrong keys!

  5. Now move on to lesson 3.3.

NOTE: Remember that you should be learning by doing, not memorization.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Lesson 3.3: THE CHANGE OPERATOR


	   ** To change until the end of a word, type  ce . **

  1. Move the cursor to the first line below marked --->.

  2. Place the cursor on the  u  in  lubw.

  3. Type  ce  and the correct word (in this case, type  ine ).

  4. Press <ESC> and move to the next character that needs to be changed.

  5. Repeat steps 3 and 4 until the first sentence is the same as the second.

---> This lubw has a few wptfd that mrrf changing usf the change operator.
---> This line has a few words that need changing using the change operator.

Notice that  ce  deletes the word and places you in Insert mode.
             cc  does the same for the whole line.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		       Lesson 3.4: MORE CHANGES USING c


     ** The change operator is used with the same motions as delete. **

  1. The change operator works in the same way as delete.  The format is:

         c    [number]   motion

  2. The motions are the same, such as   w (word) and  $ (end of line).

  3. Move the cursor to the first line below marked --->.

  4. Move the cursor to the first error.

  5. Type  c$  and type the rest of the line like the second and press <ESC>.

---> The end of this line needs some help to make it like the second.
---> The end of this line needs to be corrected using the  c$  command.

NOTE:  You can use the Backspace key to correct mistakes while typing.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       Lesson 3 SUMMARY


  1. To put back text that has just been deleted, type   p .  This puts the
     deleted text AFTER the cursor (if a line was deleted it will go on the
     line below the cursor).

  2. To replace the character under the cursor, type   r   and then the
     character you want to have there.

  3. The change operator allows you to change from the cursor to where the
     motion takes you.  eg. Type  ce  to change from the cursor to the end of
     the word,  c$  to change to the end of a line.

  4. The format for change is:

	 c   [number]   motion

Now go on to the next lesson.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		  Lesson 4.1: CURSOR LOCATION AND FILE STATUS

  ** Type CTRL-G to show your location in the file and the file status.
     Type  G  to move to a line in the file. **

  NOTE: Read this entire lesson before executing any of the steps!!

  1. Hold down the Ctrl key and press  g .  We call this CTRL-G.
     A message will appear at the bottom of the page with the filename and the
     position in the file.  Remember the line number for Step 3.

NOTE:  You may see the cursor position in the lower right corner of the screen
       This happens when the 'ruler' option is set (see  :help 'ruler'  )

  2. Press  G  to move you to the bottom of the file.
     Type  gg  to move you to the start of the file.

  3. Type the number of the line you were on and then  G .  This will
     return you to the line you were on when you first pressed CTRL-G.

  4. If you feel confident to do this, execute steps 1 through 3.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Lesson 4.2: THE SEARCH COMMAND


