	0x12461,
	0x12462,
	0x12464,
	0x1ECAD,
	0x1ECAE
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_NV__1_SLASH_4_invlist[] = {  /* for EBCDIC 1047 */
	27,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xB7,
	0xB8,
	0x9F7,
	0x9F8,
	0xB72,
	0xB73,
	0xD73,
	0xD74,
	0xA830,
	0xA831,
	0x10140,
	0x10141,
	0x1018B,
	0x1018C,
	0x109F8,
	0x109F9,
	0x10E7C,
	0x10E7D,
	0x11FD0,
	0x11FD1,
	0x12460,
	0x12461,
	0x12462,
	0x12464,
	0x1ECAD,
	0x1ECAE
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_NV__1_SLASH_4_invlist[] = {  /* for EBCDIC 037 */
	27,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xB7,
	0xB8,
	0x9F7,
	0x9F8,
	0xB72,
	0xB73,
	0xD73,
	0xD74,
	0xA830,
	0xA831,
	0x10140,
	0x10141,
	0x1018B,
	0x1018C,
	0x109F8,
	0x109F9,
	0x10E7C,
	0x10E7D,
	0x11FD0,
	0x11FD1,
	0x12460,
	0x12461,
	0x12462,
	0x12464,
	0x1ECAD,
	0x1ECAE
};

#  endif	/* EBCDIC 037 */

static const UV UNI_NV__1_SLASH_40_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xD59,
	0xD5A,
	0x11FC4,
	0x11FC5
};

static const UV UNI_NV__1_SLASH_5_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xD5E,
	0xD5F,
	0x2155,
	0x2156,
	0x11FCF,
	0x11FD0
};

static const UV UNI_NV__1_SLASH_6_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2159,
	0x215A,
	0x109F7,
	0x109F8,
	0x12461,
	0x12462,
	0x1ED3D,
	0x1ED3E
};

static const UV UNI_NV__1_SLASH_64_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11FC3,
	0x11FC4
};

static const UV UNI_NV__1_SLASH_7_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2150,
	0x2151
};

static const UV UNI_NV__1_SLASH_8_invlist[] = {  /* for all charsets */
	15,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x9F5,
	0x9F6,
	0xB76,
	0xB77,
	0xD77,
	0xD78,
	0x215B,
	0x215C,
	0xA834,
	0xA835,
	0x11FCC,
	0x11FCD,
	0x1245F,
	0x12460
};

static const UV UNI_NV__1_SLASH_80_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11FC2,
	0x11FC3
};

static const UV UNI_NV__1_SLASH_9_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2151,
	0x2152
};

static const UV UNI_NV__10_invlist[] = {  /* for all charsets */
	117,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xBF0,
	0xBF1,
	0xD70,
	0xD71,
	0x1372,
	0x1373,
	0x2169,
	0x216A,
	0x2179,
	0x217A,
	0x2469,
	0x246A,
	0x247D,
	0x247E,
	0x2491,
	0x2492,
	0x24FE,
	0x24FF,
	0x277F,
	0x2780,
	0x2789,
	0x278A,
	0x2793,
	0x2794,
	0x3038,
	0x3039,
	0x3229,
	0x322A,
	0x3248,
	0x3249,
	0x3289,
	0x328A,
	0x4EC0,
	0x4EC1,
	0x5341,
	0x5342,
	0x62FE,
	0x62FF,
	0xF973,
	0xF974,
	0xF9FD,
	0xF9FE,
	0x10110,
	0x10111,
	0x10149,
	0x1014A,
	0x10150,
	0x10151,
	0x10157,
	0x10158,
	0x10160,
	0x10165,
	0x102EA,
	0x102EB,
	0x10322,
	0x10323,
	0x103D3,
	0x103D4,
	0x1085B,
	0x1085C,
	0x1087E,
	0x1087F,
	0x108AD,
	0x108AE,
	0x108FD,
	0x108FE,
	0x10917,
	0x10918,
	0x109C9,
	0x109CA,
	0x10A44,
	0x10A45,
	0x10A9E,
	0x10A9F,
	0x10AED,
	0x10AEE,
	0x10B5C,
	0x10B5D,
	0x10B7C,
	0x10B7D,
	0x10BAD,
	0x10BAE,
	0x10CFC,
	0x10CFD,
	0x10E69,
	0x10E6A,
	0x10F22,
	0x10F23,
	0x10F52,
	0x10F53,
	0x10FC9,
	0x10FCA,
	0x1105B,
	0x1105C,
	0x111EA,
	0x111EB,
	0x1173A,
	0x1173B,
	0x118EA,
	0x118EB,
	0x11C63,
	0x11C64,
	0x16B5B,
	0x16B5C,
	0x16E8A,
	0x16E8B,
	0x1D2EA,
	0x1D2EB,
	0x1D369,
	0x1D36A,
	0x1EC7A,
	0x1EC7B,
	0x1ED0A,
	0x1ED0B,
	0x1ED37,
	0x1ED38
};

static const UV UNI_NV__100_invlist[] = {  /* for all charsets */
	71,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xBF1,
	0xBF2,
	0xD71,
	0xD72,
	0x137B,
	0x137C,
	0x216D,
	0x216E,
	0x217D,
	0x217E,
	0x4F70,
	0x4F71,
	0x767E,
	0x767F,
	0x964C,
	0x964D,
	0x10119,
	0x1011A,
	0x1014B,
	0x1014C,
	0x10152,
	0x10153,
	0x1016A,
	0x1016B,
	0x102F3,
	0x102F4,
	0x103D5,
	0x103D6,
	0x1085D,
	0x1085E,
	0x108AF,
	0x108B0,
	0x108FF,
	0x10900,
	0x10919,
	0x1091A,
	0x109D2,
	0x109D3,
	0x10A46,
	0x10A47,
	0x10AEF,
	0x10AF0,
	0x10B5E,
	0x10B5F,
	0x10B7E,
	0x10B7F,
	0x10BAF,
	0x10BB0,
	0x10CFE,
	0x10CFF,
	0x10E72,
	0x10E73,
	0x10F25,
	0x10F26,
	0x10F54,
	0x10F55,
	0x10FCB,
	0x10FCC,
	0x11064,
	0x11065,
	0x111F3,
	0x111F4,
	0x11C6C,
	0x11C6D,
	0x16B5C,
	0x16B5D,
	0x1EC83,
	0x1EC84,
	0x1ED13,
	0x1ED14
};

static const UV UNI_NV__1000_invlist[] = {  /* for all charsets */
	43,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xBF2,
	0xBF3,
	0xD72,
	0xD73,
	0x216F,
	0x2170,
	0x217F,
	0x2181,
	0x4EDF,
	0x4EE0,
	0x5343,
	0x5344,
	0x9621,
	0x9622,
	0x10122,
	0x10123,
	0x1014D,
	0x1014E,
	0x10154,
	0x10155,
	0x10171,
	0x10172,
	0x1085E,
	0x1085F,
	0x109DB,
	0x109DC,
	0x10A47,
	0x10A48,
	0x10B5F,
	0x10B60,
	0x10B7F,
	0x10B80,
	0x10CFF,
	0x10D00,
	0x11065,
	0x11066,
	0x111F4,
	0x111F5,
	0x1EC8C,
	0x1EC8D,
	0x1ED1C,
	0x1ED1D
};

static const UV UNI_NV__10000_invlist[] = {  /* for all charsets */
	27,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x137C,
	0x137D,
	0x2182,
	0x2183,
	0x4E07,
	0x4E08,
	0x842C,
	0x842D,
	0x1012B,
	0x1012C,
	0x10155,
	0x10156,
	0x1085F,
	0x10860,
	0x109E4,
	0x109E5,
	0x16B5D,
	0x16B5E,
	0x1EC95,
	0x1EC96,
	0x1ECB3,
	0x1ECB4,
	0x1ED25,
	0x1ED26,
	0x1ED3B,
	0x1ED3C
};

static const UV UNI_NV__100000_invlist[] = {  /* for all charsets */
	11,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2188,
	0x2189,
	0x109ED,
	0x109EE,
	0x1EC9E,
	0x1EC9F,
	0x1ECA0,
	0x1ECA1,
	0x1ECB4,
	0x1ECB5
};

static const UV UNI_NV__1000000_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16B5E,
	0x16B5F
};

static const UV UNI_NV__10000000_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1ECA1,
	0x1ECA2
};

static const UV UNI_NV__100000000_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x4EBF,
	0x4EC0,
	0x5104,
	0x5105,
	0x16B5F,
	0x16B60
};

static const UV UNI_NV__10000000000_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16B60,
	0x16B61
};

static const UV UNI_NV__1000000000000_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5146,
	0x5147,
	0x16B61,
	0x16B62
};

static const UV UNI_NV__11_invlist[] = {  /* for all charsets */
	17,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x216A,
	0x216B,
	0x217A,
	0x217B,
	0x246A,
	0x246B,
	0x247E,
	0x247F,
	0x2492,
	0x2493,
	0x24EB,
	0x24EC,
	0x16E8B,
	0x16E8C,
	0x1D2EB,
	0x1D2EC
};

static const UV UNI_NV__11_SLASH_12_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x109BC,
	0x109BD
};

static const UV UNI_NV__11_SLASH_2_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF2F,
	0xF30
};

static const UV UNI_NV__12_invlist[] = {  /* for all charsets */
	17,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x216B,
	0x216C,
	0x217B,
	0x217C,
	0x246B,
	0x246C,
	0x247F,
	0x2480,
	0x2493,
	0x2494,
	0x24EC,
	0x24ED,
	0x16E8C,
	0x16E8D,
	0x1D2EC,
	0x1D2ED
};

static const UV UNI_NV__13_invlist[] = {  /* for all charsets */
	13,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x246C,
	0x246D,
	0x2480,
	0x2481,
	0x2494,
	0x2495,
	0x24ED,
	0x24EE,
	0x16E8D,
	0x16E8E,
	0x1D2ED,
	0x1D2EE
};

static const UV UNI_NV__13_SLASH_2_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF30,
	0xF31
};

static const UV UNI_NV__14_invlist[] = {  /* for all charsets */
	13,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x246D,
	0x246E,
	0x2481,
	0x2482,
	0x2495,
	0x2496,
	0x24EE,
	0x24EF,
	0x16E8E,
	0x16E8F,
	0x1D2EE,
	0x1D2EF
};

static const UV UNI_NV__15_invlist[] = {  /* for all charsets */
	13,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x246E,
	0x246F,
	0x2482,
	0x2483,
	0x2496,
	0x2497,
	0x24EF,
	0x24F0,
	0x16E8F,
	0x16E90,
	0x1D2EF,
	0x1D2F0
};

static const UV UNI_NV__15_SLASH_2_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF31,
	0xF32
};

static const UV UNI_NV__16_invlist[] = {  /* for all charsets */
	15,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x9F9,
	0x9FA,
	0x246F,
	0x2470,
	0x2483,
	0x2484,
	0x2497,
	0x2498,
	0x24F0,
	0x24F1,
	0x16E90,
	0x16E91,
	0x1D2F0,
	0x1D2F1
};

static const UV UNI_NV__17_invlist[] = {  /* for all charsets */
	15,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16EE,
	0x16EF,
	0x2470,
	0x2471,
	0x2484,
	0x2485,
	0x2498,
	0x2499,
	0x24F1,
	0x24F2,
	0x16E91,
	0x16E92,
	0x1D2F1,
	0x1D2F2
};

static const UV UNI_NV__17_SLASH_2_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF32,
	0xF33
};

static const UV UNI_NV__18_invlist[] = {  /* for all charsets */
	15,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16EF,
	0x16F0,
	0x2471,
	0x2472,
	0x2485,
	0x2486,
	0x2499,
	0x249A,
	0x24F2,
	0x24F3,
	0x16E92,
	0x16E93,
	0x1D2F2,
	0x1D2F3
};

static const UV UNI_NV__19_invlist[] = {  /* for all charsets */
	15,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16F0,
	0x16F1,
	0x2472,
	0x2473,
	0x2486,
	0x2487,
	0x249A,
	0x249B,
	0x24F3,
	0x24F4,
	0x16E93,
	0x16E94,
	0x1D2F3,
	0x1D2F4
};

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_NV__2_invlist[] = {  /* for ASCII/Latin1 */
	275,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x32,
	0x33,
	0xB2,
	0xB3,
	0x662,
	0x663,
	0x6F2,
	0x6F3,
	0x7C2,
	0x7C3,
	0x968,
	0x969,
	0x9E8,
	0x9E9,
	0xA68,
	0xA69,
	0xAE8,
	0xAE9,
	0xB68,
	0xB69,
	0xBE8,
	0xBE9,
	0xC68,
	0xC69,
	0xC7A,
	0xC7B,
	0xC7D,
	0xC7E,
	0xCE8,
	0xCE9,
	0xD68,
	0xD69,
	0xDE8,
	0xDE9,
	0xE52,
	0xE53,
	0xED2,
	0xED3,
	0xF22,
	0xF23,
	0x1042,
	0x1043,
	0x1092,
	0x1093,
	0x136A,
	0x136B,
	0x17E2,
	0x17E3,
	0x17F2,
	0x17F3,
	0x1812,
	0x1813,
	0x1948,
	0x1949,
	0x19D2,
	0x19D3,
	0x1A82,
	0x1A83,
	0x1A92,
	0x1A93,
	0x1B52,
	0x1B53,
	0x1BB2,
	0x1BB3,
	0x1C42,
	0x1C43,
	0x1C52,
	0x1C53,
	0x2082,
	0x2083,
	0x2161,
	0x2162,
	0x2171,
	0x2172,
	0x2461,
	0x2462,
	0x2475,
	0x2476,
	0x2489,
	0x248A,
	0x24F6,
	0x24F7,
	0x2777,
	0x2778,
	0x2781,
	0x2782,
	0x278B,
	0x278C,
	0x3022,
	0x3023,
	0x3193,
	0x3194,
	0x3221,
	0x3222,
	0x3281,
	0x3282,
	0x3483,
	0x3484,
	0x4E8C,
	0x4E8D,
	0x5169,
	0x516A,
	0x5F0D,
	0x5F0E,
	0x5F10,
	0x5F11,
	0x8CAE,
	0x8CAF,
	0x8CB3,
	0x8CB4,
	0x8D30,
	0x8D31,
	0xA622,
	0xA623,
	0xA6E7,
	0xA6E8,
	0xA8D2,
	0xA8D3,
	0xA902,
	0xA903,
	0xA9D2,
	0xA9D3,
	0xA9F2,
	0xA9F3,
	0xAA52,
	0xAA53,
	0xABF2,
	0xABF3,
	0xF978,
	0xF979,
	0xFF12,
	0xFF13,
	0x10108,
	0x10109,
	0x1015B,
	0x1015F,
	0x102E2,
	0x102E3,
	0x103D2,
	0x103D3,
	0x104A2,
	0x104A3,
	0x10859,
	0x1085A,
	0x1087A,
	0x1087B,
	0x108A8,
	0x108A9,
	0x1091A,
	0x1091B,
	0x109C1,
	0x109C2,
	0x10A41,
	0x10A42,
	0x10B59,
	0x10B5A,
	0x10B79,
	0x10B7A,
	0x10BAA,
	0x10BAB,
	0x10D32,
	0x10D33,
	0x10E61,
	0x10E62,
	0x10F1E,
	0x10F1F,
	0x10FC6,
	0x10FC7,
	0x11053,
	0x11054,
	0x11068,
	0x11069,
	0x110F2,
	0x110F3,
	0x11138,
	0x11139,
	0x111D2,
	0x111D3,
	0x111E2,
	0x111E3,
	0x112F2,
	0x112F3,
	0x11452,
	0x11453,
	0x114D2,
	0x114D3,
	0x11652,
	0x11653,
	0x116C2,
	0x116C3,
	0x11732,
