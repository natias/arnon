     ** Type  /  followed by a phrase to search for the phrase. **

  1. In Normal mode type the  /  character.  Notice that it and the cursor
     appear at the bottom of the screen as with the  :	command.

  2. Now type 'errroor' <ENTER>.  This is the word you want to search for.

  3. To search for the same phrase again, simply type  n .
     To search for the same phrase in the opposite direction, type  N .

  4. To search for a phrase in the backward direction, use  ?  instead of  / .

  5. To go back to where you came from press  CTRL-O  (Keep Ctrl down while
     pressing the letter o).  Repeat to go back further.  CTRL-I goes forward.

--->  "errroor" is not the way to spell error;  errroor is an error.
NOTE: When the search reaches the end of the file it will continue at the
      start, unless the 'wrapscan' option has been reset.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		   Lesson 4.3: MATCHING PARENTHESES SEARCH


	      ** Type  %  to find a matching ),], or } . **

  1. Place the cursor on any (, [, or { in the line below marked --->.

  2. Now type the  %  character.

  3. The cursor will move to the matching parenthesis or bracket.

  4. Type  %  to move the cursor to the other matching bracket.

  5. Move the cursor to another (,),[,],{ or } and see what  %  does.

---> This ( is a test line with ('s, ['s ] and {'s } in it. ))


NOTE: This is very useful in debugging a program with unmatched parentheses!



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		      Lesson 4.4: THE SUBSTITUTE COMMAND


	** Type  :s/old/new/g  to substitute 'new' for 'old'. **

  1. Move the cursor to the line below marked --->.

  2. Type  :s/thee/the <ENTER>  .  Note that this command only changes the
     first occurrence of "thee" in the line.

  3. Now type  :s/thee/the/g .  Adding the  g  flag means to substitute
     globally in the line, change all occurrences of "thee" in the line.

---> thee best time to see thee flowers is in thee spring.

  4. To change every occurrence of a character string between two lines,
     type   :#,#s/old/new/g    where #,# are the line numbers of the range
                               of lines where the substitution is to be done.
     Type   :%s/old/new/g      to change every occurrence in the whole file.
     Type   :%s/old/new/gc     to find every occurrence in the whole file,
     			       with a prompt whether to substitute or not.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       Lesson 4 SUMMARY


  1. CTRL-G  displays your location in the file and the file status.
             G  moves to the end of the file.
     number  G  moves to that line number.
            gg  moves to the first line.

  2. Typing  /	followed by a phrase searches FORWARD for the phrase.
     Typing  ?	followed by a phrase searches BACKWARD for the phrase.
     After a search type  n  to find the next occurrence in the same direction
     or  N  to search in the opposite direction.
     CTRL-O takes you back to older positions, CTRL-I to newer positions.

  3. Typing  %	while the cursor is on a (,),[,],{, or } goes to its match.

  4. To substitute new for the first old in a line type    :s/old/new
     To substitute new for all 'old's on a line type	   :s/old/new/g
     To substitute phrases between two line #'s type	   :#,#s/old/new/g
     To substitute all occurrences in the file type	   :%s/old/new/g
     To ask for confirmation each time add 'c'		   :%s/old/new/gc

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		Lesson 5.1: HOW TO EXECUTE AN EXTERNAL COMMAND


   ** Type  :!	followed by an external command to execute that command. **

  1. Type the familiar command	:  to set the cursor at the bottom of the
     screen.  This allows you to enter a command-line command.

  2. Now type the  !  (exclamation point) character.  This allows you to
     execute any external shell command.

  3. As an example type   ls   following the ! and then hit <ENTER>.  This
     will show you a listing of your directory, just as if you were at the
     shell prompt.  Or use  :!dir  if ls doesn't work.

NOTE:  It is possible to execute any external command this way, also with
       arguments.

NOTE:  All  :  commands must be finished by hitting <ENTER>
       From here on we will not always mention it.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		      Lesson 5.2: MORE ON WRITING FILES


     ** To save the changes made to the text, type  :w FILENAME  **

  1. Type  :!dir  or  :!ls  to get a listing of your directory.
     You already know you must hit <ENTER> after this.

  2. Choose a filename that does not exist yet, such as TEST.

  3. Now type:	 :w TEST   (where TEST is the filename you chose.)

  4. This saves the whole file (the Vim Tutor) under the name TEST.
     To verify this, type    :!dir  or  :!ls   again to see your directory.

NOTE: If you were to exit Vim and start it again with  vim TEST , the file
      would be an exact copy of the tutor when you saved it.

  5. Now remove the file by typing (Windows):   :!del TEST
				or (Unix):	:!rm TEST


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		    Lesson 5.3: SELECTING TEXT TO WRITE


	** To save part of the file, type  v  motion  :w FILENAME **

  1. Move the cursor to this line.

  2. Press  v  and move the cursor to the fifth item below.  Notice that the
     text is highlighted.

  3. Press the  :  character.  At the bottom of the screen  :'<,'> will appear.

  4. Type  w TEST  , where TEST is a filename that does not exist yet.  Verify
     that you see  :'<,'>w TEST  before you press <ENTER>.

  5. Vim will write the selected lines to the file TEST.  Use  :!dir  or  :!ls
     to see it.  Do not remove it yet!  We will use it in the next lesson.

NOTE:  Pressing  v  starts Visual selection.  You can move the cursor around
       to make the selection bigger or smaller.  Then you can use an operator
       to do something with the text.  For example,  d  deletes the text.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		   Lesson 5.4: RETRIEVING AND MERGING FILES


       ** To insert the contents of a file, type  :r FILENAME  **

  1. Place the cursor just above this line.

NOTE:  After executing Step 2 you will see text from lesson 5.3.  Then move
       DOWN to see this lesson again.

  2. Now retrieve your TEST file using the command   :r TEST   where TEST is
     the name of the file you used.
     The file you retrieve is placed below the cursor line.

  3. To verify that a file was retrieved, cursor back and notice that there
     are now two copies of lesson 5.3, the original and the file version.

NOTE:  You can also read the output of an external command.  For example,
       :r !ls  reads the output of the ls command and puts it below the
       cursor.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       Lesson 5 SUMMARY


  1.  :!command  executes an external command.

      Some useful examples are:
	 (Windows)	  (Unix)
	  :!dir		   :!ls		   -  shows a directory listing.
	  :!del FILENAME   :!rm FILENAME   -  removes file FILENAME.

  2.  :w FILENAME  writes the current Vim file to disk with name FILENAME.

  3.  v  motion  :w FILENAME  saves the Visually selected lines in file
      FILENAME.

  4.  :r FILENAME  retrieves disk file FILENAME and puts it below the
      cursor position.

  5.  :r !dir  reads the output of the dir command and puts it below the
      cursor position.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			 Lesson 6.1: THE OPEN COMMAND


 ** Type  o  to open a line below the cursor and place you in Insert mode. **

  1. Move the cursor to the first line below marked --->.

  2. Type the lowercase letter  o  to open up a line BELOW the cursor and place
     you in Insert mode.

  3. Now type some text and press <ESC> to exit Insert mode.

---> After typing  o  the cursor is placed on the open line in Insert mode.

  4. To open up a line ABOVE the cursor, simply type a capital	O , rather
     than a lowercase  o.  Try this on the line below.

---> Open up a line above this by typing O while the cursor is on this line.




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Lesson 6.2: THE APPEND COMMAND


	     ** Type  a  to insert text AFTER the cursor. **

  1. Move the cursor to the start of the first line below marked --->.

  2. Press  e  until the cursor is on the end of  li .

  3. Type an  a  (lowercase) to append text AFTER the cursor.

  4. Complete the word like the line below it.  Press <ESC> to exit Insert
     mode.

  5. Use  e  to move to the next incomplete word and repeat steps 3 and 4.

---> This li will allow you to pract appendi text to a line.
---> This line will allow you to practice appending text to a line.

NOTE:  a, i and A all go to the same Insert mode, the only difference is where
       the characters are inserted.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		    Lesson 6.3: ANOTHER WAY TO REPLACE


      ** Type a capital  R  to replace more than one character. **

  1. Move the cursor to the first line below marked --->.  Move the cursor to
     the beginning of the first  xxx .

  2. Now press  R  and type the number below it in the second line, so that it
     replaces the xxx .

  3. Press <ESC> to leave Replace mode.  Notice that the rest of the line
     remains unmodified.

  4. Repeat the steps to replace the remaining xxx.

---> Adding 123 to xxx gives you xxx.
---> Adding 123 to 456 gives you 579.

NOTE:  Replace mode is like Insert mode, but every typed character deletes an
       existing character.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Lesson 6.4: COPY AND PASTE TEXT


	  ** Use the  y  operator to copy text and  p  to paste it **

  1. Move to the line below marked ---> and place the cursor after "a)".

  2. Start Visual mode with  v  and move the cursor to just before "first".

  3. Type  y  to yank (copy) the highlighted text.

  4. Move the cursor to the end of the next line:  j$

  5. Type  p  to put (paste) the text.  Then type:  a second <ESC> .

  6. Use Visual mode to select " item.", yank it with  y , move to the end of
     the next line with  j$  and put the text there with  p .

--->  a) this is the first item.
      b)

  NOTE: You can also use  y  as an operator:  yw  yanks one word,
        yy  yanks the whole line, then  p  puts that line.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			    Lesson 6.5: SET OPTION


	  ** Set an option so a search or substitute ignores case **

  1. Search for 'ignore' by entering:  /ignore <ENTER>
     Repeat several times by pressing  n .

  2. Set the 'ic' (Ignore case) option by entering:   :set ic

  3. Now search for 'ignore' again by pressing  n
     Notice that Ignore and IGNORE are now also found.

  4. Set the 'hlsearch' and 'incsearch' options:  :set hls is

  5. Now type the search command again and see what happens:  /ignore <ENTER>

  6. To disable ignoring case enter:  :set noic

NOTE:  To remove the highlighting of matches enter:   :nohlsearch
NOTE:  If you want to ignore case for just one search command, use  \c
       in the phrase:  /ignore\c <ENTER>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       Lesson 6 SUMMARY

  1. Type  o  to open a line BELOW the cursor and start Insert mode.
     Type  O  to open a line ABOVE the cursor.

  2. Type  a  to insert text AFTER the cursor.
     Type  A  to insert text after the end of the line.

  3. The  e  command moves to the end of a word.

  4. The  y  operator yanks (copies) text,  p  puts (pastes) it.

  5. Typing a capital  R  enters Replace mode until  <ESC>  is pressed.

  6. Typing ":set xxx" sets the option "xxx".  Some options are:
  	'ic' 'ignorecase'	ignore upper/lower case when searching
	'is' 'incsearch'	show partial matches for a search phrase
	'hls' 'hlsearch'	highlight all matching phrases
     You can either use the long or the short option name.

  7. Prepend "no" to switch an option off:   :set noic

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		       Lesson 7.1: GETTING HELP


		      ** Use the on-line help system **

  Vim has a comprehensive on-line help system.  To get started, try one of
  these three:
	- press the <HELP> key (if you have one)
	- press the <F1> key (if you have one)
	- type   :help <ENTER>

  Read the text in the help window to find out how the help works.
  Type  CTRL-W CTRL-W   to jump from one window to another.
  Type    :q <ENTER>    to close the help window.

  You can find help on just about any subject, by giving an argument to the
  ":help" command.  Try these (don't forget pressing <ENTER>):

	:help w
	:help c_CTRL-D
	:help insert-index
	:help user-manual
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		      Lesson 7.2: CREATE A STARTUP SCRIPT


			  ** Enable Vim features **

  Vim has many more features than Vi, but most of them are disabled by
  default.  To start using more features you should create a "vimrc" file.

  1. Start editing the "vimrc" file.  This depends on your system:
	:e ~/.vimrc		for Unix
	:e ~/_vimrc		for Windows

  2. Now read the example "vimrc" file contents:
	:r $VIMRUNTIME/vimrc_example.vim

  3. Write the file with:
	:w

  The next time you start Vim it will use syntax highlighting.
  You can add all your preferred settings to this "vimrc" file.
  For more information type  :help vimrc-intro

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			     Lesson 7.3: COMPLETION


	      ** Command line completion with CTRL-D and <TAB> **

  1. Make sure Vim is not in compatible mode:  :set nocp

  2. Look what files exist in the directory:  :!ls   or  :!dir

  3. Type the start of a command:  :e

  4. Press  CTRL-D  and Vim will show a list of commands that start with "e".

  5. Type  d<TAB>  and Vim will complete the command name to ":edit".

  6. Now add a space and the start of an existing file name:  :edit FIL

  7. Press <TAB>.  Vim will complete the name (if it is unique).

NOTE:  Completion works for many commands.  Just try pressing CTRL-D and
       <TAB>.  It is especially useful for  :help .

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       Lesson 7 SUMMARY


  1. Type  :help  or press <F1> or <HELP>  to open a help window.

  2. Type  :help cmd  to find help on  cmd .

  3. Type  CTRL-W CTRL-W  to jump to another window.

  4. Type  :q  to close the help window.

  5. Create a vimrc startup script to keep your preferred settings.

  6. When typing a  :  command, press CTRL-D to see possible completions.
     Press <TAB> to use one completion.







~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  This concludes the Vim Tutor.  It was intended to give a brief overview of
  the Vim editor, just enough to allow you to use the editor fairly easily.
  It is far from complete as Vim has many many more commands.  Read the user
  manual next: ":help user-manual".

  For further reading and studying, this book is recommended:
	Vim - Vi Improved - by Steve Oualline
	Publisher: New Riders
  The first book completely dedicated to Vim.  Especially useful for beginners.
  There are many examples and pictures.
  See https://iccf-holland.org/click5.html

  This book is older and more about Vi than Vim, but also recommended:
	Learning the Vi Editor - by Linda Lamb
	Publisher: O'Reilly & Associates Inc.
  It is a good book to get to know almost anything you want to do with Vi.
  The sixth edition also includes information on Vim.

  This tutorial was written by Michael C. Pierce and Robert K. Ware,
  Colorado School of Mines using ideas supplied by Charles Smith,
  Colorado State University.  E-mail: bware@mines.colorado.edu.

  Modified for Vim by Bram Moolenaar.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                                                                                                                 usr/share/vim/vim90/tutor/tutor.vi.utf-8                                                            0000644 0000000 0000000 00000077120 14424703754 016573  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        ﻿===============================================================================
=    Xin chào mừng bạn đến với Hướng dẫn dùng Vim    -    Phiên bản 1.5      =
===============================================================================
	Vim là một trình soạn thảo rất mạnh. Vim có rất nhiều câu lệnh,
	chính vì thế không thể trình bày hết được trong cuốn hướng dẫn này.
	Cuốn hướng dẫn chỉ đưa ra những câu lệnh để giúp bạn sử dụng Vim
	được dễ dàng hơn. Đây cũng chính là mục đich của sách

	Cần khoảng 25-30 phút để hoàn thành bài học, phụ thuộc vào thời
	gian thực hành.

	Các câu lệnh trong bài học sẽ thay đổi văn bản này. Vì thế hãy tạo
	một bản sao của tập tin này để thực hành (nếu bạn dùng "vimtutor"
	thì đây đã là bản sao).

	Hãy nhớ rằng hướng dẫn này viết với nguyên tắc "học đi đôi với hành".
	Có nghĩa là bạn cần chạy các câu lệnh để học chúng. Nếu chỉ đọc, bạn
	sẽ quên các câu lệnh!

	Bây giờ, cần chắc chắn là phím Shift KHÔNG bị nhấn và hãy nhấn phím
	j đủ số lần cần thiết (di chuyển con trỏ) để Bài 1.1 hiện ra đầy đủ
	trên màn hình.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Bài 1.1:  DI CHUYỂN CON TRỎ


   ** Để di chuyển con trỏ, nhấn các phím h,j,k,l như đã chỉ ra. **
	     ^
	     k		    Gợi ý:  phím h ở phía trái và di chuyển sang trái.
	< h	l >		   phím l ở bên phải và di chuyển sang phải.
	     j			   phím j trong như một mũi tên chỉ xuống
	     v
  1. Di chuyển con trỏ quanh màn hình cho đến khi bạn quen dùng.

  2. Nhấn và giữ phím (j) cho đến khi nó lặp lại.
---> Bây giờ bạn biết cách chuyển tới bài học thứ hai.

  3. Sử dụng phím di chuyển xuống bài 1.2.

Chú ý: Nếu bạn không chắc chắn về những gì đã gõ, hãy nhấn <ESC> để chuyển vào
	 chế độ Câu lệnh, rồi gõ lại những câu lệnh mình muốn.

Chú ý: Các phím mũi tên cũng làm việc. Nhưng một khi sử dụng thành thạo hjkl,
	 bạn sẽ di chuyển con trỏ nhanh hơn so với các phím mũi tên.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     Bài 1.2: VÀO VÀ THOÁT VIM


  !! CHÚ Ý: Trước khi thực hiện bất kỳ lệnh nào, xin hãy đọc cả bài học này!!

  1. Nhấn phím <ESC> (để chắc chắn là bạn đang ở chế độ Câu lệnh).

  2. Gõ:			:q! <ENTER>.

---> Lệnh này sẽ thoát trình soạn thảo mà KHÔNG ghi nhớ bất kỳ thay đổi nào mà bạn đã làm.
     Nếu bạn muốn ghi nhớ những thay đổi đó và thoát thì hãy gõ:
				:wq  <ENTER>

  3. Khi thấy dấu nhắc shell, hãy gõ câu lệnh đã đưa bạn tới hướng dẫn này. Có
	 thể là lệnh:	vimtutor vi <ENTER>
     Thông thường bạn dùng:	vim tutor.vi<ENTER>

---> 'vim' là trình soạn thảo vim, 'tutor.vi' là tập tin bạn muốn soạn thảo.

  4. Nếu bạn đã nhớ và nắm chắc những câu lệnh trên, hãy thực hiện các bước từ
	 1 tới 3 để thoát và quay vào trình soạn thảo. Sau đó di chuyển con trỏ
	 tới Bài 1.3.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     Bài 1.3: SOẠN THẢO VĂN BẢN - XÓA


** Trong chế độ Câu lệnh nhấn	x  để xóa ký tự nằm dưới con trỏ. **

  1. Di chuyển con trỏ tới dòng có dấu --->.

  2. Để sửa lỗi, di chuyển con trỏ để nó nằm trên ký tự sẽ bị
	 xóa.

  3. Nhấn phím	x  để xóa ký tự không mong muốn.

  4. Lặp lại các bước từ 2 tới 4 để sửa lại câu.

---> Emm xiinh em đứnng chỗ nào cũnkg xinh.

  5. Câu trên đã sửa xong, hãy chuyển tới Bài 1.4.

Chú ý: Khi học theo cuốn hướng dẫn này đừng cố nhớ, mà học từ thực hành.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     Bài 1.4: SOẠN THẢO VĂN BẢN - CHÈN


	 ** Trong chế độ Câu lệnh nhấn  i  để chèn văn bản. **

  1. Di chuyển con trỏ tới dòng có dấu ---> đầu tiên.

  2. Để dòng thứ nhất giống hệt với dòng thứ hai, di chuyển con trỏ lên ký tự
	 đầu tiên NGAY SAU chỗ muốn chèn văn bản.

  3. Nhấn	i	và gõ văn bản cần thêm.

  4. Sau mỗi lần chèn từ còn thiếu nhấn <ESC> để trở lại chế dộ Câu lệnh.
     Lặp lại các bước từ 2 tới 4 để sửa câu này.

---> Mot lam chang nen , ba cay chum lai hon cao.
---> Mot cay lam chang nen non, ba cay chum lai nen hon nui cao.

  5. Sau khi thấy quen với việc chèn văn bản hãy chuyển tới phần tổng kết
	 ở dưới.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       TỔNG KẾT BÀI 1


  1. Con trỏ được di chuyển bởi các phím mũi tên hoặc các phím hjkl.
	 h (trái)	j (xuống)       k (lên)	    l (phải)

  2. Để vào Vim (từ dấu nhắc %) gõ:  vim TÊNTẬPTIN <ENTER>

  3. Muốn thoát Vim gõ:	   <ESC>   :q!	 <ENTER>  để vứt bỏ mọi thay đổi.
	     HOẶC gõ:	   <ESC>   :wq	 <ENTER>  để ghi nhớ thay đổi.

  4. Để xóa bỏ ký tự nằm dưới con trỏ trong chế độ Câu lệnh gõ:  x

  5. Để chèn văn bản tại vị trí con trỏ trong chế độ Câu lệnh gõ:
	 i     văn bản sẽ nhập	<ESC>

CHÚ Ý: Nhấn <ESC> sẽ đưa bạn vào chế độ Câu lệnh hoặc sẽ hủy bỏ một câu lệnh
	 hay đoạn câu lệnh không mong muốn.

Bây giờ chúng ta tiếp tục với Bài 2.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Bài 2.1: CÁC LỆNH XÓA


	    ** Gõ	dw	để xóa tới cuối một từ. **

  1. Nhấn  <ESC>  để chắc chắn là bạn đang trong chế độ Câu lệnh.

  2. Di chuyển con trỏ tới dòng có dấu --->.

  3. Di chuyển con trỏ tới ký tự đầu của từ cần xóa.

  4. Gõ   dw	 để làm từ đó biến mất.

  CHÚ Ý: các ký tự dw sẽ xuất hiện trên dòng cuối cùng của màn hình khi bạn gõ
	 chúng. Nếu bạn gõ nhầm, hãy nhấn <ESC> và làm lại từ đầu.

---> Khi trái tỉm tìm tim ai như mùa đông giá lạnh lanh
	 Anh đâu thành cánh én nhỏ trùng khơi.

  5. Lặp lại các bước cho đến khi sửa xong câu thơ rồi chuyển tới Bài 2.2.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		      Bài 2.2: CÁC CÂU LỆNH XÓA KHÁC


	   ** gõ  d$	để xóa tới cuối một dòng. **

  1. Nhấn  <ESC>  để chắc chắn là bạn đang trong chế độ Câu lệnh.

  2. Di chuyển con trỏ tới dòng có dấu --->.

  3. Di chuyển con trỏ tới cuối câu đúng (SAU dấu . đầu tiên).

  4. Gõ    d$    để xóa tới cuối dòng.

---> Đã qua đi những tháng năm khờ dại. thừa thãi.


  5. Chuyển tới Bài 2.3 để hiểu cái gì đang xảy ra.





~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     Bài 2.3: CÂU LỆNH VÀ ĐỐI TƯỢNG


  Câu lệnh xóa	d	có dạng như sau:

	 [số]   d	đối_tượng	    HOẶC	     d	 [số]   đối_tượng
  Trong đó:
    số - là số lần thực hiện câu lệnh (không bắt buộc, mặc định=1).
    d - là câu lệnh xóa.
    đối_tượng - câu lệnh sẽ thực hiện trên chúng (liệt kê phía dưới).

  Danh sách ngắn của đối tượng:
    w - từ con trỏ tới cuối một từ, bao gồm cả khoảng trắng.
    e - từ con trỏ tới cuối một từ, KHÔNG bao gồm khoảng trắng.
    $ - từ con trỏ tới cuối một dòng.

CHÚ Ý:  Dành cho những người ham tìm hiểu, chỉ nhấn đối tượng trong chế độ Câu
	 lệnh mà không có câu lệnh sẽ di chuyển con trỏ như trong danh sách trên.




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		Bài 2.4: TRƯỜNG HỢP NGOẠI LỆ CỦA QUY LUẬT  'CÂU LỆNH-ĐỐI TƯỢNG'


	       ** Gõ	 dd   để xóa cả một dòng. **

  Người dùng thường xuyên xóa cả một dòng, vì thế các nhà phát triển Vi đã
  quyết định dùng hai chữ d để đơn giản hóa thao tác này.

  1. Di chuyển con trỏ tới dòng thứ hai trong cụm phía dưới.
  2. Gõ dd để xóa dòng này.
  3. Bây giờ di chuyển tới dòng thứ  tư.
  4. Gõ   2dd   (hãy nhớ lại bộ ba  số-câu lệnh-đối tượng) để xóa hai dòng.

	 1) Trong tim em khắc sâu bao kỉ niệm
	 2) Tình yêu chân thành em dành cả cho anh
	 3) Dẫu cuộc đời như bể dâu thay đổi
	 4) Anh mãi là ngọn lửa ấm trong đêm
	 5) Đã qua đi những tháng năm khờ dại
	 7) Hãy để tự em lau nước mắt của mình
	 8) Lặng lẽ sống những đêm dài bất tận
	 9) Bao khổ đau chờ tia nắng bình minh

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			 Bài 2.5: CÂU LỆNH "HỦY THAO TÁC"


   ** Nhấn  u	để hủy bỏ những câu lệnh cuối cùng,   U	 để sửa cả một dòng. **

  1. Di chuyển con trỏ tới dòng có dấu ---> và đặt con trỏ trên từ có lỗi
	 đầu tiên
  2. Gõ  x  để xóa chữ cái gây ra lỗi đầu tiên.
  3. Bây giờ gõ  u  để hủy bỏ câu lệnh vừa thự hiện (xóa chữ cái).
  4. Dùng câu lệnh	x	để sửa lỗi cả dòng này.
  5. Bây giờ gõ chữ  U  hoa để phục hồi trạng thái ban đầu của dòng.
  6. Bây giờ gõ  u  vài lần để hủy bỏ câu lệnh  U  và các câu lệnh trước.
  7. Bây giờ gõ CTRL-R (giữ phím CTRL và gõ R) và lầu để thực hiện
     lại các câu lệnh (hủy bỏ các câu lệnh hủy bỏ).

---> Câyy ccó cộii, nuước csó nguuồn.

  8. Đây là những câu lệnh rất hữu ích.  Bây giờ chuyển tới Tổng kết Bài 2.




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       TỔNG KẾT BÀI 2


  1. Để xóa từ con trỏ tới cuối một từ gõ:    dw

  2. Để xóa từ con trỏ tới cuối một dòng gõ:    d$

  3. Để xóa cả một dòng gõ:    dd

  4. Một câu lệnh trong chế độ Câu lệnh có dạng:

       [số]   câu_lệnh   đối_tượng     HOẶC     câu_lệnh	[số]   đối_tượng
     trong đó:
		số - là số lần thực hiện câu lệnh (không bắt buộc, mặc định=1).
		câu_lệnh - là những gì thực hiện, ví dụ	d	dùng để xóa.
		đối_tượng - câu lệnh sẽ thực hiện trên chúng, ví dụ	w (từ),
       	$ (tới cuối một dòng), v.v...

  5. Để hủy bỏ thao tác trước, gõ:	     u	 (chữ u thường)
     Để hủy bỏ tất cả các thao tác trên một dòng, gõ: U	 (chữ U hoa)
     Để hủy bỏ các câu lệnh hủy bỏ, gõ:		     CTRL-R

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			 Bài 3.1: CÂU LỆNH DÁN


       ** Gõ	p  để dán những gì vừa xóa tới sau con trỏ. **

  1. Di chuyển con trỏ tới dòng đầu tiên trong cụm ở dưới.

  2. Gõ  dd  để xóa và ghi lại một dòng trong bộ nhớ đệm của Vim.

  3. Di chuyển con trỏ tới dòng Ở TRÊN chỗ cần dán.

  4. Trong chế độ Câu lệnh, gõ    p	 để thay thế dòng.

  5. Lặp lại các bước từ 2 tới 4 để đặt các dòng theo đúng thứ tự của chúng.

     d) Niềm vui như gió xưa bay nhè nhẹ
     b) Em vẫn mong anh sẽ đến với em
     c) Đừng để em mất đi niềm hy vọng đó
     a) Ai sẽ giúp em vượt qua sóng gió
	 e) Dễ ra đi khó giữ lại bên mình


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		       Bài 3.2: CÂU LỆNH THAY THẾ


  ** Gõ  r  và một ký tự để thay thế ký tự nằm dưới con trỏ. **

  1. Di chuyển con trỏ tới dòng có dấu --->.

  2. Di chuyển con trỏ tới ký tự gõ sai đầu tiên.

  3. Gõ   r	và ký tự đúng.

  4. Lặp lại các bước từ 2 đến 4 để sửa cả dòng.

--->  "Trên đời nài làm gì có đườmg, người to đi mãi rồi thànk đường là tHôi"
--->  "Trên đời này làm gì có đường, người ta đi mãi rồi thành đường mà thôi"

  5. Bây giờ chuyển sang Bài 3.3.

CHÚ Ý: Hãy nhớ rằng bạn cần thực hành, không nên "học vẹt".



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Bài 3.3: CÂU LỆNH THAY ĐỔI


	   ** Để thay đổi một phần hay cả một từ, gõ  cw . **

  1. Di chuyển con trỏ tới dòng có dấu --->.

  2. Đặt con trỏ trên chữ trong.

  3. Gõ  cw  và sửa lại từ (trong trường hợp này, gõ  'ine'.)

  4. Gõ <ESC> và chuyển tới lỗi tiếp theo (chữ cái đầu tiên trong số cần thay.)

  5. Lặp lại các bước 3 và 4 cho tới khi thu được dòng như dòng thứ hai.

---> Trên dùgn này có một dầy từ cần tyays đổi, sử dunk câu lệnh thay đổi.
---> Trên dong này có một vai từ cần thay đổi, sử dung câu lệnh thay đổi.

Chú ý rằng  cw  không chỉ thay đổi từ, nhưng còn đưa bạn vào chế độ chèn.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		       Bài 3.4: TIẾP TỤC THAY ĐỔI VỚI c


     ** Câu lệnh thay đổi được sử dụng với cùng đối tượng như câu lệnh xóa. **

  1. Câu lệnh thay đổi làm việc tương tự như câu lệnh xóa. Định dạng như sau:

        [số]   c   đối_tượng     HOẶC     c	[số]   đối_tượng

  2. Đối tượng cũng giống như ở trên, ví dụ   w (từ), $ (cuối dòng), v.v...

  3. Di chuyển con trỏ tới dòng có dấu --->.

  4. Di chuyển con trỏ tới dòng có lỗi đầu tiên.

  5. Gõ  c$  để sửa cho giống với dòng thứ hai và gõ <ESC>.

---> Doan cuoi dong nay can sua de cho giong voi dong thu hai.
---> Doan cuoi dong nay can su dung cau lenh c$ de sua.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       TỔNG KẾT BÀI 3


  1. Để dán đoạn văn bản vừa xóa, gõ p. Câu lệnh này sẽ đặt đoạn văn bản này
	 PHÍA SAU con trỏ (nếu một dòng vừa bị xóa, dòng này sẽ được đặt vào dòng
	 nằm dưới con trỏ).

  2. Để thay thế ký tự dưới con trỏ, gõ   r   và sau đó gõ
     ký tự muốn thay vào.

  3. Câu lệnh thay đổi cho phép bạn thay đổi đối tượng chỉ ra từ con
     trỏ tới cuối đối tượng.  vd. Gõ  cw  để thay đổi từ
     con trỏ tới cuối một từ, c$	để thay đổi tới cuối một dòng.

  4. Định dạng để thay đổi:

	[số]   c   đối_tượng     HOẶC     c	[số]   đối_tượng

Bây giờ chúng ta tiếp tục bài học mới.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		     Bài 4.1: THÔNG TIN VỀ TẬP TIN VÀ VỊ TRÍ TRONG TẬP TIN


  ** Gõ CTRL-g để hiển thị vị trí của bạn trong tập tin và thông tin về tập tin.
     Gõ SHIFT-G để chuyển tới một dòng trong tập tin. **

  Chú ý: Đọc toàn bộ bài học này trước khi thực hiện bất kỳ bước nào!!

  1. Giữ phím Ctrl và nhấn  g .  Một dòng thông tin xuất hiện tại cuối trang
     với tên tập tin và dòng mà bạn đang nằm trên.  Hãy nhớ số dòng này
     Cho bước số 3.

  2. Nhấn shift-G để chuyển tới cuối tập tin.

  3. Gõ số dòng mà bạn đã nằm trên và sau đó shift-G.  Thao tác này sẽ đưa bạn
     trở lại dòng mà con trỏ đã ở trước khi nhấn tổ hợp Ctrl-g.
     (Khi bạn gõ số, chúng sẽ KHÔNG hiển thị trên màn hình.)

  4. Nếu bạn cảm thấy đã hiểu rõ, hãy thực hiện các bước từ 1 tới 3.



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			Bài 4.2: CÂU LỆNH TÌM KIẾM


     ** Gõ  /  và theo sau là cụm từ muốn tìm kiếm. **

  1. Trong chế độ Câu lệnh gõ ký tự  /  .Chú ý rằng ký tự này  và con trỏ sẽ
	 xuất hiện tại cuối màn hình giống như câu lệnh  :	.

  2. Bây giờ gõ 'loiiiii' <ENTER>.  Đây là từ bạn muốn tìm.

  3. Để tìm kiếm cụm từ đó lần nữa, đơn giản gõ  n .
     Để tìm kiếm cụm từ theo hướng ngược lại, gõ  Shift-N .

  4. Nếu bạn muối tìm kiếm cụm từ theo hướng ngược lại đầu tập tin, sử dụng
     câu lệnh  ?  thay cho /.

---> "loiiiii" là những gì không đúng lắm;  loiiiii thường xuyên xảy ra.

Chú ý: Khi tìm kiếm đến cuối tập tin, việc tìm kiếm sẽ tiếp tục từ đầu
      tập tin này.


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		   Bài 4.3: TÌM KIẾM CÁC DẤU NGOẶC SÁNH ĐÔI


	      ** Gõ  %  để tìm kiếm ),], hay } . **

  1. Đặt con trỏ trên bất kỳ một (, [, hay { nào trong dòng có dấu --->.

  2. Bây giờ gõ ký tự  %  .

  3. Con trỏ sẽ di chuyển đến dấu ngoặc tạo cặp (dấu đóng ngoặc).

  4. Gõ  %  để chuyển con trỏ trở lại dấu ngoặc đầu tiên (dấu mở ngoặc).

---> Đây là ( một dòng thử nghiệm với các dấu ngoặc (, [ ] và { } . ))

Chú ý: Rất có ích khi sửa lỗi chương trình, khi có các lỗi thừa thiếu dấu ngoặc!






~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		      Bài 4.4: MỘT CÁCH SỬA LỖI


	** Gõ  :s/cũ/mới/g  để thay thế 'mới' vào 'cũ'. **

  1. Di chuyển con trỏ tới dòng có dấu --->.

  2. Gõ  :s/duou/ruou <ENTER> .  Chú ý rằng câu lệnh này chỉ thay đổi từ tìm
     thấy đầu tiên trên dòng (từ 'duou' đầu dòng).

  3. Bây giờ gõ	 :s/duou/ruou/g	   để thực hiện thay thế trên toàn bộ dòng.
     Lệnh này sẽ thay thế tất cả những từ ('duou') tìm thấy trên dòng.

---> duou ngon phai co ban hie. Khong duou cung khong hoa.

  4. Để thay thế thực hiện trong đoạn văn bản giữa hai dòng,
     gõ   :#,#s/cũ/mới/g    trong đó #,# là số thứ tự của hai dòng.
     Gõ   :%s/cũ/mới/g    để thực hiện thay thế trong toàn bộ tập tin.




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			       TỔNG KẾT BÀI 4


  1. Ctrl-g  vị trí của con trỏ trong tập tin và thông tin về tập tin.
     Shift-G  di chuyển con trỏ tới cuối tập tin.  Số dòng và theo sau
     là  Shift-G  di chuyển con trỏ tới dòng đó.

  2. Gõ  /	và cụm từ theo sau để tìm kiếm cụm từ VỀ PHÍA TRƯỚC.
     Gõ  ?	và cụm từ theo sau để tìm kiếm cụm từ NGƯỢC TRỞ LẠI.
     Sau một lần tìm kiếm gõ  n  để tìm kiếm cụm từ lại một lần nữa theo hướng
     đã tìm hoặc  Shift-N  để tìm kiếm theo hướng ngược lại.

  3. Gõ  %	khi con trỏ nằm trên một  (,),[,],{, hay }  sẽ chỉ ra vị trí của
     dấu ngoặc còn lại trong cặp.

  4. Để thay thế 'mới' cho 'cũ' đầu tiên trên dòng, gõ    :s/cũ/mới
     Để thay thế 'mới' cho tất cả 'cũ' trên dòng, gõ	   :s/cũ/mới/g
     Để thay thế giữa hai dòng, gõ	   :#,#s/cũ/mới/g
     Để thay thế trong toàn bộ tập tin, gõ	   :%s/cũ/mới/g
     Để chương trình hỏi lại trước khi thay thế, thêm 'c'	:%s/cũ/mới/gc


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		Lesson 5.1: CÁCH THỰC HIỆN MỘT CÂU LỆNH NGOẠI TRÚ


   ** Gõ  :!	theo sau là một câu lệnh ngoại trú để thực hiện câu lệnh đó. **

  1. Gõ câu lệnh quen thuộc	:  để đặt con trỏ tại cuối màn hình.
     Thao tác này cho phép bạn nhập một câu lệnh.

  2. Bây giờ gõ ký tự  !  (chấm than).  Ký tự này cho phép bạn
     thực hiện bất kỳ một câu lệnh shell nào.

  3. Ví dụ gõ   ls   theo sau dấu ! và gõ <ENTER>.  Lệnh này
	 sẽ hiển thị nội dung của thư mục hiện thời, hoặc sử dụng
     lệnh   :!dir	nếu ls không làm việc.

Chú ý:  Có thể thực hiện bất kỳ câu lệnh ngoại trú nào theo cách này.

Chú ý:  Tất cả các câu lệnh  :  cần kết thúc bởi phím <ENTER>




~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		      Bài 5.2: GHI LẠI CÁC TẬP TIN


     ** Để ghi lại các thay đổi, gõ  :w TÊNTỆPTIN. **

  1. Gõ  :!dir  hoặc  :!ls  để lấy bảng liệt kê thư mục hiện thời.
     Như bạn đã biết, bạn cần gõ <ENTER> để thực hiện.

  2. Chọn một tên tập tin chưa có, ví dụ TEST.

