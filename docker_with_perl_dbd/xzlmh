=head2 Pod::Simple::Subclassing -- write a formatter as a Pod::Simple
subclass

=over 4

=item SYNOPSIS

=item DESCRIPTION

Pod::Simple, Pod::Simple::Methody, Pod::Simple::PullParser,
Pod::Simple::SimpleTree

=item Events

C<< $parser->_handle_element_start( I<element_name>, I<attr_hashref> ) >>,
C<< $parser->_handle_element_end( I<element_name>  ) >>, C<<
$parser->_handle_text(	I<text_string>	) >>, events with an element_name
of Document, events with an element_name of Para, events with an
element_name of B, C, F, or I, events with an element_name of S, events
with an element_name of X, events with an element_name of L, events with an
element_name of E or Z, events with an element_name of Verbatim, events
with an element_name of head1 .. head4, events with an element_name of
encoding, events with an element_name of over-bullet, events with an
element_name of over-number, events with an element_name of over-text,
events with an element_name of over-block, events with an element_name of
over-empty, events with an element_name of item-bullet, events with an
element_name of item-number, events with an element_name of item-text,
events with an element_name of for, events with an element_name of Data

=item More Pod::Simple Methods

C<< $parser->accept_targets( I<SOMEVALUE> ) >>, C<<
$parser->accept_targets_as_text(  I<SOMEVALUE>	) >>, C<<
$parser->accept_codes( I<Codename>, I<Codename>...  ) >>, C<<
$parser->accept_directive_as_data( I<directive_name> ) >>, C<<
$parser->accept_directive_as_verbatim( I<directive_name> ) >>, C<<
$parser->accept_directive_as_processed( I<directive_name> ) >>, C<<
$parser->nbsp_for_S( I<BOOLEAN> ); >>, C<< $parser->version_report() >>,
C<< $parser->pod_para_count() >>, C<< $parser->line_count() >>, C<<
$parser->nix_X_codes(  I<SOMEVALUE>  ) >>, C<<
$parser->keep_encoding_directive(  I<SOMEVALUE>  ) >>, C<<
$parser->merge_text(  I<SOMEVALUE>  ) >>, C<< $parser->code_handler( 
I<CODE_REF>  ) >>, C<< $parser->cut_handler(  I<CODE_REF>  ) >>, C<<
$parser->pod_handler(  I<CODE_REF>  ) >>, C<< $parser->whiteline_handler( 
I<CODE_REF>  ) >>, C<< $parser->whine( I<linenumber>, I<complaint string> )
>>, C<< $parser->scream( I<linenumber>, I<complaint string> ) >>, C<<
$parser->source_dead(1) >>, C<< $parser->hide_line_numbers( I<SOMEVALUE> )
>>, C<< $parser->no_whining( I<SOMEVALUE> ) >>, C<<
$parser->no_errata_section( I<SOMEVALUE> ) >>, C<<
$parser->complain_stderr( I<SOMEVALUE> ) >>, C<< $parser->bare_output(
I<SOMEVALUE> ) >>, C<< $parser->preserve_whitespace( I<SOMEVALUE> ) >>, C<<
$parser->parse_empty_lists( I<SOMEVALUE> ) >>

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::Text -- format Pod as plaintext

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::TextContent -- get the text content of Pod

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::XHTML -- format Pod as validating XHTML

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Minimal code

=back

=back

=over 4

=item METHODS

=over 4

=item perldoc_url_prefix

=item perldoc_url_postfix

=item man_url_prefix

=item man_url_postfix

=item title_prefix, title_postfix

=item html_css

=item html_javascript

=item html_doctype

=item html_charset

=item html_header_tags

=item html_h_level

=item default_title

=item force_title

=item html_header, html_footer

=item index

=item anchor_items

=item backlink

=back

=back

=over 4

=item SUBCLASSING

=back

=over 4

=item handle_text

=item handle_code

=item accept_targets_as_html

=back

=over 4

=item resolve_pod_page_link

=back

=over 4

=item resolve_man_page_link

=back

=over 4

=item idify

=back

=over 4

=item batch_mode_page_object_init

=back

=over 4

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item ACKNOWLEDGEMENTS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::XMLOutStream -- turn Pod into XML

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item ABOUT EXTENDING POD

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Text - Convert POD data to formatted text

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Encoding

=back

=item CLASS METHODS

new(ARGS), alt, code, encoding, errors, guesswork, quoting, indent, loose,
margin, nourls, quotes, sentence, stderr, utf8, width

=item INSTANCE METHODS

output_fh(FH), output_string(REF), parse_file(PATH), parse_from_file(INPUT,
OUTPUT), parse_from_filehandle(FH, OUTPUT), parse_lines(LINES[, ...[,
undef]]), parse_string_document(INPUT)

=item FUNCTIONS

pod2text([[-a,] [-NNN,]] INPUT[, OUTPUT])

=item DIAGNOSTICS

Bizarre space in item, Item called without tag, Can't open %s for reading:
%s, Invalid errors setting "%s", Invalid quote specification "%s", POD
document had syntax errors

=item COMPATIBILITY

=item AUTHOR

=item COPYRIGHT AND LICENSE

=item SEE ALSO

=back

=head2 Pod::Text::Color - Convert POD data to formatted color ASCII text

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item COMPATIBILITY

=item AUTHOR

=item COPYRIGHT AND LICENSE

=item SEE ALSO

=back

=head2 Pod::Text::Overstrike - Convert POD data to formatted overstrike
text

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=item COMPATIBILITY

=item AUTHOR

=item COPYRIGHT AND LICENSE

=item SEE ALSO

=back

=head2 Pod::Text::Termcap - Convert POD data to ASCII text with format
escapes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item COMPATIBILITY

=item AUTHOR

=item COPYRIGHT AND LICENSE

=item SEE ALSO

=back

=head2 Pod::Usage - extracts POD documentation and shows usage information

=over 4

=item SYNOPSIS

=item ARGUMENTS

C<-message> I<string>, C<-msg> I<string>, C<-exitval> I<value>, C<-verbose>
I<value>, C<-sections> I<spec>, C<-output> I<handle>, C<-input> I<handle>,
C<-pathlist> I<string>, C<-noperldoc>, C<-perlcmd>, C<-perldoc>
I<path-to-perldoc>, C<-perldocopt> I<string>

=over 4

=item Formatting base class

=item Pass-through options

=back

=item DESCRIPTION

=over 4

=item Scripts

=back

=item EXAMPLES

=over 4

=item Recommended Use

=back

=item CAVEATS

=item SUPPORT

=item AUTHOR

=item LICENSE

=item ACKNOWLEDGMENTS

=item SEE ALSO

=back

=head2 SDBM_File - Tied access to sdbm files

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Tie

=back

=item EXPORTS

=item DIAGNOSTICS

=over 4

=item C<sdbm store returned -1, errno 22, key "..." at ...>

=back

=item SECURITY WARNING

=item BUGS AND WARNINGS

=back

=head2 Safe - Compile and execute code in restricted compartments

=over 4

=item SYNOPSIS

=item DESCRIPTION

a new namespace, an operator mask

=item WARNING

=item METHODS

=over 4

=item permit (OP, ...)

=item permit_only (OP, ...)

=item deny (OP, ...)

=item deny_only (OP, ...)

=item trap (OP, ...), untrap (OP, ...)

=item share (NAME, ...)

=item share_from (PACKAGE, ARRAYREF)

=item varglob (VARNAME)

=item reval (STRING, STRICT)

=item rdo (FILENAME)

=item root (NAMESPACE)

=item mask (MASK)

=item wrap_code_ref (CODEREF)

=item wrap_code_refs_within (...)

=back

=item RISKS

Memory, CPU, Snooping, Signals, State Changes

=item AUTHOR

=back

=head2 Scalar::Util - A selection of general-utility scalar subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Core Perl C<builtin> Functions

=back

=back

=over 4

=item FUNCTIONS FOR REFERENCES

=over 4

=item blessed

=item refaddr

=item reftype

=item weaken

=item unweaken

=item isweak

=back

=item OTHER FUNCTIONS

=over 4

=item dualvar

=item isdual

=item isvstring

=item looks_like_number

=item openhandle

=item readonly

=item set_prototype

=item tainted

=back

=item DIAGNOSTICS

Vstrings are not implemented in this version of perl

=item KNOWN BUGS

=item SEE ALSO

=item COPYRIGHT

=back

=head2 Search::Dict - look - search for key in dictionary file

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 SelectSaver - save and restore selected file handle

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 SelfLoader - load functions only on demand

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The __DATA__ token

=item SelfLoader autoloading

=item Autoloading and package lexicals

=item SelfLoader and AutoLoader

=item __DATA__, __END__, and the FOOBAR::DATA filehandle

=item Classes and inherited methods

=back

=item Multiple packages and fully qualified subroutine names

=item AUTHOR

=item COPYRIGHT AND LICENSE

a), b)

=back

=head2 Socket, C<Socket> - networking constants and support functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item CONSTANTS

=back

=over 4

=item PF_INET, PF_INET6, PF_UNIX, ...

=item AF_INET, AF_INET6, AF_UNIX, ...

=item SOCK_STREAM, SOCK_DGRAM, SOCK_RAW, ...

=item SOCK_NONBLOCK. SOCK_CLOEXEC

=item SOL_SOCKET

=item SO_ACCEPTCONN, SO_BROADCAST, SO_ERROR, ...

=item IP_OPTIONS, IP_TOS, IP_TTL, ...

=item IP_PMTUDISC_WANT, IP_PMTUDISC_DONT, ...

=item IPTOS_LOWDELAY, IPTOS_THROUGHPUT, IPTOS_RELIABILITY, ...

=item MSG_BCAST, MSG_OOB, MSG_TRUNC, ...

=item SHUT_RD, SHUT_RDWR, SHUT_WR

=item INADDR_ANY, INADDR_BROADCAST, INADDR_LOOPBACK, INADDR_NONE

=item IPPROTO_IP, IPPROTO_IPV6, IPPROTO_TCP, ...

=item TCP_CORK, TCP_KEEPALIVE, TCP_NODELAY, ...

=item IN6ADDR_ANY, IN6ADDR_LOOPBACK

=item IPV6_ADD_MEMBERSHIP, IPV6_MTU, IPV6_V6ONLY, ...

=back

=over 4

=item STRUCTURE MANIPULATORS

=back

=over 4

=item $family = sockaddr_family $sockaddr

=item $sockaddr = pack_sockaddr_in $port, $ip_address

=item ($port, $ip_address) = unpack_sockaddr_in $sockaddr

=item $sockaddr = sockaddr_in $port, $ip_address

=item ($port, $ip_address) = sockaddr_in $sockaddr

=item $sockaddr = pack_sockaddr_in6 $port, $ip6_address, [$scope_id,
[$flowinfo]]

=item ($port, $ip6_address, $scope_id, $flowinfo) = unpack_sockaddr_in6
$sockaddr

=item $sockaddr = sockaddr_in6 $port, $ip6_address, [$scope_id,
[$flowinfo]]

=item ($port, $ip6_address, $scope_id, $flowinfo) = sockaddr_in6 $sockaddr

=item $sockaddr = pack_sockaddr_un $path

=item ($path) = unpack_sockaddr_un $sockaddr

=item $sockaddr = sockaddr_un $path

=item ($path) = sockaddr_un $sockaddr

=item $ip_mreq = pack_ip_mreq $multiaddr, $interface

=item ($multiaddr, $interface) = unpack_ip_mreq $ip_mreq

=item $ip_mreq_source = pack_ip_mreq_source $multiaddr, $source, $interface

=item ($multiaddr, $source, $interface) = unpack_ip_mreq_source $ip_mreq

=item $ipv6_mreq = pack_ipv6_mreq $multiaddr6, $ifindex

=item ($multiaddr6, $ifindex) = unpack_ipv6_mreq $ipv6_mreq

=back

=over 4

=item FUNCTIONS

=back

=over 4

=item $ip_address = inet_aton $string

=item $string = inet_ntoa $ip_address

=item $address = inet_pton $family, $string

=item $string = inet_ntop $family, $address

=item ($err, @result) = getaddrinfo $host, $service, [$hints]

flags => INT, family => INT, socktype => INT, protocol => INT, family =>
INT, socktype => INT, protocol => INT, addr => STRING, canonname => STRING,
AI_PASSIVE, AI_CANONNAME, AI_NUMERICHOST

=item ($err, $hostname, $servicename) = getnameinfo $sockaddr, [$flags,
[$xflags]]

NI_NUMERICHOST, NI_NUMERICSERV, NI_NAMEREQD, NI_DGRAM, NIx_NOHOST,
NIx_NOSERV

=back

=over 4

=item getaddrinfo() / getnameinfo() ERROR CONSTANTS

EAI_AGAIN, EAI_BADFLAGS, EAI_FAMILY, EAI_NODATA, EAI_NONAME, EAI_SERVICE

=back

=over 4

=item EXAMPLES

=over 4

=item Lookup for connect()

=item Making a human-readable string out of an address

=item Resolving hostnames into IP addresses

=item Accessing socket options

=back

=back

=over 4

=item AUTHOR

=back

=head2 Storable - persistence for Perl data structures

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item MEMORY STORE

=item ADVISORY LOCKING

=item SPEED

=item CANONICAL REPRESENTATION

=item CODE REFERENCES

=item FORWARD COMPATIBILITY

utf8 data, restricted hashes, huge objects, files from future versions of
Storable

=item ERROR REPORTING

=item WIZARDS ONLY

=over 4

=item Hooks

C<STORABLE_freeze> I<obj>, I<cloning>, C<STORABLE_thaw> I<obj>, I<cloning>,
I<serialized>, .., C<STORABLE_attach> I<class>, I<cloning>, I<serialized>

=item Predicates

C<Storable::last_op_in_netorder>, C<Storable::is_storing>,
C<Storable::is_retrieving>

=item Recursion

=item Deep Cloning

=back

=item Storable magic

$info = Storable::file_magic( $filename ), C<version>, C<version_nv>,
C<major>, C<minor>, C<hdrsize>, C<netorder>, C<byteorder>, C<intsize>,
C<longsize>, C<ptrsize>, C<nvsize>, C<file>, $info = Storable::read_magic(
$buffer ), $info = Storable::read_magic( $buffer, $must_be_file )

=item EXAMPLES

=item SECURITY WARNING

=item WARNING

=item REGULAR EXPRESSIONS

=item BUGS

=over 4

=item 64 bit data in perl 5.6.0 and 5.6.1

=back

=item CREDITS

=item AUTHOR

=item SEE ALSO

=back

=head2 Sub::Util - A selection of utility subroutines for subs and CODE
references

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item FUNCTIONS

=back

=over 4

=item prototype

=back

=over 4

=item set_prototype

=back

=over 4

=item subname

=back

=over 4

=item set_subname

=back

=over 4

=item AUTHOR

=back

=head2 Symbol - manipulate Perl symbols and their names

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item BUGS

=back

=head2 Sys::Hostname - Try every conceivable way to get hostname

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=back

=head2 Sys::Syslog - Perl interface to the UNIX syslog(3) calls

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=item EXPORTS

=item FUNCTIONS

B<openlog($ident, $logopt, $facility)>, B<syslog($priority, $message)>,
B<syslog($priority, $format, @args)>, B<Note>,
B<setlogmask($mask_priority)>, B<setlogsock()>, B<Note>, B<closelog()>

=item THE RULES OF SYS::SYSLOG

=item EXAMPLES

=item CONSTANTS

=over 4

=item Facilities

=item Levels

=back

=item DIAGNOSTICS

C<Invalid argument passed to setlogsock>, C<eventlog passed to setlogsock,
but no Win32 API available>, C<no connection to syslog available>, C<stream
passed to setlogsock, but %s is not writable>, C<stream passed to
setlogsock, but could not find any device>, C<tcp passed to setlogsock, but
tcp service unavailable>, C<syslog: expecting argument %s>, C<syslog:
invalid level/facility: %s>, C<syslog: too many levels given: %s>,
C<syslog: too many facilities given: %s>, C<syslog: level must be given>,
C<udp passed to setlogsock, but udp service unavailable>, C<unix passed to
setlogsock, but path not available>

=item HISTORY

=item SEE ALSO

=over 4

=item Other modules

=item Manual Pages

=item RFCs

=item Articles

=item Event Log

=back

=item AUTHORS & ACKNOWLEDGEMENTS

=item BUGS

=item SUPPORT

Perl Documentation, MetaCPAN, Search CPAN, AnnoCPAN: Annotated CPAN
documentation, CPAN Ratings, RT: CPAN's request tracker

=item COPYRIGHT

=item LICENSE

=back
