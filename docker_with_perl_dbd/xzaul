	0x10AE7,
	0x10AEB,
	0x10AF7,
	0x10B80,
	0x10B92,
	0x10B99,
	0x10B9D,
	0x10BA9,
	0x10BB0,
	0x1107F,
	0x11080,
	0x11150,
	0x11177,
	0x111CD,
	0x111CE,
	0x111DA,
	0x111DB,
	0x111E1,
	0x111F5,
	0x11200,
	0x11212,
	0x11213,
	0x1123E,
	0x112B0,
	0x112EB,
	0x112F0,
	0x112FA,
	0x11301,
	0x11304,
	0x11305,
	0x1130D,
	0x1130F,
	0x11311,
	0x11313,
	0x11329,
	0x1132A,
	0x11331,
	0x11332,
	0x11334,
	0x11335,
	0x1133A,
	0x1133C,
	0x11345,
	0x11347,
	0x11349,
	0x1134B,
	0x1134E,
	0x11357,
	0x11358,
	0x1135D,
	0x11364,
	0x11366,
	0x1136D,
	0x11370,
	0x11375,
	0x11480,
	0x114C8,
	0x114D0,
	0x114DA,
	0x11580,
	0x115B6,
	0x115B8,
	0x115CA,
	0x11600,
	0x11645,
	0x11650,
	0x1165A,
	0x118A0,
	0x118F3,
	0x118FF,
	0x11900,
	0x11AC0,
	0x11AF9,
	0x1236F,
	0x12399,
	0x12463,
	0x1246F,
	0x12474,
	0x12475,
	0x16A40,
	0x16A5F,
	0x16A60,
	0x16A6A,
	0x16A6E,
	0x16A70,
	0x16AD0,
	0x16AEE,
	0x16AF0,
	0x16AF6,
	0x16B00,
	0x16B46,
	0x16B50,
	0x16B5A,
	0x16B5B,
	0x16B62,
	0x16B63,
	0x16B78,
	0x16B7D,
	0x16B90,
	0x1BC00,
	0x1BC6B,
	0x1BC70,
	0x1BC7D,
	0x1BC80,
	0x1BC89,
	0x1BC90,
	0x1BC9A,
	0x1BC9C,
	0x1BCA4,
	0x1E800,
	0x1E8C5,
	0x1E8C7,
	0x1E8D7,
	0x1F0BF,
	0x1F0C0,
	0x1F0E0,
	0x1F0F6,
	0x1F10B,
	0x1F10D,
	0x1F321,
	0x1F32D,
	0x1F336,
	0x1F337,
	0x1F37D,
	0x1F37E,
	0x1F394,
	0x1F3A0,
	0x1F3C5,
	0x1F3C6,
	0x1F3CB,
	0x1F3CF,
	0x1F3D4,
	0x1F3E0,
	0x1F3F1,
	0x1F3F8,
	0x1F43F,
	0x1F440,
	0x1F441,
	0x1F442,
	0x1F4F8,
	0x1F4F9,
	0x1F4FD,
	0x1F4FF,
	0x1F53E,
	0x1F540,
	0x1F544,
	0x1F54B,
	0x1F568,
	0x1F57A,
	0x1F57B,
	0x1F5A4,
	0x1F5A5,
	0x1F5FB,
	0x1F641,
	0x1F643,
	0x1F650,
	0x1F680,
	0x1F6C6,
	0x1F6D0,
	0x1F6E0,
	0x1F6ED,
	0x1F6F0,
	0x1F6F4,
	0x1F780,
	0x1F7D5,
	0x1F800,
	0x1F80C,
	0x1F810,
	0x1F848,
	0x1F850,
	0x1F85A,
	0x1F860,
	0x1F888,
	0x1F890,
	0x1F8AE
};

static const UV UNI_AGE__8_invlist[] = {  /* for all charsets */
	119,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x8B3,
	0x8B5,
	0x8E3,
	0x8E4,
	0xAF9,
	0xAFA,
	0xC5A,
	0xC5B,
	0xD5F,
	0xD60,
	0x13F5,
	0x13F6,
	0x13F8,
	0x13FE,
	0x20BE,
	0x20BF,
	0x218A,
	0x218C,
	0x2BEC,
	0x2BF0,
	0x9FCD,
	0x9FD6,
	0xA69E,
	0xA69F,
	0xA78F,
	0xA790,
	0xA7B2,
	0xA7B8,
	0xA8FC,
	0xA8FE,
	0xAB60,
	0xAB64,
	0xAB70,
	0xABC0,
	0xFE2E,
	0xFE30,
	0x108E0,
	0x108F3,
	0x108F4,
	0x108F6,
	0x108FB,
	0x10900,
	0x109BC,
	0x109BE,
	0x109C0,
	0x109D0,
	0x109D2,
	0x10A00,
	0x10C80,
	0x10CB3,
	0x10CC0,
	0x10CF3,
	0x10CFA,
	0x10D00,
	0x111C9,
	0x111CD,
	0x111DB,
	0x111E0,
	0x11280,
	0x11287,
	0x11288,
	0x11289,
	0x1128A,
	0x1128E,
	0x1128F,
	0x1129E,
	0x1129F,
	0x112AA,
	0x11300,
	0x11301,
	0x11350,
	0x11351,
	0x115CA,
	0x115DE,
	0x11700,
	0x1171A,
	0x1171D,
	0x1172C,
	0x11730,
	0x11740,
	0x12399,
	0x1239A,
	0x12480,
	0x12544,
	0x14400,
	0x14647,
	0x1D1DE,
	0x1D1E9,
	0x1D800,
	0x1DA8C,
	0x1DA9B,
	0x1DAA0,
	0x1DAA1,
	0x1DAB0,
	0x1F32D,
	0x1F330,
	0x1F37E,
	0x1F380,
	0x1F3CF,
	0x1F3D4,
	0x1F3F8,
	0x1F400,
	0x1F4FF,
	0x1F500,
	0x1F54B,
	0x1F550,
	0x1F643,
	0x1F645,
	0x1F6D0,
	0x1F6D1,
	0x1F910,
	0x1F919,
	0x1F980,
	0x1F985,
	0x1F9C0,
	0x1F9C1,
	0x2B820,
	0x2CEA2
};

static const UV UNI_AGE__9_invlist[] = {  /* for all charsets */
	105,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x8B6,
	0x8BE,
	0x8D4,
	0x8E3,
	0xC80,
	0xC81,
	0xD4F,
	0xD50,
	0xD54,
	0xD57,
	0xD58,
	0xD5F,
	0xD76,
	0xD79,
	0x1C80,
	0x1C89,
	0x1DFB,
	0x1DFC,
	0x23FB,
	0x23FF,
	0x2E43,
	0x2E45,
	0xA7AE,
	0xA7AF,
	0xA8C5,
	0xA8C6,
	0x1018D,
	0x1018F,
	0x104B0,
	0x104D4,
	0x104D8,
	0x104FC,
	0x1123E,
	0x1123F,
	0x11400,
	0x1145A,
	0x1145B,
	0x1145C,
	0x1145D,
	0x1145E,
	0x11660,
	0x1166D,
	0x11C00,
	0x11C09,
	0x11C0A,
	0x11C37,
	0x11C38,
	0x11C46,
	0x11C50,
	0x11C6D,
	0x11C70,
	0x11C90,
	0x11C92,
	0x11CA8,
	0x11CA9,
	0x11CB7,
	0x16FE0,
	0x16FE1,
	0x17000,
	0x187ED,
	0x18800,
	0x18AF3,
	0x1E000,
	0x1E007,
	0x1E008,
	0x1E019,
	0x1E01B,
	0x1E022,
	0x1E023,
	0x1E025,
	0x1E026,
	0x1E02B,
	0x1E900,
	0x1E94B,
	0x1E950,
	0x1E95A,
	0x1E95E,
	0x1E960,
	0x1F19B,
	0x1F1AD,
	0x1F23B,
	0x1F23C,
	0x1F57A,
	0x1F57B,
	0x1F5A4,
	0x1F5A5,
	0x1F6D1,
	0x1F6D3,
	0x1F6F4,
	0x1F6F7,
	0x1F919,
	0x1F91F,
	0x1F920,
	0x1F928,
	0x1F930,
	0x1F931,
	0x1F933,
	0x1F93F,
	0x1F940,
	0x1F94C,
	0x1F950,
	0x1F95F,
	0x1F985,
	0x1F992
};

static const UV UNI_AGHB_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10530,
	0x10564,
	0x1056F,
	0x10570
};

static const UV UNI_AHOM_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11700,
	0x1171B,
	0x1171D,
	0x1172C,
	0x11730,
	0x11747
};

static const UV UNI_ALCHEMICAL_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1F700,
	0x1F780
};

static const UV UNI_ALL_invlist[] = {  /* for all charsets */
	1,	/* Number of elements */
	148565664, /* Version and data structure type */
	0,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0
};

static const UV UNI_ALPHABETICPF_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xFB00,
	0xFB50
};

static const UV UNI_ANCIENTGREEKMUSIC_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1D200,
	0x1D250
};

static const UV UNI_ANCIENTGREEKNUMBERS_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10140,
	0x10190
};

static const UV UNI_ANCIENTSYMBOLS_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10190,
	0x101D0
};

static const UV UNI_ANY_invlist[] = {  /* for all charsets */
	2,	/* Number of elements */
	148565664, /* Version and data structure type */
	0,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x110000
};

static const UV UNI_ARAB_invlist[] = {  /* for all charsets */
	103,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x600,
	0x605,
	0x606,
	0x6DD,
	0x6DE,
	0x700,
	0x750,
	0x780,
	0x870,
	0x88F,
	0x890,
	0x892,
	0x898,
	0x8E2,
	0x8E3,
	0x900,
	0xFB50,
	0xFBC3,
	0xFBD3,
	0xFD90,
	0xFD92,
	0xFDC8,
	0xFDCF,
	0xFDD0,
	0xFDF0,
	0xFE00,
	0xFE70,
	0xFE75,
	0xFE76,
	0xFEFD,
	0x102E0,
	0x102FC,
	0x10E60,
	0x10E7F,
	0x1EE00,
	0x1EE04,
	0x1EE05,
	0x1EE20,
	0x1EE21,
	0x1EE23,
	0x1EE24,
	0x1EE25,
	0x1EE27,
	0x1EE28,
	0x1EE29,
	0x1EE33,
	0x1EE34,
	0x1EE38,
	0x1EE39,
	0x1EE3A,
	0x1EE3B,
	0x1EE3C,
	0x1EE42,
	0x1EE43,
	0x1EE47,
	0x1EE48,
	0x1EE49,
	0x1EE4A,
	0x1EE4B,
	0x1EE4C,
	0x1EE4D,
	0x1EE50,
	0x1EE51,
	0x1EE53,
	0x1EE54,
	0x1EE55,
	0x1EE57,
	0x1EE58,
	0x1EE59,
	0x1EE5A,
	0x1EE5B,
	0x1EE5C,
	0x1EE5D,
	0x1EE5E,
	0x1EE5F,
	0x1EE60,
	0x1EE61,
	0x1EE63,
	0x1EE64,
	0x1EE65,
	0x1EE67,
	0x1EE6B,
	0x1EE6C,
	0x1EE73,
	0x1EE74,
	0x1EE78,
	0x1EE79,
	0x1EE7D,
	0x1EE7E,
	0x1EE7F,
	0x1EE80,
	0x1EE8A,
	0x1EE8B,
	0x1EE9C,
	0x1EEA1,
	0x1EEA4,
	0x1EEA5,
	0x1EEAA,
	0x1EEAB,
	0x1EEBC,
	0x1EEF0,
	0x1EEF2
};

static const UV UNI_ARABICEXTA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x8A0,
	0x900
};

static const UV UNI_ARABICEXTB_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x870,
	0x8A0
};

static const UV UNI_ARABICMATH_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1EE00,
	0x1EF00
};

static const UV UNI_ARABICPFA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xFB50,
	0xFE00
};

static const UV UNI_ARABICPFB_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xFE70,
	0xFF00
};

static const UV UNI_ARABICSUP_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x750,
	0x780
};

static const UV UNI_ARMI_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10840,
	0x10856,
	0x10857,
	0x10860
};

static const UV UNI_ARMN_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x531,
	0x557,
	0x559,
	0x58B,
	0x58D,
	0x590,
	0xFB13,
	0xFB18
};

static const UV UNI_ARROWS_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2190,
	0x2200
};

static const UV UNI_AVST_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10B00,
	0x10B36,
	0x10B39,
	0x10B40
};

static const UV UNI_BALI_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1B00,
	0x1B4D,
	0x1B50,
	0x1B7F
};

static const UV UNI_BAMU_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA6A0,
	0xA6F8,
	0x16800,
	0x16A39
};

static const UV UNI_BAMUMSUP_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16800,
	0x16A40
};

static const UV UNI_BASS_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16AD0,
	0x16AEE,
	0x16AF0,
	0x16AF6
};

static const UV UNI_BATK_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1BC0,
	0x1BF4,
	0x1BFC,
	0x1C00
};

static const UV UNI_BC__AL_invlist[] = {  /* for all charsets */
	57,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x608,
	0x609,
	0x60B,
	0x60C,
	0x60D,
	0x60E,
	0x61B,
	0x64B,
	0x66D,
	0x670,
	0x671,
	0x6D6,
	0x6E5,
	0x6E7,
	0x6EE,
	0x6F0,
	0x6FA,
	0x711,
	0x712,
	0x730,
	0x74B,
	0x7A6,
	0x7B1,
	0x7C0,
	0x860,
	0x890,
	0x892,
	0x898,
	0x8A0,
	0x8CA,
	0xFB50,
	0xFD3E,
	0xFD50,
	0xFDCF,
	0xFDF0,
	0xFDFD,
	0xFE70,
	0xFEFF,
	0x10D00,
	0x10D24,
	0x10D28,
	0x10D30,
	0x10D3A,
	0x10D40,
	0x10F30,
	0x10F46,
	0x10F51,
	0x10F70,
	0x1EC70,
	0x1ECC0,
	0x1ED00,
	0x1ED50,
	0x1EE00,
	0x1EEF0,
	0x1EEF2,
	0x1EF00
};

static const UV UNI_BC__AN_invlist[] = {  /* for all charsets */
	17,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x600,
	0x606,
	0x660,
	0x66A,
	0x66B,
	0x66D,
	0x6DD,
	0x6DE,
	0x890,
	0x892,
	0x8E2,
	0x8E3,
	0x10D30,
	0x10D3A,
	0x10E60,
	0x10E7F
};

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_BC__B_invlist[] = {  /* for ASCII/Latin1 */
	11,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA,
	0xB,
	0xD,
	0xE,
	0x1C,
	0x1F,
	0x85,
	0x86,
	0x2029,
	0x202A
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_BC__B_invlist[] = {  /* for EBCDIC 1047 */
	11,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xD,
	0xE,
	0x15,
	0x16,
	0x1C,
	0x1F,
	0x25,
	0x26,
	0x2029,
	0x202A
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_BC__B_invlist[] = {  /* for EBCDIC 037 */
	11,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xD,
	0xE,
	0x15,
	0x16,
	0x1C,
	0x1F,
	0x25,
	0x26,
	0x2029,
	0x202A
};

#  endif	/* EBCDIC 037 */

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_BC__BN_invlist[] = {  /* for ASCII/Latin1 */
	64,	/* Number of elements */
	148565664, /* Version and data structure type */
	0,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x9,
	0xE,
	0x1C,
	0x7F,
	0x85,
	0x86,
	0xA0,
	0xAD,
	0xAE,
	0x180E,
	0x180F,
	0x200B,
	0x200E,
	0x2060,
	0x2066,
	0x206A,
	0x2070,
	0xFDD0,
	0xFDF0,
	0xFEFF,
	0xFF00,
	0xFFF0,
	0xFFF9,
	0xFFFE,
	0x10000,
	0x1BCA0,
	0x1BCA4,
	0x1D173,
	0x1D17B,
	0x1FFFE,
	0x20000,
	0x2FFFE,
	0x30000,
	0x3FFFE,
	0x40000,
	0x4FFFE,
	0x50000,
	0x5FFFE,
	0x60000,
	0x6FFFE,
	0x70000,
	0x7FFFE,
	0x80000,
	0x8FFFE,
	0x90000,
	0x9FFFE,
