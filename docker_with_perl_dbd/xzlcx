
Perl 5.22 added support to the C99 hexadecimal floating point notation,
but sometimes misparses hex floats. This has been fixed.
[perl #127183]

=item *

A regression that allowed undeclared barewords in hash keys to work despite
strictures has been fixed.
L<[GH #15099]|https://github.com/Perl/perl5/issues/15099>

=item *

Calls to the placeholder C<&PL_sv_yes> used internally when an C<import()>
or C<unimport()> method isn't found now correctly handle scalar context.
L<[GH #14902]|https://github.com/Perl/perl5/issues/14902>

=item *

Report more context when we see an array where we expect to see an
operator and avoid an assertion failure.
L<[GH #14472]|https://github.com/Perl/perl5/issues/14472>

=item *

Modifying an array that was previously a package C<@ISA> no longer
causes assertion failures or crashes.
L<[GH #14492]|https://github.com/Perl/perl5/issues/14492>

=item *

Retain binary compatibility across plain and DEBUGGING perl builds.
L<[GH #15122]|https://github.com/Perl/perl5/issues/15122>

=item *

Avoid leaking memory when setting C<$ENV{foo}> on darwin.
L<[GH #14955]|https://github.com/Perl/perl5/issues/14955>

=item *

C</...\G/> no longer crashes on utf8 strings. When C<\G> is a fixed number
of characters from the start of the regex, perl needs to count back that
many characters from the current C<pos()> position and start matching from
there. However, it was counting back bytes rather than characters, which
could lead to panics on utf8 strings.

=item *

In some cases operators that return integers would return negative
integers as large positive integers.
L<[GH #15049]|https://github.com/Perl/perl5/issues/15049>

=item *

The C<pipe()> operator would assert for DEBUGGING builds instead of
producing the correct error message.  The condition asserted on is
detected and reported on correctly without the assertions, so the
assertions were removed.
L<[GH #15015]|https://github.com/Perl/perl5/issues/15015>

=item *

In some cases, failing to parse a here-doc would attempt to use freed
memory.  This was caused by a pointer not being restored correctly.
L<[GH #15009]|https://github.com/Perl/perl5/issues/15009>

=item *

C<< @x = sort { *a = 0; $a <=> $b } 0 .. 1 >> no longer frees the GP
for *a before restoring its SV slot.
L<[GH #14595]|https://github.com/Perl/perl5/issues/14595>

=item *

Multiple problems with the new hexadecimal floating point printf
format C<%a> were fixed:
L<[GH #15032]|https://github.com/Perl/perl5/issues/15032>,
L<[GH #15033]|https://github.com/Perl/perl5/issues/15033>,
L<[GH #15074]|https://github.com/Perl/perl5/issues/15074>

=item *

Calling C<mg_set()> in C<leave_scope()> no longer leaks.

=item *

A regression from Perl v5.20 was fixed in which debugging output of regular
expression compilation was wrong.  (The pattern was correctly compiled, but
what got displayed for it was wrong.)

=item *

C<\b{sb}> works much better.  In Perl v5.22.0, this new construct didn't
seem to give the expected results, yet passed all the tests in the
extensive suite furnished by Unicode.  It turns out that it was because
these were short input strings, and the failures had to do with longer
inputs.

=item *

Certain syntax errors in
L<perlrecharclass/Extended Bracketed Character Classes> caused panics
instead of the proper error message.  This has now been fixed. [perl
#126481]

=item *

Perl 5.20 added a message when a quantifier in a regular
expression was useless, but then caused the parser to skip it;
this caused the surplus quantifier to be silently ignored, instead
of throwing an error. This is now fixed. [perl #126253]

=item *

The switch to building non-XS modules last in win32/makefile.mk (introduced
by design as part of the changes to enable parallel building) caused the
build of POSIX to break due to problems with the version module. This
is now fixed.

=item *

Improved parsing of hex float constants.

=item *

Fixed an issue with C<< pack >> where C<< pack "H" >> (and C<< pack "h" >>)
could read past the source when given a non-utf8 source, and a utf8 target.
[perl #126325]

=item *

Fixed several cases where perl would abort due to a segmentation fault,
or a C-level assert. [perl #126615], [perl #126602], [perl #126193].

=item *

There were places in regular expression patterns where comments (C<(?#...)>)
weren't allowed, but should have been.  This is now fixed.
L<[GH #12755]|https://github.com/Perl/perl5/issues/12755>

=item *

Some regressions from Perl 5.20 have been fixed, in which some syntax errors in
L<C<(?[...])>|perlrecharclass/Extended Bracketed Character Classes> constructs
within regular expression patterns could cause a segfault instead of a proper
error message.
L<[GH #14933]|https://github.com/Perl/perl5/issues/14933>
L<[GH #14996]|https://github.com/Perl/perl5/issues/14996>

=item *

Another problem with
L<C<(?[...])>|perlrecharclass/Extended Bracketed Character Classes>
constructs has been fixed wherein things like C<\c]> could cause panics.
L<[GH #14934]|https://github.com/Perl/perl5/issues/14934>

=item *

Some problems with attempting to extend the perl stack to around 2G or 4G
entries have been fixed.  This was particularly an issue on 32-bit perls built
to use 64-bit integers, and was easily noticeable with the list repetition
operator, e.g.

    @a = (1) x $big_number

Formerly perl may have crashed, depending on the exact value of C<$big_number>;
now it will typically raise an exception.
L<[GH #14880]|https://github.com/Perl/perl5/issues/14880>

=item *

In a regex conditional expression C<(?(condition)yes-pattern|no-pattern)>, if
the condition is C<(?!)> then perl failed the match outright instead of
matching the no-pattern.  This has been fixed.
L<[GH #14947]|https://github.com/Perl/perl5/issues/14947>

=item *

The special backtracking control verbs C<(*VERB:ARG)> now all allow an optional
argument and set C<REGERROR>/C<REGMARK> appropriately as well.
L<[GH #14937]|https://github.com/Perl/perl5/issues/14937>

=item *

Several bugs, including a segmentation fault, have been fixed with the boundary
checking constructs (introduced in Perl 5.22) C<\b{gcb}>, C<\b{sb}>, C<\b{wb}>,
C<\B{gcb}>, C<\B{sb}>, and C<\B{wb}>.  All the C<\B{}> ones now match an empty
string; none of the C<\b{}> ones do.
L<[GH #14976]|https://github.com/Perl/perl5/issues/14976>

=item *

Duplicating a closed file handle for write no longer creates a
filename of the form F<GLOB(0xXXXXXXXX)>.  [perl #125115]

=item *

Warning fatality is now ignored when rewinding the stack.  This
prevents infinite recursion when the now fatal error also causes
rewinding of the stack.  [perl #123398]

=item *

In perl v5.22.0, the logic changed when parsing a numeric parameter to the -C
option, such that the successfully parsed number was not saved as the option
value if it parsed to the end of the argument.  [perl #125381]

=item *

The PadlistNAMES macro is an lvalue again.

=item *

Zero -DPERL_TRACE_OPS memory for sub-threads.

C<perl_clone_using()> was missing Zero init of PL_op_exec_cnt[].  This
caused sub-threads in threaded -DPERL_TRACE_OPS builds to spew exceedingly
large op-counts at destruct.  These counts would print %x as "ABABABAB",
clearly a mem-poison value.

=item *

A leak in the XS typemap caused one scalar to be leaked each time a C<FILE *>
or a C<PerlIO *> was C<OUTPUT:>ed or imported to Perl, since perl 5.000. These
particular typemap entries are thought to be extremely rarely used by XS
modules. [perl #124181]

=item *

C<alarm()> and C<sleep()> will now warn if the argument is a negative number
and return undef. Previously they would pass the negative value to the
underlying C function which may have set up a timer with a surprising value.

=item *

Perl can again be compiled with any Unicode version.  This used to
(mostly) work, but was lost in v5.18 through v5.20.  The property
C<Name_Alias> did not exist prior to Unicode 5.0.  L<Unicode::UCD>
incorrectly said it did.  This has been fixed.

=item *

Very large code-points (beyond Unicode) in regular expressions no
longer cause a buffer overflow in some cases when converted to UTF-8.
L<[GH #14858]|https://github.com/Perl/perl5/issues/14858>

=item *

The integer overflow check for the range operator (...) in list
context now correctly handles the case where the size of the range is
larger than the address space.  This could happen on 32-bits with
-Duse64bitint.
L<[GH #14843]|https://github.com/Perl/perl5/issues/14843>

=item *

A crash with C<< %::=(); J->${\"::"} >> has been fixed.
L<[GH #14790]|https://github.com/Perl/perl5/issues/14790>

=item *

C<qr/(?[ () ])/> no longer segfaults, giving a syntax error message instead.
[perl #125805]

=item *

Regular expression possessive quantifier v5.20 regression now fixed.
C<qr/>I<PAT>C<{>I<min>,I<max>C<}+>C</> is supposed to behave identically
to C<qr/(?E<gt>>I<PAT>C<{>I<min>,I<max>C<})/>.  Since v5.20, this didn't
work if I<min> and I<max> were equal.  [perl #125825]

=item *

C<< BEGIN <> >> no longer segfaults and properly produces an error
message.  [perl #125341]

=item *

In C<tr///> an illegal backwards range like C<tr/\x{101}-\x{100}//> was
not always detected, giving incorrect results.  This is now fixed.

=back

=head1 Acknowledgements

Perl 5.24.0 represents approximately 11 months of development since Perl 5.24.0
and contains approximately 360,000 lines of changes across 1,800 files from 75
authors.

Excluding auto-generated files, documentation and release tools, there were
approximately 250,000 lines of changes to 1,200 .pm, .t, .c and .h files.

Perl continues to flourish into its third decade thanks to a vibrant community
of users and developers. The following people are known to have contributed the
improvements that became Perl 5.24.0:

Aaron Crane, Aaron Priven, Abigail, Achim Gratz, Alexander D'Archangel, Alex
Vandiver, Andreas KÃ¶nig, Andy Broad, Andy Dougherty, Aristotle Pagaltzis,
Chase Whitener, Chas. Owens, Chris 'BinGOs' Williams, Craig A. Berry, Dagfinn
Ilmari MannsÃ¥ker, Dan Collins, Daniel Dragan, David Golden, David Mitchell,
Doug Bell, Dr.Ruud, Ed Avis, Ed J, Father Chrysostomos, Herbert Breunung,
H.Merijn Brand, Hugo van der Sanden, Ivan Pozdeev, James E Keenan, Jan Dubois,
Jarkko Hietaniemi, Jerry D. Hedden, Jim Cromie, John Peacock, John SJ Anderson,
Karen Etheridge, Karl Williamson, kmx, Leon Timmermans, Ludovic E. R.
Tolhurst-Cleaver, Lukas Mai, Martijn Lievaart, Matthew Horsfall, Mattia Barbon,
Max Maischein, Mohammed El-Afifi, Nicholas Clark, Nicolas R., Niko Tyni, Peter
John Acklam, Peter Martini, Peter Rabbitson, Pip Cet, Rafael Garcia-Suarez,
Reini Urban, Ricardo Signes, Sawyer X, Shlomi Fish, Sisyphus, Stanislaw Pusep,
Steffen MÃ¼ller, Stevan Little, Steve Hay, Sullivan Beck, Thomas Sibley, Todd
Rinaldo, Tom Hukins, Tony Cook, Unicode Consortium, Victor Adam, Vincent Pit,
Vladimir Timofeev, Yves Orton, Zachary Storer, Zefram.

The list above is almost certainly incomplete as it is automatically generated
from version control history. In particular, it does not include the names of
the (very much appreciated) contributors who reported issues to the Perl bug
tracker.

Many of the changes included in this version originated in the CPAN modules
included in Perl's core. We're grateful to the entire CPAN community for
helping Perl to flourish.

For a more complete list of all of Perl's historical contributors, please see
the F<AUTHORS> file in the Perl source distribution.

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
https://rt.perl.org/ .  There may also be information at
http://www.perl.org/ , the Perl Home Page.

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
for details of how to report the issue.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       usr/local/lib/perl5/5.40.0/pod/perl5241delta.pod                                                    0000644 0000000 0000000 00000020011 14714567415 017256  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        =encoding utf8

=head1 NAME

perl5241delta - what is new for perl v5.24.1

=head1 DESCRIPTION

This document describes differences between the 5.24.0 release and the 5.24.1
release.

If you are upgrading from an earlier release such as 5.22.0, first read
L<perl5240delta>, which describes differences between 5.22.0 and 5.24.0.

=head1 Security

=head2 B<-Di> switch is now required for PerlIO debugging output

Previously PerlIO debugging output would be sent to the file specified by the
C<PERLIO_DEBUG> environment variable if perl wasn't running setuid and the
B<-T> or B<-t> switches hadn't been parsed yet.

If perl performed output at a point where it hadn't yet parsed its switches
this could result in perl creating or overwriting the file named by
C<PERLIO_DEBUG> even when the B<-T> switch had been supplied.

Perl now requires the B<-Di> switch to produce PerlIO debugging output.  By
default this is written to C<stderr>, but can optionally be redirected to a
file by setting the C<PERLIO_DEBUG> environment variable.

If perl is running setuid or the B<-T> switch was supplied C<PERLIO_DEBUG> is
ignored and the debugging output is sent to C<stderr> as for any other B<-D>
switch.

=head2 Core modules and tools no longer search F<"."> for optional modules

The tools and many modules supplied in core no longer search the default
current directory entry in L<C<@INC>|perlvar/@INC> for optional modules.  For
example, L<Storable> will remove the final F<"."> from C<@INC> before trying to
load L<Log::Agent>.

This prevents an attacker injecting an optional module into a process run by
another user where the current directory is writable by the attacker, e.g. the
F</tmp> directory.

In most cases this removal should not cause problems, but difficulties were
encountered with L<base>, which treats every module name supplied as optional.
These difficulties have not yet been resolved, so for this release there are no
changes to L<base>.  We hope to have a fix for L<base> in Perl 5.24.2.

To protect your own code from this attack, either remove the default F<".">
entry from C<@INC> at the start of your script, so:

  #!/usr/bin/perl
  use strict;
  ...

becomes:

  #!/usr/bin/perl
  BEGIN { pop @INC if $INC[-1] eq '.' }
  use strict;
  ...

or for modules, remove F<"."> from a localized C<@INC>, so:

  my $can_foo = eval { require Foo; }

becomes:

  my $can_foo = eval {
      local @INC = @INC;
      pop @INC if $INC[-1] eq '.';
      require Foo;
  };

=head1 Incompatible Changes

Other than the security changes above there are no changes intentionally
incompatible with Perl 5.24.0.  If any exist, they are bugs, and we request
that you submit a report.  See L</Reporting Bugs> below.

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

=over 4

=item *

L<Archive::Tar> has been upgraded from version 2.04 to 2.04_01.

=item *

L<bignum> has been upgraded from version 0.42 to 0.42_01.

=item *

L<CPAN> has been upgraded from version 2.11 to 2.11_01.

=item *

L<Digest> has been upgraded from version 1.17 to 1.17_01.

=item *

L<Digest::SHA> has been upgraded from version 5.95 to 5.95_01.

=item *

L<Encode> has been upgraded from version 2.80 to 2.80_01.

=item *

L<ExtUtils::MakeMaker> has been upgraded from version 7.10_01 to 7.10_02.

=item *

L<File::Fetch> has been upgraded from version 0.48 to 0.48_01.

=item *

L<File::Spec> has been upgraded from version 3.63 to 3.63_01.

=item *

L<HTTP::Tiny> has been upgraded from version 0.056 to 0.056_001.

=item *

L<IO> has been upgraded from version 1.36 to 1.36_01.

=item *

The IO-Compress modules have been upgraded from version 2.069 to 2.069_001.

=item *

L<IPC::Cmd> has been upgraded from version 0.92 to 0.92_01.

=item *

L<JSON::PP> has been upgraded from version 2.27300 to 2.27300_01.

=item *

L<Locale::Maketext> has been upgraded from version 1.26 to 1.26_01.

=item *

L<Locale::Maketext::Simple> has been upgraded from version 0.21 to 0.21_01.

=item *

L<Memoize> has been upgraded from version 1.03 to 1.03_01.

=item *

L<Module::CoreList> has been upgraded from version 5.20160506 to 5.20170114_24.

=item *

L<Net::Ping> has been upgraded from version 2.43 to 2.43_01.

=item *

L<Parse::CPAN::Meta> has been upgraded from version 1.4417 to 1.4417_001.

=item *

L<Pod::Html> has been upgraded from version 1.22 to 1.2201.

=item *

L<Pod::Perldoc> has been upgraded from version 3.25_02 to 3.25_03.

=item *

L<Storable> has been upgraded from version 2.56 to 2.56_01.

=item *

L<Sys::Syslog> has been upgraded from version 0.33 to 0.33_01.

=item *

L<Test> has been upgraded from version 1.28 to 1.28_01.

=item *

L<Test::Harness> has been upgraded from version 3.36 to 3.36_01.

=item *

L<XSLoader> has been upgraded from version 0.21 to 0.22, fixing a security hole
in which binary files could be loaded from a path outside of C<@INC>.
L<[GH #15418]|https://github.com/Perl/perl5/issues/15418>

=back

=head1 Documentation

=head2 Changes to Existing Documentation

=head3 L<perlapio>

=over 4

=item *

The documentation of C<PERLIO_DEBUG> has been updated.

=back

=head3 L<perlrun>

=over 4

=item *

The new B<-Di> switch has been documented, and the documentation of
C<PERLIO_DEBUG> has been updated.

=back

=head1 Testing

=over 4

=item *

A new test script, F<t/run/switchDx.t>, has been added to test that the new
B<-Di> switch is working correctly.

=back

=head1 Selected Bug Fixes

=over 4

=item *

The change to hashbang redirection introduced in Perl 5.24.0, whereby perl
would redirect to another interpreter (Perl 6) if it found a hashbang path
which contains "perl" followed by "6", has been reverted because it broke in
cases such as C<#!/opt/perl64/bin/perl>.

=back

=head1 Acknowledgements

Perl 5.24.1 represents approximately 8 months of development since Perl 5.24.0
and contains approximately 8,100 lines of changes across 240 files from 18
authors.

Excluding auto-generated files, documentation and release tools, there were
approximately 2,200 lines of changes to 170 .pm, .t, .c and .h files.

Perl continues to flourish into its third decade thanks to a vibrant community
of users and developers.  The following people are known to have contributed
the improvements that became Perl 5.24.1:

Aaron Crane, Alex Vandiver, Aristotle Pagaltzis, Chad Granum, Chris 'BinGOs'
Williams, Craig A. Berry, Father Chrysostomos, James E Keenan, Jarkko
Hietaniemi, Karen Etheridge, Leon Timmermans, Matthew Horsfall, Ricardo Signes,
Sawyer X, SÃ©bastien Aperghis-Tramoni, Stevan Little, Steve Hay, Tony Cook.

The list above is almost certainly incomplete as it is automatically generated
from version control history.  In particular, it does not include the names of
the (very much appreciated) contributors who reported issues to the Perl bug
tracker.

Many of the changes included in this version originated in the CPAN modules
included in Perl's core.  We're grateful to the entire CPAN community for
helping Perl to flourish.

For a more complete list of all of Perl's historical contributors, please see
the F<AUTHORS> file in the Perl source distribution.

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the Perl bug database at
L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION> for details of how to
report the issue.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       usr/local/lib/perl5/5.40.0/pod/perl5242delta.pod                                                    0000644 0000000 0000000 00000010007 14714567415 017263  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        =encoding utf8

=head1 NAME

perl5242delta - what is new for perl v5.24.2

=head1 DESCRIPTION

This document describes differences between the 5.24.1 release and the 5.24.2
release.

If you are upgrading from an earlier release such as 5.24.0, first read
L<perl5241delta>, which describes differences between 5.24.0 and 5.24.1.

=head1 Security

=head2 Improved handling of '.' in @INC in base.pm

The handling of (the removal of) C<'.'> in C<@INC> in L<base> has been
improved.  This resolves some problematic behaviour in the approach taken in
Perl 5.24.1, which is probably best described in the following two threads on
the Perl 5 Porters mailing list:
L<http://www.nntp.perl.org/group/perl.perl5.porters/2016/08/msg238991.html>,
L<http://www.nntp.perl.org/group/perl.perl5.porters/2016/10/msg240297.html>.

=head2 "Escaped" colons and relative paths in PATH

On Unix systems, Perl treats any relative paths in the PATH environment
variable as tainted when starting a new process.  Previously, it was allowing a
backslash to escape a colon (unlike the OS), consequently allowing relative
paths to be considered safe if the PATH was set to something like C</\:.>.  The
check has been fixed to treat C<.> as tainted in that example.

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

=over 4

=item *

L<base> has been upgraded from version 2.23 to 2.23_01.

=item *

L<Module::CoreList> has been upgraded from version 5.20170114_24 to 5.20170715_24.

=back

=head1 Selected Bug Fixes

=over 4

=item *

Fixed a crash with C<s///l> where it thought it was dealing with UTF-8 when it
wasn't.
L<[GH #15543]|https://github.com/Perl/perl5/issues/15543>

=back

=head1 Acknowledgements

Perl 5.24.2 represents approximately 6 months of development since Perl 5.24.1
and contains approximately 2,500 lines of changes across 53 files from 18
authors.

Excluding auto-generated files, documentation and release tools, there were
approximately 960 lines of changes to 17 .pm, .t, .c and .h files.

Perl continues to flourish into its third decade thanks to a vibrant community
of users and developers.  The following people are known to have contributed
the improvements that became Perl 5.24.2:

Aaron Crane, Abigail, Aristotle Pagaltzis, Chris 'BinGOs' Williams, Dan
Collins, David Mitchell, Eric Herman, Father Chrysostomos, James E Keenan, Karl
Williamson, Lukas Mai, Renee Baecker, Ricardo Signes, Sawyer X, Stevan Little,
Steve Hay, Tony Cook, Yves Orton.

The list above is almost certainly incomplete as it is automatically generated
from version control history.  In particular, it does not include the names of
the (very much appreciated) contributors who reported issues to the Perl bug
tracker.

Many of the changes included in this version originated in the CPAN modules
included in Perl's core.  We're grateful to the entire CPAN community for
helping Perl to flourish.

For a more complete list of all of Perl's historical contributors, please see
the F<AUTHORS> file in the Perl source distribution.

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
for details of how to report the issue.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         usr/local/lib/perl5/5.40.0/pod/perl5243delta.pod                                                    0000644 0000000 0000000 00000025254 14714567415 017276  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        =encoding utf8

=head1 NAME

perl5243delta - what is new for perl v5.24.3

=head1 DESCRIPTION

This document describes differences between the 5.24.2 release and the 5.24.3
release.

If you are upgrading from an earlier release such as 5.24.1, first read
L<perl5242delta>, which describes differences between 5.24.1 and 5.24.2.

=head1 Security

=head2 [CVE-2017-12837] Heap buffer overflow in regular expression compiler

Compiling certain regular expression patterns with the case-insensitive
modifier could cause a heap buffer overflow and crash perl.  This has now been
fixed.
L<[GH #16021]|https://github.com/Perl/perl5/issues/16021>

=head2 [CVE-2017-12883] Buffer over-read in regular expression parser

For certain types of syntax error in a regular expression pattern, the error
message could either contain the contents of a random, possibly large, chunk of
memory, or could crash perl.  This has now been fixed.
L<[GH #16025]|https://github.com/Perl/perl5/issues/16025>

=head2 [CVE-2017-12814] C<$ENV{$key}> stack buffer overflow on Windows

A possible stack buffer overflow in the C<%ENV> code on Windows has been fixed
by removing the buffer completely since it was superfluous anyway.
L<[GH #16051]|https://github.com/Perl/perl5/issues/16051>

=head1 Incompatible Changes

There are no changes intentionally incompatible with 5.24.2.  If any exist,
they are bugs, and we request that you submit a report.  See L</Reporting
Bugs> below.

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

=over 4

=item *

L<Module::CoreList> has been upgraded from version 5.20170715_24 to
5.20170922_24.

=item *

L<POSIX> has been upgraded from version 1.65 to 1.65_01.

=item *

L<Time::HiRes> has been upgraded from version 1.9733 to 1.9741.

L<[GH #15396]|https://github.com/Perl/perl5/issues/15396>
L<[GH #15401]|https://github.com/Perl/perl5/issues/15401>
L<[GH #15524]|https://github.com/Perl/perl5/issues/15524>
L<[cpan #120032]|https://rt.cpan.org/Public/Bug/Display.html?id=120032>

=back

=head1 Configuration and Compilation

=over 4

=item *

When building with GCC 6 and link-time optimization (the B<-flto> option to
B<gcc>), F<Configure> was treating all probed symbols as present on the system,
regardless of whether they actually exist.  This has been fixed.
L<[GH #15322]|https://github.com/Perl/perl5/issues/15322>

=item *

F<Configure> now aborts if both C<-Duselongdouble> and C<-Dusequadmath> are
requested.
L<[GH #14944]|https://github.com/Perl/perl5/issues/14944>

=item *

Fixed a bug in which F<Configure> could append C<-quadmath> to the archname
even if it was already present.
L<[GH #15423]|https://github.com/Perl/perl5/issues/15423>

=item *

Clang builds with C<-DPERL_GLOBAL_STRUCT> or C<-DPERL_GLOBAL_STRUCT_PRIVATE>
have been fixed (by disabling Thread Safety Analysis for these configurations).

=back

=head1 Platform Support

=head2 Platform-Specific Notes

=over 4

=item VMS

=over 4

=item *

C<configure.com> now recognizes the VSI-branded C compiler.

=back

=item Windows

=over 4

=item *

Building XS modules with GCC 6 in a 64-bit build of Perl failed due to
incorrect mapping of C<strtoll> and C<strtoull>.  This has now been fixed.
L<[GH #16074]|https://github.com/Perl/perl5/issues/16074>
L<[cpan #121683]|https://rt.cpan.org/Public/Bug/Display.html?id=121683>
L<[cpan #122353]|https://rt.cpan.org/Public/Bug/Display.html?id=122353>

=back

=back

=head1 Selected Bug Fixes

=over 4

=item *

C<< /@0{0*-E<gt>@*/*0 >> and similar contortions used to crash, but no longer
do, but merely produce a syntax error.
L<[GH #15333]|https://github.com/Perl/perl5/issues/15333>

=item *

C<do> or C<require> with an argument which is a reference or typeglob which,
when stringified, contains a null character, started crashing in Perl 5.20, but
has now been fixed.
L<[GH #15337]|https://github.com/Perl/perl5/issues/15337>

=item *

Expressions containing an C<&&> or C<||> operator (or their synonyms C<and> and
C<or>) were being compiled incorrectly in some cases.  If the left-hand side
consisted of either a negated bareword constant or a negated C<do {}> block
containing a constant expression, and the right-hand side consisted of a
negated non-foldable expression, one of the negations was effectively ignored.
The same was true of C<if> and C<unless> statement modifiers, though with the
left-hand and right-hand sides swapped.  This long-standing bug has now been
fixed.
L<[GH #15285]|https://github.com/Perl/perl5/issues/15285>

=item *

C<reset> with an argument no longer crashes when encountering stash entries
other than globs.
L<[GH #15314]|https://github.com/Perl/perl5/issues/15314>

=item *

Assignment of hashes to, and deletion of, typeglobs named C<*::::::> no longer
causes crashes.
L<[GH #15307]|https://github.com/Perl/perl5/issues/15307>

=item *

Assignment variants of any bitwise ops under the C<bitwise> feature would crash
if the left-hand side was an array or hash.
L<[GH #15346]|https://github.com/Perl/perl5/issues/15346>

=item *

C<socket> now leaves the error code returned by the system in C<$!> on failure.
L<[GH #15383]|https://github.com/Perl/perl5/issues/15383>

=item *

Parsing bad POSIX charclasses no longer leaks memory.
L<[GH #15382]|https://github.com/Perl/perl5/issues/15382>

=item *

Since Perl 5.20, line numbers have been off by one when perl is invoked with
the B<-x> switch.  This has been fixed.
L<[GH #15413]|https://github.com/Perl/perl5/issues/15413>

=item *

Some obscure cases of subroutines and file handles being freed at the same time
could result in crashes, but have been fixed.  The crash was introduced in Perl
5.22.
L<[GH #15435]|https://github.com/Perl/perl5/issues/15435>

=item *

Some regular expression parsing glitches could lead to assertion failures with
regular expressions such as C</(?E<lt>=/> and C</(?E<lt>!/>.  This has now been
fixed.
L<[GH #15332]|https://github.com/Perl/perl5/issues/15332>

=item *

C<gethostent> and similar functions now perform a null check internally, to
avoid crashing with the torsocks library.  This was a regression from Perl
5.22.
L<[GH #15478]|https://github.com/Perl/perl5/issues/15478>

=item *

Mentioning the same constant twice in a row (which is a syntax error) no longer
fails an assertion under debugging builds.  This was a regression from Perl
