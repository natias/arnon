	"Cham",
	"cham",
	"Cher",
	"cher",
	"Cherokee",
	"cherokee",
	"Chorasmian",
	"chorasmian",
	"Chrs",
	"chrs",
	"Common",
	"common",
	"Copt",
	"copt",
	"Coptic",
	"coptic",
	"Cpmn",
	"cpmn",
	"Cprt",
	"cprt",
	"Cuneiform",
	"cuneiform",
	"Cypriot",
	"cypriot",
	"Cypro_Minoan",
	"cyprominoan",
	"Cyrillic",
	"cyrillic",
	"Cyrl",
	"cyrl",
	"Deseret",
	"deseret",
	"Deva",
	"deva",
	"Devanagari",
	"devanagari",
	"Diak",
	"diak",
	"Dives_Akuru",
	"divesakuru",
	"Dogr",
	"dogr",
	"Dogra",
	"dogra",
	"Dsrt",
	"dsrt",
	"Dupl",
	"dupl",
	"Duployan",
	"duployan",
	"Egyp",
	"egyp",
	"Egyptian_Hieroglyphs",
	"egyptianhieroglyphs",
	"Elba",
	"elba",
	"Elbasan",
	"elbasan",
	"Elym",
	"elym",
	"Elymaic",
	"elymaic",
	"Ethi",
	"ethi",
	"Ethiopic",
	"ethiopic",
	"Geor",
	"geor",
	"Georgian",
	"georgian",
	"Glag",
	"glag",
	"Glagolitic",
	"glagolitic",
	"Gong",
	"gong",
	"Gonm",
	"gonm",
	"Goth",
	"goth",
	"Gothic",
	"gothic",
	"Gran",
	"gran",
	"Grantha",
	"grantha",
	"Greek",
	"greek",
	"Grek",
	"grek",
	"Gujarati",
	"gujarati",
	"Gujr",
	"gujr",
	"Gunjala_Gondi",
	"gunjalagondi",
	"Gurmukhi",
	"gurmukhi",
	"Guru",
	"guru",
	"Han",
	"han",
	"Hang",
	"hang",
	"Hangul",
	"hangul",
	"Hani",
	"hani",
	"Hanifi_Rohingya",
	"hanifirohingya",
	"Hano",
	"hano",
	"Hanunoo",
	"hanunoo",
	"Hatr",
	"hatr",
	"Hatran",
	"hatran",
	"Hebr",
	"hebr",
	"Hebrew",
	"hebrew",
	"Hira",
	"hira",
	"Hiragana",
	"hiragana",
	"Hluw",
	"hluw",
	"Hmng",
	"hmng",
	"Hmnp",
	"hmnp",
	"Hung",
	"hung",
	"Imperial_Aramaic",
	"imperialaramaic",
	"Inherited",
	"inherited",
	"Inscriptional_Pahlavi",
	"inscriptionalpahlavi",
	"Inscriptional_Parthian",
	"inscriptionalparthian",
	"Ital",
	"ital",
	"Java",
	"java",
	"Javanese",
	"javanese",
	"Kaithi",
	"kaithi",
	"Kali",
	"kali",
	"Kana",
	"kana",
	"Kannada",
	"kannada",
	"Katakana",
	"katakana",
	"Kawi",
	"kawi",
	"Kayah_Li",
	"kayahli",
	"Khar",
	"khar",
	"Kharoshthi",
	"kharoshthi",
	"Khitan_Small_Script",
	"khitansmallscript",
	"Khmer",
	"khmer",
	"Khmr",
	"khmr",
	"Khoj",
	"khoj",
	"Khojki",
	"khojki",
	"Khudawadi",
	"khudawadi",
	"Kits",
	"kits",
	"Knda",
	"knda",
	"Kthi",
	"kthi",
	"Lana",
	"lana",
	"Lao",
	"lao",
	"Laoo",
	"laoo",
	"Latin",
	"latin",
	"Latn",
	"latn",
	"Lepc",
	"lepc",
	"Lepcha",
	"lepcha",
	"Limb",
	"limb",
	"Limbu",
	"limbu",
	"Lina",
	"lina",
	"Linb",
	"linb",
	"Linear_A",
	"lineara",
	"Linear_B",
	"linearb",
	"Lisu",
	"lisu",
	"Lyci",
	"lyci",
	"Lycian",
	"lycian",
	"Lydi",
	"lydi",
	"Lydian",
	"lydian",
	"Mahajani",
	"mahajani",
	"Mahj",
	"mahj",
	"Maka",
	"maka",
	"Makasar",
	"makasar",
	"Malayalam",
	"malayalam",
	"Mand",
	"mand",
	"Mandaic",
	"mandaic",
	"Mani",
	"mani",
	"Manichaean",
	"manichaean",
	"Marc",
	"marc",
	"Marchen",
	"marchen",
	"Masaram_Gondi",
	"masaramgondi",
	"Medefaidrin",
	"medefaidrin",
	"Medf",
	"medf",
	"Meetei_Mayek",
	"meeteimayek",
	"Mend",
	"mend",
	"Mende_Kikakui",
	"mendekikakui",
	"Merc",
	"merc",
	"Mero",
	"mero",
	"Meroitic_Cursive",
	"meroiticcursive",
	"Meroitic_Hieroglyphs",
	"meroitichieroglyphs",
	"Miao",
	"miao",
	"Mlym",
	"mlym",
	"Modi",
	"modi",
	"Mong",
	"mong",
	"Mongolian",
	"mongolian",
	"Mro",
	"mro",
	"Mroo",
	"mroo",
	"Mtei",
	"mtei",
	"Mult",
	"mult",
	"Multani",
	"multani",
	"Myanmar",
	"myanmar",
	"Mymr",
	"mymr",
	"Nabataean",
	"nabataean",
	"Nagm",
	"nagm",
	"Nag_Mundari",
	"nagmundari",
	"Nand",
	"nand",
	"Nandinagari",
	"nandinagari",
	"Narb",
	"narb",
	"Nbat",
	"nbat",
	"Newa",
	"newa",
	"New_Tai_Lue",
	"newtailue",
	"Nko",
	"nko",
	"Nkoo",
	"nkoo",
	"Nshu",
	"nshu",
	"Nushu",
	"nushu",
	"Nyiakeng_Puachue_Hmong",
	"nyiakengpuachuehmong",
	"Ogam",
	"ogam",
	"Ogham",
	"ogham",
	"Ol_Chiki",
	"olchiki",
	"Olck",
	"olck",
	"Old_Hungarian",
	"oldhungarian",
	"Old_Italic",
	"olditalic",
	"Old_North_Arabian",
	"oldnortharabian",
	"Old_Permic",
	"oldpermic",
	"Old_Persian",
	"oldpersian",
	"Old_Sogdian",
	"oldsogdian",
	"Old_South_Arabian",
	"oldsoutharabian",
	"Old_Turkic",
	"oldturkic",
	"Old_Uyghur",
	"olduyghur",
	"Oriya",
	"oriya",
	"Orkh",
	"orkh",
	"Orya",
	"orya",
	"Osage",
	"osage",
	"Osge",
	"osge",
	"Osma",
	"osma",
	"Osmanya",
	"osmanya",
	"Ougr",
	"ougr",
	"Pahawh_Hmong",
	"pahawhhmong",
	"Palm",
	"palm",
	"Palmyrene",
	"palmyrene",
	"Pauc",
	"pauc",
	"Pau_Cin_Hau",
	"paucinhau",
	"Perm",
	"perm",
	"Phag",
	"phag",
	"Phags_Pa",
	"phagspa",
	"Phli",
	"phli",
	"Phlp",
	"phlp",
	"Phnx",
	"phnx",
	"Phoenician",
	"phoenician",
	"Plrd",
	"plrd",
	"Prti",
	"prti",
	"Psalter_Pahlavi",
	"psalterpahlavi",
	"Qaac",
	"qaac",
	"Qaai",
	"qaai",
	"Rejang",
	"rejang",
	"Rjng",
	"rjng",
	"Rohg",
	"rohg",
	"Runic",
	"runic",
	"Runr",
	"runr",
	"Samaritan",
	"samaritan",
	"Samr",
	"samr",
	"Sarb",
	"sarb",
	"Saur",
	"saur",
	"Saurashtra",
	"saurashtra",
	"Sgnw",
	"sgnw",
	"Sharada",
	"sharada",
	"Shavian",
	"shavian",
	"Shaw",
	"shaw",
	"Shrd",
	"shrd",
	"Sidd",
	"sidd",
	"Siddham",
	"siddham",
	"SignWriting",
	"signwriting",
	"Sind",
	"sind",
	"Sinh",
	"sinh",
	"Sinhala",
	"sinhala",
	"Sogd",
	"sogd",
	"Sogdian",
	"sogdian",
	"Sogo",
	"sogo",
	"Sora",
	"sora",
	"Sora_Sompeng",
	"sorasompeng",
	"Soyo",
	"soyo",
	"Soyombo",
	"soyombo",
	"Sund",
	"sund",
	"Sundanese",
	"sundanese",
	"Sylo",
	"sylo",
	"Syloti_Nagri",
	"sylotinagri",
	"Syrc",
	"syrc",
	"Syriac",
	"syriac",
	"Tagalog",
	"tagalog",
	"Tagb",
	"tagb",
	"Tagbanwa",
	"tagbanwa",
	"Tai_Le",
	"taile",
	"Tai_Tham",
	"taitham",
	"Tai_Viet",
	"taiviet",
	"Takr",
	"takr",
	"Takri",
	"takri",
	"Tale",
	"tale",
	"Talu",
	"talu",
	"Tamil",
	"tamil",
	"Taml",
	"taml",
	"Tang",
	"tang",
	"Tangsa",
	"tangsa",
	"Tangut",
	"tangut",
	"Tavt",
	"tavt",
	"Telu",
	"telu",
	"Telugu",
	"telugu",
	"Tfng",
	"tfng",
	"Tglg",
	"tglg",
	"Thaa",
	"thaa",
	"Thaana",
	"thaana",
	"Thai",
	"thai",
	"Tibetan",
	"tibetan",
	"Tibt",
	"tibt",
	"Tifinagh",
	"tifinagh",
	"Tirh",
	"tirh",
	"Tirhuta",
	"tirhuta",
	"Tnsa",
	"tnsa",
	"Toto",
	"toto",
	"Ugar",
	"ugar",
	"Ugaritic",
	"ugaritic",
	"Unknown",
	"unknown",
	"Vai",
	"vai",
	"Vaii",
	"vaii",
	"Vith",
	"vith",
	"Vithkuqi",
	"vithkuqi",
	"Wancho",
	"wancho",
	"Wara",
	"wara",
	"Warang_Citi",
	"warangciti",
	"Wcho",
	"wcho",
	"Xpeo",
	"xpeo",
	"Xsux",
	"xsux",
	"Yezi",
	"yezi",
	"Yezidi",
	"yezidi",
	"Yi",
	"yi",
	"Yiii",
	"yiii",
	"Zanabazar_Square",
	"zanabazarsquare",
	"Zanb",
	"zanb",
	"Zinh",
	"zinh",
	"Zyyy",
	"zyyy",
	"Zzzz",
	"zzzz",
	NULL
};

static const char * const UNI_vo_values[] = {
	"R",
	"r",
	"Rotated",
	"rotated",
	"Tr",
	"tr",
	"Transformed_Rotated",
	"transformedrotated",
	"Transformed_Upright",
	"transformedupright",
	"Tu",
	"tu",
	"U",
	"u",
	"Upright",
	"upright",
	NULL
};

static const char * const UNI_wb_values[] = {
	"ALetter",
	"aletter",
	"CR",
	"cr",
	"Double_Quote",
	"doublequote",
	"DQ",
	"dq",
	"EB",
	"eb",
	"E_Base",
	"ebase",
	"E_Base_GAZ",
	"ebasegaz",
	"EBG",
	"ebg",
	"EM",
	"em",
	"E_Modifier",
	"emodifier",
	"EX",
	"ex",
	"Extend",
	"extend",
	"ExtendNumLet",
	"extendnumlet",
	"FO",
	"fo",
	"Format",
	"format",
	"GAZ",
	"gaz",
	"Glue_After_Zwj",
	"glueafterzwj",
	"Hebrew_Letter",
	"hebrewletter",
	"HL",
	"hl",
	"KA",
	"ka",
	"Katakana",
	"katakana",
	"LE",
	"le",
	"LF",
	"lf",
	"MB",
	"mb",
	"MidLetter",
	"midletter",
	"MidNum",
	"midnum",
	"MidNumLet",
	"midnumlet",
	"ML",
	"ml",
	"MN",
	"mn",
	"Newline",
	"newline",
	"NL",
	"nl",
	"NU",
	"nu",
	"Numeric",
	"numeric",
	"Other",
	"other",
	"Regional_Indicator",
	"regionalindicator",
	"RI",
	"ri",
	"Single_Quote",
	"singlequote",
	"SQ",
	"sq",
	"WSegSpace",
	"wsegspace",
	"XX",
	"xx",
	"ZWJ",
	"zwj",
	NULL
};

static const char * const * const UNI_prop_value_ptrs[] = {
NULL /* Placeholder so zero index is an error */,
UNI_age_values,
UNI_ahex_values,
UNI_bc_values,
UNI_blk_values,
UNI_bpt_values,
UNI_ccc_values,
UNI_dt_values,
UNI_ea_values,
UNI_gc_values,
UNI_gcb_values,
UNI_hst_values,
UNI_identifierstatus_values,
UNI_identifiertype_values,
UNI_inpc_values,
UNI_insc_values,
UNI_jg_values,
UNI_jt_values,
UNI_lb_values,
UNI_nfcqc_values,
UNI_nfdqc_values,
UNI_nt_values,
UNI_nv_values,
UNI_sb_values,
UNI_sc_values,
UNI_vo_values,
UNI_wb_values
};


#define UNI_age_values_index  1
#define UNI_ahex_values_index  2
#define UNI_alpha_values_index  UNI_ahex_values_index
#define UNI_bc_values_index  3
#define UNI_bidic_values_index  UNI_ahex_values_index
#define UNI_bidim_values_index  UNI_ahex_values_index
#define UNI_blk_values_index  4
#define UNI_bpt_values_index  5
#define UNI_cased_values_index  UNI_ahex_values_index
#define UNI_ccc_values_index  6
#define UNI_ce_values_index  UNI_ahex_values_index
#define UNI_ci_values_index  UNI_ahex_values_index
#define UNI_compex_values_index  UNI_ahex_values_index
#define UNI_cwcf_values_index  UNI_ahex_values_index
#define UNI_cwcm_values_index  UNI_ahex_values_index
#define UNI_cwkcf_values_index  UNI_ahex_values_index
#define UNI_cwl_values_index  UNI_ahex_values_index
#define UNI_cwt_values_index  UNI_ahex_values_index
#define UNI_cwu_values_index  UNI_ahex_values_index
#define UNI_dash_values_index  UNI_ahex_values_index
#define UNI_dep_values_index  UNI_ahex_values_index
#define UNI_di_values_index  UNI_ahex_values_index
#define UNI_dia_values_index  UNI_ahex_values_index
#define UNI_dt_values_index  7
#define UNI_ea_values_index  8
#define UNI_ebase_values_index  UNI_ahex_values_index
#define UNI_ecomp_values_index  UNI_ahex_values_index
#define UNI_emod_values_index  UNI_ahex_values_index
#define UNI_emoji_values_index  UNI_ahex_values_index
#define UNI_epres_values_index  UNI_ahex_values_index
#define UNI_ext_values_index  UNI_ahex_values_index
#define UNI_extpict_values_index  UNI_ahex_values_index
#define UNI_gc_values_index  9
#define UNI_gcb_values_index  10
#define UNI_grbase_values_index  UNI_ahex_values_index
#define UNI_grext_values_index  UNI_ahex_values_index
#define UNI_hex_values_index  UNI_ahex_values_index
#define UNI_hst_values_index  11
#define UNI_hyphen_values_index  UNI_ahex_values_index
#define UNI_idc_values_index  UNI_ahex_values_index
#define UNI_identifierstatus_values_index  12
#define UNI_identifiertype_values_index  13
#define UNI_ideo_values_index  UNI_ahex_values_index
#define UNI_ids_values_index  UNI_ahex_values_index
#define UNI_idsb_values_index  UNI_ahex_values_index
#define UNI_idst_values_index  UNI_ahex_values_index
#define UNI_in_values_index  UNI_age_values_index
#define UNI_inpc_values_index  14
#define UNI_insc_values_index  15
#define UNI_jg_values_index  16
#define UNI_joinc_values_index  UNI_ahex_values_index
#define UNI_jt_values_index  17
#define UNI_lb_values_index  18
#define UNI_loe_values_index  UNI_ahex_values_index
#define UNI_lower_values_index  UNI_ahex_values_index
#define UNI_math_values_index  UNI_ahex_values_index
#define UNI_nchar_values_index  UNI_ahex_values_index
#define UNI_nfcqc_values_index  19
#define UNI_nfdqc_values_index  20
#define UNI_nfkcqc_values_index  UNI_nfcqc_values_index
#define UNI_nfkdqc_values_index  UNI_nfdqc_values_index
#define UNI_nt_values_index  21
#define UNI_nv_values_index  22
#define UNI_patsyn_values_index  UNI_ahex_values_index
#define UNI_patws_values_index  UNI_ahex_values_index
#define UNI_pcm_values_index  UNI_ahex_values_index
#define UNI_qmark_values_index  UNI_ahex_values_index
#define UNI_radical_values_index  UNI_ahex_values_index
#define UNI_ri_values_index  UNI_ahex_values_index
#define UNI_sb_values_index  23
#define UNI_sc_values_index  24
#define UNI_scx_values_index  UNI_sc_values_index
#define UNI_sd_values_index  UNI_ahex_values_index
#define UNI_sterm_values_index  UNI_ahex_values_index
#define UNI_term_values_index  UNI_ahex_values_index
#define UNI_uideo_values_index  UNI_ahex_values_index
#define UNI_upper_values_index  UNI_ahex_values_index
#define UNI_vo_values_index  25
#define UNI_vs_values_index  UNI_ahex_values_index
#define UNI_wb_values_index  26
#define UNI_wspace_values_index  UNI_ahex_values_index
#define UNI_xidc_values_index  UNI_ahex_values_index
#define UNI_xids_values_index  UNI_ahex_values_index

#endif	/* (defined(PERL_IN_REGCOMP_C) && ! defined(PERL_IN_XSUB_RE)) */

#if defined(PERL_IN_REGEXEC_C)

#define GCB_NOBREAK                0
#define GCB_BREAKABLE              1
#define GCB_RI_then_RI             2
#define GCB_EX_then_EM             3
#define GCB_Maybe_Emoji_NonBreak   4

static const U8 GCB_table[17][17] = {
   /* 'edg' stands for 'EDGE'; 'EPX' stands for 'ExtPict_XX'; u
    * stands for 'unused in this Unicode release (and the data in
    * its row and column are garbage) */
/*        XX CN CR edg EPX EX  L LF LV LVT PP RI SM  T  V ZWJ  u */
/* XX */ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 1, 1,  0, 1 },
/* CN */ { 1, 1, 1,  1,  1, 1, 1, 1, 1,  1, 1, 1, 1, 1, 1,  1, 1 },
/* CR */ { 1, 1, 1,  1,  1, 1, 1, 0, 1,  1, 1, 1, 1, 1, 1,  1, 1 },
/* edg*/ { 1, 1, 1,  0,  1, 1, 1, 1, 1,  1, 1, 1, 1, 1, 1,  1, 1 },
/* EPX*/ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 1, 1,  0, 1 },
/* EX */ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 1, 1,  0, 3 },
/* L  */ { 1, 1, 1,  1,  1, 0, 0, 1, 0,  0, 1, 1, 0, 1, 0,  0, 1 },
/* LF */ { 1, 1, 1,  1,  1, 1, 1, 1, 1,  1, 1, 1, 1, 1, 1,  1, 1 },
/* LV */ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 0, 0,  0, 1 },
/* LVT*/ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 0, 1,  0, 1 },
/* PP */ { 0, 1, 1,  1,  0, 0, 0, 1, 0,  0, 0, 0, 0, 0, 0,  0, 0 },
/* RI */ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 2, 0, 1, 1,  0, 1 },
/* SM */ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 1, 1,  0, 1 },
/* T  */ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 0, 1,  0, 1 },
/* V  */ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 0, 0,  0, 1 },
/* ZWJ*/ { 1, 1, 1,  1,  4, 0, 1, 1, 1,  1, 1, 1, 0, 1, 1,  0, 0 },
/* u  */ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 1, 1,  0, 0 }
};

#define LB_NOBREAK                        0
#define LB_BREAKABLE                      1
#define LB_NOBREAK_EVEN_WITH_SP_BETWEEN   2
#define LB_CM_ZWJ_foo                     3
#define LB_SP_foo                         6
#define LB_PR_or_PO_then_OP_or_HY         9
#define LB_SY_or_IS_then_various         11
#define LB_HY_or_BA_then_foo             13
#define LB_RI_then_RI                    15
#define LB_various_then_PO_or_PR         32

static const U8 LB_table[42][42] = {
   /* 'EAO' stands for 'East_Asian_OP'; 'edg' stands for 'EDGE'; 'UEP' stands for 'Unassigned_Extended_Pictographic_Ideographic'; u stands for
    * 'unused in this Unicode release (and the data in its row and column are garbage) */
/*        AL B2 BA BB BK CB CL CM CP CR EAO EB edg EM EX GL H2 H3 HL HY ID IN IS JL JT JV LF NL NS NU OP PO PR QU RI SP SY UEP WJ ZW ZWJ  u */
/* AL */ { 0, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 0, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* B2 */ { 1, 2, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* BA */ {14,14, 0,14, 0, 1, 2, 0, 2, 0, 14,14,  1,14, 2,14,14,14,14, 0,14,13, 2,14,14,14, 0, 0, 0,14,14,14,14, 0,14, 0, 2, 14, 0, 0,  0, 2 },
/* BB */ { 0, 0, 0, 0, 0, 1, 2, 0, 2, 0,  0, 0,  1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,  0, 0, 0,  0, 2 },
/* BK */ { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1, 1,  1, 1 },
/* CB */ { 1, 1, 1, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* CL */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 2, 1, 1,33,33, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* CM */ { 3, 3, 3, 3, 0, 3, 3, 0, 3, 0,  3, 3,  1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 3,  3, 3, 0,  3, 3 },
/* CP */ { 0, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 0, 0, 1, 0, 2, 1, 1, 1, 0, 0, 2, 0, 1,33,33, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* CR */ { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1, 1,  1, 1 },
/* EAO*/ { 2, 2, 2, 2, 0, 2, 2, 2, 2, 0,  2, 2,  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2,  2, 2, 0,  2, 2 },
/* EB */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 0, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* edg*/ { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0 },
/* EM */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* EX */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* GL */ { 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,  0, 0,  1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,  0, 0, 0,  0, 2 },
/* H2 */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* H3 */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* HL */ { 0, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 0, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* HY */ {14,14, 0,14, 0, 1, 2, 0, 2, 0, 14,14,  1,14, 2,14,14,14,14, 0,14,13, 2,14,14,14, 0, 0, 0,13,14,14,14, 0,14, 0, 2, 14, 0, 0,  0, 2 },
/* ID */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* IN */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* IS */ { 0, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 0, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0,12, 1,33,33, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* JL */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* JT */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* JV */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* LF */ { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1, 1,  1, 1 },
/* NL */ { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1, 1,  1, 1 },
/* NS */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* NU */ { 0, 1, 0, 1, 0, 1, 0, 0, 0, 0,  1, 1,  1, 1, 2, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  1, 0, 0,  0, 0 },
/* OP */ { 2, 2, 2, 2, 0, 2, 2, 2, 2, 0,  2, 2,  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2,  2, 2, 0,  2, 2 },
/* PO */ { 0, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 0, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 0,10, 1, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* PR */ { 0, 1, 0, 1, 0, 1, 2, 0, 2, 0, 10, 0,  1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,10, 1, 1, 0, 1, 0, 2,  0, 0, 0,  0, 2 },
/* QU */ { 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,  2, 0,  1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2,  0, 0, 0,  0, 2 },
/* RI */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0,15, 0, 2,  1, 0, 0,  0, 2 },
/* SP */ { 7, 7, 7, 7, 0, 7, 8, 7, 8, 0,  7, 7,  1, 7, 8, 7, 7, 7, 7, 7, 7, 7, 8, 7, 7, 7, 0, 0, 7, 7, 7, 7, 7, 7, 7, 0, 8,  7, 8, 0,  7, 8 },
/* SY */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 0, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0,12, 1,33,33, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* UEP*/ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 0, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* WJ */ { 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,  0, 0,  1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,  0, 0, 0,  0, 2 },
/* ZW */ { 1, 1, 1, 1, 0, 1, 1, 1, 1, 0,  1, 1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1,  1, 1, 0,  1, 1 },
/* ZWJ*/ { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0,  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0 },
/* u  */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 2, 1, 1,33,33, 0, 1, 0, 2,  1, 0, 0,  0, 2 }
};

#define WB_NOBREAK                        0
#define WB_BREAKABLE                      1
#define WB_hs_then_hs                     2
#define WB_Ex_or_FO_or_ZWJ_then_foo       3
#define WB_DQ_then_HL                     4
#define WB_HL_then_DQ                     6
#define WB_LE_or_HL_then_MB_or_ML_or_SQ   8
#define WB_MB_or_ML_or_SQ_then_LE_or_HL  10
#define WB_MB_or_MN_or_SQ_then_NU        12
#define WB_NU_then_MB_or_MN_or_SQ        14
#define WB_RI_then_RI                    16

static const U8 WB_table[23][23] = {
   /* 'edg' stands for 'EDGE'; 'EPL' stands for 'ExtPict_LE'; 'EPX' stands for
    * 'ExtPict_XX'; 'Ext' stands for 'Extend'; 'hs' stands for 'Perl_Tailored_HSpace';
    * u stands for 'unused in this Unicode release (and the data in its row and column
    * are garbage) */
/*        XX CR DQ edg EPL EPX EX Ext FO HL hs KA LE LF MB ML MN NL NU RI SQ ZWJ  u */
/* XX */ { 1, 1, 1,  1,  1,  1, 1,  0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  0, 1 },
/* CR */ { 1, 0, 1,  1,  1,  1, 1,  1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,  1, 1 },
/* DQ */ { 1, 1, 1,  1,  1,  1, 1,  0, 0, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  0, 1 },
/* edg*/ { 1, 1, 1,  0,  1,  1, 1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1 },
/* EPL*/ { 1, 1, 1,  1,  0,  1, 0,  0, 0, 0, 1, 1, 0, 1, 9, 9, 1, 1, 0, 1, 9,  0, 1 },
/* EPX*/ { 1, 1, 1,  1,  1,  1, 1,  0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  0, 1 },
/* EX */ { 1, 1, 1,  1,  0,  1, 0,  0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,  0, 1 },
/* Ext*/ { 3, 1, 3,  1,  3,  3, 3,  0, 0, 3, 1, 3, 3, 1, 3, 3, 3, 1, 3, 3, 3,  0, 3 },
/* FO */ { 3, 1, 3,  1,  3,  3, 3,  0, 0, 3, 1, 3, 3, 1, 3, 3, 3, 1, 3, 3, 3,  0, 3 },
/* HL */ { 1, 1, 7,  1,  0,  1, 0,  0, 0, 0, 1, 1, 0, 1, 9, 9, 1, 1, 0, 1, 8,  0, 1 },
/* hs */ { 1, 0, 1,  1,  1,  1, 1,  0, 0, 1, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,  0, 1 },
/* KA */ { 1, 1, 1,  1,  1,  1, 0,  0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,  0, 1 },
/* LE */ { 1, 1, 1,  1,  1,  1, 0,  0, 0, 0, 1, 1, 0, 1, 9, 9, 1, 1, 0, 1, 9,  0, 1 },
/* LF */ { 1, 0, 1,  1,  1,  1, 1,  1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,  1, 1 },
/* MB */ { 1, 1, 1,  1, 11,  1, 1,  0, 0,11, 1, 1,11, 1, 1, 1, 1, 1,13, 1, 1,  0, 1 },
/* ML */ { 1, 1, 1,  1, 11,  1, 1,  0, 0,11, 1, 1,11, 1, 1, 1, 1, 1, 1, 1, 1,  0, 1 },
/* MN */ { 1, 1, 1,  1,  1,  1, 1,  0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,13, 1, 1,  0, 1 },
/* NL */ { 1, 0, 1,  1,  1,  1, 1,  1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,  1, 1 },
/* NU */ { 1, 1, 1,  1,  0,  1, 0,  0, 0, 0, 1, 1, 0, 1,15, 1,15, 1, 0, 1,15,  0, 1 },
/* RI */ { 1, 1, 1,  1,  1,  1, 1,  0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,16, 1,  0, 1 },
/* SQ */ { 1, 1, 1,  1, 11,  1, 1,  0, 0,11, 1, 1,11, 1, 1, 1, 1, 1,13, 1, 1,  0, 1 },
/* ZWJ*/ { 3, 1, 3,  1,  0,  0, 3,  0, 0, 3, 1, 3, 3, 1, 3, 3, 3, 1, 3, 3, 3,  0, 0 },
/* u  */ { 1, 1, 1,  1,  1,  1, 1,  0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  0, 0 }
};

#endif	/* defined(PERL_IN_REGEXEC_C) */

/* More than one code point may have the same code point as their fold.  This
 * gives the maximum number in the current Unicode release.  (The folded-to
 * code point is not included in this count.)  For example, both 'S' and
 * \x{17F} fold to 's', so the number for that fold is 2.  Another way to
 * look at it is the maximum length of all the IVCF_AUX_TABLE's */
#define MAX_FOLD_FROMS 3

/* Generated from:
 * 688d673ec947f7ccf898b4eae9848139d4d33676b688dee54f449f8bf9d3bbd2 lib/Unicode/UCD.pm
 * eb840f36e0a7446293578c684a54c6d83d249abde7bdd4dfa89794af1d7fe9e9 lib/unicore/ArabicShaping.txt
 * 333ae1e99db0504ca8a046a07dc45b5e7aa91869c685e6bf955ebe674804827a lib/unicore/BidiBrackets.txt
 * b4b9e1d87d8ea273613880de9d2b2f0b0b696244b42152bfa0a3106e7d983a20 lib/unicore/BidiMirroring.txt
 * 529dc5d0f6386d52f2f56e004bbfab48ce2d587eea9d38ba546c4052491bd820 lib/unicore/Blocks.txt
 * cdd49e55eae3bbf1f0a3f6580c974a0263cb86a6a08daa10fbf705b4808a56f7 lib/unicore/CaseFolding.txt
 * 3b019c0a33c3140cbc920c078f4f9af2680ba4f71869c8d4de5190667c70b6a3 lib/unicore/CompositionExclusions.txt
 * 7570877e0fa197c45338f7c41a02636da4e14c8dba6a3611a01cd30bf329d5ca lib/unicore/DAge.txt
 * d367290bc0867e6b484c68370530bdd1a08b6b32404601b8c7accaf83e05628d lib/unicore/DCoreProperties.txt
 * d5687a48c95c7d6e1ec59cb29c0f2e8b052018eb069a4371b7368d0561e12a29 lib/unicore/DNormalizationProps.txt
 * 743e7bc435c04ab1a8459710b1c3cad56eedced5b806b4659b6e69b85d0adf2a lib/unicore/EastAsianWidth.txt
 * f2e04bae8c856fad3a16353a99d4cc2de6c72770260379f5e4974a97548aad2a lib/unicore/EquivalentUnifiedIdeograph.txt
 * 9a3ab36d36a22bdb84de7a17b17e9b9c242134f0080f0a8b4b28d209465a8fc8 lib/unicore/HangulSyllableType.txt
 * 790bc9595795c0e0a3860a21a7f97157a134b61a4fc4ab03c7d315d07c9a6eb7 lib/unicore/IdStatus.txt
 * 71d3ed8f15cd5d8cd00cdebe62015ff26356462774b261b4a2b83d3bf46b1639 lib/unicore/IdType.txt
 * 0ce56c1294da405c0a0a0071582ac839fd229bbf97bdd260462ee571309d4ec4 lib/unicore/IndicPositionalCategory.txt
 * ffae561a51b47ddbbe267fdd8505ac3776b85b2932268809127acee84200b573 lib/unicore/IndicSyllabicCategory.txt
 * 14733bcb6731ae0c07485bf59a41cb3db08785a50bd2b46b836b4341eab7ee46 lib/unicore/Jamo.txt
 * 012bca868e2c4e59a5a10a7546baf0c6fb1b2ef458c277f054915c8a49d292bf lib/unicore/LineBreak.txt
 * 3e39509e8fae3e5d50ba73759d0b97194501d14a9c63107a6372a46b38be18e8 lib/unicore/NameAliases.txt
 * 1d5202155f14841973aa540b1625f4befbde185ac77ce5aceaaaa0501a68bd66 lib/unicore/NamedSequences.txt
 * fb9ac8cc154a80cad6caac9897af55a4e75176af6f4e2bb6edc2bf8b1d57f326 lib/unicore/NormTest.txt
 * e05c0a2811d113dae4abd832884199a3ea8d187ee1b872d8240a788a96540bfd lib/unicore/PropList.txt
 * 13a7666843abea5c6b7eb8c057c57ab9bb2ba96cfc936e204224dd67d71cafad lib/unicore/PropValueAliases.txt
 * e4935149af407fa455901832b710bccb63d2453e46d09190e234d019bcfbba45 lib/unicore/PropertyAliases.txt
 * 7e07313d9d0bee42220c476b64485995130ae30917bbcf7780b602d677d7e33f lib/unicore/ScriptExtensions.txt
 * cca85d830f46aece2e7c1459ef1249993dca8f2e46d51e869255be140d7ea4b0 lib/unicore/Scripts.txt
 * 78b29c64b5840d25c11a9f31b665ee551b8a499eca6c70d770fcad7dd710f494 lib/unicore/SpecialCasing.txt
 * 806e9aed65037197f1ec85e12be6e8cd870fc5608b4de0fffd990f689f376a73 lib/unicore/UnicodeData.txt
 * ca6d332f485a6f5f452b29b4a74146af0f2c17b7577aa4c821d597210f70611a lib/unicore/VerticalOrientation.txt
 * 0d2080d0def294a4b7660801cc03ddfe5866ff300c789c2cc1b50fd7802b2d97 lib/unicore/auxiliary/GCBTest.txt
 * 5a0f8748575432f8ff95e1dd5bfaa27bda1a844809e17d6939ee912bba6568a1 lib/unicore/auxiliary/GraphemeBreakProperty.txt
 * 371bde4052aa593b108684ae292d8ea2dbb93c19990e0cdf416fa7239557aac3 lib/unicore/auxiliary/LBTest.txt
 * f62279d8fd10935ba0cf0d8417a1dcbe7ab0d4e62f59c17e02cbe40f580c4162 lib/unicore/auxiliary/SBTest.txt
 * 61e4ba975b0a5bc1a76ee931b94914395d7289ef624e3c0d4d6b9460ee387bea lib/unicore/auxiliary/SentenceBreakProperty.txt
 * 2a676130c71194245e7c74a837e58330f202600d8ddcf4518129dd476f26e18e lib/unicore/auxiliary/WBTest.txt
 * 5188a56e91593467c2e912601ebc78750e6adc9b04541b8c5becb5441e388ce2 lib/unicore/auxiliary/WordBreakProperty.txt
 * 29071dba22c72c27783a73016afb8ffaeb025866740791f9c2d0b55cc45a3470 lib/unicore/emoji/emoji.txt
 * 4841f2090c2dbc592d3ce43bb74c2191b3da50fb9a0d00274f1448c202851b02 lib/unicore/extracted/DBidiClass.txt
 * f10a35451429137f7348825f22d624b6390c526ead3d8e756d2af9e5ed5b2b67 lib/unicore/extracted/DBinaryProperties.txt
 * ca54f6360cd288ad92113415bf1f77749015abe11cbd6798d21f7fa81f04205d lib/unicore/extracted/DCombiningClass.txt
 * db059ce45e3cec49bfda56e262fa658b3a5561b1648de266c818d2a08a85b78a lib/unicore/extracted/DDecompositionType.txt
 * d62e6950f086e53f47c593a38342621f8838f48c49a1de070cf83d3959bd1688 lib/unicore/extracted/DEastAsianWidth.txt
 * fe29a45c0882500e591140aaa5c4f5067e6a5d746806148af34400c48b9c06f9 lib/unicore/extracted/DGeneralCategory.txt
 * e13ca1344b16023aa38c6ada39f9658536fc6bb7c3c24d579f0bc316a4f4f1e0 lib/unicore/extracted/DJoinGroup.txt
 * c4870b11e2b8b7d0eb70b99ce85608e5c28a399efa316cca97238a58ae160e5e lib/unicore/extracted/DJoinType.txt
 * 3f4f32ed2a577344a508114527e721d7a8b633d32f38945d47fe0c743650c585 lib/unicore/extracted/DLineBreak.txt
 * 710abf2d581ac9c57f244c0834f9d9969d9781e0396adccd330eaae658ac7d6b lib/unicore/extracted/DNumType.txt
 * 6bd30f385f3baf3ab5d5308c111a81de87bea5f494ba0ba69e8ab45263b8c34d lib/unicore/extracted/DNumValues.txt
 * 8968a5ee00063fa31ff15474b95ccb6b9c228e3ebad6c20bc77f4225187e2023 lib/unicore/mktables
 * 55d90fdc3f902e5c0b16b3378f9eaa36e970a1c09723c33de7d47d0370044012 lib/unicore/version
 * 0a6b5ab33bb1026531f816efe81aea1a8ffcd34a27cbea37dd6a70a63d73c844 regen/charset_translations.pl
 * c7ff8e0d207d3538c7feb4a1a152b159e5e902d20293b303569ea8323e84633e regen/mk_PL_charclass.pl
 * cdbafee25193032242e77f2a6332b731d8392ce342fa616dbabc2c14c7b44eb6 regen/mk_invlists.pl
 * ex: set ro ft=c: */
                                                                                                                                                                                                                                                                                                                                                                                                                usr/local/lib/perl5/5.40.0/x86_64-linux-gnu/CORE/config.h                                           0000444 0000000 0000000 00000512242 14714567415 020542  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        /* This file was produced by running the config_h.SH script, which
 * gets its values from config.sh, which is generally produced by
 * running Configure.
 *
 * Feel free to modify any of this as the need arises.  Note, however,
 * that running config_h.SH again will wipe out any changes you've made.
 * For a more permanent change edit config.sh and rerun config_h.SH.
 */

/* Package name      : perl5
 * Source directory  : .
 * Configuration time: Tue Nov 12 05:54:27 UTC 2024
 * Configured by     : root
