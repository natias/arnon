	0xD5F,
	0xD70,
	0xD79,
	0xF2A,
	0xF34,
	0x1372,
	0x137D,
	0x16EE,
	0x16F1,
	0x17F0,
	0x17FA,
	0x2150,
	0x2183,
	0x2185,
	0x218A,
	0x2469,
	0x2474,
	0x247D,
	0x2488,
	0x2491,
	0x249C,
	0x24EB,
	0x24F5,
	0x24FE,
	0x24FF,
	0x277F,
	0x2780,
	0x2789,
	0x278A,
	0x2793,
	0x2794,
	0x2CFD,
	0x2CFE,
	0x3007,
	0x3008,
	0x3021,
	0x302A,
	0x3038,
	0x303B,
	0x3192,
	0x3196,
	0x3220,
	0x322A,
	0x3248,
	0x3250,
	0x3251,
	0x3260,
	0x3280,
	0x328A,
	0x32B1,
	0x32C0,
	0x3405,
	0x3406,
	0x3483,
	0x3484,
	0x382A,
	0x382B,
	0x3B4D,
	0x3B4E,
	0x4E00,
	0x4E01,
	0x4E03,
	0x4E04,
	0x4E07,
	0x4E08,
	0x4E09,
	0x4E0A,
	0x4E5D,
	0x4E5E,
	0x4E8C,
	0x4E8D,
	0x4E94,
	0x4E95,
	0x4E96,
	0x4E97,
	0x4EBF,
	0x4EC1,
	0x4EDF,
	0x4EE0,
	0x4EE8,
	0x4EE9,
	0x4F0D,
	0x4F0E,
	0x4F70,
	0x4F71,
	0x5104,
	0x5105,
	0x5146,
	0x5147,
	0x5169,
	0x516A,
	0x516B,
	0x516C,
	0x516D,
	0x516E,
	0x5341,
	0x5342,
	0x5343,
	0x5346,
	0x534C,
	0x534D,
	0x53C1,
	0x53C5,
	0x56DB,
	0x56DC,
	0x58F1,
	0x58F2,
	0x58F9,
	0x58FA,
	0x5E7A,
	0x5E7B,
	0x5EFE,
	0x5F00,
	0x5F0C,
	0x5F0F,
	0x5F10,
	0x5F11,
	0x62FE,
	0x62FF,
	0x634C,
	0x634D,
	0x67D2,
	0x67D3,
	0x6F06,
	0x6F07,
	0x7396,
	0x7397,
	0x767E,
	0x767F,
	0x8086,
	0x8087,
	0x842C,
	0x842D,
	0x8CAE,
	0x8CAF,
	0x8CB3,
	0x8CB4,
	0x8D30,
	0x8D31,
	0x9621,
	0x9622,
	0x9646,
	0x9647,
	0x964C,
	0x964D,
	0x9678,
	0x9679,
	0x96F6,
	0x96F7,
	0xA6E6,
	0xA6F0,
	0xA830,
	0xA836,
	0xF96B,
	0xF96C,
	0xF973,
	0xF974,
	0xF978,
	0xF979,
	0xF9B2,
	0xF9B3,
	0xF9D1,
	0xF9D2,
	0xF9D3,
	0xF9D4,
	0xF9FD,
	0xF9FE,
	0x10107,
	0x10134,
	0x10140,
	0x10179,
	0x1018A,
	0x1018C,
	0x102E1,
	0x102FC,
	0x10320,
	0x10324,
	0x10341,
	0x10342,
	0x1034A,
	0x1034B,
	0x103D1,
	0x103D6,
	0x10858,
	0x10860,
	0x10879,
	0x10880,
	0x108A7,
	0x108B0,
	0x108FB,
	0x10900,
	0x10916,
	0x1091C,
	0x109BC,
	0x109BE,
	0x109C0,
	0x109D0,
	0x109D2,
	0x10A00,
	0x10A44,
	0x10A49,
	0x10A7D,
	0x10A7F,
	0x10A9D,
	0x10AA0,
	0x10AEB,
	0x10AF0,
	0x10B58,
	0x10B60,
	0x10B78,
	0x10B80,
	0x10BA9,
	0x10BB0,
	0x10CFA,
	0x10D00,
	0x10E69,
	0x10E7F,
	0x10F1D,
	0x10F27,
	0x10F51,
	0x10F55,
	0x10FC5,
	0x10FCC,
	0x1105B,
	0x11066,
	0x111E1,
	0x111F5,
	0x1173A,
	0x1173C,
	0x118EA,
	0x118F3,
	0x11C5A,
	0x11C6D,
	0x11FC0,
	0x11FD5,
	0x12400,
	0x1246F,
	0x16B5B,
	0x16B62,
	0x16E80,
	0x16E97,
	0x1D2E0,
	0x1D2F4,
	0x1D360,
	0x1D379,
	0x1E8C7,
	0x1E8D0,
	0x1EC71,
	0x1ECAC,
	0x1ECAD,
	0x1ECB0,
	0x1ECB1,
	0x1ECB5,
	0x1ED01,
	0x1ED2E,
	0x1ED2F,
	0x1ED3E,
	0x1F10B,
	0x1F10D,
	0x20001,
	0x20002,
	0x20064,
	0x20065,
	0x200E2,
	0x200E3,
	0x20121,
	0x20122,
	0x2092A,
	0x2092B,
	0x20983,
	0x20984,
	0x2098C,
	0x2098D,
	0x2099C,
	0x2099D,
	0x20AEA,
	0x20AEB,
	0x20AFD,
	0x20AFE,
	0x20B19,
	0x20B1A,
	0x22390,
	0x22391,
	0x22998,
	0x22999,
	0x23B1B,
	0x23B1C,
	0x2626D,
	0x2626E,
	0x2F890,
	0x2F891
};

#  endif	/* EBCDIC 037 */

static const UV UNI_NUMBERFORMS_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2150,
	0x2190
};

static const UV UNI_NV___MINUS_1_SLASH_2_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF33,
	0xF34
};

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_NV__0_invlist[] = {  /* for ASCII/Latin1 */
	165,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x30,
	0x31,
	0x660,
	0x661,
	0x6F0,
	0x6F1,
	0x7C0,
	0x7C1,
	0x966,
	0x967,
	0x9E6,
	0x9E7,
	0xA66,
	0xA67,
	0xAE6,
	0xAE7,
	0xB66,
	0xB67,
	0xBE6,
	0xBE7,
	0xC66,
	0xC67,
	0xC78,
	0xC79,
	0xCE6,
	0xCE7,
	0xD66,
	0xD67,
	0xDE6,
	0xDE7,
	0xE50,
	0xE51,
	0xED0,
	0xED1,
	0xF20,
	0xF21,
	0x1040,
	0x1041,
	0x1090,
	0x1091,
	0x17E0,
	0x17E1,
	0x17F0,
	0x17F1,
	0x1810,
	0x1811,
	0x1946,
	0x1947,
	0x19D0,
	0x19D1,
	0x1A80,
	0x1A81,
	0x1A90,
	0x1A91,
	0x1B50,
	0x1B51,
	0x1BB0,
	0x1BB1,
	0x1C40,
	0x1C41,
	0x1C50,
	0x1C51,
	0x2070,
	0x2071,
	0x2080,
	0x2081,
	0x2189,
	0x218A,
	0x24EA,
	0x24EB,
	0x24FF,
	0x2500,
	0x3007,
	0x3008,
	0x96F6,
	0x96F7,
	0xA620,
	0xA621,
	0xA6EF,
	0xA6F0,
	0xA8D0,
	0xA8D1,
	0xA900,
	0xA901,
	0xA9D0,
	0xA9D1,
	0xA9F0,
	0xA9F1,
	0xAA50,
	0xAA51,
	0xABF0,
	0xABF1,
	0xF9B2,
	0xF9B3,
	0xFF10,
	0xFF11,
	0x1018A,
	0x1018B,
	0x104A0,
	0x104A1,
	0x10D30,
	0x10D31,
	0x11066,
	0x11067,
	0x110F0,
	0x110F1,
	0x11136,
	0x11137,
	0x111D0,
	0x111D1,
	0x112F0,
	0x112F1,
	0x11450,
	0x11451,
	0x114D0,
	0x114D1,
	0x11650,
	0x11651,
	0x116C0,
	0x116C1,
	0x11730,
	0x11731,
	0x118E0,
	0x118E1,
	0x11950,
	0x11951,
	0x11C50,
	0x11C51,
	0x11D50,
	0x11D51,
	0x11DA0,
	0x11DA1,
	0x16A60,
	0x16A61,
	0x16AC0,
	0x16AC1,
	0x16B50,
	0x16B51,
	0x16E80,
	0x16E81,
	0x1D2E0,
	0x1D2E1,
	0x1D7CE,
	0x1D7CF,
	0x1D7D8,
	0x1D7D9,
	0x1D7E2,
	0x1D7E3,
	0x1D7EC,
	0x1D7ED,
	0x1D7F6,
	0x1D7F7,
	0x1E140,
	0x1E141,
	0x1E2F0,
	0x1E2F1,
	0x1E950,
	0x1E951,
	0x1F100,
	0x1F102,
	0x1F10B,
	0x1F10D,
	0x1FBF0,
	0x1FBF1
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_NV__0_invlist[] = {  /* for EBCDIC 1047 */
	165,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF0,
	0xF1,
	0x660,
	0x661,
	0x6F0,
	0x6F1,
	0x7C0,
	0x7C1,
	0x966,
	0x967,
	0x9E6,
	0x9E7,
	0xA66,
	0xA67,
	0xAE6,
	0xAE7,
	0xB66,
	0xB67,
	0xBE6,
	0xBE7,
	0xC66,
	0xC67,
	0xC78,
	0xC79,
	0xCE6,
	0xCE7,
	0xD66,
	0xD67,
	0xDE6,
	0xDE7,
	0xE50,
	0xE51,
	0xED0,
	0xED1,
	0xF20,
	0xF21,
	0x1040,
	0x1041,
	0x1090,
	0x1091,
	0x17E0,
	0x17E1,
	0x17F0,
	0x17F1,
	0x1810,
	0x1811,
	0x1946,
	0x1947,
	0x19D0,
	0x19D1,
	0x1A80,
	0x1A81,
	0x1A90,
	0x1A91,
	0x1B50,
	0x1B51,
	0x1BB0,
	0x1BB1,
	0x1C40,
	0x1C41,
	0x1C50,
	0x1C51,
	0x2070,
	0x2071,
	0x2080,
	0x2081,
	0x2189,
	0x218A,
	0x24EA,
	0x24EB,
	0x24FF,
	0x2500,
	0x3007,
	0x3008,
	0x96F6,
	0x96F7,
	0xA620,
	0xA621,
	0xA6EF,
	0xA6F0,
	0xA8D0,
	0xA8D1,
	0xA900,
	0xA901,
	0xA9D0,
	0xA9D1,
	0xA9F0,
	0xA9F1,
	0xAA50,
	0xAA51,
	0xABF0,
	0xABF1,
	0xF9B2,
	0xF9B3,
	0xFF10,
	0xFF11,
	0x1018A,
	0x1018B,
	0x104A0,
	0x104A1,
	0x10D30,
	0x10D31,
	0x11066,
	0x11067,
	0x110F0,
	0x110F1,
	0x11136,
	0x11137,
	0x111D0,
	0x111D1,
	0x112F0,
	0x112F1,
	0x11450,
	0x11451,
	0x114D0,
	0x114D1,
	0x11650,
	0x11651,
	0x116C0,
	0x116C1,
	0x11730,
	0x11731,
	0x118E0,
	0x118E1,
	0x11950,
	0x11951,
	0x11C50,
	0x11C51,
	0x11D50,
	0x11D51,
	0x11DA0,
	0x11DA1,
	0x16A60,
	0x16A61,
	0x16AC0,
	0x16AC1,
	0x16B50,
	0x16B51,
	0x16E80,
	0x16E81,
	0x1D2E0,
	0x1D2E1,
	0x1D7CE,
	0x1D7CF,
	0x1D7D8,
	0x1D7D9,
	0x1D7E2,
	0x1D7E3,
	0x1D7EC,
	0x1D7ED,
	0x1D7F6,
	0x1D7F7,
	0x1E140,
	0x1E141,
	0x1E2F0,
	0x1E2F1,
	0x1E950,
	0x1E951,
	0x1F100,
	0x1F102,
	0x1F10B,
	0x1F10D,
	0x1FBF0,
	0x1FBF1
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_NV__0_invlist[] = {  /* for EBCDIC 037 */
	165,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF0,
	0xF1,
	0x660,
	0x661,
	0x6F0,
	0x6F1,
	0x7C0,
	0x7C1,
	0x966,
	0x967,
	0x9E6,
	0x9E7,
	0xA66,
	0xA67,
	0xAE6,
	0xAE7,
	0xB66,
	0xB67,
	0xBE6,
	0xBE7,
	0xC66,
	0xC67,
	0xC78,
	0xC79,
	0xCE6,
	0xCE7,
	0xD66,
	0xD67,
	0xDE6,
	0xDE7,
	0xE50,
	0xE51,
	0xED0,
	0xED1,
	0xF20,
	0xF21,
	0x1040,
	0x1041,
	0x1090,
	0x1091,
	0x17E0,
	0x17E1,
	0x17F0,
	0x17F1,
	0x1810,
	0x1811,
	0x1946,
	0x1947,
	0x19D0,
	0x19D1,
	0x1A80,
	0x1A81,
	0x1A90,
	0x1A91,
	0x1B50,
	0x1B51,
	0x1BB0,
	0x1BB1,
	0x1C40,
	0x1C41,
	0x1C50,
	0x1C51,
	0x2070,
	0x2071,
	0x2080,
	0x2081,
	0x2189,
	0x218A,
	0x24EA,
	0x24EB,
	0x24FF,
	0x2500,
	0x3007,
	0x3008,
	0x96F6,
	0x96F7,
	0xA620,
	0xA621,
	0xA6EF,
	0xA6F0,
	0xA8D0,
	0xA8D1,
	0xA900,
	0xA901,
	0xA9D0,
	0xA9D1,
	0xA9F0,
	0xA9F1,
	0xAA50,
	0xAA51,
	0xABF0,
	0xABF1,
	0xF9B2,
	0xF9B3,
	0xFF10,
	0xFF11,
	0x1018A,
	0x1018B,
	0x104A0,
	0x104A1,
	0x10D30,
	0x10D31,
	0x11066,
	0x11067,
	0x110F0,
	0x110F1,
	0x11136,
	0x11137,
	0x111D0,
	0x111D1,
	0x112F0,
	0x112F1,
	0x11450,
	0x11451,
	0x114D0,
	0x114D1,
	0x11650,
	0x11651,
	0x116C0,
	0x116C1,
	0x11730,
	0x11731,
	0x118E0,
	0x118E1,
	0x11950,
	0x11951,
	0x11C50,
	0x11C51,
	0x11D50,
	0x11D51,
	0x11DA0,
	0x11DA1,
	0x16A60,
	0x16A61,
	0x16AC0,
	0x16AC1,
	0x16B50,
	0x16B51,
	0x16E80,
	0x16E81,
	0x1D2E0,
	0x1D2E1,
	0x1D7CE,
	0x1D7CF,
	0x1D7D8,
	0x1D7D9,
	0x1D7E2,
	0x1D7E3,
	0x1D7EC,
	0x1D7ED,
	0x1D7F6,
	0x1D7F7,
	0x1E140,
	0x1E141,
	0x1E2F0,
	0x1E2F1,
	0x1E950,
	0x1E951,
	0x1F100,
	0x1F102,
	0x1F10B,
	0x1F10D,
	0x1FBF0,
	0x1FBF1
};

#  endif	/* EBCDIC 037 */

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_NV__1_invlist[] = {  /* for ASCII/Latin1 */
	277,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x31,
	0x32,
	0xB9,
	0xBA,
	0x661,
	0x662,
	0x6F1,
	0x6F2,
	0x7C1,
	0x7C2,
	0x967,
	0x968,
	0x9E7,
	0x9E8,
	0xA67,
	0xA68,
	0xAE7,
	0xAE8,
	0xB67,
	0xB68,
	0xBE7,
	0xBE8,
	0xC67,
	0xC68,
	0xC79,
	0xC7A,
	0xC7C,
	0xC7D,
	0xCE7,
	0xCE8,
	0xD67,
	0xD68,
	0xDE7,
	0xDE8,
	0xE51,
	0xE52,
	0xED1,
	0xED2,
	0xF21,
	0xF22,
	0x1041,
	0x1042,
	0x1091,
	0x1092,
	0x1369,
	0x136A,
	0x17E1,
	0x17E2,
	0x17F1,
	0x17F2,
	0x1811,
	0x1812,
	0x1947,
	0x1948,
	0x19D1,
	0x19D2,
	0x19DA,
	0x19DB,
	0x1A81,
	0x1A82,
	0x1A91,
	0x1A92,
	0x1B51,
	0x1B52,
	0x1BB1,
	0x1BB2,
	0x1C41,
	0x1C42,
	0x1C51,
	0x1C52,
	0x2081,
	0x2082,
	0x215F,
	0x2161,
	0x2170,
	0x2171,
	0x2460,
	0x2461,
	0x2474,
	0x2475,
	0x2488,
	0x2489,
	0x24F5,
	0x24F6,
	0x2776,
	0x2777,
	0x2780,
	0x2781,
	0x278A,
	0x278B,
	0x3021,
	0x3022,
	0x3192,
	0x3193,
	0x3220,
	0x3221,
	0x3280,
	0x3281,
	0x4E00,
	0x4E01,
	0x58F1,
	0x58F2,
	0x58F9,
	0x58FA,
	0x5E7A,
	0x5E7B,
	0x5F0C,
	0x5F0D,
	0xA621,
	0xA622,
	0xA6E6,
	0xA6E7,
	0xA8D1,
	0xA8D2,
	0xA901,
	0xA902,
	0xA9D1,
	0xA9D2,
	0xA9F1,
	0xA9F2,
	0xAA51,
	0xAA52,
	0xABF1,
	0xABF2,
	0xFF11,
	0xFF12,
	0x10107,
	0x10108,
	0x10142,
	0x10143,
	0x10158,
	0x1015B,
	0x102E1,
	0x102E2,
	0x10320,
	0x10321,
	0x103D1,
	0x103D2,
	0x104A1,
	0x104A2,
	0x10858,
	0x10859,
	0x10879,
