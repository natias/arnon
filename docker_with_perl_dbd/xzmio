	0x202C
};

static const UV UNI_BC__RLI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2067,
	0x2068
};

static const UV UNI_BC__RLO_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x202E,
	0x202F
};

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_BC__S_invlist[] = {  /* for ASCII/Latin1 */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x9,
	0xA,
	0xB,
	0xC,
	0x1F,
	0x20
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_BC__S_invlist[] = {  /* for EBCDIC 1047 */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5,
	0x6,
	0xB,
	0xC,
	0x1F,
	0x20
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_BC__S_invlist[] = {  /* for EBCDIC 037 */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5,
	0x6,
	0xB,
	0xC,
	0x1F,
	0x20
};

#  endif	/* EBCDIC 037 */

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_BC__WS_invlist[] = {  /* for ASCII/Latin1 */
	15,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xC,
	0xD,
	0x20,
	0x21,
	0x1680,
	0x1681,
	0x2000,
	0x200B,
	0x2028,
	0x2029,
	0x205F,
	0x2060,
	0x3000,
	0x3001
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_BC__WS_invlist[] = {  /* for EBCDIC 1047 */
	15,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xC,
	0xD,
	0x40,
	0x41,
	0x1680,
	0x1681,
	0x2000,
	0x200B,
	0x2028,
	0x2029,
	0x205F,
	0x2060,
	0x3000,
	0x3001
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_BC__WS_invlist[] = {  /* for EBCDIC 037 */
	15,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xC,
	0xD,
	0x40,
	0x41,
	0x1680,
	0x1681,
	0x2000,
	0x200B,
	0x2028,
	0x2029,
	0x205F,
	0x2060,
	0x3000,
	0x3001
};

#  endif	/* EBCDIC 037 */

static const UV UNI_BENG_invlist[] = {  /* for all charsets */
	53,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x951,
	0x953,
	0x964,
	0x966,
	0x980,
	0x984,
	0x985,
	0x98D,
	0x98F,
	0x991,
	0x993,
	0x9A9,
	0x9AA,
	0x9B1,
	0x9B2,
	0x9B3,
	0x9B6,
	0x9BA,
	0x9BC,
	0x9C5,
	0x9C7,
	0x9C9,
	0x9CB,
	0x9CF,
	0x9D7,
	0x9D8,
	0x9DC,
	0x9DE,
	0x9DF,
	0x9E4,
	0x9E6,
	0x9FF,
	0x1CD0,
	0x1CD1,
	0x1CD2,
	0x1CD3,
	0x1CD5,
	0x1CD7,
	0x1CD8,
	0x1CD9,
	0x1CE1,
	0x1CE2,
	0x1CEA,
	0x1CEB,
	0x1CED,
	0x1CEE,
	0x1CF2,
	0x1CF3,
	0x1CF5,
	0x1CF8,
	0xA8F1,
	0xA8F2
};

static const UV UNI_BHKS_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11C00,
	0x11C09,
	0x11C0A,
	0x11C37,
	0x11C38,
	0x11C46,
	0x11C50,
	0x11C6D
};

static const UV UNI_BIDIC_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x61C,
	0x61D,
	0x200E,
	0x2010,
	0x202A,
	0x202F,
	0x2066,
	0x206A
};

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_BIDIM_invlist[] = {  /* for ASCII/Latin1 */
	229,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x28,
	0x2A,
	0x3C,
	0x3D,
	0x3E,
	0x3F,
	0x5B,
	0x5C,
	0x5D,
	0x5E,
	0x7B,
	0x7C,
	0x7D,
	0x7E,
	0xAB,
	0xAC,
	0xBB,
	0xBC,
	0xF3A,
	0xF3E,
	0x169B,
	0x169D,
	0x2039,
	0x203B,
	0x2045,
	0x2047,
	0x207D,
	0x207F,
	0x208D,
	0x208F,
	0x2140,
	0x2141,
	0x2201,
	0x2205,
	0x2208,
	0x220E,
	0x2211,
	0x2212,
	0x2215,
	0x2217,
	0x221A,
	0x221E,
	0x221F,
	0x2223,
	0x2224,
	0x2225,
	0x2226,
	0x2227,
	0x222B,
	0x2234,
	0x2239,
	0x223A,
	0x223B,
	0x224D,
	0x2252,
	0x2256,
	0x225F,
	0x2261,
	0x2262,
	0x2263,
	0x2264,
	0x226C,
	0x226E,
	0x228D,
	0x228F,
	0x2293,
	0x2298,
	0x2299,
	0x22A2,
	0x22A4,
	0x22A6,
	0x22B9,
	0x22BE,
	0x22C0,
	0x22C9,
	0x22CE,
	0x22D0,
	0x22D2,
	0x22D6,
	0x22EE,
	0x22F0,
	0x2300,
	0x2308,
	0x230C,
	0x2320,
	0x2322,
	0x2329,
	0x232B,
	0x2768,
	0x2776,
	0x27C0,
	0x27C1,
	0x27C3,
	0x27C7,
	0x27C8,
	0x27CA,
	0x27CB,
	0x27CE,
	0x27D3,
	0x27D7,
	0x27DC,
	0x27DF,
	0x27E2,
	0x27F0,
	0x2983,
	0x2999,
	0x299B,
	0x29A1,
	0x29A2,
	0x29B0,
	0x29B8,
	0x29B9,
	0x29C0,
	0x29C6,
	0x29C9,
	0x29CA,
	0x29CE,
	0x29D3,
	0x29D4,
	0x29D6,
	0x29D8,
	0x29DD,
	0x29E1,
	0x29E2,
	0x29E3,
	0x29E6,
	0x29E8,
	0x29EA,
	0x29F4,
	0x29FA,
	0x29FC,
	0x29FE,
	0x2A0A,
	0x2A1D,
	0x2A1E,
	0x2A22,
	0x2A24,
	0x2A25,
	0x2A26,
	0x2A27,
	0x2A29,
	0x2A2A,
	0x2A2B,
	0x2A2F,
	0x2A34,
	0x2A36,
	0x2A3C,
	0x2A3F,
	0x2A57,
	0x2A59,
	0x2A64,
	0x2A66,
	0x2A6A,
	0x2A6E,
	0x2A6F,
	0x2A71,
	0x2A73,
	0x2A75,
	0x2A79,
	0x2AA4,
	0x2AA6,
	0x2AAE,
	0x2AAF,
	0x2AD7,
	0x2ADC,
	0x2ADD,
	0x2ADE,
	0x2ADF,
	0x2AE2,
	0x2AE7,
	0x2AEC,
	0x2AEF,
	0x2AF3,
	0x2AF4,
	0x2AF7,
	0x2AFC,
	0x2AFD,
	0x2AFE,
	0x2BFE,
	0x2BFF,
	0x2E02,
	0x2E06,
	0x2E09,
	0x2E0B,
	0x2E0C,
	0x2E0E,
	0x2E1C,
	0x2E1E,
	0x2E20,
	0x2E2A,
	0x2E55,
	0x2E5D,
	0x3008,
	0x3012,
	0x3014,
	0x301C,
	0xFE59,
	0xFE5F,
	0xFE64,
	0xFE66,
	0xFF08,
	0xFF0A,
	0xFF1C,
	0xFF1D,
	0xFF1E,
	0xFF1F,
	0xFF3B,
	0xFF3C,
	0xFF3D,
	0xFF3E,
	0xFF5B,
	0xFF5C,
	0xFF5D,
	0xFF5E,
	0xFF5F,
	0xFF61,
	0xFF62,
	0xFF64,
	0x1D6DB,
	0x1D6DC,
	0x1D715,
	0x1D716,
	0x1D74F,
	0x1D750,
	0x1D789,
	0x1D78A,
	0x1D7C3,
	0x1D7C4
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_BIDIM_invlist[] = {  /* for EBCDIC 1047 */
	227,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x4C,
	0x4E,
	0x5D,
	0x5E,
	0x6E,
	0x6F,
	0x8A,
	0x8C,
	0xAD,
	0xAE,
	0xBD,
	0xBE,
	0xC0,
	0xC1,
	0xD0,
	0xD1,
	0xF3A,
	0xF3E,
	0x169B,
	0x169D,
	0x2039,
	0x203B,
	0x2045,
	0x2047,
	0x207D,
	0x207F,
	0x208D,
	0x208F,
	0x2140,
	0x2141,
	0x2201,
	0x2205,
	0x2208,
	0x220E,
	0x2211,
	0x2212,
	0x2215,
	0x2217,
	0x221A,
	0x221E,
	0x221F,
	0x2223,
	0x2224,
	0x2225,
	0x2226,
	0x2227,
	0x222B,
	0x2234,
	0x2239,
	0x223A,
	0x223B,
	0x224D,
	0x2252,
	0x2256,
	0x225F,
	0x2261,
	0x2262,
	0x2263,
	0x2264,
	0x226C,
	0x226E,
	0x228D,
	0x228F,
	0x2293,
	0x2298,
	0x2299,
	0x22A2,
	0x22A4,
	0x22A6,
	0x22B9,
	0x22BE,
	0x22C0,
	0x22C9,
	0x22CE,
	0x22D0,
	0x22D2,
	0x22D6,
	0x22EE,
	0x22F0,
	0x2300,
	0x2308,
	0x230C,
	0x2320,
	0x2322,
	0x2329,
	0x232B,
	0x2768,
	0x2776,
	0x27C0,
	0x27C1,
	0x27C3,
	0x27C7,
	0x27C8,
	0x27CA,
	0x27CB,
	0x27CE,
	0x27D3,
	0x27D7,
	0x27DC,
	0x27DF,
	0x27E2,
	0x27F0,
	0x2983,
	0x2999,
	0x299B,
	0x29A1,
	0x29A2,
	0x29B0,
	0x29B8,
	0x29B9,
	0x29C0,
	0x29C6,
	0x29C9,
	0x29CA,
	0x29CE,
	0x29D3,
	0x29D4,
	0x29D6,
	0x29D8,
	0x29DD,
	0x29E1,
	0x29E2,
	0x29E3,
	0x29E6,
	0x29E8,
	0x29EA,
	0x29F4,
	0x29FA,
	0x29FC,
	0x29FE,
	0x2A0A,
	0x2A1D,
	0x2A1E,
	0x2A22,
	0x2A24,
	0x2A25,
	0x2A26,
	0x2A27,
	0x2A29,
	0x2A2A,
	0x2A2B,
	0x2A2F,
	0x2A34,
	0x2A36,
	0x2A3C,
	0x2A3F,
	0x2A57,
	0x2A59,
	0x2A64,
	0x2A66,
	0x2A6A,
	0x2A6E,
	0x2A6F,
	0x2A71,
	0x2A73,
	0x2A75,
	0x2A79,
	0x2AA4,
	0x2AA6,
	0x2AAE,
	0x2AAF,
	0x2AD7,
	0x2ADC,
	0x2ADD,
	0x2ADE,
	0x2ADF,
	0x2AE2,
	0x2AE7,
	0x2AEC,
	0x2AEF,
	0x2AF3,
	0x2AF4,
	0x2AF7,
	0x2AFC,
	0x2AFD,
	0x2AFE,
	0x2BFE,
	0x2BFF,
	0x2E02,
	0x2E06,
	0x2E09,
	0x2E0B,
	0x2E0C,
	0x2E0E,
	0x2E1C,
	0x2E1E,
	0x2E20,
	0x2E2A,
	0x2E55,
	0x2E5D,
	0x3008,
	0x3012,
	0x3014,
	0x301C,
	0xFE59,
	0xFE5F,
	0xFE64,
	0xFE66,
	0xFF08,
	0xFF0A,
	0xFF1C,
	0xFF1D,
	0xFF1E,
	0xFF1F,
	0xFF3B,
	0xFF3C,
	0xFF3D,
	0xFF3E,
	0xFF5B,
	0xFF5C,
	0xFF5D,
	0xFF5E,
	0xFF5F,
	0xFF61,
	0xFF62,
	0xFF64,
	0x1D6DB,
	0x1D6DC,
	0x1D715,
	0x1D716,
	0x1D74F,
	0x1D750,
	0x1D789,
	0x1D78A,
	0x1D7C3,
	0x1D7C4
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_BIDIM_invlist[] = {  /* for EBCDIC 037 */
	225,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x4C,
	0x4E,
	0x5D,
	0x5E,
	0x6E,
	0x6F,
	0x8A,
	0x8C,
	0xBA,
	0xBC,
	0xC0,
	0xC1,
	0xD0,
	0xD1,
	0xF3A,
	0xF3E,
	0x169B,
	0x169D,
	0x2039,
	0x203B,
	0x2045,
	0x2047,
	0x207D,
	0x207F,
	0x208D,
	0x208F,
	0x2140,
	0x2141,
	0x2201,
	0x2205,
	0x2208,
	0x220E,
	0x2211,
	0x2212,
	0x2215,
	0x2217,
	0x221A,
	0x221E,
	0x221F,
	0x2223,
	0x2224,
	0x2225,
	0x2226,
	0x2227,
	0x222B,
	0x2234,
	0x2239,
	0x223A,
	0x223B,
	0x224D,
	0x2252,
	0x2256,
	0x225F,
	0x2261,
	0x2262,
	0x2263,
	0x2264,
	0x226C,
	0x226E,
	0x228D,
	0x228F,
	0x2293,
	0x2298,
	0x2299,
	0x22A2,
	0x22A4,
	0x22A6,
	0x22B9,
	0x22BE,
	0x22C0,
	0x22C9,
	0x22CE,
	0x22D0,
	0x22D2,
	0x22D6,
	0x22EE,
	0x22F0,
	0x2300,
	0x2308,
	0x230C,
	0x2320,
	0x2322,
	0x2329,
	0x232B,
	0x2768,
	0x2776,
	0x27C0,
	0x27C1,
	0x27C3,
	0x27C7,
	0x27C8,
	0x27CA,
	0x27CB,
	0x27CE,
	0x27D3,
	0x27D7,
	0x27DC,
	0x27DF,
	0x27E2,
	0x27F0,
	0x2983,
	0x2999,
	0x299B,
	0x29A1,
	0x29A2,
	0x29B0,
	0x29B8,
	0x29B9,
	0x29C0,
	0x29C6,
	0x29C9,
	0x29CA,
	0x29CE,
	0x29D3,
	0x29D4,
	0x29D6,
	0x29D8,
	0x29DD,
	0x29E1,
	0x29E2,
	0x29E3,
	0x29E6,
	0x29E8,
	0x29EA,
	0x29F4,
	0x29FA,
	0x29FC,
	0x29FE,
	0x2A0A,
	0x2A1D,
	0x2A1E,
	0x2A22,
	0x2A24,
	0x2A25,
	0x2A26,
	0x2A27,
	0x2A29,
	0x2A2A,
	0x2A2B,
	0x2A2F,
	0x2A34,
	0x2A36,
	0x2A3C,
	0x2A3F,
	0x2A57,
	0x2A59,
	0x2A64,
	0x2A66,
	0x2A6A,
	0x2A6E,
	0x2A6F,
	0x2A71,
	0x2A73,
	0x2A75,
	0x2A79,
	0x2AA4,
	0x2AA6,
	0x2AAE,
	0x2AAF,
	0x2AD7,
	0x2ADC,
	0x2ADD,
	0x2ADE,
	0x2ADF,
	0x2AE2,
	0x2AE7,
	0x2AEC,
	0x2AEF,
	0x2AF3,
	0x2AF4,
	0x2AF7,
	0x2AFC,
	0x2AFD,
	0x2AFE,
	0x2BFE,
	0x2BFF,
	0x2E02,
	0x2E06,
	0x2E09,
	0x2E0B,
	0x2E0C,
	0x2E0E,
	0x2E1C,
	0x2E1E,
	0x2E20,
	0x2E2A,
	0x2E55,
	0x2E5D,
	0x3008,
	0x3012,
	0x3014,
	0x301C,
	0xFE59,
	0xFE5F,
	0xFE64,
	0xFE66,
	0xFF08,
	0xFF0A,
	0xFF1C,
	0xFF1D,
	0xFF1E,
	0xFF1F,
	0xFF3B,
	0xFF3C,
	0xFF3D,
	0xFF3E,
	0xFF5B,
	0xFF5C,
	0xFF5D,
	0xFF5E,
	0xFF5F,
	0xFF61,
	0xFF62,
	0xFF64,
	0x1D6DB,
	0x1D6DC,
	0x1D715,
	0x1D716,
	0x1D74F,
	0x1D750,
	0x1D789,
	0x1D78A,
	0x1D7C3,
	0x1D7C4
};

#  endif	/* EBCDIC 037 */

static const UV UNI_BLOCKELEMENTS_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2580,
	0x25A0
};

static const UV UNI_BOPO_invlist[] = {  /* for all charsets */
	25,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2EA,
	0x2EC,
	0x3001,
	0x3004,
	0x3008,
