                             Sinhala}) (NOT \p{Block=Sinhala}) (113)
   \p{Sinhala}             \p{Script_Extensions=Sinhala} (Short:
                             \p{Sinh}; NOT \p{Block=Sinhala}) (113)
 X \p{Sinhala_Archaic_Numbers} \p{Block=Sinhala_Archaic_Numbers} (32)
   \p{Sk}                  \p{Modifier_Symbol} (=
                             \p{General_Category=Modifier_Symbol})
                             (125)
   \p{Sm}                  \p{Math_Symbol} (= \p{General_Category=
                             Math_Symbol}) (948)
 X \p{Small_Form_Variants} \p{Block=Small_Form_Variants} (Short:
                             \p{InSmallForms}) (32)
 X \p{Small_Forms}         \p{Small_Form_Variants} (= \p{Block=
                             Small_Form_Variants}) (32)
 X \p{Small_Kana_Ext}      \p{Small_Kana_Extension} (= \p{Block=
                             Small_Kana_Extension}) (64)
 X \p{Small_Kana_Extension} \p{Block=Small_Kana_Extension} (Short:
                             \p{InSmallKanaExt}) (64)
   \p{So}                  \p{Other_Symbol} (= \p{General_Category=
                             Other_Symbol}) (6634)
   \p{Soft_Dotted}         \p{Soft_Dotted=Y} (Short: \p{SD}) (50)
   \p{Soft_Dotted: N*}     (Short: \p{SD=N}, \P{SD}) (1_114_062 plus
                             all above-Unicode code points: [\x00-
                             \x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=>?\@A-
                             Z\[\\\]\^_`a-hk-z\{\|\}~\x7f-\xff],
                             U+0100..012E, U+0130..0248,
                             U+024A..0267, U+0269..029C, U+029E..02B1
                             ...)
   \p{Soft_Dotted: Y*}     (Short: \p{SD=Y}, \p{SD}) (50: [i-j],
                             U+012F, U+0249, U+0268, U+029D, U+02B2
                             ...)
   \p{Sogd}                \p{Sogdian} (= \p{Script_Extensions=
                             Sogdian}) (NOT \p{Block=Sogdian}) (43)
   \p{Sogdian}             \p{Script_Extensions=Sogdian} (Short:
                             \p{Sogd}; NOT \p{Block=Sogdian}) (43)
   \p{Sogo}                \p{Old_Sogdian} (= \p{Script_Extensions=
                             Old_Sogdian}) (NOT \p{Block=
                             Old_Sogdian}) (40)
   \p{Sora}                \p{Sora_Sompeng} (= \p{Script_Extensions=
                             Sora_Sompeng}) (NOT \p{Block=
                             Sora_Sompeng}) (35)
   \p{Sora_Sompeng}        \p{Script_Extensions=Sora_Sompeng} (Short:
                             \p{Sora}; NOT \p{Block=Sora_Sompeng})
                             (35)
   \p{Soyo}                \p{Soyombo} (= \p{Script_Extensions=
                             Soyombo}) (NOT \p{Block=Soyombo}) (83)
   \p{Soyombo}             \p{Script_Extensions=Soyombo} (Short:
                             \p{Soyo}; NOT \p{Block=Soyombo}) (83)
   \p{Space}               \p{White_Space} (= \p{White_Space=Y}) (25)
   \p{Space: *}            \p{White_Space: *}
   \p{Space_Separator}     \p{General_Category=Space_Separator}
                             (Short: \p{Zs}) (17)
   \p{SpacePerl}           \p{XPosixSpace} (25)
   \p{Spacing_Mark}        \p{General_Category=Spacing_Mark} (Short:
                             \p{Mc}) (452)
 X \p{Spacing_Modifier_Letters} \p{Block=Spacing_Modifier_Letters}
                             (Short: \p{InModifierLetters}) (80)
 X \p{Specials}            \p{Block=Specials} (16)
   \p{STerm}               \p{Sentence_Terminal} (=
                             \p{Sentence_Terminal=Y}) (154)
   \p{STerm: *}            \p{Sentence_Terminal: *}
   \p{Sund}                \p{Sundanese} (= \p{Script_Extensions=
                             Sundanese}) (NOT \p{Block=Sundanese})
                             (72)
   \p{Sundanese}           \p{Script_Extensions=Sundanese} (Short:
                             \p{Sund}; NOT \p{Block=Sundanese}) (72)
 X \p{Sundanese_Sup}       \p{Sundanese_Supplement} (= \p{Block=
                             Sundanese_Supplement}) (16)
 X \p{Sundanese_Supplement} \p{Block=Sundanese_Supplement} (Short:
                             \p{InSundaneseSup}) (16)
 X \p{Sup_Arrows_A}        \p{Supplemental_Arrows_A} (= \p{Block=
                             Supplemental_Arrows_A}) (16)
 X \p{Sup_Arrows_B}        \p{Supplemental_Arrows_B} (= \p{Block=
                             Supplemental_Arrows_B}) (128)
 X \p{Sup_Arrows_C}        \p{Supplemental_Arrows_C} (= \p{Block=
                             Supplemental_Arrows_C}) (256)
 X \p{Sup_Math_Operators}  \p{Supplemental_Mathematical_Operators} (=
                             \p{Block=
                             Supplemental_Mathematical_Operators})
                             (256)
 X \p{Sup_PUA_A}           \p{Supplementary_Private_Use_Area_A} (=
                             \p{Block=
                             Supplementary_Private_Use_Area_A})
                             (65_536)
 X \p{Sup_PUA_B}           \p{Supplementary_Private_Use_Area_B} (=
                             \p{Block=
                             Supplementary_Private_Use_Area_B})
                             (65_536)
 X \p{Sup_Punctuation}     \p{Supplemental_Punctuation} (= \p{Block=
                             Supplemental_Punctuation}) (128)
 X \p{Sup_Symbols_And_Pictographs}
                             \p{Supplemental_Symbols_And_Pictographs}
                             (= \p{Block=
                             Supplemental_Symbols_And_Pictographs})
                             (256)
 X \p{Super_And_Sub}       \p{Superscripts_And_Subscripts} (=
                             \p{Block=Superscripts_And_Subscripts})
                             (48)
 X \p{Superscripts_And_Subscripts} \p{Block=
                             Superscripts_And_Subscripts} (Short:
                             \p{InSuperAndSub}) (48)
 X \p{Supplemental_Arrows_A} \p{Block=Supplemental_Arrows_A} (Short:
                             \p{InSupArrowsA}) (16)
 X \p{Supplemental_Arrows_B} \p{Block=Supplemental_Arrows_B} (Short:
                             \p{InSupArrowsB}) (128)
 X \p{Supplemental_Arrows_C} \p{Block=Supplemental_Arrows_C} (Short:
                             \p{InSupArrowsC}) (256)
 X \p{Supplemental_Mathematical_Operators} \p{Block=
                             Supplemental_Mathematical_Operators}
                             (Short: \p{InSupMathOperators}) (256)
 X \p{Supplemental_Punctuation} \p{Block=Supplemental_Punctuation}
                             (Short: \p{InSupPunctuation}) (128)
 X \p{Supplemental_Symbols_And_Pictographs} \p{Block=
                             Supplemental_Symbols_And_Pictographs}
                             (Short: \p{InSupSymbolsAndPictographs})
                             (256)
 X \p{Supplementary_Private_Use_Area_A} \p{Block=
                             Supplementary_Private_Use_Area_A}
                             (Short: \p{InSupPUAA}) (65_536)
 X \p{Supplementary_Private_Use_Area_B} \p{Block=
                             Supplementary_Private_Use_Area_B}
                             (Short: \p{InSupPUAB}) (65_536)
   \p{Surrogate}           \p{General_Category=Surrogate} (Short:
                             \p{Cs}) (2048)
 X \p{Sutton_SignWriting}  \p{Block=Sutton_SignWriting} (688)
   \p{Sylo}                \p{Syloti_Nagri} (= \p{Script_Extensions=
                             Syloti_Nagri}) (NOT \p{Block=
                             Syloti_Nagri}) (57)
   \p{Syloti_Nagri}        \p{Script_Extensions=Syloti_Nagri} (Short:
                             \p{Sylo}; NOT \p{Block=Syloti_Nagri})
                             (57)
   \p{Symbol}              \p{General_Category=Symbol} (Short: \p{S})
                             (7770)
 X \p{Symbols_And_Pictographs_Ext_A}
                             \p{Symbols_And_Pictographs_Extended_A}
                             (= \p{Block=
                             Symbols_And_Pictographs_Extended_A})
                             (144)
 X \p{Symbols_And_Pictographs_Extended_A} \p{Block=
                             Symbols_And_Pictographs_Extended_A} (144)
 X \p{Symbols_For_Legacy_Computing} \p{Block=
                             Symbols_For_Legacy_Computing} (256)
   \p{Syrc}                \p{Syriac} (= \p{Script_Extensions=
                             Syriac}) (NOT \p{Block=Syriac}) (107)
   \p{Syriac}              \p{Script_Extensions=Syriac} (Short:
                             \p{Syrc}; NOT \p{Block=Syriac}) (107)
 X \p{Syriac_Sup}          \p{Syriac_Supplement} (= \p{Block=
                             Syriac_Supplement}) (16)
 X \p{Syriac_Supplement}   \p{Block=Syriac_Supplement} (Short:
                             \p{InSyriacSup}) (16)
   \p{Tagalog}             \p{Script_Extensions=Tagalog} (Short:
                             \p{Tglg}; NOT \p{Block=Tagalog}) (25)
   \p{Tagb}                \p{Tagbanwa} (= \p{Script_Extensions=
                             Tagbanwa}) (NOT \p{Block=Tagbanwa}) (20)
   \p{Tagbanwa}            \p{Script_Extensions=Tagbanwa} (Short:
                             \p{Tagb}; NOT \p{Block=Tagbanwa}) (20)
 X \p{Tags}                \p{Block=Tags} (128)
   \p{Tai_Le}              \p{Script_Extensions=Tai_Le} (Short:
                             \p{Tale}; NOT \p{Block=Tai_Le}) (45)
   \p{Tai_Tham}            \p{Script_Extensions=Tai_Tham} (Short:
                             \p{Lana}; NOT \p{Block=Tai_Tham}) (127)
   \p{Tai_Viet}            \p{Script_Extensions=Tai_Viet} (Short:
                             \p{Tavt}; NOT \p{Block=Tai_Viet}) (72)
 X \p{Tai_Xuan_Jing}       \p{Tai_Xuan_Jing_Symbols} (= \p{Block=
                             Tai_Xuan_Jing_Symbols}) (96)
 X \p{Tai_Xuan_Jing_Symbols} \p{Block=Tai_Xuan_Jing_Symbols} (Short:
                             \p{InTaiXuanJing}) (96)
   \p{Takr}                \p{Takri} (= \p{Script_Extensions=Takri})
                             (NOT \p{Block=Takri}) (80)
   \p{Takri}               \p{Script_Extensions=Takri} (Short:
                             \p{Takr}; NOT \p{Block=Takri}) (80)
   \p{Tale}                \p{Tai_Le} (= \p{Script_Extensions=
                             Tai_Le}) (NOT \p{Block=Tai_Le}) (45)
   \p{Talu}                \p{New_Tai_Lue} (= \p{Script_Extensions=
                             New_Tai_Lue}) (NOT \p{Block=
                             New_Tai_Lue}) (83)
   \p{Tamil}               \p{Script_Extensions=Tamil} (Short:
                             \p{Taml}; NOT \p{Block=Tamil}) (133)
 X \p{Tamil_Sup}           \p{Tamil_Supplement} (= \p{Block=
                             Tamil_Supplement}) (64)
 X \p{Tamil_Supplement}    \p{Block=Tamil_Supplement} (Short:
                             \p{InTamilSup}) (64)
   \p{Taml}                \p{Tamil} (= \p{Script_Extensions=Tamil})
                             (NOT \p{Block=Tamil}) (133)
   \p{Tang}                \p{Tangut} (= \p{Script_Extensions=
                             Tangut}) (NOT \p{Block=Tangut}) (6914)
   \p{Tangsa}              \p{Script_Extensions=Tangsa} (Short:
                             \p{Tnsa}; NOT \p{Block=Tangsa}) (89)
   \p{Tangut}              \p{Script_Extensions=Tangut} (Short:
                             \p{Tang}; NOT \p{Block=Tangut}) (6914)
 X \p{Tangut_Components}   \p{Block=Tangut_Components} (768)
 X \p{Tangut_Sup}          \p{Tangut_Supplement} (= \p{Block=
                             Tangut_Supplement}) (128)
 X \p{Tangut_Supplement}   \p{Block=Tangut_Supplement} (Short:
                             \p{InTangutSup}) (128)
   \p{Tavt}                \p{Tai_Viet} (= \p{Script_Extensions=
                             Tai_Viet}) (NOT \p{Block=Tai_Viet}) (72)
   \p{Telu}                \p{Telugu} (= \p{Script_Extensions=
                             Telugu}) (NOT \p{Block=Telugu}) (106)
   \p{Telugu}              \p{Script_Extensions=Telugu} (Short:
                             \p{Telu}; NOT \p{Block=Telugu}) (106)
   \p{Term}                \p{Terminal_Punctuation} (=
                             \p{Terminal_Punctuation=Y}) (278)
   \p{Term: *}             \p{Terminal_Punctuation: *}
   \p{Terminal_Punctuation} \p{Terminal_Punctuation=Y} (Short:
                             \p{Term}) (278)
   \p{Terminal_Punctuation: N*} (Short: \p{Term=N}, \P{Term})
                             (1_113_834 plus all above-Unicode code
                             points: [\x00-\x20\"#\$\%&\'\(\)*+\-\/0-
                             9<=>\@A-Z\[\\\]\^_`a-z\{\|\}~\x7f-\xff],
                             U+0100..037D, U+037F..0386,
                             U+0388..0588, U+058A..05C2, U+05C4..060B
                             ...)
   \p{Terminal_Punctuation: Y*} (Short: \p{Term=Y}, \p{Term}) (278:
                             [!,.:;?], U+037E, U+0387, U+0589,
                             U+05C3, U+060C ...)
   \p{Tfng}                \p{Tifinagh} (= \p{Script_Extensions=
                             Tifinagh}) (NOT \p{Block=Tifinagh}) (59)
   \p{Tglg}                \p{Tagalog} (= \p{Script_Extensions=
                             Tagalog}) (NOT \p{Block=Tagalog}) (25)
   \p{Thaa}                \p{Thaana} (= \p{Script_Extensions=
                             Thaana}) (NOT \p{Block=Thaana}) (66)
   \p{Thaana}              \p{Script_Extensions=Thaana} (Short:
                             \p{Thaa}; NOT \p{Block=Thaana}) (66)
   \p{Thai}                \p{Script_Extensions=Thai} (NOT \p{Block=
                             Thai}) (86)
   \p{Tibetan}             \p{Script_Extensions=Tibetan} (Short:
                             \p{Tibt}; NOT \p{Block=Tibetan}) (207)
   \p{Tibt}                \p{Tibetan} (= \p{Script_Extensions=
                             Tibetan}) (NOT \p{Block=Tibetan}) (207)
   \p{Tifinagh}            \p{Script_Extensions=Tifinagh} (Short:
                             \p{Tfng}; NOT \p{Block=Tifinagh}) (59)
   \p{Tirh}                \p{Tirhuta} (= \p{Script_Extensions=
                             Tirhuta}) (NOT \p{Block=Tirhuta}) (97)
   \p{Tirhuta}             \p{Script_Extensions=Tirhuta} (Short:
                             \p{Tirh}; NOT \p{Block=Tirhuta}) (97)
   \p{Title}               \p{Titlecase} (/i= Cased=Yes) (31)
   \p{Titlecase}           (= \p{Gc=Lt}) (Short: \p{Title}; /i=
                             Cased=Yes) (31: U+01C5, U+01C8, U+01CB,
                             U+01F2, U+1F88..1F8F, U+1F98..1F9F ...)
   \p{Titlecase_Letter}    \p{General_Category=Titlecase_Letter}
                             (Short: \p{Lt}; /i= General_Category=
                             Cased_Letter) (31)
   \p{Tnsa}                \p{Tangsa} (= \p{Script_Extensions=
                             Tangsa}) (NOT \p{Block=Tangsa}) (89)
   \p{Toto}                \p{Script_Extensions=Toto} (NOT \p{Block=
                             Toto}) (31)
 X \p{Transport_And_Map}   \p{Transport_And_Map_Symbols} (= \p{Block=
                             Transport_And_Map_Symbols}) (128)
 X \p{Transport_And_Map_Symbols} \p{Block=Transport_And_Map_Symbols}
                             (Short: \p{InTransportAndMap}) (128)
 X \p{UCAS}                \p{Unified_Canadian_Aboriginal_Syllabics}
                             (= \p{Block=
                             Unified_Canadian_Aboriginal_Syllabics})
                             (640)
 X \p{UCAS_Ext}            \p{Unified_Canadian_Aboriginal_Syllabics_-
                             Extended} (= \p{Block=
                             Unified_Canadian_Aboriginal_Syllabics_-
                             Extended}) (80)
 X \p{UCAS_Ext_A}          \p{Unified_Canadian_Aboriginal_Syllabics_-
                             Extended_A} (= \p{Block=
                             Unified_Canadian_Aboriginal_Syllabics_-
                             Extended_A}) (16)
   \p{Ugar}                \p{Ugaritic} (= \p{Script_Extensions=
                             Ugaritic}) (NOT \p{Block=Ugaritic}) (31)
   \p{Ugaritic}            \p{Script_Extensions=Ugaritic} (Short:
                             \p{Ugar}; NOT \p{Block=Ugaritic}) (31)
   \p{UIdeo}               \p{Unified_Ideograph} (=
                             \p{Unified_Ideograph=Y}) (97_058)
   \p{UIdeo: *}            \p{Unified_Ideograph: *}
   \p{Unassigned}          \p{General_Category=Unassigned} (Short:
                             \p{Cn}) (825_345 plus all above-Unicode
                             code points)
   \p{Unicode}             \p{Any} (1_114_112)
 X \p{Unified_Canadian_Aboriginal_Syllabics} \p{Block=
                             Unified_Canadian_Aboriginal_Syllabics}
                             (Short: \p{InUCAS}) (640)
 X \p{Unified_Canadian_Aboriginal_Syllabics_Extended} \p{Block=
                             Unified_Canadian_Aboriginal_Syllabics_-
                             Extended} (Short: \p{InUCASExt}) (80)
 X \p{Unified_Canadian_Aboriginal_Syllabics_Extended_A} \p{Block=
                             Unified_Canadian_Aboriginal_Syllabics_-
                             Extended_A} (Short: \p{InUCASExtA}) (16)
   \p{Unified_Ideograph}   \p{Unified_Ideograph=Y} (Short: \p{UIdeo})
                             (97_058)
   \p{Unified_Ideograph: N*} (Short: \p{UIdeo=N}, \P{UIdeo})
                             (1_017_054 plus all above-Unicode code
                             points: U+0000..33FF, U+4DC0..4DFF,
                             U+A000..FA0D, U+FA10, U+FA12,
                             U+FA15..FA1E ...)
   \p{Unified_Ideograph: Y*} (Short: \p{UIdeo=Y}, \p{UIdeo}) (97_058:
                             U+3400..4DBF, U+4E00..9FFF,
                             U+FA0E..FA0F, U+FA11, U+FA13..FA14,
                             U+FA1F ...)
   \p{Unknown}             \p{Script_Extensions=Unknown} (Short:
                             \p{Zzzz}) (964_861 plus all above-
                             Unicode code points)
   \p{Upper}               \p{XPosixUpper} (= \p{Uppercase=Y}) (/i=
                             Cased=Yes) (1951)
   \p{Upper: *}            \p{Uppercase: *}
   \p{Uppercase}           \p{XPosixUpper} (= \p{Uppercase=Y}) (/i=
                             Cased=Yes) (1951)
   \p{Uppercase: N*}       (Short: \p{Upper=N}, \P{Upper}; /i= Cased=
                             No) (1_112_161 plus all above-Unicode
                             code points: [\x00-\x20!\"#\$\%&\'
                             \(\)*+,\-.\/0-9:;<=>?\@\[\\\]\^_`a-z\{
                             \|\}~\x7f-\xbf\xd7\xdf-\xff], U+0101,
                             U+0103, U+0105, U+0107, U+0109 ...)
   \p{Uppercase: Y*}       (Short: \p{Upper=Y}, \p{Upper}; /i= Cased=
                             Yes) (1951: [A-Z\xc0-\xd6\xd8-\xde],
                             U+0100, U+0102, U+0104, U+0106, U+0108
                             ...)
   \p{Uppercase_Letter}    \p{General_Category=Uppercase_Letter}
                             (Short: \p{Lu}; /i= General_Category=
                             Cased_Letter) (1831)
   \p{Vai}                 \p{Script_Extensions=Vai} (NOT \p{Block=
                             Vai}) (300)
   \p{Vaii}                \p{Vai} (= \p{Script_Extensions=Vai}) (NOT
                             \p{Block=Vai}) (300)
   \p{Variation_Selector}  \p{Variation_Selector=Y} (Short: \p{VS};
                             NOT \p{Variation_Selectors}) (260)
   \p{Variation_Selector: N*} (Short: \p{VS=N}, \P{VS}) (1_113_852
                             plus all above-Unicode code points:
                             U+0000..180A, U+180E, U+1810..FDFF,
                             U+FE10..E00FF, U+E01F0..infinity)
   \p{Variation_Selector: Y*} (Short: \p{VS=Y}, \p{VS}) (260:
                             U+180B..180D, U+180F, U+FE00..FE0F,
                             U+E0100..E01EF)
 X \p{Variation_Selectors} \p{Block=Variation_Selectors} (Short:
                             \p{InVS}) (16)
 X \p{Variation_Selectors_Supplement} \p{Block=
                             Variation_Selectors_Supplement} (Short:
                             \p{InVSSup}) (240)
 X \p{Vedic_Ext}           \p{Vedic_Extensions} (= \p{Block=
                             Vedic_Extensions}) (48)
 X \p{Vedic_Extensions}    \p{Block=Vedic_Extensions} (Short:
                             \p{InVedicExt}) (48)
 X \p{Vertical_Forms}      \p{Block=Vertical_Forms} (16)
   \p{Vertical_Orientation: R} \p{Vertical_Orientation=Rotated}
                             (786_609 plus all above-Unicode code
                             points)
   \p{Vertical_Orientation: Rotated} (Short: \p{Vo=R}) (786_609 plus
                             all above-Unicode code points: [\x00-
                             \xa6\xa8\xaa-\xad\xaf-\xb0\xb2-\xbb\xbf-
                             \xd6\xd8-\xf6\xf8-\xff], U+0100..02E9,
                             U+02EC..10FF, U+1200..1400,
                             U+1680..18AF, U+1900..2015 ...)
   \p{Vertical_Orientation: Tr} \p{Vertical_Orientation=
                             Transformed_Rotated} (47)
   \p{Vertical_Orientation: Transformed_Rotated} (Short: \p{Vo=Tr})
                             (47: U+2329..232A, U+3008..3011,
                             U+3014..301F, U+3030, U+30A0, U+30FC ...)
   \p{Vertical_Orientation: Transformed_Upright} (Short: \p{Vo=Tu})
                             (148: U+3001..3002, U+3041, U+3043,
                             U+3045, U+3047, U+3049 ...)
   \p{Vertical_Orientation: Tu} \p{Vertical_Orientation=
                             Transformed_Upright} (148)
   \p{Vertical_Orientation: U} \p{Vertical_Orientation=Upright}
                             (327_308)
   \p{Vertical_Orientation: Upright} (Short: \p{Vo=U}) (327_308:
                             [\xa7\xa9\xae\xb1\xbc-\xbe\xd7\xf7],
                             U+02EA..02EB, U+1100..11FF,
                             U+1401..167F, U+18B0..18FF, U+2016 ...)
   \p{VertSpace}           \v (7: [\n\cK\f\r\x85], U+2028..2029)
   \p{Vith}                \p{Vithkuqi} (= \p{Script_Extensions=
                             Vithkuqi}) (NOT \p{Block=Vithkuqi}) (70)
   \p{Vithkuqi}            \p{Script_Extensions=Vithkuqi} (Short:
                             \p{Vith}; NOT \p{Block=Vithkuqi}) (70)
   \p{Vo: *}               \p{Vertical_Orientation: *}
   \p{VS}                  \p{Variation_Selector} (=
                             \p{Variation_Selector=Y}) (NOT
                             \p{Variation_Selectors}) (260)
   \p{VS: *}               \p{Variation_Selector: *}
 X \p{VS_Sup}              \p{Variation_Selectors_Supplement} (=
                             \p{Block=
                             Variation_Selectors_Supplement}) (240)
   \p{Wancho}              \p{Script_Extensions=Wancho} (Short:
                             \p{Wcho}; NOT \p{Block=Wancho}) (59)
   \p{Wara}                \p{Warang_Citi} (= \p{Script_Extensions=
                             Warang_Citi}) (NOT \p{Block=
                             Warang_Citi}) (84)
   \p{Warang_Citi}         \p{Script_Extensions=Warang_Citi} (Short:
                             \p{Wara}; NOT \p{Block=Warang_Citi}) (84)
   \p{WB: *}               \p{Word_Break: *}
   \p{Wcho}                \p{Wancho} (= \p{Script_Extensions=
                             Wancho}) (NOT \p{Block=Wancho}) (59)
   \p{White_Space}         \p{White_Space=Y} (Short: \p{Space}) (25)
   \p{White_Space: N*}     (Short: \p{Space=N}, \P{Space}) (1_114_087
                             plus all above-Unicode code points: [^
                             \t\n\cK\f\r\x20\x85\xa0], U+0100..167F,
                             U+1681..1FFF, U+200B..2027,
                             U+202A..202E, U+2030..205E ...)
   \p{White_Space: Y*}     (Short: \p{Space=Y}, \p{Space}) (25: [\t
                             \n\cK\f\r\x20\x85\xa0], U+1680,
                             U+2000..200A, U+2028..2029, U+202F,
                             U+205F ...)
   \p{Word}                \p{XPosixWord} (139_612)
   \p{Word_Break: ALetter} (Short: \p{WB=LE}) (29_489: [A-Za-z\xaa
                             \xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\xff],
                             U+0100..02D7, U+02DE..02FF,
                             U+0370..0374, U+0376..0377, U+037A..037D
                             ...)
   \p{Word_Break: CR}      (Short: \p{WB=CR}) (1: [\r])
   \p{Word_Break: Double_Quote} (Short: \p{WB=DQ}) (1: [\"])
   \p{Word_Break: DQ}      \p{Word_Break=Double_Quote} (1)
   \p{Word_Break: E_Base}  (Short: \p{WB=EB}) (0)
   \p{Word_Break: E_Base_GAZ} (Short: \p{WB=EBG}) (0)
   \p{Word_Break: E_Modifier} (Short: \p{WB=EM}) (0)
   \p{Word_Break: EB}      \p{Word_Break=E_Base} (0)
   \p{Word_Break: EBG}     \p{Word_Break=E_Base_GAZ} (0)
   \p{Word_Break: EM}      \p{Word_Break=E_Modifier} (0)
   \p{Word_Break: EX}      \p{Word_Break=ExtendNumLet} (11)
   \p{Word_Break: Extend}  (Short: \p{WB=Extend}) (2554:
                             U+0300..036F, U+0483..0489,
                             U+0591..05BD, U+05BF, U+05C1..05C2,
                             U+05C4..05C5 ...)
   \p{Word_Break: ExtendNumLet} (Short: \p{WB=EX}) (11: [_], U+202F,
                             U+203F..2040, U+2054, U+FE33..FE34,
                             U+FE4D..FE4F ...)
   \p{Word_Break: FO}      \p{Word_Break=Format} (71)
   \p{Word_Break: Format}  (Short: \p{WB=FO}) (71: [\xad],
                             U+0600..0605, U+061C, U+06DD, U+070F,
                             U+0890..0891 ...)
   \p{Word_Break: GAZ}     \p{Word_Break=Glue_After_Zwj} (0)
   \p{Word_Break: Glue_After_Zwj} (Short: \p{WB=GAZ}) (0)
   \p{Word_Break: Hebrew_Letter} (Short: \p{WB=HL}) (75:
                             U+05D0..05EA, U+05EF..05F2, U+FB1D,
                             U+FB1F..FB28, U+FB2A..FB36, U+FB38..FB3C
                             ...)
   \p{Word_Break: HL}      \p{Word_Break=Hebrew_Letter} (75)
   \p{Word_Break: KA}      \p{Word_Break=Katakana} (331)
   \p{Word_Break: Katakana} (Short: \p{WB=KA}) (331: U+3031..3035,
                             U+309B..309C, U+30A0..30FA,
                             U+30FC..30FF, U+31F0..31FF, U+32D0..32FE
                             ...)
   \p{Word_Break: LE}      \p{Word_Break=ALetter} (29_489)
   \p{Word_Break: LF}      (Short: \p{WB=LF}) (1: [\n])
   \p{Word_Break: MB}      \p{Word_Break=MidNumLet} (7)
   \p{Word_Break: MidLetter} (Short: \p{WB=ML}) (9: [:\xb7], U+0387,
                             U+055F, U+05F4, U+2027, U+FE13 ...)
   \p{Word_Break: MidNum}  (Short: \p{WB=MN}) (15: [,;], U+037E,
                             U+0589, U+060C..060D, U+066C, U+07F8 ...)
   \p{Word_Break: MidNumLet} (Short: \p{WB=MB}) (7: [.],
                             U+2018..2019, U+2024, U+FE52, U+FF07,
                             U+FF0E)
   \p{Word_Break: ML}      \p{Word_Break=MidLetter} (9)
   \p{Word_Break: MN}      \p{Word_Break=MidNum} (15)
   \p{Word_Break: Newline} (Short: \p{WB=NL}) (5: [\cK\f\x85],
                             U+2028..2029)
   \p{Word_Break: NL}      \p{Word_Break=Newline} (5)
   \p{Word_Break: NU}      \p{Word_Break=Numeric} (681)
   \p{Word_Break: Numeric} (Short: \p{WB=NU}) (681: [0-9],
                             U+0660..0669, U+066B, U+06F0..06F9,
                             U+07C0..07C9, U+0966..096F ...)
   \p{Word_Break: Other}   (Short: \p{WB=XX}) (1_080_819 plus all
                             above-Unicode code points: [^\n\cK\f\r
                             \x20\"\',.0-9:;A-Z_a-z\x85\xaa\xad\xb5
                             \xb7\xba\xc0-\xd6\xd8-\xf6\xf8-\xff],
                             U+02D8..02DD, U+0375, U+0378..0379,
                             U+0380..0385, U+038B ...)
   \p{Word_Break: Regional_Indicator} (Short: \p{WB=RI}) (26:
                             U+1F1E6..1F1FF)
   \p{Word_Break: RI}      \p{Word_Break=Regional_Indicator} (26)
   \p{Word_Break: Single_Quote} (Short: \p{WB=SQ}) (1: [\'])
   \p{Word_Break: SQ}      \p{Word_Break=Single_Quote} (1)
   \p{Word_Break: WSegSpace} (Short: \p{WB=WSegSpace}) (14: [\x20],
                             U+1680, U+2000..2006, U+2008..200A,
                             U+205F, U+3000)
   \p{Word_Break: XX}      \p{Word_Break=Other} (1_080_819 plus all
                             above-Unicode code points)
   \p{Word_Break: ZWJ}     (Short: \p{WB=ZWJ}) (1: U+200D)
   \p{WSpace}              \p{White_Space} (= \p{White_Space=Y}) (25)
   \p{WSpace: *}           \p{White_Space: *}
   \p{XDigit}              \p{XPosixXDigit} (= \p{Hex_Digit=Y}) (44)
   \p{XID_Continue}        \p{XID_Continue=Y} (Short: \p{XIDC})
                             (139_463)
   \p{XID_Continue: N*}    (Short: \p{XIDC=N}, \P{XIDC}) (974_649
                             plus all above-Unicode code points:
                             [\x00-\x20!\"#\$\%&\'\(\)*+,\-.\/:;<=>?
                             \@\[\\\]\^`\{\|\}~\x7f-\xa9\xab-\xb4
                             \xb6\xb8-\xb9\xbb-\xbf\xd7\xf7],
                             U+02C2..02C5, U+02D2..02DF,
                             U+02E5..02EB, U+02ED, U+02EF..02FF ...)
   \p{XID_Continue: Y*}    (Short: \p{XIDC=Y}, \p{XIDC}) (139_463:
                             [0-9A-Z_a-z\xaa\xb5\xb7\xba\xc0-\xd6
                             \xd8-\xf6\xf8-\xff], U+0100..02C1,
                             U+02C6..02D1, U+02E0..02E4, U+02EC,
                             U+02EE ...)
   \p{XID_Start}           \p{XID_Start=Y} (Short: \p{XIDS}) (136_322)
   \p{XID_Start: N*}       (Short: \p{XIDS=N}, \P{XIDS}) (977_790
                             plus all above-Unicode code points:
                             [\x00-\x20!\"#\$\%&\'\(\)*+,\-.\/0-9:;<=
                             >?\@\[\\\]\^_`\{\|\}~\x7f-\xa9\xab-\xb4
                             \xb6-\xb9\xbb-\xbf\xd7\xf7],
                             U+02C2..02C5, U+02D2..02DF,
                             U+02E5..02EB, U+02ED, U+02EF..036F ...)
   \p{XID_Start: Y*}       (Short: \p{XIDS=Y}, \p{XIDS}) (136_322:
                             [A-Za-z\xaa\xb5\xba\xc0-\xd6\xd8-\xf6
                             \xf8-\xff], U+0100..02C1, U+02C6..02D1,
                             U+02E0..02E4, U+02EC, U+02EE ...)
   \p{XIDC}                \p{XID_Continue} (= \p{XID_Continue=Y})
                             (139_463)
   \p{XIDC: *}             \p{XID_Continue: *}
   \p{XIDS}                \p{XID_Start} (= \p{XID_Start=Y}) (136_322)
   \p{XIDS: *}             \p{XID_Start: *}
   \p{Xpeo}                \p{Old_Persian} (= \p{Script_Extensions=
                             Old_Persian}) (NOT \p{Block=
                             Old_Persian}) (50)
   \p{XPerlSpace}          \p{XPosixSpace} (25)
   \p{XPosixAlnum}         Alphabetic and (decimal) Numeric (Short:
                             \p{Alnum}) (138_445: [0-9A-Za-z\xaa\xb5
                             \xba\xc0-\xd6\xd8-\xf6\xf8-\xff],
                             U+0100..02C1, U+02C6..02D1,
                             U+02E0..02E4, U+02EC, U+02EE ...)
   \p{XPosixAlpha}         \p{Alphabetic=Y} (Short: \p{Alpha})
                             (137_765)
   \p{XPosixBlank}         \h, Horizontal white space (Short:
                             \p{Blank}) (18: [\t\x20\xa0], U+1680,
                             U+2000..200A, U+202F, U+205F, U+3000)
   \p{XPosixCntrl}         \p{General_Category=Control} Control
                             characters (Short: \p{Cc}) (65)
   \p{XPosixDigit}         \p{General_Category=Decimal_Number} [0-9]
                             + all other decimal digits (Short:
                             \p{Nd}) (680)
   \p{XPosixGraph}         Characters that are graphical (Short:
                             \p{Graph}) (286_635: [!\"#\$\%&\'
                             \(\)*+,\-.\/0-9:;<=>?\@A-Z\[\\\]\^_`a-z
                             \{\|\}~\xa1-\xff], U+0100..0377,
                             U+037A..037F, U+0384..038A, U+038C,
                             U+038E..03A1 ...)
   \p{XPosixLower}         \p{Lowercase=Y} (Short: \p{Lower}; /i=
                             Cased=Yes) (2544)
   \p{XPosixPrint}         Characters that are graphical plus space
                             characters (but no controls) (Short:
                             \p{Print}) (286_652: [\x20-\x7e\xa0-
                             \xff], U+0100..0377, U+037A..037F,
                             U+0384..038A, U+038C, U+038E..03A1 ...)
   \p{XPosixPunct}         \p{Punct} + ASCII-range \p{Symbol} (851:
                             [!\"#\$\%&\'\(\)*+,\-.\/:;<=>?\@\[\\\]
                             \^_`\{\|\}~\xa1\xa7\xab\xb6-\xb7\xbb
                             \xbf], U+037E, U+0387, U+055A..055F,
                             U+0589..058A, U+05BE ...)
   \p{XPosixSpace}         \s including beyond ASCII and vertical tab
                             (Short: \p{SpacePerl}) (25: [\t\n\cK\f
                             \r\x20\x85\xa0], U+1680, U+2000..200A,
                             U+2028..2029, U+202F, U+205F ...)
   \p{XPosixUpper}         \p{Uppercase=Y} (Short: \p{Upper}; /i=
                             Cased=Yes) (1951)
   \p{XPosixWord}          \w, including beyond ASCII; = \p{Alnum} +
                             \pM + \p{Pc} + \p{Join_Control} (Short:
                             \p{Word}) (139_612: [0-9A-Z_a-z\xaa\xb5
                             \xba\xc0-\xd6\xd8-\xf6\xf8-\xff],
                             U+0100..02C1, U+02C6..02D1,
                             U+02E0..02E4, U+02EC, U+02EE ...)
   \p{XPosixXDigit}        \p{Hex_Digit=Y} (Short: \p{Hex}) (44)
   \p{Xsux}                \p{Cuneiform} (= \p{Script_Extensions=
                             Cuneiform}) (NOT \p{Block=Cuneiform})
                             (1234)
   \p{Yezi}                \p{Yezidi} (= \p{Script_Extensions=
                             Yezidi}) (NOT \p{Block=Yezidi}) (60)
   \p{Yezidi}              \p{Script_Extensions=Yezidi} (Short:
                             \p{Yezi}; NOT \p{Block=Yezidi}) (60)
   \p{Yi}                  \p{Script_Extensions=Yi} (1246)
 X \p{Yi_Radicals}         \p{Block=Yi_Radicals} (64)
 X \p{Yi_Syllables}        \p{Block=Yi_Syllables} (1168)
   \p{Yiii}                \p{Yi} (= \p{Script_Extensions=Yi}) (1246)
 X \p{Yijing}              \p{Yijing_Hexagram_Symbols} (= \p{Block=
                             Yijing_Hexagram_Symbols}) (64)
 X \p{Yijing_Hexagram_Symbols} \p{Block=Yijing_Hexagram_Symbols}
                             (Short: \p{InYijing}) (64)
   \p{Z} \pZ               \p{Separator} (= \p{General_Category=
                             Separator}) (19)
   \p{Zanabazar_Square}    \p{Script_Extensions=Zanabazar_Square}
                             (Short: \p{Zanb}; NOT \p{Block=
                             Zanabazar_Square}) (72)
   \p{Zanb}                \p{Zanabazar_Square} (=
                             \p{Script_Extensions=Zanabazar_Square})
                             (NOT \p{Block=Zanabazar_Square}) (72)
   \p{Zinh}                \p{Inherited} (= \p{Script_Extensions=
                             Inherited}) (586)
   \p{Zl}                  \p{Line_Separator} (= \p{General_Category=
                             Line_Separator}) (1)
 X \p{Znamenny_Music}      \p{Znamenny_Musical_Notation} (= \p{Block=
                             Znamenny_Musical_Notation}) (208)
 X \p{Znamenny_Musical_Notation} \p{Block=Znamenny_Musical_Notation}
                             (Short: \p{InZnamennyMusic}) (208)
   \p{Zp}                  \p{Paragraph_Separator} (=
                             \p{General_Category=
                             Paragraph_Separator}) (1)
   \p{Zs}                  \p{Space_Separator} (=
                             \p{General_Category=Space_Separator})
                             (17)
   \p{Zyyy}                \p{Common} (= \p{Script_Extensions=
                             Common}) (7873)
   \p{Zzzz}                \p{Unknown} (= \p{Script_Extensions=
                             Unknown}) (964_861 plus all above-
                             Unicode code points)



=head2 Legal C<\p{}> and C<\P{}> constructs that match no characters

Unicode has some property-value pairs that currently don't match anything.
This happens generally either because they are obsolete, or they exist for
symmetry with other forms, but no language has yet been encoded that uses
them.  In this version of Unicode, the following match zero code points:

=over 4

=item \p{Canonical_Combining_Class=Attached_Below_Left}

=item \p{Canonical_Combining_Class=CCC133}

=item \p{Grapheme_Cluster_Break=E_Base}

=item \p{Grapheme_Cluster_Break=E_Base_GAZ}

=item \p{Grapheme_Cluster_Break=E_Modifier}

=item \p{Grapheme_Cluster_Break=Glue_After_Zwj}

=item \p{Word_Break=E_Base}

=item \p{Word_Break=E_Base_GAZ}

=item \p{Word_Break=E_Modifier}

=item \p{Word_Break=Glue_After_Zwj}

=back



=head1 Properties accessible through Unicode::UCD

The value of any Unicode (not including Perl extensions) character
property mentioned above for any single code point is available through
L<Unicode::UCD/charprop()>.  L<Unicode::UCD/charprops_all()> returns the
values of all the Unicode properties for a given code point.

Besides these, all the Unicode character properties mentioned above
(except for those marked as for internal use by Perl) are also
accessible by L<Unicode::UCD/prop_invlist()>.

Due to their nature, not all Unicode character properties are suitable for
regular expression matches, nor C<prop_invlist()>.  The remaining
non-provisional, non-internal ones are accessible via
L<Unicode::UCD/prop_invmap()> (except for those that this Perl installation
hasn't included; see L<below for which those are|/Unicode character properties
that are NOT accepted by Perl>).

For compatibility with other parts of Perl, all the single forms given in the
table in the L<section above|/Properties accessible through \p{} and \P{}>
are recognized.  BUT, there are some ambiguities between some Perl extensions
and the Unicode properties, all of which are silently resolved in favor of the
official Unicode property.  To avoid surprises, you should only use
C<prop_invmap()> for forms listed in the table below, which omits the
non-recommended ones.  The affected forms are the Perl single form equivalents
of Unicode properties, such as C<\p{sc}> being a single-form equivalent of
C<\p{gc=sc}>, which is treated by C<prop_invmap()> as the C<Script> property,
whose short name is C<sc>.  The table indicates the current ambiguities in the
INFO column, beginning with the word C<"NOT">.

The standard Unicode properties listed below are documented in
L<http://www.unicode.org/reports/tr44/>; Perl_Decimal_Digit is documented in
L<Unicode::UCD/prop_invmap()>.  The other Perl extensions are in
L<perlunicode/Other Properties>;

The first column in the table is a name for the property; the second column is
an alternative name, if any, plus possibly some annotations.  The alternative
name is the property's full name, unless that would simply repeat the first
column, in which case the second column indicates the property's short name
(if different).  The annotations are given only in the entry for the full
name.  The annotations for binary properties include a list of the first few
ranges that the property matches.  To avoid any ambiguity, the SPACE character
is represented as C<\x20>.

If a property is obsolete, etc, the entry will be flagged with the same
characters used in the table in the L<section above|/Properties accessible
through \p{} and \P{}>, like B<D> or B<S>.

   NAME                      INFO

   Age
   AHex                    ASCII_Hex_Digit
   All                     (Perl extension).  All code points,
                           including those above Unicode.  Same as
                           qr/./s.  U+0000..infinity
   Alnum                   XPosixAlnum.  (Perl extension)
   Alpha                   Alphabetic
   Alphabetic              (Short: Alpha).  [A-Za-z\xaa\xb5\xba\xc0-
                           \xd6\xd8-\xf6\xf8-\xff], U+0100..02C1,
                           U+02C6..02D1, U+02E0..02E4, U+02EC, U+02EE
                           ...
   Any                     (Perl extension).  All Unicode code
                           points.  U+0000..10FFFF
   ASCII                   Block=Basic_Latin.  (Perl extension).
                           [\x00-\x7f]
   ASCII_Hex_Digit         (Short: AHex).  [0-9A-Fa-f]
   Assigned                (Perl extension).  All assigned code
                           points.  U+0000..0377, U+037A..037F,
                           U+0384..038A, U+038C, U+038E..03A1,
                           U+03A3..052F ...
   Bc                      Bidi_Class
   Bidi_C                  Bidi_Control
   Bidi_Class              (Short: bc)
   Bidi_Control            (Short: Bidi_C).  U+061C, U+200E..200F,
                           U+202A..202E, U+2066..2069
   Bidi_M                  Bidi_Mirrored
   Bidi_Mirrored           (Short: Bidi_M).  [\(\)<>\[\]\{\}\xab
                           \xbb], U+0F3A..0F3D, U+169B..169C,
                           U+2039..203A, U+2045..2046, U+207D..207E
                           ...
   Bidi_Mirroring_Glyph    (Short: bmg)
   Bidi_Paired_Bracket     (Short: bpb)
   Bidi_Paired_Bracket_Type (Short: bpt)
   Blank                   XPosixBlank.  (Perl extension)
   Blk                     Block
   Block                   (Short: blk)
   Bmg                     Bidi_Mirroring_Glyph
   Bpb                     Bidi_Paired_Bracket
   Bpt                     Bidi_Paired_Bracket_Type
   Canonical_Combining_Class (Short: ccc)
   Case_Folding            (Short: cf)
   Case_Ignorable          (Short: CI).  [\'.:\^`\xa8\xad\xaf\xb4
                           \xb7-\xb8], U+02B0..036F, U+0374..0375,
                           U+037A, U+0384..0385, U+0387 ...
   Cased                   [A-Za-z\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-
                           \xff], U+0100..01BA, U+01BC..01BF,
                           U+01C4..0293, U+0295..02B8, U+02C0..02C1
                           ...
   Category                General_Category
   Ccc                     Canonical_Combining_Class
   CE                      Composition_Exclusion
   Cf                      Case_Folding; NOT 'cf' meaning
                           'General_Category=Format'
   Changes_When_Casefolded (Short: CWCF).  [A-Z\xb5\xc0-\xd6\xd8-
                           \xdf], U+0100, U+0102, U+0104, U+0106,
                           U+0108 ...
   Changes_When_Casemapped (Short: CWCM).  [A-Za-z\xb5\xc0-\xd6\xd8-
                           \xf6\xf8-\xff], U+0100..0137,
                           U+0139..018C, U+018E..019A, U+019C..01A9,
                           U+01AC..01B9 ...
   Changes_When_Lowercased (Short: CWL).  [A-Z\xc0-\xd6\xd8-\xde],
                           U+0100, U+0102, U+0104, U+0106, U+0108 ...
   Changes_When_NFKC_Casefolded (Short: CWKCF).  [A-Z\xa0\xa8\xaa
                           \xad\xaf\xb2-\xb5\xb8-\xba\xbc-\xbe\xc0-
                           \xd6\xd8-\xdf], U+0100, U+0102, U+0104,
                           U+0106, U+0108 ...
   Changes_When_Titlecased (Short: CWT).  [a-z\xb5\xdf-\xf6\xf8-
                           \xff], U+0101, U+0103, U+0105, U+0107,
                           U+0109 ...
   Changes_When_Uppercased (Short: CWU).  [a-z\xb5\xdf-\xf6\xf8-
                           \xff], U+0101, U+0103, U+0105, U+0107,
                           U+0109 ...
   CI                      Case_Ignorable
   Cntrl                   XPosixCntrl (=General_Category=Control).
                           (Perl extension)
   Comp_Ex                 Full_Composition_Exclusion
   Composition_Exclusion   (Short: CE).  U+0958..095F, U+09DC..09DD,
                           U+09DF, U+0A33, U+0A36, U+0A59..0A5B ...
   CWCF                    Changes_When_Casefolded
   CWCM                    Changes_When_Casemapped
   CWKCF                   Changes_When_NFKC_Casefolded
   CWL                     Changes_When_Lowercased
   CWT                     Changes_When_Titlecased
   CWU                     Changes_When_Uppercased
   Dash                    [\-], U+058A, U+05BE, U+1400, U+1806,
                           U+2010..2015 ...
   Decomposition_Mapping   (Short: dm)
   Decomposition_Type      (Short: dt)
   Default_Ignorable_Code_Point (Short: DI).  [\xad], U+034F, U+061C,
                           U+115F..1160, U+17B4..17B5, U+180B..180F
                           ...
   Dep                     Deprecated
   Deprecated              (Short: Dep).  U+0149, U+0673, U+0F77,
                           U+0F79, U+17A3..17A4, U+206A..206F ...
   DI                      Default_Ignorable_Code_Point
   Dia                     Diacritic
   Diacritic               (Short: Dia).  [\^`\xa8\xaf\xb4\xb7-\xb8],
                           U+02B0..034E, U+0350..0357, U+035D..0362,
                           U+0374..0375, U+037A ...
   Digit                   XPosixDigit (=General_Category=
                           Decimal_Number).  (Perl extension)
   Dm                      Decomposition_Mapping
   Dt                      Decomposition_Type
   Ea                      East_Asian_Width
   East_Asian_Width        (Short: ea)
   EBase                   Emoji_Modifier_Base
   EComp                   Emoji_Component
   EMod                    Emoji_Modifier
   Emoji                   [#*0-9\xa9\xae], U+203C, U+2049, U+2122,
                           U+2139, U+2194..2199 ...
   Emoji_Component         (Short: EComp).  [#*0-9], U+200D, U+20E3,
                           U+FE0F, U+1F1E6..1F1FF, U+1F3FB..1F3FF ...
   Emoji_Modifier          (Short: EMod).  U+1F3FB..1F3FF
   Emoji_Modifier_Base     (Short: EBase).  U+261D, U+26F9,
                           U+270A..270D, U+1F385, U+1F3C2..1F3C4,
                           U+1F3C7 ...
   Emoji_Presentation      (Short: EPres).  U+231A..231B,
                           U+23E9..23EC, U+23F0, U+23F3,
                           U+25FD..25FE, U+2614..2615 ...
   EPres                   Emoji_Presentation
   EqUIdeo                 Equivalent_Unified_Ideograph
   Equivalent_Unified_Ideograph (Short: EqUIdeo)
   Ext                     Extender
   Extended_Pictographic   (Short: ExtPict).  [\xa9\xae], U+203C,
                           U+2049, U+2122, U+2139, U+2194..2199 ...
   Extender                (Short: Ext).  [\xb7], U+02D0..02D1,
                           U+0640, U+07FA, U+0B55, U+0E46 ...
   ExtPict                 Extended_Pictographic
   Full_Composition_Exclusion (Short: Comp_Ex).  U+0340..0341,
                           U+0343..0344, U+0374, U+037E, U+0387,
                           U+0958..095F ...
   Gc                      General_Category
   GCB                     Grapheme_Cluster_Break
   General_Category        (Short: gc)
   Gr_Base                 Grapheme_Base
   Gr_Ext                  Grapheme_Extend
   Graph                   XPosixGraph.  (Perl extension)
   Grapheme_Base           (Short: Gr_Base).  [\x20-\x7e\xa0-\xac
                           \xae-\xff], U+0100..02FF, U+0370..0377,
                           U+037A..037F, U+0384..038A, U+038C ...
   Grapheme_Cluster_Break  (Short: GCB)
   Grapheme_Extend         (Short: Gr_Ext).  U+0300..036F,
                           U+0483..0489, U+0591..05BD, U+05BF,
                           U+05C1..05C2, U+05C4..05C5 ...
   Hangul_Syllable_Type    (Short: hst)
   Hex                     Hex_Digit
   Hex_Digit               (Short: Hex).  [0-9A-Fa-f], U+FF10..FF19,
                           U+FF21..FF26, U+FF41..FF46
   HorizSpace              XPosixBlank.  (Perl extension)
   Hst                     Hangul_Syllable_Type
 D Hyphen                  [\-\xad], U+058A, U+1806, U+2010..2011,
                           U+2E17, U+30FB ...  Supplanted by
                           Line_Break property values; see
                           www.unicode.org/reports/tr14
   ID_Continue             (Short: IDC).  [0-9A-Z_a-z\xaa\xb5\xb7
                           \xba\xc0-\xd6\xd8-\xf6\xf8-\xff],
                           U+0100..02C1, U+02C6..02D1, U+02E0..02E4,
                           U+02EC, U+02EE ...
   ID_Start                (Short: IDS).  [A-Za-z\xaa\xb5\xba\xc0-
                           \xd6\xd8-\xf6\xf8-\xff], U+0100..02C1,
                           U+02C6..02D1, U+02E0..02E4, U+02EC, U+02EE
                           ...
   IDC                     ID_Continue
   Identifier_Status
   Identifier_Type
   Ideo                    Ideographic
   Ideographic             (Short: Ideo).  U+3006..3007,
                           U+3021..3029, U+3038..303A, U+3400..4DBF,
                           U+4E00..9FFF, U+F900..FA6D ...
   IDS                     ID_Start
   IDS_Binary_Operator     (Short: IDSB).  U+2FF0..2FF1, U+2FF4..2FFB
   IDS_Trinary_Operator    (Short: IDST).  U+2FF2..2FF3
   IDSB                    IDS_Binary_Operator
   IDST                    IDS_Trinary_Operator
   In                      Present_In.  (Perl extension)
   Indic_Positional_Category (Short: InPC)
   Indic_Syllabic_Category (Short: InSC)
   InPC                    Indic_Positional_Category
   InSC                    Indic_Syllabic_Category
   Isc                     ISO_Comment; NOT 'isc' meaning
                           'General_Category=Other'
   ISO_Comment             (Short: isc)
   Jg                      Joining_Group
   Join_C                  Join_Control
   Join_Control            (Short: Join_C).  U+200C..200D
   Joining_Group           (Short: jg)
   Joining_Type            (Short: jt)
   Jt                      Joining_Type
   Lb                      Line_Break
   Lc                      Lowercase_Mapping; NOT 'lc' meaning
                           'General_Category=Cased_Letter'
   Line_Break              (Short: lb)
   LOE                     Logical_Order_Exception
   Logical_Order_Exception (Short: LOE).  U+0E40..0E44, U+0EC0..0EC4,
                           U+19B5..19B7, U+19BA, U+AAB5..AAB6, U+AAB9
                           ...
   Lower                   Lowercase
   Lowercase               (Short: Lower).  [a-z\xaa\xb5\xba\xdf-
                           \xf6\xf8-\xff], U+0101, U+0103, U+0105,
                           U+0107, U+0109 ...
   Lowercase_Mapping       (Short: lc)
   Math                    [+<=>\^\|~\xac\xb1\xd7\xf7], U+03D0..03D2,
                           U+03D5, U+03F0..03F1, U+03F4..03F6,
                           U+0606..0608 ...
   Na                      Name
   Na1                     Unicode_1_Name
   Name                    (Short: na)
   Name_Alias
   NChar                   Noncharacter_Code_Point
   NFC_QC                  NFC_Quick_Check
   NFC_Quick_Check         (Short: NFC_QC)
   NFD_QC                  NFD_Quick_Check
   NFD_Quick_Check         (Short: NFD_QC)
   NFKC_Casefold           (Short: NFKC_CF)
   NFKC_CF                 NFKC_Casefold
   NFKC_QC                 NFKC_Quick_Check
   NFKC_Quick_Check        (Short: NFKC_QC)
   NFKD_QC                 NFKD_Quick_Check
   NFKD_Quick_Check        (Short: NFKD_QC)
   Noncharacter_Code_Point (Short: NChar).  U+FDD0..FDEF,
                           U+FFFE..FFFF, U+1FFFE..1FFFF,
                           U+2FFFE..2FFFF, U+3FFFE..3FFFF,
                           U+4FFFE..4FFFF ...
   Nt                      Numeric_Type
   Numeric_Type            (Short: nt)
   Numeric_Value           (Short: nv)
   Nv                      Numeric_Value
   Pat_Syn                 Pattern_Syntax
   Pat_WS                  Pattern_White_Space
   Pattern_Syntax          (Short: Pat_Syn).  [!\"#\$\%&\'\(\)*+,\-.
                           \/:;<=>?\@\[\\\]\^`\{\|\}~\xa1-\xa7\xa9
                           \xab-\xac\xae\xb0-\xb1\xb6\xbb\xbf\xd7
                           \xf7], U+2010..2027, U+2030..203E,
                           U+2041..2053, U+2055..205E, U+2190..245F
                           ...
   Pattern_White_Space     (Short: Pat_WS).  [\t\n\cK\f\r\x20\x85],
                           U+200E..200F, U+2028..2029
   PCM                     Prepended_Concatenation_Mark
   Perl_Decimal_Digit      (Perl extension)
   PerlSpace               PosixSpace.  (Perl extension)
   PerlWord                PosixWord.  (Perl extension)
   PosixAlnum              (Perl extension).  [0-9A-Za-z]
   PosixAlpha              (Perl extension).  [A-Za-z]
   PosixBlank              (Perl extension).  [\t\x20]
   PosixCntrl              (Perl extension).  ASCII control
                           characters.  ACK, BEL, BS, CAN, CR, DC1,
                           DC2, DC3, DC4, DEL, DLE, ENQ, EOM, EOT,
                           ESC, ETB, ETX, FF, FS, GS, HT, LF, NAK,
                           NUL, RS, SI, SO, SOH, STX, SUB, SYN, US, VT
   PosixDigit              (Perl extension).  [0-9]
   PosixGraph              (Perl extension).  [!\"#\$\%&\'\(\)*+,\-.
                           \/0-9:;<=>?\@A-Z\[\\\]\^_`a-z\{\|\}~]
   PosixLower              (Perl extension).  [a-z]
   PosixPrint              (Perl extension).  [\x20-\x7e]
   PosixPunct              (Perl extension).  [!\"#\$\%&\'\(\)*+,\-.
                           \/:;<=>?\@\[\\\]\^_`\{\|\}~]
   PosixSpace              (Perl extension).  [\t\n\cK\f\r\x20]
   PosixUpper              (Perl extension).  [A-Z]
   PosixWord               (Perl extension).  \w, restricted to
                           ASCII.  [0-9A-Z_a-z]
   PosixXDigit             ASCII_Hex_Digit.  (Perl extension).
                           [0-9A-Fa-f]
   Prepended_Concatenation_Mark (Short: PCM).  U+0600..0605, U+06DD,
                           U+070F, U+0890..0891, U+08E2, U+110BD ...
   Present_In              (Short: In).  (Perl extension)
   Print                   XPosixPrint.  (Perl extension)
   Punct                   General_Category=Punctuation.  (Perl
                           extension).  [!\"#\%&\'\(\)*,\-.\/:;?\@
                           \[\\\]_\{\}\xa1\xa7\xab\xb6-\xb7\xbb\xbf],
                           U+037E, U+0387, U+055A..055F,
                           U+0589..058A, U+05BE ...
   QMark                   Quotation_Mark
   Quotation_Mark          (Short: QMark).  [\"\'\xab\xbb],
                           U+2018..201F, U+2039..203A, U+2E42,
                           U+300C..300F, U+301D..301F ...
   Radical                 U+2E80..2E99, U+2E9B..2EF3, U+2F00..2FD5
   Regional_Indicator      (Short: RI).  U+1F1E6..1F1FF
   RI                      Regional_Indicator
   SB                      Sentence_Break
   Sc                      Script; NOT 'sc' meaning
                           'General_Category=Currency_Symbol'
   Scf                     Simple_Case_Folding
   Script                  (Short: sc)
   Script_Extensions       (Short: scx)
   Scx                     Script_Extensions
   SD                      Soft_Dotted
   Sentence_Break          (Short: SB)
   Sentence_Terminal       (Short: STerm).  [!.?], U+0589,
                           U+061D..061F, U+06D4, U+0700..0702, U+07F9
                           ...
   Sfc                     Simple_Case_Folding
   Simple_Case_Folding     (Short: scf)
   Simple_Lowercase_Mapping (Short: slc)
   Simple_Titlecase_Mapping (Short: stc)
   Simple_Uppercase_Mapping (Short: suc)
   Slc                     Simple_Lowercase_Mapping
   Soft_Dotted             (Short: SD).  [i-j], U+012F, U+0249,
                           U+0268, U+029D, U+02B2 ...
   Space                   White_Space
   SpacePerl               XPosixSpace.  (Perl extension)
   Stc                     Simple_Titlecase_Mapping
   STerm                   Sentence_Terminal
   Suc                     Simple_Uppercase_Mapping
   Tc                      Titlecase_Mapping
   Term                    Terminal_Punctuation
   Terminal_Punctuation    (Short: Term).  [!,.:;?], U+037E, U+0387,
                           U+0589, U+05C3, U+060C ...
   Title                   Titlecase.  (Perl extension)
   Titlecase               (Short: Title).  (Perl extension).  (=
                           \p{Gc=Lt}).  U+01C5, U+01C8, U+01CB,
                           U+01F2, U+1F88..1F8F, U+1F98..1F9F ...
   Titlecase_Mapping       (Short: tc)
   Uc                      Uppercase_Mapping
   UIdeo                   Unified_Ideograph
   Unicode                 Any.  (Perl extension)
   Unicode_1_Name          (Short: na1)
   Unified_Ideograph       (Short: UIdeo).  U+3400..4DBF,
                           U+4E00..9FFF, U+FA0E..FA0F, U+FA11,
