
=head2 Test2::Workflow::Build - Represents a build in progress.

=over 4

=item SOURCE

=item MAINTAINERS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item AUTHORS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item COPYRIGHT

=back

=head2 Test2::Workflow::Runner - Runs the workflows.

=over 4

=item SOURCE

=item MAINTAINERS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item AUTHORS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item COPYRIGHT

=back

=head2 Test2::Workflow::Task - Encapsulation of a Task

=over 4

=item SOURCE

=item MAINTAINERS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item AUTHORS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item COPYRIGHT

=back

=head2 Test2::Workflow::Task::Action - Encapsulation of an action.

=over 4

=item SOURCE

=item MAINTAINERS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item AUTHORS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item COPYRIGHT

=back

=head2 Test2::Workflow::Task::Group - Encapsulation of a group (describe).

=over 4

=item SOURCE

=item MAINTAINERS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item AUTHORS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item COPYRIGHT

=back

=head2 Test::Builder - Backend for building test libraries

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Construction

B<new>, B<create>, B<subtest>, B<name>, B<reset>

=item Setting up tests

B<plan>, B<expected_tests>, B<no_plan>, B<done_testing>, B<has_plan>,
B<skip_all>, B<exported_to>

=item Running tests

B<ok>, B<is_eq>, B<is_num>, B<isnt_eq>, B<isnt_num>, B<like>, B<unlike>,
B<cmp_ok>

=item Other Testing Methods

B<BAIL_OUT>, B<skip>, B<todo_skip>, B<skip_rest>

=item Test building utility methods

B<maybe_regex>, B<is_fh>

=back

=back

=over 4

=item Test style

B<level>, B<use_numbers>, B<no_diag>, B<no_ending>, B<no_header>

=item Output

B<diag>, B<note>, B<explain>, B<output>, B<failure_output>, B<todo_output>,
reset_outputs, carp, croak

=item Test Status and Info

B<no_log_results>, B<current_test>, B<is_passing>, B<summary>, B<details>,
B<todo>, B<find_TODO>, B<in_todo>, B<todo_start>, C<todo_end>, B<caller>

=back

=over 4

=item EXIT CODES

=item THREADS

=item MEMORY

=item EXAMPLES

=item SEE ALSO

=over 4

=item INTERNALS

=item LEGACY

=item EXTERNAL

=back

=item AUTHORS

=item MAINTAINERS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item COPYRIGHT

=back

=head2 Test::Builder::Formatter - Test::Builder subclass of
Test2::Formatter::TAP

=over 4

=item DESCRIPTION

=item SYNOPSIS

=item SOURCE

=item MAINTAINERS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item AUTHORS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item COPYRIGHT

=back

=head2 Test::Builder::IO::Scalar - A copy of IO::Scalar for Test::Builder

=over 4

=item DESCRIPTION

=item COPYRIGHT and LICENSE

=back

=over 4

=item Construction

=back

new [ARGS...]

open [SCALARREF]

opened

close

=over 4

=item Input and output

=back

flush

getc

getline

getlines

print ARGS..

read BUF, NBYTES, [OFFSET]

write BUF, NBYTES, [OFFSET]

sysread BUF, LEN, [OFFSET]

syswrite BUF, NBYTES, [OFFSET]

=over 4

=item Seeking/telling and other attributes

=back

autoflush

binmode

clearerr

eof

seek OFFSET, WHENCE

sysseek OFFSET, WHENCE

tell

 use_RS [YESNO]

setpos POS

getpos

sref

=over 4

=item WARNINGS

=item VERSION

=item AUTHORS

=over 4

=item Primary Maintainer

=item Principal author

=item Other contributors

=back

=item SEE ALSO

=back

=head2 Test::Builder::Module - Base class for test modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Importing

=back

=back

=over 4

=item Builder

=back

=over 4

=item SEE ALSO

=back

=head2 Test::Builder::Tester - test testsuites that have been built with
Test::Builder

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item Functions

test_out, test_err

=back

test_fail

test_diag

test_test, title (synonym 'name', 'label'), skip_out, skip_err

line_num

color

=over 4

=item BUGS

=item AUTHOR

=item MAINTAINERS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item NOTES

=item SEE ALSO

=back

=head2 Test::Builder::Tester::Color - turn on colour in
Test::Builder::Tester

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item AUTHOR

=item BUGS

=item SEE ALSO

=back

=head2 Test::Builder::TodoDiag - Test::Builder subclass of
Test2::Event::Diag

=over 4

=item DESCRIPTION

=item SYNOPSIS

=item SOURCE

=item MAINTAINERS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item AUTHORS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item COPYRIGHT

=back

=head2 Test::Harness - Run Perl standard test scripts with statistics

=over 4

=item VERSION

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=over 4

=item runtests( @test_files )

=back

=back

=over 4

=item execute_tests( tests => \@test_files, out => \*FH )

=back

=over 4

=item EXPORT

=item ENVIRONMENT VARIABLES THAT TAP::HARNESS::COMPATIBLE SETS

C<HARNESS_ACTIVE>, C<HARNESS_VERSION>

=item ENVIRONMENT VARIABLES THAT AFFECT TEST::HARNESS

C<HARNESS_PERL_SWITCHES>, C<HARNESS_TIMER>, C<HARNESS_VERBOSE>,
C<HARNESS_OPTIONS>, C<< j<n> >>, C<< c >>, C<< a<file.tgz> >>, C<<
fPackage-With-Dashes >>, C<HARNESS_SUBCLASS>,
C<HARNESS_SUMMARY_COLOR_SUCCESS>, C<HARNESS_SUMMARY_COLOR_FAIL>

=item Taint Mode

=item SEE ALSO

=item BUGS

=item AUTHORS

=item LICENCE AND COPYRIGHT

=back

=head2 Test::More - yet another framework for writing test scripts

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item I love it when a plan comes together

=back

=back

B<done_testing>

=over 4

=item Test names

=item I'm ok, you're not ok.

B<ok>

=back

B<is>, B<isnt>

B<like>

B<unlike>

B<cmp_ok>

B<can_ok>

B<isa_ok>

B<new_ok>

B<subtest>

B<pass>, B<fail>

=over 4

=item Module tests

B<require_ok>

=back

B<use_ok>

=over 4

=item Complex data structures

B<is_deeply>

=back

=over 4

=item Diagnostics

B<diag>, B<note>

=back

B<explain>

=over 4

=item Conditional tests

B<SKIP: BLOCK>

=back

B<TODO: BLOCK>, B<todo_skip>

When do I use SKIP vs. TODO?

=over 4

=item Test control

B<BAIL_OUT>

=back

=over 4

=item Discouraged comparison functions

B<eq_array>

=back

B<eq_hash>

B<eq_set>

=over 4

=item Extending and Embedding Test::More

B<builder>

=back

=over 4

=item EXIT CODES

=item COMPATIBILITY

subtests, C<done_testing()>, C<cmp_ok()>, C<new_ok()> C<note()> and
C<explain()>

=item CAVEATS and NOTES

utf8 / "Wide character in print", Overloaded objects, Threads

=item HISTORY

=item SEE ALSO

=over 4

=item ALTERNATIVES

=item ADDITIONAL LIBRARIES

=item OTHER COMPONENTS

=item BUNDLES

=back

=item AUTHORS

=item MAINTAINERS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item BUGS

=item SOURCE

=item COPYRIGHT

=back

=head2 Test::Simple - Basic utilities for writing tests.

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<ok>

=back

=over 4

=item EXAMPLE

=item CAVEATS

=item NOTES

=item HISTORY

=item SEE ALSO

L<Test::More>

=item AUTHORS

=item MAINTAINERS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item COPYRIGHT

=back

=head2 Test::Tester - Ease testing test modules built with Test::Builder

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item HOW TO USE (THE EASY WAY)

=item HOW TO USE (THE HARD WAY)

=item TEST RESULTS

ok, actual_ok, name, type, reason, diag, depth

=item SPACES AND TABS

=item COLOUR

=item EXPORTED FUNCTIONS

=item HOW IT WORKS

=item CAVEATS

=item SEE ALSO

=item AUTHOR

=item LICENSE

=back

=head2 Test::Tester::Capture - Help testing test modules built with
Test::Builder

=over 4

=item DESCRIPTION

=item AUTHOR

=item LICENSE

=back

=head2 Test::Tester::CaptureRunner - Help testing test modules built with
Test::Builder

=over 4

=item DESCRIPTION

=item AUTHOR

=item LICENSE

=back

=head2 Test::Tutorial - A tutorial about writing really basic tests

=over 4

=item DESCRIPTION

=over 4

=item Nuts and bolts of testing.

=item Where to start?

=item Names

=item Test the manual

=item Sometimes the tests are wrong

=item Testing lots of values

=item Informative names

=item Skipping tests

=item Todo tests

=item Testing with taint mode.

=back

=item FOOTNOTES

=item AUTHORS

=item MAINTAINERS

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item COPYRIGHT

=back

=head2 Test::use::ok - Alternative to Test::More::use_ok

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item MAINTAINER

Chad Granum E<lt>exodist@cpan.orgE<gt>

=item CC0 1.0 Universal

=back

=head2 Text::Abbrev - abbrev - create an abbreviation table from a list

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLE

=back

=head2 Text::Balanced - Extract delimited text sequences from strings.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item General Behaviour in List Contexts

[0], [1], [2]

=item General Behaviour in Scalar and Void Contexts

=item A Note About Prefixes

=item Functions

C<extract_delimited>, C<extract_bracketed>, C<extract_variable>, [0], [1],
[2], C<extract_tagged>, C<reject =E<gt> $listref>, C<ignore =E<gt>
$listref>, C<fail =E<gt> $str>, [0], [1], [2], [3], [4], [5],
C<gen_extract_tagged>, C<extract_quotelike>, [0], [1], [2], [3], [4], [5],
[6], [7], [8], [9], [10], C<extract_quotelike>, [0], [1], [2], [3], [4],
[5], [6], [7..10], C<extract_codeblock>, C<extract_multiple>,
C<gen_delimited_pat>, C<delimited_pat>

=back

=item DIAGNOSTICS

 C<Did not find a suitable bracket: "%s">,  C<Did not find prefix: /%s/>, 
C<Did not find opening bracket after prefix: "%s">,  C<No quotelike
operator found after prefix: "%s">,  C<Unmatched closing bracket: "%c">, 
C<Unmatched opening bracket(s): "%s">, C<Unmatched embedded quote (%s)>,
C<Did not find closing delimiter to match '%s'>,  C<Mismatched closing
bracket: expected "%c" but found "%s">,  C<No block delimiter found after
quotelike "%s">, C<Did not find leading dereferencer>, C<Bad identifier
after dereferencer>, C<Did not find expected opening bracket at %s>,
C<Improperly nested codeblock at %s>,  C<Missing second block for quotelike
"%s">, C<No match found for opening bracket>, C<Did not find opening tag:
/%s/>, C<Unable to construct closing tag to match: /%s/>, C<Found invalid
nested tag: %s>, C<Found unbalanced nested tag: %s>, C<Did not find closing
tag>

=item EXPORTS

Default Exports, Optional Exports, Export Tags, C<:ALL>

=item KNOWN BUGS

=item FEEDBACK

=item AVAILABILITY

=item INSTALLATION

=item AUTHOR

=item COPYRIGHT

=item LICENCE

=item VERSION

=item DATE

=item HISTORY

=back

=head2 Text::ParseWords - parse text into an array of tokens or array of
arrays

=over 4

=item SYNOPSIS

=item DESCRIPTION

true, false, C<"delimiters">

=item EXAMPLES

0Z<>, 1Z<>, 2Z<>, 3Z<>, 4Z<>, 5Z<>

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT AND LICENSE

=back

=head2 Text::Tabs - expand and unexpand tabs like unix expand(1) and
unexpand(1)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXPORTS

expand, unexpand, $tabstop

=item EXAMPLE

=item BUGS

=item LICENSE

=back

=head2 Text::Wrap - line wrapping to form simple paragraphs

=over 4

=item SYNOPSIS 

=item DESCRIPTION

=item OVERRIDES

=item EXAMPLES

=item SEE ALSO

=item AUTHOR

=item LICENSE

=back

=head2 Thread - Manipulate threads in Perl (for old code only)

=over 4

=item DEPRECATED

=item HISTORY

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

$thread = Thread->new(\&start_sub), $thread = Thread->new(\&start_sub,
LIST), lock VARIABLE, async BLOCK;, Thread->self, Thread->list, cond_wait
VARIABLE, cond_signal VARIABLE, cond_broadcast VARIABLE, yield

=item METHODS

join, detach, equal, tid, done

=item DEFUNCT

lock(\&sub), eval, flags

=item SEE ALSO

=back

=head2 Thread::Queue - Thread-safe queues

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

Ordinary scalars, Array refs, Hash refs, Scalar refs, Objects based on the
above

=item QUEUE CREATION

->new(), ->new(LIST)

=item BASIC METHODS

->enqueue(LIST), ->dequeue(), ->dequeue(COUNT), ->dequeue_nb(),
->dequeue_nb(COUNT), ->dequeue_timed(TIMEOUT), ->dequeue_timed(TIMEOUT,
COUNT), ->pending(), ->limit, ->end()

=item ADVANCED METHODS

->peek(), ->peek(INDEX), ->insert(INDEX, LIST), ->extract(),
->extract(INDEX), ->extract(INDEX, COUNT)

=item NOTES

=item LIMITATIONS

=item SEE ALSO

=item MAINTAINER

=item LICENSE
