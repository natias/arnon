
TAMIL SYLLABLE TAA; 0BA4 0BBE
TAMIL SYLLABLE TI;  0BA4 0BBF
TAMIL SYLLABLE TII; 0BA4 0BC0
TAMIL SYLLABLE TU;  0BA4 0BC1
TAMIL SYLLABLE TUU; 0BA4 0BC2
TAMIL SYLLABLE TE;  0BA4 0BC6
TAMIL SYLLABLE TEE; 0BA4 0BC7
TAMIL SYLLABLE TAI; 0BA4 0BC8
TAMIL SYLLABLE TO;  0BA4 0BCA
TAMIL SYLLABLE TOO; 0BA4 0BCB
TAMIL SYLLABLE TAU; 0BA4 0BCC

TAMIL SYLLABLE NAA; 0BA8 0BBE
TAMIL SYLLABLE NI;  0BA8 0BBF
TAMIL SYLLABLE NII; 0BA8 0BC0
TAMIL SYLLABLE NU;  0BA8 0BC1
TAMIL SYLLABLE NUU; 0BA8 0BC2
TAMIL SYLLABLE NE;  0BA8 0BC6
TAMIL SYLLABLE NEE; 0BA8 0BC7
TAMIL SYLLABLE NAI; 0BA8 0BC8
TAMIL SYLLABLE NO;  0BA8 0BCA
TAMIL SYLLABLE NOO; 0BA8 0BCB
TAMIL SYLLABLE NAU; 0BA8 0BCC

TAMIL SYLLABLE PAA; 0BAA 0BBE
TAMIL SYLLABLE PI;  0BAA 0BBF
TAMIL SYLLABLE PII; 0BAA 0BC0
TAMIL SYLLABLE PU;  0BAA 0BC1
TAMIL SYLLABLE PUU; 0BAA 0BC2
TAMIL SYLLABLE PE;  0BAA 0BC6
TAMIL SYLLABLE PEE; 0BAA 0BC7
TAMIL SYLLABLE PAI; 0BAA 0BC8
TAMIL SYLLABLE PO;  0BAA 0BCA
TAMIL SYLLABLE POO; 0BAA 0BCB
TAMIL SYLLABLE PAU; 0BAA 0BCC

TAMIL SYLLABLE MAA; 0BAE 0BBE
TAMIL SYLLABLE MI;  0BAE 0BBF
TAMIL SYLLABLE MII; 0BAE 0BC0
TAMIL SYLLABLE MU;  0BAE 0BC1
TAMIL SYLLABLE MUU; 0BAE 0BC2
TAMIL SYLLABLE ME;  0BAE 0BC6
TAMIL SYLLABLE MEE; 0BAE 0BC7
TAMIL SYLLABLE MAI; 0BAE 0BC8
TAMIL SYLLABLE MO;  0BAE 0BCA
TAMIL SYLLABLE MOO; 0BAE 0BCB
TAMIL SYLLABLE MAU; 0BAE 0BCC

TAMIL SYLLABLE YAA; 0BAF 0BBE
TAMIL SYLLABLE YI;  0BAF 0BBF
TAMIL SYLLABLE YII; 0BAF 0BC0
TAMIL SYLLABLE YU;  0BAF 0BC1
TAMIL SYLLABLE YUU; 0BAF 0BC2
TAMIL SYLLABLE YE;  0BAF 0BC6
TAMIL SYLLABLE YEE; 0BAF 0BC7
TAMIL SYLLABLE YAI; 0BAF 0BC8
TAMIL SYLLABLE YO;  0BAF 0BCA
TAMIL SYLLABLE YOO; 0BAF 0BCB
TAMIL SYLLABLE YAU; 0BAF 0BCC

TAMIL SYLLABLE RAA; 0BB0 0BBE
TAMIL SYLLABLE RI;  0BB0 0BBF
TAMIL SYLLABLE RII; 0BB0 0BC0
TAMIL SYLLABLE RU;  0BB0 0BC1
TAMIL SYLLABLE RUU; 0BB0 0BC2
TAMIL SYLLABLE RE;  0BB0 0BC6
TAMIL SYLLABLE REE; 0BB0 0BC7
TAMIL SYLLABLE RAI; 0BB0 0BC8
TAMIL SYLLABLE RO;  0BB0 0BCA
TAMIL SYLLABLE ROO; 0BB0 0BCB
TAMIL SYLLABLE RAU; 0BB0 0BCC

TAMIL SYLLABLE LAA; 0BB2 0BBE
TAMIL SYLLABLE LI;  0BB2 0BBF
TAMIL SYLLABLE LII; 0BB2 0BC0
TAMIL SYLLABLE LU;  0BB2 0BC1
TAMIL SYLLABLE LUU; 0BB2 0BC2
TAMIL SYLLABLE LE;  0BB2 0BC6
TAMIL SYLLABLE LEE; 0BB2 0BC7
TAMIL SYLLABLE LAI; 0BB2 0BC8
TAMIL SYLLABLE LO;  0BB2 0BCA
TAMIL SYLLABLE LOO; 0BB2 0BCB
TAMIL SYLLABLE LAU; 0BB2 0BCC

TAMIL SYLLABLE VAA; 0BB5 0BBE
TAMIL SYLLABLE VI;  0BB5 0BBF
TAMIL SYLLABLE VII; 0BB5 0BC0
TAMIL SYLLABLE VU;  0BB5 0BC1
TAMIL SYLLABLE VUU; 0BB5 0BC2
TAMIL SYLLABLE VE;  0BB5 0BC6
TAMIL SYLLABLE VEE; 0BB5 0BC7
TAMIL SYLLABLE VAI; 0BB5 0BC8
TAMIL SYLLABLE VO;  0BB5 0BCA
TAMIL SYLLABLE VOO; 0BB5 0BCB
TAMIL SYLLABLE VAU; 0BB5 0BCC

TAMIL SYLLABLE LLLAA; 0BB4 0BBE
TAMIL SYLLABLE LLLI;  0BB4 0BBF
TAMIL SYLLABLE LLLII; 0BB4 0BC0
TAMIL SYLLABLE LLLU;  0BB4 0BC1
TAMIL SYLLABLE LLLUU; 0BB4 0BC2
TAMIL SYLLABLE LLLE;  0BB4 0BC6
TAMIL SYLLABLE LLLEE; 0BB4 0BC7
TAMIL SYLLABLE LLLAI; 0BB4 0BC8
TAMIL SYLLABLE LLLO;  0BB4 0BCA
TAMIL SYLLABLE LLLOO; 0BB4 0BCB
TAMIL SYLLABLE LLLAU; 0BB4 0BCC

TAMIL SYLLABLE LLAA; 0BB3 0BBE
TAMIL SYLLABLE LLI;  0BB3 0BBF
TAMIL SYLLABLE LLII; 0BB3 0BC0
TAMIL SYLLABLE LLU;  0BB3 0BC1
TAMIL SYLLABLE LLUU; 0BB3 0BC2
TAMIL SYLLABLE LLE;  0BB3 0BC6
TAMIL SYLLABLE LLEE; 0BB3 0BC7
TAMIL SYLLABLE LLAI; 0BB3 0BC8
TAMIL SYLLABLE LLO;  0BB3 0BCA
TAMIL SYLLABLE LLOO; 0BB3 0BCB
TAMIL SYLLABLE LLAU; 0BB3 0BCC

TAMIL SYLLABLE RRAA; 0BB1 0BBE
TAMIL SYLLABLE RRI;  0BB1 0BBF
TAMIL SYLLABLE RRII; 0BB1 0BC0
TAMIL SYLLABLE RRU;  0BB1 0BC1
TAMIL SYLLABLE RRUU; 0BB1 0BC2
TAMIL SYLLABLE RRE;  0BB1 0BC6
TAMIL SYLLABLE RREE; 0BB1 0BC7
TAMIL SYLLABLE RRAI; 0BB1 0BC8
TAMIL SYLLABLE RRO;  0BB1 0BCA
TAMIL SYLLABLE RROO; 0BB1 0BCB
TAMIL SYLLABLE RRAU; 0BB1 0BCC

TAMIL SYLLABLE NNNAA; 0BA9 0BBE
TAMIL SYLLABLE NNNI;  0BA9 0BBF
TAMIL SYLLABLE NNNII; 0BA9 0BC0
TAMIL SYLLABLE NNNU;  0BA9 0BC1
TAMIL SYLLABLE NNNUU; 0BA9 0BC2
TAMIL SYLLABLE NNNE;  0BA9 0BC6
TAMIL SYLLABLE NNNEE; 0BA9 0BC7
TAMIL SYLLABLE NNNAI; 0BA9 0BC8
TAMIL SYLLABLE NNNO;  0BA9 0BCA
TAMIL SYLLABLE NNNOO; 0BA9 0BCB
TAMIL SYLLABLE NNNAU; 0BA9 0BCC

TAMIL SYLLABLE JAA; 0B9C 0BBE
TAMIL SYLLABLE JI;  0B9C 0BBF
TAMIL SYLLABLE JII; 0B9C 0BC0
TAMIL SYLLABLE JU;  0B9C 0BC1
TAMIL SYLLABLE JUU; 0B9C 0BC2
TAMIL SYLLABLE JE;  0B9C 0BC6
TAMIL SYLLABLE JEE; 0B9C 0BC7
TAMIL SYLLABLE JAI; 0B9C 0BC8
TAMIL SYLLABLE JO;  0B9C 0BCA
TAMIL SYLLABLE JOO; 0B9C 0BCB
TAMIL SYLLABLE JAU; 0B9C 0BCC

TAMIL SYLLABLE SHAA; 0BB6 0BBE
TAMIL SYLLABLE SHI;  0BB6 0BBF
TAMIL SYLLABLE SHII; 0BB6 0BC0
TAMIL SYLLABLE SHU;  0BB6 0BC1
TAMIL SYLLABLE SHUU; 0BB6 0BC2
TAMIL SYLLABLE SHE;  0BB6 0BC6
TAMIL SYLLABLE SHEE; 0BB6 0BC7
TAMIL SYLLABLE SHAI; 0BB6 0BC8
TAMIL SYLLABLE SHO;  0BB6 0BCA
TAMIL SYLLABLE SHOO; 0BB6 0BCB
TAMIL SYLLABLE SHAU; 0BB6 0BCC

TAMIL SYLLABLE SSAA; 0BB7 0BBE
TAMIL SYLLABLE SSI;  0BB7 0BBF
TAMIL SYLLABLE SSII; 0BB7 0BC0
TAMIL SYLLABLE SSU;  0BB7 0BC1
TAMIL SYLLABLE SSUU; 0BB7 0BC2
TAMIL SYLLABLE SSE;  0BB7 0BC6
TAMIL SYLLABLE SSEE; 0BB7 0BC7
TAMIL SYLLABLE SSAI; 0BB7 0BC8
TAMIL SYLLABLE SSO;  0BB7 0BCA
TAMIL SYLLABLE SSOO; 0BB7 0BCB
TAMIL SYLLABLE SSAU; 0BB7 0BCC

TAMIL SYLLABLE SAA; 0BB8 0BBE
TAMIL SYLLABLE SI;  0BB8 0BBF
TAMIL SYLLABLE SII; 0BB8 0BC0
TAMIL SYLLABLE SU;  0BB8 0BC1
TAMIL SYLLABLE SUU; 0BB8 0BC2
TAMIL SYLLABLE SE;  0BB8 0BC6
TAMIL SYLLABLE SEE; 0BB8 0BC7
TAMIL SYLLABLE SAI; 0BB8 0BC8
TAMIL SYLLABLE SO;  0BB8 0BCA
TAMIL SYLLABLE SOO; 0BB8 0BCB
TAMIL SYLLABLE SAU; 0BB8 0BCC

TAMIL SYLLABLE HAA; 0BB9 0BBE
TAMIL SYLLABLE HI;  0BB9 0BBF
TAMIL SYLLABLE HII; 0BB9 0BC0
TAMIL SYLLABLE HU;  0BB9 0BC1
TAMIL SYLLABLE HUU; 0BB9 0BC2
TAMIL SYLLABLE HE;  0BB9 0BC6
TAMIL SYLLABLE HEE; 0BB9 0BC7
TAMIL SYLLABLE HAI; 0BB9 0BC8
TAMIL SYLLABLE HO;  0BB9 0BCA
TAMIL SYLLABLE HOO; 0BB9 0BCB
TAMIL SYLLABLE HAU; 0BB9 0BCC

TAMIL SYLLABLE KSSA;  0B95 0BCD 0BB7
TAMIL SYLLABLE KSSAA; 0B95 0BCD 0BB7 0BBE
TAMIL SYLLABLE KSSI;  0B95 0BCD 0BB7 0BBF
TAMIL SYLLABLE KSSII; 0B95 0BCD 0BB7 0BC0
TAMIL SYLLABLE KSSU;  0B95 0BCD 0BB7 0BC1
TAMIL SYLLABLE KSSUU; 0B95 0BCD 0BB7 0BC2
TAMIL SYLLABLE KSSE;  0B95 0BCD 0BB7 0BC6
TAMIL SYLLABLE KSSEE; 0B95 0BCD 0BB7 0BC7
TAMIL SYLLABLE KSSAI; 0B95 0BCD 0BB7 0BC8
TAMIL SYLLABLE KSSO;  0B95 0BCD 0BB7 0BCA
TAMIL SYLLABLE KSSOO; 0B95 0BCD 0BB7 0BCB
TAMIL SYLLABLE KSSAU; 0B95 0BCD 0BB7 0BCC

TAMIL SYLLABLE SHRII; 0BB6 0BCD 0BB0 0BC0

# Sinhala medial consonants and "reph" form.
# Provisional 2010-05-13, Approved 2011-08-05

SINHALA CONSONANT SIGN YANSAYA;0DCA 200D 0DBA
SINHALA CONSONANT SIGN RAKAARAANSAYA;0DCA 200D 0DBB
SINHALA CONSONANT SIGN REPAYA;0DBB 0DCA 200D

# Georgian letter plus accent sequence.
# This is part of the original set of approved named sequences
# for Unicode 4.1. 2005.

GEORGIAN LETTER U-BRJGU;10E3 0302

# Khmer subjoined forms and other sequences.
# These are part of the original set of approved named sequences
# for Unicode 4.1. 2005.

KHMER CONSONANT SIGN COENG KA;17D2 1780
KHMER CONSONANT SIGN COENG KHA;17D2 1781
KHMER CONSONANT SIGN COENG KO;17D2 1782
KHMER CONSONANT SIGN COENG KHO;17D2 1783
KHMER CONSONANT SIGN COENG NGO;17D2 1784
KHMER CONSONANT SIGN COENG CA;17D2 1785
KHMER CONSONANT SIGN COENG CHA;17D2 1786
KHMER CONSONANT SIGN COENG CO;17D2 1787
KHMER CONSONANT SIGN COENG CHO;17D2 1788
KHMER CONSONANT SIGN COENG NYO;17D2 1789
KHMER CONSONANT SIGN COENG DA;17D2 178A
KHMER CONSONANT SIGN COENG TTHA;17D2 178B
KHMER CONSONANT SIGN COENG DO;17D2 178C
KHMER CONSONANT SIGN COENG TTHO;17D2 178D
KHMER CONSONANT SIGN COENG NA;17D2 178E
KHMER CONSONANT SIGN COENG TA;17D2 178F
KHMER CONSONANT SIGN COENG THA;17D2 1790
KHMER CONSONANT SIGN COENG TO;17D2 1791
KHMER CONSONANT SIGN COENG THO;17D2 1792
KHMER CONSONANT SIGN COENG NO;17D2 1793
KHMER CONSONANT SIGN COENG BA;17D2 1794
KHMER CONSONANT SIGN COENG PHA;17D2 1795
KHMER CONSONANT SIGN COENG PO;17D2 1796
KHMER CONSONANT SIGN COENG PHO;17D2 1797
KHMER CONSONANT SIGN COENG MO;17D2 1798
KHMER CONSONANT SIGN COENG YO;17D2 1799
KHMER CONSONANT SIGN COENG RO;17D2 179A
KHMER CONSONANT SIGN COENG LO;17D2 179B
KHMER CONSONANT SIGN COENG VO;17D2 179C
KHMER CONSONANT SIGN COENG SHA;17D2 179D
KHMER CONSONANT SIGN COENG SSA;17D2 179E
KHMER CONSONANT SIGN COENG SA;17D2 179F
KHMER CONSONANT SIGN COENG HA;17D2 17A0
KHMER CONSONANT SIGN COENG LA;17D2 17A1
KHMER VOWEL SIGN COENG QA;17D2 17A2
KHMER INDEPENDENT VOWEL SIGN COENG QU;17D2 17A7
KHMER INDEPENDENT VOWEL SIGN COENG RY;17D2 17AB
KHMER INDEPENDENT VOWEL SIGN COENG RYY;17D2 17AC
KHMER INDEPENDENT VOWEL SIGN COENG QE;17D2 17AF
KHMER VOWEL SIGN OM;17BB 17C6
KHMER VOWEL SIGN AAM;17B6 17C6

# Entries for JIS X 0213 compatibility mapping.
# Provisional 2008-11-07, Approved 2010-05-14
#
# Two of these were part of the original set of approved named sequences
# for Unicode 4.1. 2005.

HIRAGANA LETTER BIDAKUON NGA;304B 309A
HIRAGANA LETTER BIDAKUON NGI;304D 309A
HIRAGANA LETTER BIDAKUON NGU;304F 309A
HIRAGANA LETTER BIDAKUON NGE;3051 309A
HIRAGANA LETTER BIDAKUON NGO;3053 309A
KATAKANA LETTER BIDAKUON NGA;30AB 309A
KATAKANA LETTER BIDAKUON NGI;30AD 309A
KATAKANA LETTER BIDAKUON NGU;30AF 309A
KATAKANA LETTER BIDAKUON NGE;30B1 309A
KATAKANA LETTER BIDAKUON NGO;30B3 309A
KATAKANA LETTER AINU CE;30BB 309A
KATAKANA LETTER AINU TU;30C4 309A
KATAKANA LETTER AINU TO;30C8 309A
KATAKANA LETTER AINU P;31F7 309A
MODIFIER LETTER EXTRA-HIGH EXTRA-LOW CONTOUR TONE BAR;02E5 02E9
MODIFIER LETTER EXTRA-LOW EXTRA-HIGH CONTOUR TONE BAR;02E9 02E5

# EOF
                                                                                                                                                                                                                        usr/local/lib/perl5/5.40.0/unicore/SpecialCasing.txt                                                0000444 0000000 0000000 00000040700 14714567415 020417  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        # SpecialCasing-15.0.0.txt
# Date: 2022-02-02, 23:35:52 GMT
# © 2022 Unicode®, Inc.
# Unicode and the Unicode Logo are registered trademarks of Unicode, Inc. in the U.S. and other countries.
# For terms of use, see https://www.unicode.org/terms_of_use.html
#
# Unicode Character Database
#   For documentation, see https://www.unicode.org/reports/tr44/
#
# Special Casing
#
# This file is a supplement to the UnicodeData.txt file. It does not define any
# properties, but rather provides additional information about the casing of
# Unicode characters, for situations when casing incurs a change in string length
# or is dependent on context or locale. For compatibility, the UnicodeData.txt
# file only contains simple case mappings for characters where they are one-to-one
# and independent of context and language. The data in this file, combined with
# the simple case mappings in UnicodeData.txt, defines the full case mappings
# Lowercase_Mapping (lc), Titlecase_Mapping (tc), and Uppercase_Mapping (uc).
#
# Note that the preferred mechanism for defining tailored casing operations is
# the Unicode Common Locale Data Repository (CLDR). For more information, see the
# discussion of case mappings and case algorithms in the Unicode Standard.
#
# All code points not listed in this file that do not have a simple case mappings
# in UnicodeData.txt map to themselves.
# ================================================================================
# Format
# ================================================================================
# The entries in this file are in the following machine-readable format:
#
# <code>; <lower>; <title>; <upper>; (<condition_list>;)? # <comment>
#
# <code>, <lower>, <title>, and <upper> provide the respective full case mappings
# of <code>, expressed as character values in hex. If there is more than one character,
# they are separated by spaces. Other than as used to separate elements, spaces are
# to be ignored.
#
# The <condition_list> is optional. Where present, it consists of one or more language IDs
# or casing contexts, separated by spaces. In these conditions:
# - A condition list overrides the normal behavior if all of the listed conditions are true.
# - The casing context is always the context of the characters in the original string,
#   NOT in the resulting string.
# - Case distinctions in the condition list are not significant.
# - Conditions preceded by "Not_" represent the negation of the condition.
# The condition list is not represented in the UCD as a formal property.
#
# A language ID is defined by BCP 47, with '-' and '_' treated equivalently.
#
# A casing context for a character is defined by Section 3.13 Default Case Algorithms
# of The Unicode Standard.
#
# Parsers of this file must be prepared to deal with future additions to this format:
#  * Additional contexts
#  * Additional fields
# ================================================================================

# ================================================================================
# Unconditional mappings
# ================================================================================

# The German es-zed is special--the normal mapping is to SS.
# Note: the titlecase should never occur in practice. It is equal to titlecase(uppercase(<es-zed>))

00DF; 00DF; 0053 0073; 0053 0053; # LATIN SMALL LETTER SHARP S

# Preserve canonical equivalence for I with dot. Turkic is handled below.

0130; 0069 0307; 0130; 0130; # LATIN CAPITAL LETTER I WITH DOT ABOVE

# Ligatures

FB00; FB00; 0046 0066; 0046 0046; # LATIN SMALL LIGATURE FF
FB01; FB01; 0046 0069; 0046 0049; # LATIN SMALL LIGATURE FI
FB02; FB02; 0046 006C; 0046 004C; # LATIN SMALL LIGATURE FL
FB03; FB03; 0046 0066 0069; 0046 0046 0049; # LATIN SMALL LIGATURE FFI
FB04; FB04; 0046 0066 006C; 0046 0046 004C; # LATIN SMALL LIGATURE FFL
FB05; FB05; 0053 0074; 0053 0054; # LATIN SMALL LIGATURE LONG S T
FB06; FB06; 0053 0074; 0053 0054; # LATIN SMALL LIGATURE ST

0587; 0587; 0535 0582; 0535 0552; # ARMENIAN SMALL LIGATURE ECH YIWN
FB13; FB13; 0544 0576; 0544 0546; # ARMENIAN SMALL LIGATURE MEN NOW
FB14; FB14; 0544 0565; 0544 0535; # ARMENIAN SMALL LIGATURE MEN ECH
FB15; FB15; 0544 056B; 0544 053B; # ARMENIAN SMALL LIGATURE MEN INI
FB16; FB16; 054E 0576; 054E 0546; # ARMENIAN SMALL LIGATURE VEW NOW
FB17; FB17; 0544 056D; 0544 053D; # ARMENIAN SMALL LIGATURE MEN XEH

# No corresponding uppercase precomposed character

0149; 0149; 02BC 004E; 02BC 004E; # LATIN SMALL LETTER N PRECEDED BY APOSTROPHE
0390; 0390; 0399 0308 0301; 0399 0308 0301; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS
03B0; 03B0; 03A5 0308 0301; 03A5 0308 0301; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS
01F0; 01F0; 004A 030C; 004A 030C; # LATIN SMALL LETTER J WITH CARON
1E96; 1E96; 0048 0331; 0048 0331; # LATIN SMALL LETTER H WITH LINE BELOW
1E97; 1E97; 0054 0308; 0054 0308; # LATIN SMALL LETTER T WITH DIAERESIS
1E98; 1E98; 0057 030A; 0057 030A; # LATIN SMALL LETTER W WITH RING ABOVE
1E99; 1E99; 0059 030A; 0059 030A; # LATIN SMALL LETTER Y WITH RING ABOVE
1E9A; 1E9A; 0041 02BE; 0041 02BE; # LATIN SMALL LETTER A WITH RIGHT HALF RING
1F50; 1F50; 03A5 0313; 03A5 0313; # GREEK SMALL LETTER UPSILON WITH PSILI
1F52; 1F52; 03A5 0313 0300; 03A5 0313 0300; # GREEK SMALL LETTER UPSILON WITH PSILI AND VARIA
1F54; 1F54; 03A5 0313 0301; 03A5 0313 0301; # GREEK SMALL LETTER UPSILON WITH PSILI AND OXIA
1F56; 1F56; 03A5 0313 0342; 03A5 0313 0342; # GREEK SMALL LETTER UPSILON WITH PSILI AND PERISPOMENI
1FB6; 1FB6; 0391 0342; 0391 0342; # GREEK SMALL LETTER ALPHA WITH PERISPOMENI
1FC6; 1FC6; 0397 0342; 0397 0342; # GREEK SMALL LETTER ETA WITH PERISPOMENI
1FD2; 1FD2; 0399 0308 0300; 0399 0308 0300; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND VARIA
1FD3; 1FD3; 0399 0308 0301; 0399 0308 0301; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND OXIA
1FD6; 1FD6; 0399 0342; 0399 0342; # GREEK SMALL LETTER IOTA WITH PERISPOMENI
1FD7; 1FD7; 0399 0308 0342; 0399 0308 0342; # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND PERISPOMENI
1FE2; 1FE2; 03A5 0308 0300; 03A5 0308 0300; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND VARIA
1FE3; 1FE3; 03A5 0308 0301; 03A5 0308 0301; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND OXIA
1FE4; 1FE4; 03A1 0313; 03A1 0313; # GREEK SMALL LETTER RHO WITH PSILI
1FE6; 1FE6; 03A5 0342; 03A5 0342; # GREEK SMALL LETTER UPSILON WITH PERISPOMENI
1FE7; 1FE7; 03A5 0308 0342; 03A5 0308 0342; # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND PERISPOMENI
1FF6; 1FF6; 03A9 0342; 03A9 0342; # GREEK SMALL LETTER OMEGA WITH PERISPOMENI

# IMPORTANT-when iota-subscript (0345) is uppercased or titlecased,
#  the result will be incorrect unless the iota-subscript is moved to the end
#  of any sequence of combining marks. Otherwise, the accents will go on the capital iota.
#  This process can be achieved by first transforming the text to NFC before casing.
#  E.g. <alpha><iota_subscript><acute> is uppercased to <ALPHA><acute><IOTA>

# The following cases are already in the UnicodeData.txt file, so are only commented here.

# 0345; 0345; 0399; 0399; # COMBINING GREEK YPOGEGRAMMENI

# All letters with YPOGEGRAMMENI (iota-subscript) or PROSGEGRAMMENI (iota adscript)
# have special uppercases.
# Note: characters with PROSGEGRAMMENI are actually titlecase, not uppercase!

1F80; 1F80; 1F88; 1F08 0399; # GREEK SMALL LETTER ALPHA WITH PSILI AND YPOGEGRAMMENI
1F81; 1F81; 1F89; 1F09 0399; # GREEK SMALL LETTER ALPHA WITH DASIA AND YPOGEGRAMMENI
1F82; 1F82; 1F8A; 1F0A 0399; # GREEK SMALL LETTER ALPHA WITH PSILI AND VARIA AND YPOGEGRAMMENI
1F83; 1F83; 1F8B; 1F0B 0399; # GREEK SMALL LETTER ALPHA WITH DASIA AND VARIA AND YPOGEGRAMMENI
1F84; 1F84; 1F8C; 1F0C 0399; # GREEK SMALL LETTER ALPHA WITH PSILI AND OXIA AND YPOGEGRAMMENI
1F85; 1F85; 1F8D; 1F0D 0399; # GREEK SMALL LETTER ALPHA WITH DASIA AND OXIA AND YPOGEGRAMMENI
1F86; 1F86; 1F8E; 1F0E 0399; # GREEK SMALL LETTER ALPHA WITH PSILI AND PERISPOMENI AND YPOGEGRAMMENI
1F87; 1F87; 1F8F; 1F0F 0399; # GREEK SMALL LETTER ALPHA WITH DASIA AND PERISPOMENI AND YPOGEGRAMMENI
1F88; 1F80; 1F88; 1F08 0399; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND PROSGEGRAMMENI
1F89; 1F81; 1F89; 1F09 0399; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND PROSGEGRAMMENI
1F8A; 1F82; 1F8A; 1F0A 0399; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND VARIA AND PROSGEGRAMMENI
1F8B; 1F83; 1F8B; 1F0B 0399; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND VARIA AND PROSGEGRAMMENI
1F8C; 1F84; 1F8C; 1F0C 0399; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND OXIA AND PROSGEGRAMMENI
1F8D; 1F85; 1F8D; 1F0D 0399; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND OXIA AND PROSGEGRAMMENI
1F8E; 1F86; 1F8E; 1F0E 0399; # GREEK CAPITAL LETTER ALPHA WITH PSILI AND PERISPOMENI AND PROSGEGRAMMENI
1F8F; 1F87; 1F8F; 1F0F 0399; # GREEK CAPITAL LETTER ALPHA WITH DASIA AND PERISPOMENI AND PROSGEGRAMMENI
1F90; 1F90; 1F98; 1F28 0399; # GREEK SMALL LETTER ETA WITH PSILI AND YPOGEGRAMMENI
1F91; 1F91; 1F99; 1F29 0399; # GREEK SMALL LETTER ETA WITH DASIA AND YPOGEGRAMMENI
1F92; 1F92; 1F9A; 1F2A 0399; # GREEK SMALL LETTER ETA WITH PSILI AND VARIA AND YPOGEGRAMMENI
1F93; 1F93; 1F9B; 1F2B 0399; # GREEK SMALL LETTER ETA WITH DASIA AND VARIA AND YPOGEGRAMMENI
1F94; 1F94; 1F9C; 1F2C 0399; # GREEK SMALL LETTER ETA WITH PSILI AND OXIA AND YPOGEGRAMMENI
1F95; 1F95; 1F9D; 1F2D 0399; # GREEK SMALL LETTER ETA WITH DASIA AND OXIA AND YPOGEGRAMMENI
1F96; 1F96; 1F9E; 1F2E 0399; # GREEK SMALL LETTER ETA WITH PSILI AND PERISPOMENI AND YPOGEGRAMMENI
1F97; 1F97; 1F9F; 1F2F 0399; # GREEK SMALL LETTER ETA WITH DASIA AND PERISPOMENI AND YPOGEGRAMMENI
1F98; 1F90; 1F98; 1F28 0399; # GREEK CAPITAL LETTER ETA WITH PSILI AND PROSGEGRAMMENI
1F99; 1F91; 1F99; 1F29 0399; # GREEK CAPITAL LETTER ETA WITH DASIA AND PROSGEGRAMMENI
1F9A; 1F92; 1F9A; 1F2A 0399; # GREEK CAPITAL LETTER ETA WITH PSILI AND VARIA AND PROSGEGRAMMENI
1F9B; 1F93; 1F9B; 1F2B 0399; # GREEK CAPITAL LETTER ETA WITH DASIA AND VARIA AND PROSGEGRAMMENI
1F9C; 1F94; 1F9C; 1F2C 0399; # GREEK CAPITAL LETTER ETA WITH PSILI AND OXIA AND PROSGEGRAMMENI
1F9D; 1F95; 1F9D; 1F2D 0399; # GREEK CAPITAL LETTER ETA WITH DASIA AND OXIA AND PROSGEGRAMMENI
1F9E; 1F96; 1F9E; 1F2E 0399; # GREEK CAPITAL LETTER ETA WITH PSILI AND PERISPOMENI AND PROSGEGRAMMENI
1F9F; 1F97; 1F9F; 1F2F 0399; # GREEK CAPITAL LETTER ETA WITH DASIA AND PERISPOMENI AND PROSGEGRAMMENI
1FA0; 1FA0; 1FA8; 1F68 0399; # GREEK SMALL LETTER OMEGA WITH PSILI AND YPOGEGRAMMENI
1FA1; 1FA1; 1FA9; 1F69 0399; # GREEK SMALL LETTER OMEGA WITH DASIA AND YPOGEGRAMMENI
1FA2; 1FA2; 1FAA; 1F6A 0399; # GREEK SMALL LETTER OMEGA WITH PSILI AND VARIA AND YPOGEGRAMMENI
1FA3; 1FA3; 1FAB; 1F6B 0399; # GREEK SMALL LETTER OMEGA WITH DASIA AND VARIA AND YPOGEGRAMMENI
1FA4; 1FA4; 1FAC; 1F6C 0399; # GREEK SMALL LETTER OMEGA WITH PSILI AND OXIA AND YPOGEGRAMMENI
1FA5; 1FA5; 1FAD; 1F6D 0399; # GREEK SMALL LETTER OMEGA WITH DASIA AND OXIA AND YPOGEGRAMMENI
1FA6; 1FA6; 1FAE; 1F6E 0399; # GREEK SMALL LETTER OMEGA WITH PSILI AND PERISPOMENI AND YPOGEGRAMMENI
1FA7; 1FA7; 1FAF; 1F6F 0399; # GREEK SMALL LETTER OMEGA WITH DASIA AND PERISPOMENI AND YPOGEGRAMMENI
1FA8; 1FA0; 1FA8; 1F68 0399; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND PROSGEGRAMMENI
1FA9; 1FA1; 1FA9; 1F69 0399; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND PROSGEGRAMMENI
1FAA; 1FA2; 1FAA; 1F6A 0399; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND VARIA AND PROSGEGRAMMENI
1FAB; 1FA3; 1FAB; 1F6B 0399; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND VARIA AND PROSGEGRAMMENI
1FAC; 1FA4; 1FAC; 1F6C 0399; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND OXIA AND PROSGEGRAMMENI
1FAD; 1FA5; 1FAD; 1F6D 0399; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND OXIA AND PROSGEGRAMMENI
1FAE; 1FA6; 1FAE; 1F6E 0399; # GREEK CAPITAL LETTER OMEGA WITH PSILI AND PERISPOMENI AND PROSGEGRAMMENI
1FAF; 1FA7; 1FAF; 1F6F 0399; # GREEK CAPITAL LETTER OMEGA WITH DASIA AND PERISPOMENI AND PROSGEGRAMMENI
1FB3; 1FB3; 1FBC; 0391 0399; # GREEK SMALL LETTER ALPHA WITH YPOGEGRAMMENI
1FBC; 1FB3; 1FBC; 0391 0399; # GREEK CAPITAL LETTER ALPHA WITH PROSGEGRAMMENI
1FC3; 1FC3; 1FCC; 0397 0399; # GREEK SMALL LETTER ETA WITH YPOGEGRAMMENI
1FCC; 1FC3; 1FCC; 0397 0399; # GREEK CAPITAL LETTER ETA WITH PROSGEGRAMMENI
1FF3; 1FF3; 1FFC; 03A9 0399; # GREEK SMALL LETTER OMEGA WITH YPOGEGRAMMENI
1FFC; 1FF3; 1FFC; 03A9 0399; # GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI

# Some characters with YPOGEGRAMMENI also have no corresponding titlecases

1FB2; 1FB2; 1FBA 0345; 1FBA 0399; # GREEK SMALL LETTER ALPHA WITH VARIA AND YPOGEGRAMMENI
1FB4; 1FB4; 0386 0345; 0386 0399; # GREEK SMALL LETTER ALPHA WITH OXIA AND YPOGEGRAMMENI
1FC2; 1FC2; 1FCA 0345; 1FCA 0399; # GREEK SMALL LETTER ETA WITH VARIA AND YPOGEGRAMMENI
1FC4; 1FC4; 0389 0345; 0389 0399; # GREEK SMALL LETTER ETA WITH OXIA AND YPOGEGRAMMENI
1FF2; 1FF2; 1FFA 0345; 1FFA 0399; # GREEK SMALL LETTER OMEGA WITH VARIA AND YPOGEGRAMMENI
1FF4; 1FF4; 038F 0345; 038F 0399; # GREEK SMALL LETTER OMEGA WITH OXIA AND YPOGEGRAMMENI

1FB7; 1FB7; 0391 0342 0345; 0391 0342 0399; # GREEK SMALL LETTER ALPHA WITH PERISPOMENI AND YPOGEGRAMMENI
1FC7; 1FC7; 0397 0342 0345; 0397 0342 0399; # GREEK SMALL LETTER ETA WITH PERISPOMENI AND YPOGEGRAMMENI
1FF7; 1FF7; 03A9 0342 0345; 03A9 0342 0399; # GREEK SMALL LETTER OMEGA WITH PERISPOMENI AND YPOGEGRAMMENI

# ================================================================================
# Conditional Mappings
# The remainder of this file provides conditional casing data used to produce
# full case mappings.
# ================================================================================
# Language-Insensitive Mappings
# These are characters whose full case mappings do not depend on language, but do
# depend on context (which characters come before or after). For more information
# see the header of this file and the Unicode Standard.
# ================================================================================

# Special case for final form of sigma

03A3; 03C2; 03A3; 03A3; Final_Sigma; # GREEK CAPITAL LETTER SIGMA

# Note: the following cases for non-final are already in the UnicodeData.txt file.

# 03A3; 03C3; 03A3; 03A3; # GREEK CAPITAL LETTER SIGMA
# 03C3; 03C3; 03A3; 03A3; # GREEK SMALL LETTER SIGMA
# 03C2; 03C2; 03A3; 03A3; # GREEK SMALL LETTER FINAL SIGMA

# Note: the following cases are not included, since they would case-fold in lowercasing

# 03C3; 03C2; 03A3; 03A3; Final_Sigma; # GREEK SMALL LETTER SIGMA
# 03C2; 03C3; 03A3; 03A3; Not_Final_Sigma; # GREEK SMALL LETTER FINAL SIGMA

# ================================================================================
# Language-Sensitive Mappings
# These are characters whose full case mappings depend on language and perhaps also
# context (which characters come before or after). For more information
# see the header of this file and the Unicode Standard.
# ================================================================================

# Lithuanian

# Lithuanian retains the dot in a lowercase i when followed by accents.

# Remove DOT ABOVE after "i" with upper or titlecase

0307; 0307; ; ; lt After_Soft_Dotted; # COMBINING DOT ABOVE

# Introduce an explicit dot above when lowercasing capital I's and J's
# whenever there are more accents above.
# (of the accents used in Lithuanian: grave, acute, tilde above, and ogonek)

0049; 0069 0307; 0049; 0049; lt More_Above; # LATIN CAPITAL LETTER I
004A; 006A 0307; 004A; 004A; lt More_Above; # LATIN CAPITAL LETTER J
012E; 012F 0307; 012E; 012E; lt More_Above; # LATIN CAPITAL LETTER I WITH OGONEK
00CC; 0069 0307 0300; 00CC; 00CC; lt; # LATIN CAPITAL LETTER I WITH GRAVE
00CD; 0069 0307 0301; 00CD; 00CD; lt; # LATIN CAPITAL LETTER I WITH ACUTE
0128; 0069 0307 0303; 0128; 0128; lt; # LATIN CAPITAL LETTER I WITH TILDE

# ================================================================================

# Turkish and Azeri

# I and i-dotless; I-dot and i are case pairs in Turkish and Azeri
# The following rules handle those cases.

0130; 0069; 0130; 0130; tr; # LATIN CAPITAL LETTER I WITH DOT ABOVE
0130; 0069; 0130; 0130; az; # LATIN CAPITAL LETTER I WITH DOT ABOVE

# When lowercasing, remove dot_above in the sequence I + dot_above, which will turn into i.
# This matches the behavior of the canonically equivalent I-dot_above

0307; ; 0307; 0307; tr After_I; # COMBINING DOT ABOVE
0307; ; 0307; 0307; az After_I; # COMBINING DOT ABOVE

# When lowercasing, unless an I is before a dot_above, it turns into a dotless i.

0049; 0131; 0049; 0049; tr Not_Before_Dot; # LATIN CAPITAL LETTER I
0049; 0131; 0049; 0049; az Not_Before_Dot; # LATIN CAPITAL LETTER I

# When uppercasing, i turns into a dotted capital I

0069; 0069; 0130; 0130; tr; # LATIN SMALL LETTER I
0069; 0069; 0130; 0130; az; # LATIN SMALL LETTER I

# Note: the following case is already in the UnicodeData.txt file.

# 0131; 0131; 0049; 0049; tr; # LATIN SMALL LETTER DOTLESS I

# EOF

                                                                usr/local/lib/perl5/5.40.0/unicore/TestNorm.pl                                                      0000444 0000000 0000000 00004257410 14714567415 017275  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        use utf8;
use Test::More;

sub ord_string {    # Convert packed ords to printable string
    use charnames ();
    return "'" . join("", map { '\N{' . charnames::viacode($_) . '}' }
                                                unpack "U*", shift) .  "'";
    #return "'" . join(" ", map { sprintf "%04X", $_ } unpack "U*", shift) .  "'";
}

sub Test_N {
    my ($source, $nfc, $nfd, $nfkc, $nfkd) = @_;
    my $display_source = ord_string($source);
    my $display_nfc = ord_string($nfc);
    my $display_nfd = ord_string($nfd);
    my $display_nfkc = ord_string($nfkc);
    my $display_nfkd = ord_string($nfkd);

    use Unicode::Normalize;
    #    NFC
    #      nfc ==  toNFC(source) ==  toNFC(nfc) ==  toNFC(nfd)
    #      nfkc ==  toNFC(nfkc) ==  toNFC(nfkd)
    #
    #    NFD
    #      nfd ==  toNFD(source) ==  toNFD(nfc) ==  toNFD(nfd)
    #      nfkd ==  toNFD(nfkc) ==  toNFD(nfkd)
    #
    #    NFKC
    #      nfkc == toNFKC(source) == toNFKC(nfc) == toNFKC(nfd) ==
    #      toNFKC(nfkc) == toNFKC(nfkd)
    #
    #    NFKD
    #      nfkd == toNFKD(source) == toNFKD(nfc) == toNFKD(nfd) ==
    #      toNFKD(nfkc) == toNFKD(nfkd)

    is(NFC($source), $nfc, "NFC($display_source) eq $display_nfc");
    is(NFC($nfc), $nfc, "NFC($display_nfc) eq $display_nfc");
    is(NFC($nfd), $nfc, "NFC($display_nfd) eq $display_nfc");
    is(NFC($nfkc), $nfkc, "NFC($display_nfkc) eq $display_nfkc");
    is(NFC($nfkd), $nfkc, "NFC($display_nfkd) eq $display_nfkc");

    is(NFD($source), $nfd, "NFD($display_source) eq $display_nfd");
    is(NFD($nfc), $nfd, "NFD($display_nfc) eq $display_nfd");
    is(NFD($nfd), $nfd, "NFD($display_nfd) eq $display_nfd");
    is(NFD($nfkc), $nfkd, "NFD($display_nfkc) eq $display_nfkd");
    is(NFD($nfkd), $nfkd, "NFD($display_nfkd) eq $display_nfkd");

    is(NFKC($source), $nfkc, "NFKC($display_source) eq $display_nfkc");
    is(NFKC($nfc), $nfkc, "NFKC($display_nfc) eq $display_nfkc");
    is(NFKC($nfd), $nfkc, "NFKC($display_nfd) eq $display_nfkc");
    is(NFKC($nfkc), $nfkc, "NFKC($display_nfkc) eq $display_nfkc");
    is(NFKC($nfkd), $nfkc, "NFKC($display_nfkd) eq $display_nfkc");

    is(NFKD($source), $nfkd, "NFKD($display_source) eq $display_nfkd");
    is(NFKD($nfc), $nfkd, "NFKD($display_nfc) eq $display_nfkd");
    is(NFKD($nfd), $nfkd, "NFKD($display_nfd) eq $display_nfkd");
    is(NFKD($nfkc), $nfkd, "NFKD($display_nfkc) eq $display_nfkd");
    is(NFKD($nfkd), $nfkd, "NFKD($display_nfkd) eq $display_nfkd");
}
Test_N(qḊ, qḊ, qḊ, qḊ, qḊ);
Test_N(qḌ, qḌ, qḌ, qḌ, qḌ);
Test_N(qḌ̇, qḌ̇, qḌ̇, qḌ̇, qḌ̇);
Test_N(qḌ̇, qḌ̇, qḌ̇, qḌ̇, qḌ̇);
Test_N(qḌ̇, qḌ̇, qḌ̇, qḌ̇, qḌ̇);
Test_N(qḌ̇, qḌ̇, qḌ̇, qḌ̇, qḌ̇);
Test_N(qḊ̛, qḊ̛, qḊ̛, qḊ̛, qḊ̛);
Test_N(qḌ̛, qḌ̛, qḌ̛, qḌ̛, qḌ̛);
Test_N(qḌ̛̇, qḌ̛̇, qḌ̛̇, qḌ̛̇, qḌ̛̇);
Test_N(qḌ̛̇, qḌ̛̇, qḌ̛̇, qḌ̛̇, qḌ̛̇);
Test_N(qḌ̛̇, qḌ̛̇, qḌ̛̇, qḌ̛̇, qḌ̛̇);
Test_N(qḌ̛̇, qḌ̛̇, qḌ̛̇, qḌ̛̇, qḌ̛̇);
Test_N(qÈ, qÈ, qÈ, qÈ, qÈ);
Test_N(qĒ, qĒ, qĒ, qĒ, qĒ);
Test_N(qÈ, qÈ, qÈ, qÈ, qÈ);
Test_N(qĒ, qĒ, qĒ, qĒ, qĒ);
Test_N(qḔ, qḔ, qḔ, qḔ, qḔ);
Test_N(qḔ, qḔ, qḔ, qḔ, qḔ);
Test_N(qḔ̄, qḔ̄, qḔ̄, qḔ̄, qḔ̄);
Test_N(qḔ, qḔ, qḔ, qḔ, qḔ);
Test_N(qÈ̄, qÈ̄, qÈ̄, qÈ̄, qÈ̄);
Test_N(qֱָֹ֑׃ְ֬֟, qֱָֹ֑׃ְ֬֟, qֱָֹ֑׃ְ֬֟, qֱָֹ֑׃ְ֬֟, qֱָֹ֑׃ְ֬֟);
Test_N(qְַּ֥֒׀֭ׄ, qְַּ֥֒׀֭ׄ, qְַּ֥֒׀֭ׄ, qְַּ֥֒׀֭ׄ, qְַּ֥֒׀֭ׄ);
Test_N(qᄀ각, qᄀ각, qᄀ각, qᄀ각, qᄀ각);
Test_N(qᄀ각ᆨ, qᄀ각ᆨ, qᄀ각ᆨ, qᄀ각ᆨ, qᄀ각ᆨ);
Test_N(q , q , q , q , q );
Test_N(q¨, q¨, q¨, q ̈, q ̈);
Test_N(qª, qª, qª, qa, qa);
Test_N(q¯, q¯, q¯, q ̄, q ̄);
Test_N(q², q², q², q2, q2);
Test_N(q³, q³, q³, q3, q3);
Test_N(q´, q´, q´, q ́, q ́);
Test_N(qµ, qµ, qµ, qμ, qμ);
Test_N(q¸, q¸, q¸, q ̧, q ̧);
Test_N(q¹, q¹, q¹, q1, q1);
Test_N(qº, qº, qº, qo, qo);
Test_N(q¼, q¼, q¼, q1⁄4, q1⁄4);
Test_N(q½, q½, q½, q1⁄2, q1⁄2);
Test_N(q¾, q¾, q¾, q3⁄4, q3⁄4);
Test_N(qÀ, qÀ, qÀ, qÀ, qÀ);
Test_N(qÁ, qÁ, qÁ, qÁ, qÁ);
Test_N(qÂ, qÂ, qÂ, qÂ, qÂ);
Test_N(qÃ, qÃ, qÃ, qÃ, qÃ);
Test_N(qÄ, qÄ, qÄ, qÄ, qÄ);
Test_N(qÅ, qÅ, qÅ, qÅ, qÅ);
Test_N(qÇ, qÇ, qÇ, qÇ, qÇ);
Test_N(qÈ, qÈ, qÈ, qÈ, qÈ);
Test_N(qÉ, qÉ, qÉ, qÉ, qÉ);
Test_N(qÊ, qÊ, qÊ, qÊ, qÊ);
Test_N(qË, qË, qË, qË, qË);
Test_N(qÌ, qÌ, qÌ, qÌ, qÌ);
Test_N(qÍ, qÍ, qÍ, qÍ, qÍ);
Test_N(qÎ, qÎ, qÎ, qÎ, qÎ);
Test_N(qÏ, qÏ, qÏ, qÏ, qÏ);
Test_N(qÑ, qÑ, qÑ, qÑ, qÑ);
Test_N(qÒ, qÒ, qÒ, qÒ, qÒ);
Test_N(qÓ, qÓ, qÓ, qÓ, qÓ);
Test_N(qÔ, qÔ, qÔ, qÔ, qÔ);
Test_N(qÕ, qÕ, qÕ, qÕ, qÕ);
Test_N(qÖ, qÖ, qÖ, qÖ, qÖ);
Test_N(qÙ, qÙ, qÙ, qÙ, qÙ);
Test_N(qÚ, qÚ, qÚ, qÚ, qÚ);
Test_N(qÛ, qÛ, qÛ, qÛ, qÛ);
Test_N(qÜ, qÜ, qÜ, qÜ, qÜ);
Test_N(qÝ, qÝ, qÝ, qÝ, qÝ);
Test_N(qà, qà, qà, qà, qà);
Test_N(qá, qá, qá, qá, qá);
Test_N(qâ, qâ, qâ, qâ, qâ);
Test_N(qã, qã, qã, qã, qã);
Test_N(qä, qä, qä, qä, qä);
Test_N(qå, qå, qå, qå, qå);
Test_N(qç, qç, qç, qç, qç);
Test_N(qè, qè, qè, qè, qè);
Test_N(qé, qé, qé, qé, qé);
Test_N(qê, qê, qê, qê, qê);
Test_N(që, që, që, që, që);
Test_N(qì, qì, qì, qì, qì);
Test_N(qí, qí, qí, qí, qí);
Test_N(qî, qî, qî, qî, qî);
Test_N(qï, qï, qï, qï, qï);
Test_N(qñ, qñ, qñ, qñ, qñ);
Test_N(qò, qò, qò, qò, qò);
Test_N(qó, qó, qó, qó, qó);
Test_N(qô, qô, qô, qô, qô);
Test_N(qõ, qõ, qõ, qõ, qõ);
Test_N(qö, qö, qö, qö, qö);
Test_N(qù, qù, qù, qù, qù);
Test_N(qú, qú, qú, qú, qú);
Test_N(qû, qû, qû, qû, qû);
Test_N(qü, qü, qü, qü, qü);
Test_N(qý, qý, qý, qý, qý);
Test_N(qÿ, qÿ, qÿ, qÿ, qÿ);
Test_N(qĀ, qĀ, qĀ, qĀ, qĀ);
Test_N(qā, qā, qā, qā, qā);
Test_N(qĂ, qĂ, qĂ, qĂ, qĂ);
Test_N(qă, qă, qă, qă, qă);
Test_N(qĄ, qĄ, qĄ, qĄ, qĄ);
Test_N(qą, qą, qą, qą, qą);
Test_N(qĆ, qĆ, qĆ, qĆ, qĆ);
Test_N(qć, qć, qć, qć, qć);
Test_N(qĈ, qĈ, qĈ, qĈ, qĈ);
Test_N(qĉ, qĉ, qĉ, qĉ, qĉ);
Test_N(qĊ, qĊ, qĊ, qĊ, qĊ);
Test_N(qċ, qċ, qċ, qċ, qċ);
Test_N(qČ, qČ, qČ, qČ, qČ);
Test_N(qč, qč, qč, qč, qč);
Test_N(qĎ, qĎ, qĎ, qĎ, qĎ);
Test_N(qď, qď, qď, qď, qď);
Test_N(qĒ, qĒ, qĒ, qĒ, qĒ);
Test_N(qē, qē, qē, qē, qē);
Test_N(qĔ, qĔ, qĔ, qĔ, qĔ);
Test_N(qĕ, qĕ, qĕ, qĕ, qĕ);
Test_N(qĖ, qĖ, qĖ, qĖ, qĖ);
Test_N(qė, qė, qė, qė, qė);
Test_N(qĘ, qĘ, qĘ, qĘ, qĘ);
Test_N(qę, qę, qę, qę, qę);
Test_N(qĚ, qĚ, qĚ, qĚ, qĚ);
Test_N(qě, qě, qě, qě, qě);
Test_N(qĜ, qĜ, qĜ, qĜ, qĜ);
Test_N(qĝ, qĝ, qĝ, qĝ, qĝ);
Test_N(qĞ, qĞ, qĞ, qĞ, qĞ);
Test_N(qğ, qğ, qğ, qğ, qğ);
Test_N(qĠ, qĠ, qĠ, qĠ, qĠ);
Test_N(qġ, qġ, qġ, qġ, qġ);
Test_N(qĢ, qĢ, qĢ, qĢ, qĢ);
Test_N(qģ, qģ, qģ, qģ, qģ);
Test_N(qĤ, qĤ, qĤ, qĤ, qĤ);
Test_N(qĥ, qĥ, qĥ, qĥ, qĥ);
Test_N(qĨ, qĨ, qĨ, qĨ, qĨ);
Test_N(qĩ, qĩ, qĩ, qĩ, qĩ);
Test_N(qĪ, qĪ, qĪ, qĪ, qĪ);
Test_N(qī, qī, qī, qī, qī);
Test_N(qĬ, qĬ, qĬ, qĬ, qĬ);
Test_N(qĭ, qĭ, qĭ, qĭ, qĭ);
Test_N(qĮ, qĮ, qĮ, qĮ, qĮ);
Test_N(qį, qį, qį, qį, qį);
Test_N(qİ, qİ, qİ, qİ, qİ);
Test_N(qĲ, qĲ, qĲ, qIJ, qIJ);
Test_N(qĳ, qĳ, qĳ, qij, qij);
Test_N(qĴ, qĴ, qĴ, qĴ, qĴ);
Test_N(qĵ, qĵ, qĵ, qĵ, qĵ);
Test_N(qĶ, qĶ, qĶ, qĶ, qĶ);
Test_N(qķ, qķ, qķ, qķ, qķ);
Test_N(qĹ, qĹ, qĹ, qĹ, qĹ);
Test_N(qĺ, qĺ, qĺ, qĺ, qĺ);
Test_N(qĻ, qĻ, qĻ, qĻ, qĻ);
Test_N(qļ, qļ, qļ, qļ, qļ);
Test_N(qĽ, qĽ, qĽ, qĽ, qĽ);
Test_N(qľ, qľ, qľ, qľ, qľ);
Test_N(qĿ, qĿ, qĿ, qL·, qL·);
Test_N(qŀ, qŀ, qŀ, ql·, ql·);
Test_N(qŃ, qŃ, qŃ, qŃ, qŃ);
Test_N(qń, qń, qń, qń, qń);
Test_N(qŅ, qŅ, qŅ, qŅ, qŅ);
Test_N(qņ, qņ, qņ, qņ, qņ);
Test_N(qŇ, qŇ, qŇ, qŇ, qŇ);
Test_N(qň, qň, qň, qň, qň);
Test_N(qŉ, qŉ, qŉ, qʼn, qʼn);
Test_N(qŌ, qŌ, qŌ, qŌ, qŌ);
Test_N(qō, qō, qō, qō, qō);
Test_N(qŎ, qŎ, qŎ, qŎ, qŎ);
Test_N(qŏ, qŏ, qŏ, qŏ, qŏ);
Test_N(qŐ, qŐ, qŐ, qŐ, qŐ);
Test_N(qő, qő, qő, qő, qő);
Test_N(qŔ, qŔ, qŔ, qŔ, qŔ);
Test_N(qŕ, qŕ, qŕ, qŕ, qŕ);
Test_N(qŖ, qŖ, qŖ, qŖ, qŖ);
Test_N(qŗ, qŗ, qŗ, qŗ, qŗ);
Test_N(qŘ, qŘ, qŘ, qŘ, qŘ);
Test_N(qř, qř, qř, qř, qř);
Test_N(qŚ, qŚ, qŚ, qŚ, qŚ);
Test_N(qś, qś, qś, qś, qś);
Test_N(qŜ, qŜ, qŜ, qŜ, qŜ);
Test_N(qŝ, qŝ, qŝ, qŝ, qŝ);
Test_N(qŞ, qŞ, qŞ, qŞ, qŞ);
Test_N(qş, qş, qş, qş, qş);
Test_N(qŠ, qŠ, qŠ, qŠ, qŠ);
Test_N(qš, qš, qš, qš, qš);
Test_N(qŢ, qŢ, qŢ, qŢ, qŢ);
Test_N(qţ, qţ, qţ, qţ, qţ);
Test_N(qŤ, qŤ, qŤ, qŤ, qŤ);
Test_N(qť, qť, qť, qť, qť);
Test_N(qŨ, qŨ, qŨ, qŨ, qŨ);
Test_N(qũ, qũ, qũ, qũ, qũ);
Test_N(qŪ, qŪ, qŪ, qŪ, qŪ);
Test_N(qū, qū, qū, qū, qū);
Test_N(qŬ, qŬ, qŬ, qŬ, qŬ);
Test_N(qŭ, qŭ, qŭ, qŭ, qŭ);
Test_N(qŮ, qŮ, qŮ, qŮ, qŮ);
Test_N(qů, qů, qů, qů, qů);
Test_N(qŰ, qŰ, qŰ, qŰ, qŰ);
Test_N(qű, qű, qű, qű, qű);
Test_N(qŲ, qŲ, qŲ, qŲ, qŲ);
Test_N(qų, qų, qų, qų, qų);
Test_N(qŴ, qŴ, qŴ, qŴ, qŴ);
Test_N(qŵ, qŵ, qŵ, qŵ, qŵ);
Test_N(qŶ, qŶ, qŶ, qŶ, qŶ);
Test_N(qŷ, qŷ, qŷ, qŷ, qŷ);
Test_N(qŸ, qŸ, qŸ, qŸ, qŸ);
Test_N(qŹ, qŹ, qŹ, qŹ, qŹ);
Test_N(qź, qź, qź, qź, qź);
Test_N(qŻ, qŻ, qŻ, qŻ, qŻ);
Test_N(qż, qż, qż, qż, qż);
Test_N(qŽ, qŽ, qŽ, qŽ, qŽ);
Test_N(qž, qž, qž, qž, qž);
Test_N(qſ, qſ, qſ, qs, qs);
Test_N(qƠ, qƠ, qƠ, qƠ, qƠ);
Test_N(qơ, qơ, qơ, qơ, qơ);
Test_N(qƯ, qƯ, qƯ, qƯ, qƯ);
Test_N(qư, qư, qư, qư, qư);
Test_N(qǄ, qǄ, qǄ, qDŽ, qDŽ);
Test_N(qǅ, qǅ, qǅ, qDž, qDž);
Test_N(qǆ, qǆ, qǆ, qdž, qdž);
Test_N(qǇ, qǇ, qǇ, qLJ, qLJ);
Test_N(qǈ, qǈ, qǈ, qLj, qLj);
Test_N(qǉ, qǉ, qǉ, qlj, qlj);
Test_N(qǊ, qǊ, qǊ, qNJ, qNJ);
Test_N(qǋ, qǋ, qǋ, qNj, qNj);
Test_N(qǌ, qǌ, qǌ, qnj, qnj);
Test_N(qǍ, qǍ, qǍ, qǍ, qǍ);
Test_N(qǎ, qǎ, qǎ, qǎ, qǎ);
Test_N(qǏ, qǏ, qǏ, qǏ, qǏ);
Test_N(qǐ, qǐ, qǐ, qǐ, qǐ);
Test_N(qǑ, qǑ, qǑ, qǑ, qǑ);
Test_N(qǒ, qǒ, qǒ, qǒ, qǒ);
Test_N(qǓ, qǓ, qǓ, qǓ, qǓ);
Test_N(qǔ, qǔ, qǔ, qǔ, qǔ);
Test_N(qǕ, qǕ, qǕ, qǕ, qǕ);
Test_N(qǖ, qǖ, qǖ, qǖ, qǖ);
Test_N(qǗ, qǗ, qǗ, qǗ, qǗ);
Test_N(qǘ, qǘ, qǘ, qǘ, qǘ);
Test_N(qǙ, qǙ, qǙ, qǙ, qǙ);
Test_N(qǚ, qǚ, qǚ, qǚ, qǚ);
Test_N(qǛ, qǛ, qǛ, qǛ, qǛ);
Test_N(qǜ, qǜ, qǜ, qǜ, qǜ);
Test_N(qǞ, qǞ, qǞ, qǞ, qǞ);
Test_N(qǟ, qǟ, qǟ, qǟ, qǟ);
Test_N(qǠ, qǠ, qǠ, qǠ, qǠ);
Test_N(qǡ, qǡ, qǡ, qǡ, qǡ);
Test_N(qǢ, qǢ, qǢ, qǢ, qǢ);
Test_N(qǣ, qǣ, qǣ, qǣ, qǣ);
Test_N(qǦ, qǦ, qǦ, qǦ, qǦ);
Test_N(qǧ, qǧ, qǧ, qǧ, qǧ);
Test_N(qǨ, qǨ, qǨ, qǨ, qǨ);
Test_N(qǩ, qǩ, qǩ, qǩ, qǩ);
Test_N(qǪ, qǪ, qǪ, qǪ, qǪ);
Test_N(qǫ, qǫ, qǫ, qǫ, qǫ);
Test_N(qǬ, qǬ, qǬ, qǬ, qǬ);
Test_N(qǭ, qǭ, qǭ, qǭ, qǭ);
Test_N(qǮ, qǮ, qǮ, qǮ, qǮ);
Test_N(qǯ, qǯ, qǯ, qǯ, qǯ);
Test_N(qǰ, qǰ, qǰ, qǰ, qǰ);
Test_N(qǱ, qǱ, qǱ, qDZ, qDZ);
Test_N(qǲ, qǲ, qǲ, qDz, qDz);
Test_N(qǳ, qǳ, qǳ, qdz, qdz);
Test_N(qǴ, qǴ, qǴ, qǴ, qǴ);
Test_N(qǵ, qǵ, qǵ, qǵ, qǵ);
Test_N(qǸ, qǸ, qǸ, qǸ, qǸ);
Test_N(qǹ, qǹ, qǹ, qǹ, qǹ);
Test_N(qǺ, qǺ, qǺ, qǺ, qǺ);
Test_N(qǻ, qǻ, qǻ, qǻ, qǻ);
Test_N(qǼ, qǼ, qǼ, qǼ, qǼ);
Test_N(qǽ, qǽ, qǽ, qǽ, qǽ);
Test_N(qǾ, qǾ, qǾ, qǾ, qǾ);
Test_N(qǿ, qǿ, qǿ, qǿ, qǿ);
Test_N(qȀ, qȀ, qȀ, qȀ, qȀ);
Test_N(qȁ, qȁ, qȁ, qȁ, qȁ);
Test_N(qȂ, qȂ, qȂ, qȂ, qȂ);
Test_N(qȃ, qȃ, qȃ, qȃ, qȃ);
Test_N(qȄ, qȄ, qȄ, qȄ, qȄ);
Test_N(qȅ, qȅ, qȅ, qȅ, qȅ);
Test_N(qȆ, qȆ, qȆ, qȆ, qȆ);
Test_N(qȇ, qȇ, qȇ, qȇ, qȇ);
Test_N(qȈ, qȈ, qȈ, qȈ, qȈ);
Test_N(qȉ, qȉ, qȉ, qȉ, qȉ);
Test_N(qȊ, qȊ, qȊ, qȊ, qȊ);
Test_N(qȋ, qȋ, qȋ, qȋ, qȋ);
Test_N(qȌ, qȌ, qȌ, qȌ, qȌ);
Test_N(qȍ, qȍ, qȍ, qȍ, qȍ);
Test_N(qȎ, qȎ, qȎ, qȎ, qȎ);
Test_N(qȏ, qȏ, qȏ, qȏ, qȏ);
Test_N(qȐ, qȐ, qȐ, qȐ, qȐ);
Test_N(qȑ, qȑ, qȑ, qȑ, qȑ);
Test_N(qȒ, qȒ, qȒ, qȒ, qȒ);
Test_N(qȓ, qȓ, qȓ, qȓ, qȓ);
Test_N(qȔ, qȔ, qȔ, qȔ, qȔ);
Test_N(qȕ, qȕ, qȕ, qȕ, qȕ);
Test_N(qȖ, qȖ, qȖ, qȖ, qȖ);
Test_N(qȗ, qȗ, qȗ, qȗ, qȗ);
Test_N(qȘ, qȘ, qȘ, qȘ, qȘ);
Test_N(qș, qș, qș, qș, qș);
Test_N(qȚ, qȚ, qȚ, qȚ, qȚ);
Test_N(qț, qț, qț, qț, qț);
Test_N(qȞ, qȞ, qȞ, qȞ, qȞ);
Test_N(qȟ, qȟ, qȟ, qȟ, qȟ);
Test_N(qȦ, qȦ, qȦ, qȦ, qȦ);
Test_N(qȧ, qȧ, qȧ, qȧ, qȧ);
Test_N(qȨ, qȨ, qȨ, qȨ, qȨ);
Test_N(qȩ, qȩ, qȩ, qȩ, qȩ);
Test_N(qȪ, qȪ, qȪ, qȪ, qȪ);
Test_N(qȫ, qȫ, qȫ, qȫ, qȫ);
Test_N(qȬ, qȬ, qȬ, qȬ, qȬ);
Test_N(qȭ, qȭ, qȭ, qȭ, qȭ);
Test_N(qȮ, qȮ, qȮ, qȮ, qȮ);
Test_N(qȯ, qȯ, qȯ, qȯ, qȯ);
Test_N(qȰ, qȰ, qȰ, qȰ, qȰ);
Test_N(qȱ, qȱ, qȱ, qȱ, qȱ);
Test_N(qȲ, qȲ, qȲ, qȲ, qȲ);
Test_N(qȳ, qȳ, qȳ, qȳ, qȳ);
Test_N(qʰ, qʰ, qʰ, qh, qh);
Test_N(qʱ, qʱ, qʱ, qɦ, qɦ);
Test_N(qʲ, qʲ, qʲ, qj, qj);
Test_N(qʳ, qʳ, qʳ, qr, qr);
Test_N(qʴ, qʴ, qʴ, qɹ, qɹ);
Test_N(qʵ, qʵ, qʵ, qɻ, qɻ);
Test_N(qʶ, qʶ, qʶ, qʁ, qʁ);
Test_N(qʷ, qʷ, qʷ, qw, qw);
Test_N(qʸ, qʸ, qʸ, qy, qy);
Test_N(q˘, q˘, q˘, q ̆, q ̆);
Test_N(q˙, q˙, q˙, q ̇, q ̇);
Test_N(q˚, q˚, q˚, q ̊, q ̊);
Test_N(q˛, q˛, q˛, q ̨, q ̨);
Test_N(q˜, q˜, q˜, q ̃, q ̃);
Test_N(q˝, q˝, q˝, q ̋, q ̋);
Test_N(qˠ, qˠ, qˠ, qɣ, qɣ);
Test_N(qˡ, qˡ, qˡ, ql, ql);
Test_N(qˢ, qˢ, qˢ, qs, qs);
Test_N(qˣ, qˣ, qˣ, qx, qx);
Test_N(qˤ, qˤ, qˤ, qʕ, qʕ);
Test_N(q̀, q̀, q̀, q̀, q̀);
Test_N(q́, q́, q́, q́, q́);
Test_N(q̓, q̓, q̓, q̓, q̓);
Test_N(q̈́, q̈́, q̈́, q̈́, q̈́);
Test_N(qʹ, qʹ, qʹ, qʹ, qʹ);
Test_N(qͺ, qͺ, qͺ, q ͅ, q ͅ);
Test_N(q;, q;, q;, q;, q;);
Test_N(q΄, q΄, q΄, q ́, q ́);
Test_N(q΅, q΅, q΅, q ̈́, q ̈́);
Test_N(qΆ, qΆ, qΆ, qΆ, qΆ);
Test_N(q·, q·, q·, q·, q·);
Test_N(qΈ, qΈ, qΈ, qΈ, qΈ);
Test_N(qΉ, qΉ, qΉ, qΉ, qΉ);
Test_N(qΊ, qΊ, qΊ, qΊ, qΊ);
Test_N(qΌ, qΌ, qΌ, qΌ, qΌ);
Test_N(qΎ, qΎ, qΎ, qΎ, qΎ);
Test_N(qΏ, qΏ, qΏ, qΏ, qΏ);
Test_N(qΐ, qΐ, qΐ, qΐ, qΐ);
Test_N(qΪ, qΪ, qΪ, qΪ, qΪ);
Test_N(qΫ, qΫ, qΫ, qΫ, qΫ);
Test_N(qά, qά, qά, qά, qά);
Test_N(qέ, qέ, qέ, qέ, qέ);
Test_N(qή, qή, qή, qή, qή);
Test_N(qί, qί, qί, qί, qί);
Test_N(qΰ, qΰ, qΰ, qΰ, qΰ);
Test_N(qϊ, qϊ, qϊ, qϊ, qϊ);
Test_N(qϋ, qϋ, qϋ, qϋ, qϋ);
Test_N(qό, qό, qό, qό, qό);
