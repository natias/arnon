],
'ci' => 
[
'CI',
'Case_Ignorable',
],
'compex' => 
[
'Comp_Ex',
'Full_Composition_Exclusion',
],
'cwcf' => 
[
'CWCF',
'Changes_When_Casefolded',
],
'cwcm' => 
[
'CWCM',
'Changes_When_Casemapped',
],
'cwkcf' => 
[
'CWKCF',
'Changes_When_NFKC_Casefolded',
],
'cwl' => 
[
'CWL',
'Changes_When_Lowercased',
],
'cwt' => 
[
'CWT',
'Changes_When_Titlecased',
],
'cwu' => 
[
'CWU',
'Changes_When_Uppercased',
],
'dash' => 
[
'Dash',
'Dash',
],
'dep' => 
[
'Dep',
'Deprecated',
],
'di' => 
[
'DI',
'Default_Ignorable_Code_Point',
],
'dia' => 
[
'Dia',
'Diacritic',
],
'dm' => 
[
'dm',
'Decomposition_Mapping',
],
'dt' => 
[
'dt',
'Decomposition_Type',
],
'ea' => 
[
'ea',
'East_Asian_Width',
],
'ebase' => 
[
'EBase',
'Emoji_Modifier_Base',
],
'ecomp' => 
[
'EComp',
'Emoji_Component',
],
'emod' => 
[
'EMod',
'Emoji_Modifier',
],
'emoji' => 
[
'Emoji',
'Emoji',
],
'epres' => 
[
'EPres',
'Emoji_Presentation',
],
'equideo' => 
[
'EqUIdeo',
'Equivalent_Unified_Ideograph',
],
'ext' => 
[
'Ext',
'Extender',
],
'extpict' => 
[
'ExtPict',
'Extended_Pictographic',
],
'gc' => 
[
'gc',
'General_Category',
'Category',
],
'gcb' => 
[
'GCB',
'Grapheme_Cluster_Break',
'_Perl_GCB',
],
'grbase' => 
[
'Gr_Base',
'Grapheme_Base',
],
'grext' => 
[
'Gr_Ext',
'Grapheme_Extend',
],
'hex' => 
[
'Hex',
'Hex_Digit',
],
'hst' => 
[
'hst',
'Hangul_Syllable_Type',
],
'hyphen' => 
[
'Hyphen',
'Hyphen',
],
'idc' => 
[
'IDC',
'ID_Continue',
],
'identifierstatus' => 
[
'Identifier_Status',
'Identifier_Status',
],
'identifiertype' => 
[
'Identifier_Type',
'Identifier_Type',
],
'ideo' => 
[
'Ideo',
'Ideographic',
],
'ids' => 
[
'IDS',
'ID_Start',
],
'idsb' => 
[
'IDSB',
'IDS_Binary_Operator',
],
'idst' => 
[
'IDST',
'IDS_Trinary_Operator',
],
'in' => 
[
'In',
'Present_In',
],
'inpc' => 
[
'InPC',
'Indic_Positional_Category',
],
'insc' => 
[
'InSC',
'Indic_Syllabic_Category',
],
'isc' => 
[
'isc',
'ISO_Comment',
],
'jg' => 
[
'jg',
'Joining_Group',
],
'joinc' => 
[
'Join_C',
'Join_Control',
],
'jt' => 
[
'jt',
'Joining_Type',
],
'lb' => 
[
'lb',
'Line_Break',
],
'lc' => 
[
'lc',
'Lowercase_Mapping',
],
'loe' => 
[
'LOE',
'Logical_Order_Exception',
],
'lower' => 
[
'Lower',
'Lowercase',
],
'math' => 
[
'Math',
'Math',
],
'na' => 
[
'na',
'Name',
],
'na1' => 
[
'na1',
'Unicode_1_Name',
],
'namealias' => 
[
'Name_Alias',
'Name_Alias',
'_Perl_Name_Alias',
],
'nchar' => 
[
'NChar',
'Noncharacter_Code_Point',
],
'nfcqc' => 
[
'NFC_QC',
'NFC_Quick_Check',
],
'nfdqc' => 
[
'NFD_QC',
'NFD_Quick_Check',
],
'nfkccf' => 
[
'NFKC_CF',
'NFKC_Casefold',
],
'nfkcqc' => 
[
'NFKC_QC',
'NFKC_Quick_Check',
],
'nfkdqc' => 
[
'NFKD_QC',
'NFKD_Quick_Check',
],
'nt' => 
[
'nt',
'Numeric_Type',
],
'nv' => 
[
'nv',
'Numeric_Value',
],
'patsyn' => 
[
'Pat_Syn',
'Pattern_Syntax',
],
'patws' => 
[
'Pat_WS',
'Pattern_White_Space',
],
'pcm' => 
[
'PCM',
'Prepended_Concatenation_Mark',
],
'perldecimaldigit' => 
[
'Perl_Decimal_Digit',
'Perl_Decimal_Digit',
],
'qmark' => 
[
'QMark',
'Quotation_Mark',
],
'radical' => 
[
'Radical',
'Radical',
],
'ri' => 
[
'RI',
'Regional_Indicator',
],
'sb' => 
[
'SB',
'Sentence_Break',
'_Perl_SB',
],
'sc' => 
[
'sc',
'Script',
],
'scf' => 
[
'scf',
'Simple_Case_Folding',
'Sfc',
],
'scx' => 
[
'scx',
'Script_Extensions',
],
'sd' => 
[
'SD',
'Soft_Dotted',
],
'slc' => 
[
'slc',
'Simple_Lowercase_Mapping',
],
'stc' => 
[
'stc',
'Simple_Titlecase_Mapping',
],
'sterm' => 
[
'STerm',
'Sentence_Terminal',
],
'suc' => 
[
'suc',
'Simple_Uppercase_Mapping',
],
'tc' => 
[
'tc',
'Titlecase_Mapping',
],
'term' => 
[
'Term',
'Terminal_Punctuation',
],
'uc' => 
[
'uc',
'Uppercase_Mapping',
],
'uideo' => 
[
'UIdeo',
'Unified_Ideograph',
],
'upper' => 
[
'Upper',
'Uppercase',
],
'vo' => 
[
'vo',
'Vertical_Orientation',
],
'vs' => 
[
'VS',
'Variation_Selector',
],
'wb' => 
[
'WB',
'Word_Break',
'_Perl_WB',
],
'wspace' => 
[
'WSpace',
'White_Space',
'Space',
],
'xidc' => 
[
'XIDC',
'XID_Continue',
],
'xids' => 
[
'XIDS',
'XID_Start',
],
);

# Keys of top level are standard property name; values are keys to another
# hash,  Each one is one of the property's values, in standard form.  The
# values are that prop-val's aliases.  If only one specified, the short and
# long alias are identical.
%Unicode::UCD::prop_value_aliases = (
'age' => 
{
'1.1' => 
[
'1.1',
'V1_1',
],
'10.0' => 
[
'10.0',
'V10_0',
],
'11.0' => 
[
'11.0',
'V11_0',
],
'12.0' => 
[
'12.0',
'V12_0',
],
'12.1' => 
[
'12.1',
'V12_1',
],
'13.0' => 
[
'13.0',
'V13_0',
],
'14.0' => 
[
'14.0',
'V14_0',
],
'15.0' => 
[
'15.0',
'V15_0',
],
'2.0' => 
[
'2.0',
'V2_0',
],
'2.1' => 
[
'2.1',
'V2_1',
],
'3.0' => 
[
'3.0',
'V3_0',
],
'3.1' => 
[
'3.1',
'V3_1',
],
'3.2' => 
[
'3.2',
'V3_2',
],
'4.0' => 
[
'4.0',
'V4_0',
],
'4.1' => 
[
'4.1',
'V4_1',
],
'5.0' => 
[
'5.0',
'V5_0',
],
'5.1' => 
[
'5.1',
'V5_1',
],
'5.2' => 
[
'5.2',
'V5_2',
],
'6.0' => 
[
'6.0',
'V6_0',
],
'6.1' => 
[
'6.1',
'V6_1',
],
'6.2' => 
[
'6.2',
'V6_2',
],
'6.3' => 
[
'6.3',
'V6_3',
],
'7.0' => 
[
'7.0',
'V7_0',
],
'8.0' => 
[
'8.0',
'V8_0',
],
'9.0' => 
[
'9.0',
'V9_0',
],
'na' => 
[
'NA',
'Unassigned',
],
},
'ahex' => 
{
'n' => 
[
'N',
'No',
'F',
'False',
],
'y' => 
[
'Y',
'Yes',
'T',
'True',
],
},
'alpha' => 
{
'n' => 
[
'N',
'No',
'F',
'False',
],
'y' => 
[
'Y',
'Yes',
'T',
'True',
],
},
'bc' => 
{
'al' => 
[
'AL',
'Arabic_Letter',
],
'an' => 
[
'AN',
'Arabic_Number',
],
'b' => 
[
'B',
'Paragraph_Separator',
],
'bn' => 
[
'BN',
'Boundary_Neutral',
],
'cs' => 
[
'CS',
'Common_Separator',
],
'en' => 
[
'EN',
'European_Number',
],
'es' => 
[
'ES',
'European_Separator',
],
'et' => 
[
'ET',
'European_Terminator',
],
'fsi' => 
[
'FSI',
'First_Strong_Isolate',
],
'l' => 
[
'L',
'Left_To_Right',
],
'lre' => 
[
'LRE',
'Left_To_Right_Embedding',
],
'lri' => 
[
'LRI',
'Left_To_Right_Isolate',
],
'lro' => 
[
'LRO',
'Left_To_Right_Override',
],
'nsm' => 
[
'NSM',
'Nonspacing_Mark',
],
'on' => 
[
'ON',
'Other_Neutral',
],
'pdf' => 
[
'PDF',
'Pop_Directional_Format',
],
'pdi' => 
[
'PDI',
'Pop_Directional_Isolate',
],
'r' => 
[
'R',
'Right_To_Left',
],
'rle' => 
[
'RLE',
'Right_To_Left_Embedding',
],
'rli' => 
[
'RLI',
'Right_To_Left_Isolate',
],
'rlo' => 
[
'RLO',
'Right_To_Left_Override',
],
's' => 
[
'S',
'Segment_Separator',
],
'ws' => 
[
'WS',
'White_Space',
],
},
'bidic' => 
{
'n' => 
[
'N',
'No',
'F',
'False',
],
'y' => 
[
'Y',
'Yes',
'T',
'True',
],
},
'bidim' => 
{
'n' => 
[
'N',
'No',
'F',
'False',
],
'y' => 
[
'Y',
'Yes',
'T',
'True',
],
},
'blk' => 
{
'adlam' => 
[
'Adlam',
],
'aegeannumbers' => 
[
'Aegean_Numbers',
],
'ahom' => 
[
'Ahom',
],
'alchemical' => 
[
'Alchemical',
'Alchemical_Symbols',
],
'alphabeticpf' => 
[
'Alphabetic_PF',
'Alphabetic_Presentation_Forms',
],
'anatolianhieroglyphs' => 
[
'Anatolian_Hieroglyphs',
],
'ancientgreekmusic' => 
[
'Ancient_Greek_Music',
'Ancient_Greek_Musical_Notation',
],
'ancientgreeknumbers' => 
[
'Ancient_Greek_Numbers',
],
'ancientsymbols' => 
[
'Ancient_Symbols',
],
'arabic' => 
[
'Arabic',
],
'arabicexta' => 
[
'Arabic_Ext_A',
'Arabic_Extended_A',
],
'arabicextb' => 
[
'Arabic_Ext_B',
'Arabic_Extended_B',
],
'arabicextc' => 
[
'Arabic_Ext_C',
'Arabic_Extended_C',
],
'arabicmath' => 
[
'Arabic_Math',
'Arabic_Mathematical_Alphabetic_Symbols',
],
'arabicpfa' => 
[
'Arabic_PF_A',
'Arabic_Presentation_Forms_A',
],
'arabicpfb' => 
[
'Arabic_PF_B',
'Arabic_Presentation_Forms_B',
],
'arabicsup' => 
[
'Arabic_Sup',
'Arabic_Supplement',
],
'armenian' => 
[
'Armenian',
],
'arrows' => 
[
'Arrows',
],
'ascii' => 
[
'ASCII',
'Basic_Latin',
],
'avestan' => 
[
'Avestan',
],
'balinese' => 
[
'Balinese',
],
'bamum' => 
[
'Bamum',
],
'bamumsup' => 
[
'Bamum_Sup',
'Bamum_Supplement',
],
'bassavah' => 
[
'Bassa_Vah',
],
'batak' => 
[
'Batak',
],
'bengali' => 
[
'Bengali',
],
'bhaiksuki' => 
[
'Bhaiksuki',
],
'blockelements' => 
[
'Block_Elements',
],
'bopomofo' => 
[
'Bopomofo',
],
'bopomofoext' => 
[
'Bopomofo_Ext',
'Bopomofo_Extended',
],
'boxdrawing' => 
[
'Box_Drawing',
],
'brahmi' => 
[
'Brahmi',
],
'braille' => 
[
'Braille',
'Braille_Patterns',
],
'buginese' => 
[
'Buginese',
],
'buhid' => 
[
'Buhid',
],
'byzantinemusic' => 
[
'Byzantine_Music',
'Byzantine_Musical_Symbols',
],
'carian' => 
[
'Carian',
],
'caucasianalbanian' => 
[
'Caucasian_Albanian',
],
'chakma' => 
[
'Chakma',
],
'cham' => 
[
'Cham',
],
'cherokee' => 
[
'Cherokee',
],
'cherokeesup' => 
[
'Cherokee_Sup',
'Cherokee_Supplement',
],
'chesssymbols' => 
[
'Chess_Symbols',
],
'chorasmian' => 
[
'Chorasmian',
],
'cjk' => 
[
'CJK',
'CJK_Unified_Ideographs',
],
'cjkcompat' => 
[
'CJK_Compat',
'CJK_Compatibility',
],
'cjkcompatforms' => 
[
'CJK_Compat_Forms',
'CJK_Compatibility_Forms',
],
'cjkcompatideographs' => 
[
'CJK_Compat_Ideographs',
'CJK_Compatibility_Ideographs',
],
'cjkcompatideographssup' => 
[
'CJK_Compat_Ideographs_Sup',
'CJK_Compatibility_Ideographs_Supplement',
],
'cjkexta' => 
[
'CJK_Ext_A',
'CJK_Unified_Ideographs_Extension_A',
],
'cjkextb' => 
[
'CJK_Ext_B',
