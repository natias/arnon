=item SEE ALSO

=item REPOSITORY

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Html - module to convert pod files to HTML

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=over 4

=item pod2html

backlink, cachedir, css, flush, header, help, htmldir, htmlroot, index,
infile, outfile, poderrors, podpath, podroot, quiet, recurse, title,
verbose

=item Formerly Exported Auxiliary Functions

C<htmlify()> (by default), C<anchorify()> (upon request),
C<relativize_url()> (upon request)

=back

=item ENVIRONMENT

=item AUTHOR

=item SEE ALSO

=item COPYRIGHT

=back

=head2 Pod::Html::Util - helper functions for Pod-Html

=over 4

=item SUBROUTINES

=back

=over 4

=item C<process_command_line()>

=back

=over 4

=item C<usage()>

=back

=over 4

=item C<unixify()>

=back

=over 4

=item C<relativize_url()>

=back

=over 4

=item C<html_escape()>

=back

=over 4

=item C<htmlify()>

=back

=over 4

=item C<anchorify()>

=back

=over 4

=item C<trim_leading_whitespace()>

=back

=head2 Pod::Man - Convert POD data to formatted *roff input

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CLASS METHODS

new(ARGS), center, date, encoding, errors, fixed, fixedbold, fixeditalic,
fixedbolditalic, guesswork, functions, manref, quoting, variables,
language, lquote, rquote, name, nourls, quotes, release, section, stderr,
utf8

=item INSTANCE METHODS

output_fh(FH), output_string(REF), parse_file(PATH), parse_from_file(INPUT,
OUTPUT), parse_from_filehandle(FH, OUTPUT), parse_lines(LINES[, ...[,
undef]]), parse_string_document(INPUT)

=item ENCODING

=over 4

=item History

=item Testing results

[1], [2], [3]

=back

=item DIAGNOSTICS

roff font should be 1 or 2 chars, not "%s", Invalid errors setting "%s",
Invalid quote specification "%s", POD document had syntax errors

=item ENVIRONMENT

PERL_CORE, POD_MAN_DATE, SOURCE_DATE_EPOCH

=item COMPATIBILITY

=item BUGS

=item CAVEATS

=over 4

=item Sentence spacing

=item Hyphens

=back

=item AUTHOR

=item COPYRIGHT AND LICENSE

=item SEE ALSO

=back

=head2 Pod::ParseLink - Parse an LE<lt>E<gt> formatting code in POD text

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=item COPYRIGHT AND LICENSE

=item SEE ALSO

=back

=head2 Pod::Perldoc - Look up Perl documentation in Pod format.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::BaseTo - Base for Pod::Perldoc formatters

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::GetOptsOO - Customized option parser for Pod::Perldoc

=over 4

=item SYNOPSIS

=item DESCRIPTION

Call Pod::Perldoc::GetOptsOO::getopts($object, \@ARGV, $truth), Given -n,
if there's a opt_n_with, it'll call $object->opt_n_with( ARGUMENT )   
(e.g., "-n foo" => $object->opt_n_with('foo').	Ditto "-nfoo"), Otherwise
(given -n) if there's an opt_n, we'll call it $object->opt_n($truth)   
(Truth defaults to 1), Otherwise we try calling
$object->handle_unknown_option('n')    (and we increment the error count by
the return value of it), If there's no handle_unknown_option, then we just
warn, and then increment    the error counter

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToANSI - render Pod with ANSI color escapes 

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEAT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToChecker - let Perldoc check Pod for errors

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToMan - let Perldoc render Pod as man pages

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEAT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToNroff - let Perldoc convert Pod to nroff

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEAT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToPod - let Perldoc render Pod as ... Pod!

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToRtf - let Perldoc render Pod as RTF

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToTerm - render Pod with terminal escapes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item PAGER FORMATTING

=item CAVEAT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToText - let Perldoc render Pod as plaintext

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEAT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Perldoc::ToTk - let Perldoc use Tk::Pod to render Pod

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item AUTHOR

=back

=head2 Pod::Perldoc::ToXml - let Perldoc render Pod as XML

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

=back

=head2 Pod::Simple - framework for parsing Pod

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item MAIN METHODS

C<< $parser = I<SomeClass>->new(); >>, C<< $parser->output_fh( *OUT ); >>,
C<< $parser->output_string( \$somestring ); >>, C<< $parser->parse_file(
I<$some_filename> ); >>, C<< $parser->parse_file( *INPUT_FH ); >>, C<<
$parser->parse_string_document( I<$all_content> ); >>, C<<
$parser->parse_lines( I<...@lines...>, undef ); >>, C<<
$parser->content_seen >>, C<< I<SomeClass>->filter( I<$filename> ); >>, C<<
I<SomeClass>->filter( I<*INPUT_FH> ); >>, C<< I<SomeClass>->filter(
I<\$document_content> ); >>

=item SECONDARY METHODS

C<< $parser->parse_characters( I<SOMEVALUE> ) >>, C<< $parser->no_whining(
I<SOMEVALUE> ) >>, C<< $parser->no_errata_section( I<SOMEVALUE> ) >>, C<<
$parser->complain_stderr( I<SOMEVALUE> ) >>, C<< $parser->source_filename
>>, C<< $parser->doc_has_started >>, C<< $parser->source_dead >>, C<<
$parser->strip_verbatim_indent( I<SOMEVALUE> ) >>, C<<
$parser->expand_verbatim_tabs( I<n> ) >>

=item TERTIARY METHODS

C<< $parser->abandon_output_fh() >>X<abandon_output_fh>, C<<
$parser->abandon_output_string() >>X<abandon_output_string>, C<<
$parser->accept_code( @codes ) >>X<accept_code>, C<< $parser->accept_codes(
@codes ) >>X<accept_codes>, C<< $parser->accept_directive_as_data(
@directives ) >>X<accept_directive_as_data>, C<<
$parser->accept_directive_as_processed( @directives )
>>X<accept_directive_as_processed>, C<<
$parser->accept_directive_as_verbatim( @directives )
>>X<accept_directive_as_verbatim>, C<< $parser->accept_target( @targets )
>>X<accept_target>, C<< $parser->accept_target_as_text( @targets )
>>X<accept_target_as_text>, C<< $parser->accept_targets( @targets )
>>X<accept_targets>, C<< $parser->accept_targets_as_text( @targets )
>>X<accept_targets_as_text>, C<< $parser->any_errata_seen()
>>X<any_errata_seen>, C<< $parser->errata_seen() >>X<errata_seen>, C<<
$parser->detected_encoding() >>X<detected_encoding>, C<<
$parser->encoding() >>X<encoding>, C<< $parser->parse_from_file( $source,
$to ) >>X<parse_from_file>, C<< $parser->scream( @error_messages )
>>X<scream>, C<< $parser->unaccept_code( @codes ) >>X<unaccept_code>, C<<
$parser->unaccept_codes( @codes ) >>X<unaccept_codes>, C<<
$parser->unaccept_directive( @directives ) >>X<unaccept_directive>, C<<
$parser->unaccept_directives( @directives ) >>X<unaccept_directives>, C<<
$parser->unaccept_target( @targets ) >>X<unaccept_target>, C<<
$parser->unaccept_targets( @targets ) >>X<unaccept_targets>, C<<
$parser->version_report() >>X<version_report>, C<< $parser->whine(
@error_messages ) >>X<whine>

=item ENCODING

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>, Karl Williamson C<khw@cpan.org>,
Gabor Szabo C<szabgab@gmail.com>, Shawn H Corey  C<SHCOREY at cpan.org>

=back

=head2 Pod::Simple::Checker -- check the Pod syntax of a document

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::Debug -- put Pod::Simple into trace/debug mode

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CAVEATS

=item GUTS

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::DumpAsText -- dump Pod-parsing events as text

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::DumpAsXML -- turn Pod into XML

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::HTML - convert Pod to HTML

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CALLING FROM THE COMMAND LINE

=item CALLING FROM PERL

=over 4

=item Minimal code

=item More detailed example

=back

=item METHODS

=over 4

=item html_css

=item html_javascript

=item title_prefix

=item title_postfix

=item html_header_before_title

=item top_anchor

=item html_h_level

=item index

=item html_header_after_title

=item html_footer

=back

=item SUBCLASSING

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item ACKNOWLEDGEMENTS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::HTMLBatch - convert several Pod files to several HTML
files

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item FROM THE COMMAND LINE

=back

=item MAIN METHODS

$batchconv = Pod::Simple::HTMLBatch->new;, $batchconv->batch_convert(
I<indirs>, I<outdir> );, $batchconv->batch_convert( undef    , ...);,
$batchconv->batch_convert( q{@INC}, ...);, $batchconv->batch_convert(
\@dirs , ...);, $batchconv->batch_convert( "somedir" , ...);,
$batchconv->batch_convert( 'somedir:someother:also' , ...);,
$batchconv->batch_convert( ... , undef );, $batchconv->batch_convert( ... ,
'somedir' );

=over 4

=item ACCESSOR METHODS

$batchconv->verbose( I<nonnegative_integer> );, $batchconv->index(
I<true-or-false> );, $batchconv->contents_file( I<filename> );,
$batchconv->contents_page_start( I<HTML_string> );,
$batchconv->contents_page_end( I<HTML_string> );, $batchconv->add_css( $url
);, $batchconv->add_javascript( $url );, $batchconv->css_flurry(
I<true-or-false> );, $batchconv->javascript_flurry( I<true-or-false> );,
$batchconv->no_contents_links( I<true-or-false> );,
$batchconv->html_render_class( I<classname> );, $batchconv->search_class(
I<classname> );

=back

=item NOTES ON CUSTOMIZATION

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::JustPod -- just the Pod, the whole Pod, and nothing but
the Pod

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::LinkSection -- represent "section" attributes of L
codes

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::Methody -- turn Pod::Simple events into method calls

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHOD CALLING

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::PullParser -- a pull-parser interface to parsing Pod

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

my $token = $parser->get_token, $parser->unget_token( $token ),
$parser->unget_token( $token1, $token2, ... ), $parser->set_source(
$filename ), $parser->set_source( $filehandle_object ),
$parser->set_source( \$document_source ), $parser->set_source(
\@document_lines ), $parser->parse_file(...),
$parser->parse_string_document(...), $parser->filter(...),
$parser->parse_from_file(...), my $title_string = $parser->get_title, my
$title_string = $parser->get_short_title, $author_name	 =
$parser->get_author, $description_name = $parser->get_description,
$version_block = $parser->get_version

=item NOTE

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::PullParserEndToken -- end-tokens from
Pod::Simple::PullParser

=over 4

=item SYNOPSIS

=item DESCRIPTION

$token->tagname, $token->tagname(I<somestring>), $token->tag(...),
$token->is_tag(I<somestring>) or $token->is_tagname(I<somestring>)

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::PullParserStartToken -- start-tokens from
Pod::Simple::PullParser

=over 4

=item SYNOPSIS

=item DESCRIPTION

$token->tagname, $token->tagname(I<somestring>), $token->tag(...),
$token->is_tag(I<somestring>) or $token->is_tagname(I<somestring>),
$token->attr(I<attrname>), $token->attr(I<attrname>, I<newvalue>),
$token->attr_hash

=item SEE ALSO

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::PullParserTextToken -- text-tokens from
Pod::Simple::PullParser

=over 4

=item SYNOPSIS

=item DESCRIPTION

$token->text, $token->text(I<somestring>), $token->text_r()

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::PullParserToken -- tokens from Pod::Simple::PullParser

=over 4

=item SYNOPSIS

=item DESCRIPTION

$token->type, $token->is_start, $token->is_text, $token->is_end,
$token->dump

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::RTF -- format Pod as RTF

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FORMAT CONTROL ATTRIBUTES

$parser->head1_halfpoint_size( I<halfpoint_integer> );,
$parser->head2_halfpoint_size( I<halfpoint_integer> );,
$parser->head3_halfpoint_size( I<halfpoint_integer> );,
$parser->head4_halfpoint_size( I<halfpoint_integer> );,
$parser->codeblock_halfpoint_size( I<halfpoint_integer> );,
$parser->header_halfpoint_size( I<halfpoint_integer> );,
$parser->normal_halfpoint_size( I<halfpoint_integer> );,
$parser->no_proofing_exemptions( I<true_or_false> );, $parser->doc_lang(
I<microsoft_decimal_language_code> )

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::Search - find POD documents in directory trees

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

=item ACCESSORS

$search->inc( I<true-or-false> );, $search->verbose( I<nonnegative-number>
);, $search->limit_glob( I<some-glob-string> );, $search->callback(
I<\&some_routine> );, $search->laborious( I<true-or-false> );,
$search->recurse( I<true-or-false> );, $search->shadows( I<true-or-false>
);, $search->is_case_insensitive( I<true-or-false> );, $search->limit_re(
I<some-regxp> );, $search->dir_prefix( I<some-string-value> );,
$search->progress( I<some-progress-object> );, $name2path =
$self->name2path;, $path2name = $self->path2name;

=item MAIN SEARCH METHODS

=over 4

=item C<< $search->survey( @directories ) >>

C<name2path>, C<path2name>

=item C<< $search->simplify_name( $str ) >>

=item C<< $search->find( $pod ) >>

=item C<< $search->find( $pod, @search_dirs ) >>

=item C<< $self->contains_pod( $file ) >>

=back

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

=head2 Pod::Simple::SimpleTree -- parse Pod into a simple parse tree

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=item Tree Contents

=item SEE ALSO

=item SUPPORT

=item COPYRIGHT AND DISCLAIMERS

=item AUTHOR

Allison Randal C<allison@perl.org>, Hans Dieter Pearcey C<hdp@cpan.org>,
David E. Wheeler C<dwheeler@cpan.org>

=back

