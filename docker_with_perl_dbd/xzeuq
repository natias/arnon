#define OCI_DIRPATH_DEFAULTS_IGNORE_UNSUPPORTED_EVALUATE_EVERY_ROW   5

#define OCI_ATTR_DIRPATH_DEF_EXP_CACHE_SIZE 514   /* default expr cache size */

#define OCI_ATTR_RESERVED_515              515 
#define OCI_ATTR_RESERVED_516              516

/*------ Attributes for client to server charset conversion ratio -----------*/
#define OCI_ATTR_MAX_CHARSET_RATIO              517
#define OCI_ATTR_MAX_NCHARSET_RATIO             518

#define OCI_ATTR_RESERVED_519              519

#define OCI_ATTR_LOB_REMOTE                520               /* remote lob ? */
#define OCI_ATTR_RESERVED_521              521
#define OCI_ATTR_RESERVED_522              522
#define OCI_ATTR_RESERVED_523              523
#define OCI_ATTR_PDBNAME                   524                   /* PDB name */

#define OCI_ATTR_RESERVED_524              524
#define OCI_ATTR_RESERVED_525              525
#define OCI_ATTR_RESERVED_526              526
#define OCI_ATTR_RESERVED_527              527
#define OCI_ATTR_RESERVED_528              528
#define OCI_ATTR_RESERVED_529              529
#define OCI_ATTR_RESERVED_530              530

#define OCI_ATTR_CALL_TIMEOUT              531
/*------------------- Not persisteble types ---------------------------------*/
#define OCI_ATTR_IS_NOT_PERSISTABLE_TYPE   532 /* is  not persistable type   */

#define OCI_ATTR_RESERVED_533              533                   /* reserved */

#define OCI_ATTR_JSON_COL                  534   /* col holding JSON */

/*
 * OCI SODA attributes
 */
/* OCI SODA collection and metadata atributes */
#define  OCI_ATTR_SODA_COLL_NAME                535
#define  OCI_ATTR_SODA_DESCRIPTOR               536
#define  OCI_ATTR_SODA_SCHEMA                   537
#define  OCI_ATTR_SODA_TABLE_NAME               538
#define  OCI_ATTR_SODA_VIEW_NAME                539
#define  OCI_ATTR_SODA_TABLESPACE               540
#define  OCI_ATTR_SODA_STORAGE_INIT_SIZE        541
#define  OCI_ATTR_SODA_STORAGE_INC_PCT          542
#define  OCI_ATTR_SODA_KEY_COL_NAME             543
#define  OCI_ATTR_SODA_KEY_SQL_TYPE             544
#define  OCI_ATTR_SODA_KEY_MAX_LEN              545
#define  OCI_ATTR_SODA_KEY_ASSIGN_METHOD        546
#define  OCI_ATTR_SODA_KEY_SEQ_NAME             547
#define  OCI_ATTR_SODA_CTNT_COL_NAME            548
#define  OCI_ATTR_SODA_CTNT_SQL_TYPE            549
#define  OCI_ATTR_SODA_CTNT_MAX_LEN             550
#define  OCI_ATTR_SODA_CTNT_VALIDATION          551
#define  OCI_ATTR_SODA_CTNT_COMPRESS            552
#define  OCI_ATTR_SODA_CTNT_CACHE               553
#define  OCI_ATTR_SODA_CTNT_ENCRYPT             554
#define  OCI_ATTR_SODA_CTNT_TABLESPACE          555
#define  OCI_ATTR_SODA_VERSION_COL_NAME         556
#define  OCI_ATTR_SODA_VERSION_METHOD           557
#define  OCI_ATTR_SODA_MODTIME_COL_NAME         558
#define  OCI_ATTR_SODA_MODTIME_INDEX            559
#define  OCI_ATTR_SODA_CRTIME_COL_NAME          560
#define  OCI_ATTR_SODA_MTYPE_COL_NAME           561
#define  OCI_ATTR_SODA_READONLY                 562

/* OCI SODA Document attributes */
#define  OCI_ATTR_SODA_KEY                       563   
#define  OCI_ATTR_SODA_LASTMOD_TIMESTAMP         564
#define  OCI_ATTR_SODA_CREATE_TIMESTAMP          565
#define  OCI_ATTR_SODA_VERSION                   566
#define  OCI_ATTR_SODA_CONTENT                   567
#define  OCI_ATTR_SODA_JSON_CHARSET_ID           568
#define  OCI_ATTR_SODA_DETECT_JSON_ENC           569
#define  OCI_ATTR_SODA_MEDIA_TYPE                571

/* OCI SODA Content Column's JSON storage format */
#define  OCI_ATTR_SODA_CTNT_FORMAT              572

/* OCI SODA Operation Options attributes */
#define  OCI_ATTR_SODA_FETCH_ARRAY_SIZE         573
#define  OCI_ATTR_SODA_FILTER                   576
#define  OCI_ATTR_SODA_SKIP                     577           
#define  OCI_ATTR_SODA_LIMIT                    578


#define  OCI_ATTR_SPOOL_MAX_USE_SESSION             580
#define  OCI_ATTR_RESERVED_581                      581
#define  OCI_ATTR_RESERVED_582                      582
#define  OCI_ATTR_RESERVED_583                      583
#define  OCI_ATTR_RESERVED_584                      584

#define OCI_ATTR_RESERVED_586                   586
#define OCI_ATTR_RESERVED_587                   587
#define OCI_ATTR_RESERVED_588                   588  
#define OCI_ATTR_RESERVED_589                   589  

#define OCI_ATTR_RESERVED_590                   590
#define OCI_ATTR_LOB_TYPE                       591
#define OCI_ATTR_RESERVED_592                   592

/* OCI SODA Output Options attributes */
#define OCI_ATTR_SODA_DOC_COUNT                 593

/* Other attributes */ 
#define OCI_ATTR_RESERVED_595                   595
#define OCI_ATTR_RESERVED_596                   596
#define OCI_ATTR_RESERVED_597                   597
#define OCI_ATTR_RESERVED_598                   598
#define OCI_ATTR_RESERVED_599                   599
#define OCI_ATTR_RESERVED_600                   600

#define OCI_ATTR_SPOOL_MAX_PER_SHARD            602
#define OCI_ATTR_RESERVED_603                   603
#define OCI_ATTR_RESERVED_604                   604
#define OCI_ATTR_RESERVED_605                   605
#define OCI_ATTR_RESERVED_606                   606
#define OCI_ATTR_RESERVED_607                   607
#define OCI_ATTR_RESERVED_608                   608
#define OCI_ATTR_RESERVED_609                   609
#define OCI_ATTR_RESERVED_611                   611

/* OCI JSON formats */
#define  OCI_JSON_FORMAT_JSON    0
#define  OCI_JSON_FORMAT_OSON    1

/* OCI SODA MODE TYPES */
 
/* OCI_DEFAULT can be passed as a valid SODA mode. 
 * It has no effect, i.e. it is a no-op
 */
#define OCI_SODA_ATOMIC_COMMIT                  0x00000001

/* OCISodaCollCreate specific modes */
#define OCI_SODA_COLL_CREATE_MAP                0x00010000
                                             /* Create collection in MAP mode */

/* OCISodaIndexDrop specific modes */
#define OCI_SODA_INDEX_DROP_FORCE               0x00010000
                                              /* Drop domain index with FORCE */

/* OCI SODA Document flags */
#define OCI_SODA_DETECT_JSON_ENC       0x00000001 /* Detect the JSON encoding */
#define OCI_SODA_AS_STORED             0x00000002
                                         /* Retrieve as stored in BLOB column */
#define OCI_SODA_AS_AL32UTF8           0x00000004        /* Retrieve as UTF-8 */

/* The following are possilble values to be set for key validation */
#define  OCI_SODA_KEY_METHOD_UUID       1
#define  OCI_SODA_KEY_METHOD_GUID       2
#define  OCI_SODA_KEY_METHOD_SEQUENCE   3
#define  OCI_SODA_KEY_METHOD_CLIENT     4

/* The following are the possible values for content validation methods */
#define  OCI_SODA_JSON_VALIDATION_STRICT  1
#define  OCI_SODA_JSON_VALIDATION_LAX     2 
#define  OCI_SODA_JSON_VALIDATION_STD     3

/* Possible values for LOB compression mechanism */
#define  OCI_SODA_LOB_COMPRESS_NONE    1
#define  OCI_SODA_LOB_COMPRESS_HIGH    2
#define  OCI_SODA_LOB_COMPRESS_MEDIUM  3
#define  OCI_SODA_LOB_COMPRESS_LOW     4

/* Possible values for LOB encryption mechanism */
#define  OCI_SODA_LOB_ENCRYPT_NONE      1
#define  OCI_SODA_LOB_ENCRYPT_3DES168   2
#define  OCI_SODA_LOB_ENCRYPT_AES128    3
#define  OCI_SODA_LOB_ENCRYPT_AES192    4
#define  OCI_SODA_LOB_ENCRYPT_AES256    5

/* Possible methods for version generation */
#define  OCI_SODA_VERSION_UUID           1
#define  OCI_SODA_VERSION_TIMESTAMP      2
#define  OCI_SODA_VERSION_MD5            3
#define  OCI_SODA_VERSION_SHA256         4
#define  OCI_SODA_VERSION_SEQUENTIAL     5
#define  OCI_SODA_VERSION_NONE           6

#define OCI_ATTR_DIRPATH_RESERVED_32       2031

/*--Attribute for direct path NUMBER_FORMAT string                          */
#define OCI_ATTR_DIRPATH_RESERVED_33       2032

#define OCI_ATTR_DIRPATH_RESERVED_34       2033

/*--Attribute for direct path UTC                                           */
#define OCI_ATTR_DIRPATH_RESERVED_34       2033

/*--Attribute to use caller's pending transaction in kpodpp  */
#define OCI_ATTR_DIRPATH_USE_PENDING_TRANS  2034                  /* reserved */

/*---------------------------------------------------------------------------*/
/*
 * NEW ATTRIBUTES MUST BE ADDED JUST BEFORE THIS BLOCK
 *
 * PLEASE DO NOT PLACE ATTRIBUTE *VALUES* HERE; PLACE THEM ELSEWHERE IN THE FILE
 *  (i.e. OCI_<attrname>_<valuename>; e.g. OCI_EVENT_STARTUP); 
 * 
 * (just *below* here is fine for the *values*, with
 *  sufficient white space for this notice to stand out)
 */
/*---------------------------------------------------------------------------*/


/*---------------- Describe Handle Parameter Attribute Values ---------------*/

/* OCI_ATTR_CURSOR_COMMIT_BEHAVIOR */
#define OCI_CURSOR_OPEN   0 
#define OCI_CURSOR_CLOSED 1

/* OCI_ATTR_CATALOG_LOCATION */
#define OCI_CL_START 0
#define OCI_CL_END   1

/* OCI_ATTR_SAVEPOINT_SUPPORT */
#define OCI_SP_SUPPORTED   0
#define OCI_SP_UNSUPPORTED 1

/* OCI_ATTR_NOWAIT_SUPPORT */
#define OCI_NW_SUPPORTED   0
#define OCI_NW_UNSUPPORTED 1

/* OCI_ATTR_AUTOCOMMIT_DDL */
#define OCI_AC_DDL    0
#define OCI_NO_AC_DDL 1

/* OCI_ATTR_LOCKING_MODE */
#define OCI_LOCK_IMMEDIATE 0
#define OCI_LOCK_DELAYED   1

/* ------------------- Instance type attribute values -----------------------*/
#define OCI_INSTANCE_TYPE_UNKNOWN  0
#define OCI_INSTANCE_TYPE_RDBMS    1
#define OCI_INSTANCE_TYPE_OSM      2
#define OCI_INSTANCE_TYPE_PROXY    3
#define OCI_INSTANCE_TYPE_IOS      4


/* ---------------- ASM Volume Device Support attribute values --------------*/
#define OCI_ASM_VOLUME_UNSUPPORTED 0
#define OCI_ASM_VOLUME_SUPPORTED   1

/*---------------------------------------------------------------------------*/

/*---------------------------OCIPasswordChange-------------------------------*/
#define OCI_AUTH         0x00000008  /* Change the password but do not login */
#define OCI_CPW_SYSDBA   0x00000010      /* Password change with SYSDBA auth */
#define OCI_CPW_SYSOPER  0x00000020     /* Password change with SYSOPER auth */
#define OCI_CPW_SYSASM   0x00800040      /* Password change with SYSASM auth */
#define OCI_CPW_SYSBKP   0x00000080   /* Password change with SYSBACKUP auth */
#define OCI_CPW_SYSDGD   0x00000100       /* Password change with SYSDG auth */
#define OCI_CPW_SYSKMT   0x00000200       /* Password change with SYSKM auth */


/*------------------------Other Constants------------------------------------*/
#define OCI_MAX_FNS   100                     /* max number of OCI Functions */
#define OCI_SQLSTATE_SIZE 5  
#define OCI_ERROR_MAXMSG_SIZE   1024         /* max size of an error message */
#define OCI_ERROR_MAXMSG_SIZE2  3072 /* new len max size of an error message */
#define OCI_LOBMAXSIZE MINUB4MAXVAL                 /* maximum lob data size */
#define OCI_ROWID_LEN             23
#define OCI_LOB_CONTENTTYPE_MAXSIZE 128  /* max size of securefile contenttype */
#define OCI_LOB_CONTENTTYPE_MAXBYTESIZE  OCI_LOB_CONTENTTYPE_MAXSIZE 
/*---------------------------------------------------------------------------*/

/*------------------------ Fail Over Events ---------------------------------*/
#define OCI_FO_END          0x00000001
#define OCI_FO_ABORT        0x00000002   
#define OCI_FO_REAUTH       0x00000004
#define OCI_FO_BEGIN        0x00000008 
#define OCI_FO_ERROR        0x00000010
/*---------------------------------------------------------------------------*/

/*------------------------ Fail Over Callback Return Codes ------------------*/
#define OCI_FO_RETRY        25410
/*---------------------------------------------------------------------------*/

/*------------------------- Fail Over Types ---------------------------------*/
#define OCI_FO_NONE           0x00000001
#define OCI_FO_SESSION        0x00000002
#define OCI_FO_SELECT         0x00000004
#define OCI_FO_TXNAL          0x00000008
#define OCI_FO_AUTO           0x00000020
/*---------------------------------------------------------------------------*/

/*--------------------- OCI_ATTR_VARTYPE_MAXLEN_COMPAT values ---------------*/
#define OCI_ATTR_MAXLEN_COMPAT_STANDARD 1
#define OCI_ATTR_MAXLEN_COMPAT_EXTENDED 2
/*---------------------------------------------------------------------------*/


/*-----------------------Function Codes--------------------------------------*/
#define OCI_FNCODE_INITIALIZE     1                         /* OCIInitialize */
#define OCI_FNCODE_HANDLEALLOC  2                          /* OCIHandleAlloc */
#define OCI_FNCODE_HANDLEFREE  3                            /* OCIHandleFree */
#define OCI_FNCODE_DESCRIPTORALLOC  4                  /* OCIDescriptorAlloc */
#define OCI_FNCODE_DESCRIPTORFREE  5                    /* OCIDescriptorFree */
#define OCI_FNCODE_ENVINIT   6                                 /* OCIEnvInit */
#define OCI_FNCODE_SERVERATTACH   7                       /* OCIServerAttach */
#define OCI_FNCODE_SERVERDETACH   8                       /* OCIServerDetach */
/* unused         9 */ 
#define OCI_FNCODE_SESSIONBEGIN  10                       /* OCISessionBegin */
#define OCI_FNCODE_SESSIONEND   11                          /* OCISessionEnd */
#define OCI_FNCODE_PASSWORDCHANGE   12                  /* OCIPasswordChange */
#define OCI_FNCODE_STMTPREPARE   13                        /* OCIStmtPrepare */
                                                      /* unused       14- 16 */
#define OCI_FNCODE_BINDDYNAMIC   17                        /* OCIBindDynamic */
#define OCI_FNCODE_BINDOBJECT  18                           /* OCIBindObject */
                                                                /* 19 unused */
#define OCI_FNCODE_BINDARRAYOFSTRUCT   20            /* OCIBindArrayOfStruct */
#define OCI_FNCODE_STMTEXECUTE  21                         /* OCIStmtExecute */
                                                             /* unused 22-24 */
#define OCI_FNCODE_DEFINEOBJECT  25                       /* OCIDefineObject */
#define OCI_FNCODE_DEFINEDYNAMIC   26                    /* OCIDefineDynamic */
#define OCI_FNCODE_DEFINEARRAYOFSTRUCT  27         /* OCIDefineArrayOfStruct */
#define OCI_FNCODE_STMTFETCH   28                            /* OCIStmtFetch */
#define OCI_FNCODE_STMTGETBIND   29                    /* OCIStmtGetBindInfo */
                                                            /* 30, 31 unused */
#define OCI_FNCODE_DESCRIBEANY  32                         /* OCIDescribeAny */
#define OCI_FNCODE_TRANSSTART  33                           /* OCITransStart */
#define OCI_FNCODE_TRANSDETACH  34                         /* OCITransDetach */
#define OCI_FNCODE_TRANSCOMMIT  35                         /* OCITransCommit */
                                                                /* 36 unused */
#define OCI_FNCODE_ERRORGET   37                              /* OCIErrorGet */
#define OCI_FNCODE_LOBFILEOPEN  38                         /* OCILobFileOpen */
#define OCI_FNCODE_LOBOPENFILE  38                      /* for compatibility */
#define OCI_FNCODE_LOBFILECLOSE  39                       /* OCILobFileClose */
#define OCI_FNCODE_LOBCLOSEFILE  39                     /* for compatibility */
                                             /* 40 was LOBCREATEFILE, unused */
                                         /* 41 was OCILobFileDelete, unused  */
#define OCI_FNCODE_LOBCOPY  42                                 /* OCILobCopy */
#define OCI_FNCODE_LOBAPPEND  43                             /* OCILobAppend */
#define OCI_FNCODE_LOBERASE  44                               /* OCILobErase */
#define OCI_FNCODE_LOBLENGTH  45                          /* OCILobGetLength */
#define OCI_FNCODE_LOBTRIM  46                                 /* OCILobTrim */
#define OCI_FNCODE_LOBREAD  47                                 /* OCILobRead */
#define OCI_FNCODE_LOBWRITE  48                               /* OCILobWrite */
                                                                /* 49 unused */
#define OCI_FNCODE_SVCCTXBREAK 50                                /* OCIBreak */
#define OCI_FNCODE_SERVERVERSION  51                     /* OCIServerVersion */

#define OCI_FNCODE_KERBATTRSET 52                          /* OCIKerbAttrSet */

#define OCI_FNCODE_SERVERRELEASE 53                      /* OCIServerRelease */

#define OCI_FNCODE_ATTRGET 54                                  /* OCIAttrGet */
#define OCI_FNCODE_ATTRSET 55                                  /* OCIAttrSet */
#define OCI_FNCODE_PARAMSET 56                                /* OCIParamSet */
#define OCI_FNCODE_PARAMGET 57                                /* OCIParamGet */
#define OCI_FNCODE_STMTGETPIECEINFO   58              /* OCIStmtGetPieceInfo */
#define OCI_FNCODE_LDATOSVCCTX 59                          /* OCILdaToSvcCtx */
                                                                /* 60 unused */
#define OCI_FNCODE_STMTSETPIECEINFO   61              /* OCIStmtSetPieceInfo */
#define OCI_FNCODE_TRANSFORGET 62                          /* OCITransForget */
#define OCI_FNCODE_TRANSPREPARE 63                        /* OCITransPrepare */
#define OCI_FNCODE_TRANSROLLBACK  64                     /* OCITransRollback */
#define OCI_FNCODE_DEFINEBYPOS 65                          /* OCIDefineByPos */
#define OCI_FNCODE_BINDBYPOS 66                              /* OCIBindByPos */
#define OCI_FNCODE_BINDBYNAME 67                            /* OCIBindByName */
#define OCI_FNCODE_LOBASSIGN  68                             /* OCILobAssign */
#define OCI_FNCODE_LOBISEQUAL  69                           /* OCILobIsEqual */
#define OCI_FNCODE_LOBISINIT  70                      /* OCILobLocatorIsInit */

#define OCI_FNCODE_LOBENABLEBUFFERING  71           /* OCILobEnableBuffering */
#define OCI_FNCODE_LOBCHARSETID  72                       /* OCILobCharSetId */
#define OCI_FNCODE_LOBCHARSETFORM  73                   /* OCILobCharSetForm */
#define OCI_FNCODE_LOBFILESETNAME  74                   /* OCILobFileSetName */
#define OCI_FNCODE_LOBFILEGETNAME  75                   /* OCILobFileGetName */
#define OCI_FNCODE_LOGON 76                                      /* OCILogon */
#define OCI_FNCODE_LOGOFF 77                                    /* OCILogoff */
#define OCI_FNCODE_LOBDISABLEBUFFERING 78          /* OCILobDisableBuffering */
#define OCI_FNCODE_LOBFLUSHBUFFER 79                    /* OCILobFlushBuffer */
#define OCI_FNCODE_LOBLOADFROMFILE 80                  /* OCILobLoadFromFile */

#define OCI_FNCODE_LOBOPEN  81                                 /* OCILobOpen */
#define OCI_FNCODE_LOBCLOSE  82                               /* OCILobClose */
#define OCI_FNCODE_LOBISOPEN  83                             /* OCILobIsOpen */
#define OCI_FNCODE_LOBFILEISOPEN  84                     /* OCILobFileIsOpen */
#define OCI_FNCODE_LOBFILEEXISTS  85                     /* OCILobFileExists */
#define OCI_FNCODE_LOBFILECLOSEALL  86                 /* OCILobFileCloseAll */
#define OCI_FNCODE_LOBCREATETEMP  87                /* OCILobCreateTemporary */
#define OCI_FNCODE_LOBFREETEMP  88                    /* OCILobFreeTemporary */
#define OCI_FNCODE_LOBISTEMP  89                        /* OCILobIsTemporary */

#define OCI_FNCODE_AQENQ  90                                     /* OCIAQEnq */
#define OCI_FNCODE_AQDEQ  91                                     /* OCIAQDeq */
#define OCI_FNCODE_RESET  92                                     /* OCIReset */
#define OCI_FNCODE_SVCCTXTOLDA  93                         /* OCISvcCtxToLda */
#define OCI_FNCODE_LOBLOCATORASSIGN 94                /* OCILobLocatorAssign */

                                                     /* 95 unused, available */

#define OCI_FNCODE_AQLISTEN  96                               /* OCIAQListen */

#define OCI_FNCODE_SVC2HST 97                                    /* reserved */
#define OCI_FNCODE_SVCRH   98                                    /* reserved */
                           /* 97 and 98 are reserved for Oracle internal use */

#define OCI_FNCODE_TRANSMULTIPREPARE   99            /* OCITransMultiPrepare */

#define OCI_FNCODE_CPOOLCREATE  100               /* OCIConnectionPoolCreate */
#define OCI_FNCODE_CPOOLDESTROY 101              /* OCIConnectionPoolDestroy */
#define OCI_FNCODE_LOGON2 102                                   /* OCILogon2 */
#define OCI_FNCODE_ROWIDTOCHAR  103                        /* OCIRowidToChar */

#define OCI_FNCODE_SPOOLCREATE  104                  /* OCISessionPoolCreate */
#define OCI_FNCODE_SPOOLDESTROY 105                 /* OCISessionPoolDestroy */
#define OCI_FNCODE_SESSIONGET   106                         /* OCISessionGet */
#define OCI_FNCODE_SESSIONRELEASE 107                   /* OCISessionRelease */
#define OCI_FNCODE_STMTPREPARE2 108                       /* OCIStmtPrepare2 */
#define OCI_FNCODE_STMTRELEASE 109                         /* OCIStmtRelease */
#define OCI_FNCODE_AQENQARRAY  110                          /* OCIAQEnqArray */
#define OCI_FNCODE_AQDEQARRAY  111                          /* OCIAQDeqArray */
#define OCI_FNCODE_LOBCOPY2    112                            /* OCILobCopy2 */
#define OCI_FNCODE_LOBERASE2   113                           /* OCILobErase2 */
#define OCI_FNCODE_LOBLENGTH2  114                       /* OCILobGetLength2 */
#define OCI_FNCODE_LOBLOADFROMFILE2  115              /* OCILobLoadFromFile2 */
#define OCI_FNCODE_LOBREAD2    116                            /* OCILobRead2 */
#define OCI_FNCODE_LOBTRIM2    117                            /* OCILobTrim2 */
#define OCI_FNCODE_LOBWRITE2   118                           /* OCILobWrite2 */
#define OCI_FNCODE_LOBGETSTORAGELIMIT 119           /* OCILobGetStorageLimit */
#define OCI_FNCODE_DBSTARTUP 120                             /* OCIDBStartup */
#define OCI_FNCODE_DBSHUTDOWN 121                           /* OCIDBShutdown */
#define OCI_FNCODE_LOBARRAYREAD       122                 /* OCILobArrayRead */
#define OCI_FNCODE_LOBARRAYWRITE      123                /* OCILobArrayWrite */
#define OCI_FNCODE_AQENQSTREAM        124               /* OCIAQEnqStreaming */
#define OCI_FNCODE_AQGETREPLAY        125              /* OCIAQGetReplayInfo */
#define OCI_FNCODE_AQRESETREPLAY      126            /* OCIAQResetReplayInfo */
#define OCI_FNCODE_ARRAYDESCRIPTORALLOC 127        /*OCIArrayDescriptorAlloc */
#define OCI_FNCODE_ARRAYDESCRIPTORFREE  128       /* OCIArrayDescriptorFree  */
#define OCI_FNCODE_LOBGETOPT        129                  /* OCILobGetOptions */
#define OCI_FNCODE_LOBSETOPT        130                  /* OCILobSetOptions */
#define OCI_FNCODE_LOBFRAGINS       131              /* OCILobFragmentInsert */
#define OCI_FNCODE_LOBFRAGDEL       132              /* OCILobFragmentDelete */
#define OCI_FNCODE_LOBFRAGMOV       133                /* OCILobFragmentMove */
#define OCI_FNCODE_LOBFRAGREP       134             /* OCILobFragmentReplace */
#define OCI_FNCODE_LOBGETDEDUPLICATEREGIONS 135/* OCILobGetDeduplicateRegions */
#define OCI_FNCODE_APPCTXSET        136                      /* OCIAppCtxSet */
#define OCI_FNCODE_APPCTXCLEARALL   137                 /* OCIAppCtxClearAll */

#define OCI_FNCODE_LOBGETCONTENTTYPE 138             /* OCILobGetContentType */
#define OCI_FNCODE_LOBSETCONTENTTYPE 139             /* OCILobSetContentType */
#define OCI_FNCODE_DEFINEBYPOS2      140                  /* OCIDefineByPos2 */
#define OCI_FNCODE_BINDBYPOS2        141                    /* OCIBindByPos2 */
#define OCI_FNCODE_BINDBYNAME2       142                   /* OCIBindByName2 */
#define OCI_FNCODE_STMTGETNEXTRESULT 143             /* OCIStmtGetNextResult */
#define OCI_FNCODE_AQENQ2            144                        /* OCIAQEnq2 */
#define OCI_FNCODE_AQDEQ2            145                        /* OCIAQDeq2 */
#define OCI_FNCODE_TYPEBYNAME          146                  /* OCITypeByName */
#define OCI_FNCODE_TYPEBYFULLNAME      147              /* OCITypeByFullName */
#define OCI_FNCODE_TYPEBYREF           148                   /* OCITypeByRef */
#define OCI_FNCODE_TYPEARRAYBYNAME     149             /* OCITypeArrayByName */
#define OCI_FNCODE_TYPEARRAYBYFULLNAME 150         /* OCITypeArrayByFullName */
#define OCI_FNCODE_TYPEARRAYBYREF      151              /* OCITypeArrayByRef */
#define OCI_FNCODE_LOBGETCHUNKSIZE     152             /* OCILobGetChunkSize */
#define OCI_FNCODE_LOBWRITEAPPEND      153              /* OCILobWriteAppend */
#define OCI_FNCODE_LOBWRITEAPPEND2     154             /* OCILobWriteAppend2 */
#define OCI_FNCODE_RESERVED_155        155     /* reserved OCI function code */
#define OCI_FNCODE_SODACOLLCREATE      156              /* OCISodaCollCreate */
#define OCI_FNCODE_SODAMETADATABUILD   157           /* OCISodaMetadataBuild */
#define OCI_FNCODE_SODACOLLCREATEWITHMETADATA 158 /* OCISodaCollCreateWithMetadata */
#define OCI_FNCODE_SODACOLLOPEN        159                /* OCISodaCollOpen */
#define OCI_FNCODE_SODADOCCREATE       160               /* OCISodaDocCreate */
#define OCI_FNCODE_SODADOCCREATEWITHKEY 161       /* OCISodaDocCreateWithKey */
#define OCI_FNCODE_SODADOCCREATEWITHKEYANDMTYPE 162 /* OCISodaDocCreateWithKeyAndMType */
#define OCI_FNCODE_SODAINSERT              163              /* OCISodaInsert */
#define OCI_FNCODE_SODABULKINSERT          164          /* OCISodaBulkInsert */
#define OCI_FNCODE_SODAINSERTANDGET        165        /* OCISodaInsertAndGet */
#define OCI_FNCODE_SODABULKINSERTANDGET    166    /* OCISodaBulkInsertAndGet */
#define OCI_FNCODE_SODAINSERTWITHCTNT      167      /* OCISodaInsertWithCtnt */
#define OCI_FNCODE_SODAINSERTANDGETWITHCTNT 168 /* OCISodaInsertAndGetWithCtnt */
#define OCI_FNCODE_SODABULKINSERTWITHCTNT 169   /* OCISodaBulkInsertWithCtnt */
#define OCI_FNCODE_SODABULKINSERTANDGETWITHCTNT 170 /* OCISodaBulkInsertAndGetWithCtnt */
#define OCI_FNCODE_SODASAVE              171                  /* OCISodaSave */
#define OCI_FNCODE_SODASAVEANDGET        172            /* OCISodaSaveAndGet */
#define OCI_FNCODE_SODASAVEWITHCTNT      173          /* OCISodaSaveWithCtnt */
#define OCI_FNCODE_SODASAVEANDGETWITHCTNT 174   /* OCISodaSaveAndGetWithCtnt */
#define OCI_FNCODE_SODAFIND              175                  /* OCISodaFind */
#define OCI_FNCODE_SODAFINDONE           176               /* OCISodaFindOne */
#define OCI_FNCODE_SODADOCGETNEXT        177            /* OCISodaDocGetNext */
#define OCI_FNCODE_SODAFINDONEWITHKEY    178        /* OCISodaFindOneWithKey */
#define OCI_FNCODE_SODACOLLLIST          179              /* OCISodaCollList */
#define OCI_FNCODE_SODADOCCOUNT          180              /* OCISodaDocCount */
#define OCI_FNCODE_SODADOCCOUNTWITHFILTER 181   /* OCISodaDocCountWithFilter */
#define OCI_FNCODE_SODAREPLONE           182               /* OCISodaReplOne */
#define OCI_FNCODE_SODAREPLONEANDGET     183         /* OCISodaReplOneAndGet */
#define OCI_FNCODE_SODAREPLONEWITHCTNT   184       /* OCISodaReplOneWithCtnt */
#define OCI_FNCODE_SODAREPLONEANDGETWITHCTNT 185 /* OCISodaReplOneAndGetWithCtnt */
#define OCI_FNCODE_SODAREPLONEWITHKEY     186       /* OCISodaReplOneWithKey */
#define OCI_FNCODE_SODAREPLONEANDGETWITHKEY 187 /* OCISodaReplOneAndGetWithKey */
#define OCI_FNCODE_SODAREMOVE             188               /* OCISodaRemove */
#define OCI_FNCODE_SODAREMOVEONEWITHKEY   189     /* OCISodaRemoveOneWithKey */
#define OCI_FNCODE_SODACOLLDROP           190             /* OCISodaCollDrop */
#define OCI_FNCODE_SODAINDEXCREATE        191          /* OCISodaIndexCreate */
#define OCI_FNCODE_SODAINDEXDROP          192            /* OCISodaIndexDrop */
#define OCI_FNCODE_SODADATAGUIDEGET       193         /* OCISodaDataGuideGet */
#define OCI_FNCODE_SODACOLLGETNEXT        194          /* OCISodaCollGetNext */
#define OCI_FNCODE_SERVERRELEASE2         195           /* OCIServerRelease2 */
#define OCI_FNCODE_SODAOPERKEYSSET        196          /* OCISodaOperKeysSet */
#define OCI_FNCODE_RESERVED_197           197  /* reserved OCI function code */
#define OCI_FNCODE_RESERVED_198           198  /* reserved OCI function code */
#define OCI_FNCODE_MAXFCN                 198   /* maximum OCI function code */

/*---------------Statement Cache callback modes-----------------------------*/
#define OCI_CBK_STMTCACHE_STMTPURGE  0x01

/*---------------------------------------------------------------------------*/

/*-----------------------Handle Definitions----------------------------------*/
typedef struct OCIEnv           OCIEnv;            /* OCI environment handle */
typedef struct OCIError         OCIError;                /* OCI error handle */
typedef struct OCISvcCtx        OCISvcCtx;             /* OCI service handle */
typedef struct OCIStmt          OCIStmt;             /* OCI statement handle */
typedef struct OCIBind          OCIBind;                  /* OCI bind handle */
typedef struct OCIDefine        OCIDefine;              /* OCI Define handle */
typedef struct OCIDescribe      OCIDescribe;          /* OCI Describe handle */
typedef struct OCIServer        OCIServer;              /* OCI Server handle */
typedef struct OCISession       OCISession;     /* OCI Authentication handle */
typedef struct OCIComplexObject OCIComplexObject;          /* OCI COR handle */
typedef struct OCITrans         OCITrans;          /* OCI Transaction handle */
typedef struct OCISecurity      OCISecurity;          /* OCI Security handle */
typedef struct OCISubscription  OCISubscription;      /* subscription handle */

typedef struct OCICPool         OCICPool;          /* connection pool handle */
typedef struct OCISPool         OCISPool;             /* session pool handle */
typedef struct OCIAuthInfo      OCIAuthInfo;                  /* auth handle */
typedef struct OCIAdmin         OCIAdmin;                    /* admin handle */
typedef struct OCIEvent         OCIEvent;                 /* HA event handle */

/*-----------------------Descriptor Definitions------------------------------*/
typedef struct OCISnapshot      OCISnapshot;      /* OCI snapshot descriptor */
typedef struct OCIResult        OCIResult;      /* OCI Result Set Descriptor */
typedef struct OCILobLocator    OCILobLocator; /* OCI Lob Locator descriptor */
typedef struct OCILobRegion     OCILobRegion;  /* OCI Lob Regions descriptor */
typedef struct OCIParam         OCIParam;        /* OCI PARameter descriptor */
typedef struct OCIComplexObjectComp OCIComplexObjectComp;
                                                       /* OCI COR descriptor */
typedef struct OCIRowid OCIRowid;                    /* OCI ROWID descriptor */

typedef struct OCIDateTime OCIDateTime;           /* OCI DateTime descriptor */
typedef struct OCIInterval OCIInterval;           /* OCI Interval descriptor */

typedef struct OCIUcb           OCIUcb;      /* OCI User Callback descriptor */
typedef struct OCIServerDNs     OCIServerDNs;    /* OCI server DN descriptor */
typedef struct OCIShardingKey   OCIShardingKey;
                                              /* OCI Sharding Key Descriptor */
typedef struct OCIShardInst     OCIShardInst;
                                            /* OCI Shard Instance Descriptor */
/*-------------------------- AQ Descriptors ---------------------------------*/
typedef struct OCIAQEnqOptions    OCIAQEnqOptions; /* AQ Enqueue Options hdl */
typedef struct OCIAQDeqOptions    OCIAQDeqOptions; /* AQ Dequeue Options hdl */
typedef struct OCIAQMsgProperties OCIAQMsgProperties;  /* AQ Mesg Properties */
typedef struct OCIAQAgent         OCIAQAgent;         /* AQ Agent descriptor */
typedef struct OCIAQNfyDescriptor OCIAQNfyDescriptor;   /* AQ Nfy descriptor */
typedef struct OCIAQSignature     OCIAQSignature;            /* AQ Siganture */
typedef struct OCIAQListenOpts    OCIAQListenOpts;      /* AQ listen options */
typedef struct OCIAQLisMsgProps   OCIAQLisMsgProps;   /* AQ listen msg props */
typedef struct OCIAQJmsgProperties OCIAQJmsgProperties; /* AQ JMS Properties */

/*---------------------------------------------------------------------------*/
 
/* Lob typedefs for Pro*C */
typedef struct OCILobLocator OCIClobLocator;    /* OCI Character LOB Locator */
typedef struct OCILobLocator OCIBlobLocator;       /* OCI Binary LOB Locator */
typedef struct OCILobLocator OCIBFileLocator; /* OCI Binary LOB File Locator */
/*---------------------------------------------------------------------------*/
/* OCI SODA typedefs */
typedef struct OCISodaColl OCISodaColl;        /* OCI SODA collection handle */
typedef struct OCISodaDoc OCISodaDoc;            /* OCI SODA document handle */
typedef struct OCISodaDocCursor OCISodaDocCursor;/* OCI SODA document cursor */
typedef struct OCISodaOperationOptions OCISodaOperationOptions; 
                                                  /*OCI SODA document cursor */
typedef struct OCISodaOutputOptions OCISodaOutputOptions; 
                                                    /* OCI SODA output optns */
typedef struct OCISodaMetadata OCISodaMetadata; 
                                         /* OCI SODA metadata of a collection*/
typedef struct OCISodaCollCursor OCISodaCollCursor;
                                               /* OCI SODA collection cursor */

/*---------------------------------------------------------------------------*/

/* Undefined value for tz in interval types*/
#define OCI_INTHR_UNK 24

  /* These defined adjustment values */
#define OCI_ADJUST_UNK            10
#define OCI_ORACLE_DATE           0
#define OCI_ANSI_DATE             1

/*------------------------ Lob-specific Definitions -------------------------*/

/*
 * ociloff - OCI Lob OFFset
 *
 * The offset in the lob data.  The offset is specified in terms of bytes for
 * BLOBs and BFILes.  Character offsets are used for CLOBs, NCLOBs.
 * The maximum size of internal lob data is 4 gigabytes.  FILE LOB 
 * size is limited by the operating system.
 */
typedef ub4 OCILobOffset;

/*
 * ocillen - OCI Lob LENgth (of lob data)
 *
 * Specifies the length of lob data in bytes for BLOBs and BFILes and in 
 * characters for CLOBs, NCLOBs.  The maximum length of internal lob
 * data is 4 gigabytes.  The length of FILE LOBs is limited only by the
 * operating system.
 */
typedef ub4 OCILobLength;
/*
 * ocilmo - OCI Lob open MOdes
 *
 * The mode specifies the planned operations that will be performed on the
 * FILE lob data.  The FILE lob can be opened in read-only mode only.
 * 
 * In the future, we may include read/write, append and truncate modes.  Append
 * is equivalent to read/write mode except that the FILE is positioned for
 * writing to the end.  Truncate is equivalent to read/write mode except that
 * the FILE LOB data is first truncated to a length of 0 before use.
 */
enum OCILobMode
{
  OCI_LOBMODE_READONLY = 1,                                     /* read-only */
  OCI_LOBMODE_READWRITE = 2             /* read_write for internal lobs only */
};
typedef enum OCILobMode OCILobMode;

/*---------------------------------------------------------------------------*/


/*----------------------------Piece Definitions------------------------------*/

/* if ocidef.h is being included in the app, ocidef.h should precede oci.h */

/* 
 * since clients may  use oci.h, ocidef.h and ocidfn.h the following defines
 * need to be guarded, usually internal clients
 */

#ifndef OCI_FLAGS
#define OCI_FLAGS
#define OCI_ONE_PIECE 0                                         /* one piece */
#define OCI_FIRST_PIECE 1                                 /* the first piece */
#define OCI_NEXT_PIECE 2                          /* the next of many pieces */
#define OCI_LAST_PIECE 3                                   /* the last piece */
#endif
/*---------------------------------------------------------------------------*/

/*--------------------------- FILE open modes -------------------------------*/
#define OCI_FILE_READONLY 1             /* readonly mode open for FILE types */
/*---------------------------------------------------------------------------*/
/*--------------------------- LOB open modes --------------------------------*/
#define OCI_LOB_READONLY 1              /* readonly mode open for ILOB types */
#define OCI_LOB_READWRITE 2                /* read write mode open for ILOBs */
#define OCI_LOB_WRITEONLY     3         /* Writeonly mode open for ILOB types*/
#define OCI_LOB_APPENDONLY    4       /* Appendonly mode open for ILOB types */
#define OCI_LOB_FULLOVERWRITE 5                 /* Completely overwrite ILOB */
#define OCI_LOB_FULLREAD      6                 /* Doing a Full Read of ILOB */

/*----------------------- LOB Buffering Flush Flags -------------------------*/
#define OCI_LOB_BUFFER_FREE   1 
#define OCI_LOB_BUFFER_NOFREE 2
/*---------------------------------------------------------------------------*/

/*---------------------------LOB Option Types -------------------------------*/
#define OCI_LOB_OPT_COMPRESS     1                    /* SECUREFILE Compress */
#define OCI_LOB_OPT_ENCRYPT      2                     /* SECUREFILE Encrypt */
#define OCI_LOB_OPT_DEDUPLICATE  4                 /* SECUREFILE Deduplicate */
#define OCI_LOB_OPT_ALLOCSIZE    8             /* SECUREFILE Allocation Size */
#define OCI_LOB_OPT_CONTENTTYPE 16                /* SECUREFILE Content Type */
#define OCI_LOB_OPT_MODTIME     32           /* SECUREFILE Modification Time */

/*------------------------   LOB Option Values ------------------------------*/
/* Compression */
#define OCI_LOB_COMPRESS_OFF  0                           /* Compression off */
#define OCI_LOB_COMPRESS_ON   1                            /* Compression on */
/* Encryption */
#define OCI_LOB_ENCRYPT_OFF   0                            /* Encryption Off */
#define OCI_LOB_ENCRYPT_ON    2                             /* Encryption On */
/* Deduplciate */
#define OCI_LOB_DEDUPLICATE_OFF 0                         /* Deduplicate Off */
#define OCI_LOB_DEDUPLICATE_ON  4                        /* Deduplicate Lobs */

/*--------------------------- OCI Statement Types ---------------------------*/

#define  OCI_STMT_UNKNOWN 0                             /* Unknown statement */
#define  OCI_STMT_SELECT  1                              /* select statement */
#define  OCI_STMT_UPDATE  2                              /* update statement */
#define  OCI_STMT_DELETE  3                              /* delete statement */
#define  OCI_STMT_INSERT  4                              /* Insert Statement */
#define  OCI_STMT_CREATE  5                              /* create statement */
#define  OCI_STMT_DROP    6                                /* drop statement */
#define  OCI_STMT_ALTER   7                               /* alter statement */
#define  OCI_STMT_BEGIN   8                   /* begin ... (pl/sql statement)*/
#define  OCI_STMT_DECLARE 9                /* declare .. (pl/sql statement ) */
#define  OCI_STMT_CALL     10                              /* call statement */
#define  OCI_STMT_MERGE    16                             /* merge statement */
/*---------------------------------------------------------------------------*/

/*--------------------------- OCI Parameter Types ---------------------------*/
#define OCI_PTYPE_UNK                 0                         /* unknown   */
#define OCI_PTYPE_TABLE               1                         /* table     */
#define OCI_PTYPE_VIEW                2                         /* view      */
#define OCI_PTYPE_PROC                3                         /* procedure */
#define OCI_PTYPE_FUNC                4                         /* function  */
#define OCI_PTYPE_PKG                 5                         /* package   */
#define OCI_PTYPE_TYPE                6                 /* user-defined type */
#define OCI_PTYPE_SYN                 7                         /* synonym   */
#define OCI_PTYPE_SEQ                 8                         /* sequence  */
#define OCI_PTYPE_COL                 9                         /* column    */
#define OCI_PTYPE_ARG                 10                        /* argument  */
#define OCI_PTYPE_LIST                11                        /* list      */
#define OCI_PTYPE_TYPE_ATTR           12    /* user-defined type's attribute */
#define OCI_PTYPE_TYPE_COLL           13        /* collection type's element */
#define OCI_PTYPE_TYPE_METHOD         14       /* user-defined type's method */
#define OCI_PTYPE_TYPE_ARG            15   /* user-defined type method's arg */
#define OCI_PTYPE_TYPE_RESULT         16/* user-defined type method's result */
#define OCI_PTYPE_SCHEMA              17                           /* schema */
#define OCI_PTYPE_DATABASE            18                         /* database */
#define OCI_PTYPE_RULE                19                             /* rule */
#define OCI_PTYPE_RULE_SET            20                         /* rule set */
#define OCI_PTYPE_EVALUATION_CONTEXT  21               /* evaluation context */
#define OCI_PTYPE_TABLE_ALIAS         22                      /* table alias */
#define OCI_PTYPE_VARIABLE_TYPE       23                    /* variable type */
#define OCI_PTYPE_NAME_VALUE          24                  /* name value pair */
#define OCI_PTYPE_HIERARCHY           25                        /* hierarchy */
#define OCI_PTYPE_ANALYTIC_VIEW       26                    /* analytic view */

/*---------------------------------------------------------------------------*/

/*----------------------------- OCI List Types ------------------------------*/
#define OCI_LTYPE_UNK           0                               /* unknown   */
#define OCI_LTYPE_COLUMN        1                             /* column list */
#define OCI_LTYPE_ARG_PROC      2                 /* procedure argument list */
#define OCI_LTYPE_ARG_FUNC      3                  /* function argument list */
#define OCI_LTYPE_SUBPRG        4                         /* subprogram list */
#define OCI_LTYPE_TYPE_ATTR     5                          /* type attribute */
#define OCI_LTYPE_TYPE_METHOD   6                             /* type method */
#define OCI_LTYPE_TYPE_ARG_PROC 7    /* type method w/o result argument list */
#define OCI_LTYPE_TYPE_ARG_FUNC 8      /* type method w/result argument list */
#define OCI_LTYPE_SCH_OBJ       9                      /* schema object list */
#define OCI_LTYPE_DB_SCH        10                   /* database schema list */
#define OCI_LTYPE_TYPE_SUBTYPE  11                           /* subtype list */
#define OCI_LTYPE_TABLE_ALIAS   12                       /* table alias list */
#define OCI_LTYPE_VARIABLE_TYPE 13                     /* variable type list */
#define OCI_LTYPE_NAME_VALUE    14                        /* name value list */
#define OCI_LTYPE_PACKAGE_TYPE  15                      /* package type list */

/*---------------------------------------------------------------------------*/

/*-------------------------- Memory Cartridge Services ---------------------*/
#define OCI_MEMORY_CLEARED  1

/*-------------------------- Pickler Cartridge Services ---------------------*/
typedef struct OCIPicklerTdsCtx OCIPicklerTdsCtx;
typedef struct OCIPicklerTds OCIPicklerTds;
typedef struct OCIPicklerImage OCIPicklerImage;
typedef struct OCIPicklerFdo OCIPicklerFdo;
typedef ub4 OCIPicklerTdsElement;

typedef struct OCIAnyData OCIAnyData;

typedef struct OCIAnyDataSet OCIAnyDataSet;
typedef struct OCIAnyDataCtx OCIAnyDataCtx;

/*---------------------------------------------------------------------------*/

/*--------------------------- User Callback Constants -----------------------*/
#define OCI_UCBTYPE_ENTRY       1                          /* entry callback */
#define OCI_UCBTYPE_EXIT        2                           /* exit callback */
#define OCI_UCBTYPE_REPLACE     3                    /* replacement callback */

/*---------------------------------------------------------------------------*/

/*--------------------- NLS service type and constance ----------------------*/
#define OCI_NLS_DAYNAME1      1                    /* Native name for Monday */
#define OCI_NLS_DAYNAME2      2                   /* Native name for Tuesday */
#define OCI_NLS_DAYNAME3      3                 /* Native name for Wednesday */
#define OCI_NLS_DAYNAME4      4                  /* Native name for Thursday */
#define OCI_NLS_DAYNAME5      5                    /* Native name for Friday */
#define OCI_NLS_DAYNAME6      6              /* Native name for for Saturday */
#define OCI_NLS_DAYNAME7      7                /* Native name for for Sunday */
#define OCI_NLS_ABDAYNAME1    8        /* Native abbreviated name for Monday */
#define OCI_NLS_ABDAYNAME2    9       /* Native abbreviated name for Tuesday */
#define OCI_NLS_ABDAYNAME3    10    /* Native abbreviated name for Wednesday */
#define OCI_NLS_ABDAYNAME4    11     /* Native abbreviated name for Thursday */
#define OCI_NLS_ABDAYNAME5    12       /* Native abbreviated name for Friday */
#define OCI_NLS_ABDAYNAME6    13 /* Native abbreviated name for for Saturday */
#define OCI_NLS_ABDAYNAME7    14   /* Native abbreviated name for for Sunday */
#define OCI_NLS_MONTHNAME1    15                  /* Native name for January */
#define OCI_NLS_MONTHNAME2    16                 /* Native name for February */
#define OCI_NLS_MONTHNAME3    17                    /* Native name for March */
#define OCI_NLS_MONTHNAME4    18                    /* Native name for April */
#define OCI_NLS_MONTHNAME5    19                      /* Native name for May */
#define OCI_NLS_MONTHNAME6    20                     /* Native name for June */
#define OCI_NLS_MONTHNAME7    21                     /* Native name for July */
#define OCI_NLS_MONTHNAME8    22                   /* Native name for August */
#define OCI_NLS_MONTHNAME9    23                /* Native name for September */
#define OCI_NLS_MONTHNAME10   24                  /* Native name for October */
#define OCI_NLS_MONTHNAME11   25                 /* Native name for November */
#define OCI_NLS_MONTHNAME12   26                 /* Native name for December */
#define OCI_NLS_ABMONTHNAME1  27      /* Native abbreviated name for January */
#define OCI_NLS_ABMONTHNAME2  28     /* Native abbreviated name for February */
#define OCI_NLS_ABMONTHNAME3  29        /* Native abbreviated name for March */
#define OCI_NLS_ABMONTHNAME4  30        /* Native abbreviated name for April */
#define OCI_NLS_ABMONTHNAME5  31          /* Native abbreviated name for May */
#define OCI_NLS_ABMONTHNAME6  32         /* Native abbreviated name for June */
#define OCI_NLS_ABMONTHNAME7  33         /* Native abbreviated name for July */
#define OCI_NLS_ABMONTHNAME8  34       /* Native abbreviated name for August */
#define OCI_NLS_ABMONTHNAME9  35    /* Native abbreviated name for September */
#define OCI_NLS_ABMONTHNAME10 36      /* Native abbreviated name for October */
#define OCI_NLS_ABMONTHNAME11 37     /* Native abbreviated name for November */
#define OCI_NLS_ABMONTHNAME12 38     /* Native abbreviated name for December */
#define OCI_NLS_YES           39   /* Native string for affirmative response */
#define OCI_NLS_NO            40                 /* Native negative response */
#define OCI_NLS_AM            41           /* Native equivalent string of AM */
#define OCI_NLS_PM            42           /* Native equivalent string of PM */
#define OCI_NLS_AD            43           /* Native equivalent string of AD */
#define OCI_NLS_BC            44           /* Native equivalent string of BC */
#define OCI_NLS_DECIMAL       45                        /* decimal character */
#define OCI_NLS_GROUP         46                          /* group separator */
#define OCI_NLS_DEBIT         47                   /* Native symbol of debit */
#define OCI_NLS_CREDIT        48                  /* Native sumbol of credit */
#define OCI_NLS_DATEFORMAT    49                       /* Oracle date format */
#define OCI_NLS_INT_CURRENCY  50            /* International currency symbol */
#define OCI_NLS_LOC_CURRENCY  51                   /* Locale currency symbol */
#define OCI_NLS_LANGUAGE      52                            /* Language name */
#define OCI_NLS_ABLANGUAGE    53           /* Abbreviation for language name */
#define OCI_NLS_TERRITORY     54                           /* Territory name */
#define OCI_NLS_CHARACTER_SET 55                       /* Character set name */
#define OCI_NLS_LINGUISTIC_NAME    56                     /* Linguistic name */
#define OCI_NLS_CALENDAR      57                            /* Calendar name */
#define OCI_NLS_DUAL_CURRENCY 78                     /* Dual currency symbol */
#define OCI_NLS_WRITINGDIR    79               /* Language writing direction */
#define OCI_NLS_ABTERRITORY   80                   /* Territory Abbreviation */
#define OCI_NLS_DDATEFORMAT   81               /* Oracle default date format */
#define OCI_NLS_DTIMEFORMAT   82               /* Oracle default time format */
#define OCI_NLS_SFDATEFORMAT  83       /* Local string formatted date format */
#define OCI_NLS_SFTIMEFORMAT  84       /* Local string formatted time format */
#define OCI_NLS_NUMGROUPING   85                   /* Number grouping fields */
#define OCI_NLS_LISTSEP       86                           /* List separator */
#define OCI_NLS_MONDECIMAL    87               /* Monetary decimal character */
#define OCI_NLS_MONGROUP      88                 /* Monetary group separator */
#define OCI_NLS_MONGROUPING   89                 /* Monetary grouping fields */
#define OCI_NLS_INT_CURRENCYSEP 90       /* International currency separator */
#define OCI_NLS_CHARSET_MAXBYTESZ 91     /* Maximum character byte size      */
#define OCI_NLS_CHARSET_FIXEDWIDTH 92    /* Fixed-width charset byte size    */
#define OCI_NLS_CHARSET_ID    93                         /* Character set id */
#define OCI_NLS_NCHARSET_ID   94                        /* NCharacter set id */

#define OCI_NLS_MAXBUFSZ   100 /* Max buffer size may need for OCINlsGetInfo */

#define OCI_NLS_BINARY            0x1           /* for the binary comparison */
#define OCI_NLS_LINGUISTIC        0x2           /* for linguistic comparison */
#define OCI_NLS_CASE_INSENSITIVE  0x10    /* for case-insensitive comparison */

#define OCI_NLS_UPPERCASE         0x20               /* convert to uppercase */
#define OCI_NLS_LOWERCASE         0x40               /* convert to lowercase */

#define OCI_NLS_CS_IANA_TO_ORA   0   /* Map charset name from IANA to Oracle */
#define OCI_NLS_CS_ORA_TO_IANA   1   /* Map charset name from Oracle to IANA */
#define OCI_NLS_LANG_ISO_TO_ORA  2   /* Map language name from ISO to Oracle */
#define OCI_NLS_LANG_ORA_TO_ISO  3   /* Map language name from Oracle to ISO */
#define OCI_NLS_TERR_ISO_TO_ORA  4   /* Map territory name from ISO to Oracle*/
#define OCI_NLS_TERR_ORA_TO_ISO  5   /* Map territory name from Oracle to ISO*/
#define OCI_NLS_TERR_ISO3_TO_ORA 6   /* Map territory name from 3-letter ISO */
                                     /* abbreviation to Oracle               */
#define OCI_NLS_TERR_ORA_TO_ISO3 7   /* Map territory name from Oracle to    */
                                     /* 3-letter ISO abbreviation            */
#define OCI_NLS_LOCALE_A2_ISO_TO_ORA 8
                                      /*Map locale name from A2 ISO to oracle*/
#define OCI_NLS_LOCALE_A2_ORA_TO_ISO 9
                                      /*Map locale name from oracle to A2 ISO*/

typedef struct OCIMsg  OCIMsg;
typedef ub4            OCIWchar;

#define OCI_XMLTYPE_CREATE_OCISTRING 1
#define OCI_XMLTYPE_CREATE_CLOB      2
#define OCI_XMLTYPE_CREATE_BLOB      3

/*------------------------- Kerber Authentication Modes ---------------------*/
#define OCI_KERBCRED_PROXY               1 /* Apply Kerberos Creds for Proxy */
#define OCI_KERBCRED_CLIENT_IDENTIFIER   2/*Apply Creds for Secure Client ID */

/*------------------------- Database Startup Flags --------------------------*/
#define OCI_DBSTARTUPFLAG_FORCE 0x00000001  /* Abort running instance, start */
#define OCI_DBSTARTUPFLAG_RESTRICT 0x00000002      /* Restrict access to DBA */

/*------------------------- Database Shutdown Modes -------------------------*/
#define OCI_DBSHUTDOWN_TRANSACTIONAL      1 /* Wait for all the transactions */
#define OCI_DBSHUTDOWN_TRANSACTIONAL_LOCAL 2  /* Wait for local transactions */
#define OCI_DBSHUTDOWN_IMMEDIATE           3      /* Terminate and roll back */
#define OCI_DBSHUTDOWN_ABORT              4 /* Terminate and don't roll back */
#define OCI_DBSHUTDOWN_FINAL              5              /* Orderly shutdown */

/*---------------------- OCIIOV structure definitions -----------------------*/
struct OCIIOV
{
 void     *bfp;                            /* The Pointer to the data buffer */
 ub4       bfl;                                 /* Length of the Data Buffer */
};
typedef struct OCIIOV OCIIOV;

/*-----------------Macros to get the various version number components------ */
/* Note: These macros are intended to be used in conjunction with the encoded 
 * database version number returned by OCIServerRelease2() to extract each of 
 * the 5 digits of the database version.
 *
 * These macros are named according to the new release naming scheme started 
 * with 18.1. The 5 digits extracted from the version number are: 
 * - feature release 
 * - release update
 * - release update revision
 * - increment
 * - extension
 *
 * Even though the naming is based on the new convention, for convenience, 
 * the same macros can be used to extract the corresponding 5 digits of the 
 * database version from an encoded version number returned by 
 * OCIServerRelease() from a pre 18.1 database (which used a different encoding 
 * scheme). In that case though, the digits correspond to the following:
 * - version number
 * - release number
 * - update number
 * - porting release number
 * - porting update number
 */

#define OCI_SERVER_RELEASE_REL(v) ((sword)(((v) >> 24) & 0x000000FF))
                                                      /* old: version number */
                                                     /* new: feature release */
#define OCI_SERVER_RELEASE_REL_UPD(v)\
  ((OCI_SERVER_RELEASE_REL(v) < 19)? \
   ((sword)(((v) >> 20) & 0x0000000F)):\
   ((sword)(((v) >> 16) & 0x000000FF)))               /* old: release number */
                                                      /* new: release update */

#define OCI_SERVER_RELEASE_REL_UPD_REV(v)\
  ((OCI_SERVER_RELEASE_REL(v) < 19)? \
   ((sword)(((v) >> 12) & 0x000000FF)):\
   ((sword)(((v) >> 12) & 0x0000000F)))
                                                       /* old: update number */
                                             /* new: release update revision */

#define OCI_SERVER_RELEASE_REL_UPD_INC(v)\
  ((OCI_SERVER_RELEASE_REL(v) < 19)? \
   ((sword)(((v) >> 8) & 0x0000000F)):\
   ((sword)(((v) >> 4) & 0x0000000FF)))
                                              /* old: porting release number */
                                            /* new: release update increment */

#define OCI_SERVER_RELEASE_EXT(v)\
  ((OCI_SERVER_RELEASE_REL(v) < 19)? \
   ((sword)(((v) >> 0) & 0x000000FF)):\
   ((sword)(((v) >> 0) & 0x0000000F)))    
                                               /* old: porting update number */
                                                           /* new: extension */
/*--------------------------------------------------------------------------- 
                     PRIVATE TYPES AND CONSTANTS 
  ---------------------------------------------------------------------------*/
 
/* None */

/*--------------------------------------------------------------------------- 
                           PUBLIC FUNCTIONS 
  ---------------------------------------------------------------------------*/

/* see ociap.h or ocikp.h */
 
/*--------------------------------------------------------------------------- 
                          PRIVATE FUNCTIONS 
  ---------------------------------------------------------------------------*/

/* None */

 
#endif                                              /* OCI_ORACLE */


/* more includes */

#ifndef OCI1_ORACLE
#include <oci1.h>
#endif

#ifndef ORO_ORACLE
#include <oro.h>
#endif

#ifndef ORI_ORACLE
#include <ori.h>
#endif

#ifndef ORL_ORACLE
#include <orl.h>
