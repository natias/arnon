	0x13F,
	0x141,
	0x149,
	0x14A,
	0x17F,
	0x180,
	0x1C4,
	0x1CD,
	0x1F1,
	0x1F4,
	0x2D8,
	0x2DE,
	0x37A,
	0x37B,
	0x384,
	0x385,
	0x3D0,
	0x3D3,
	0x3D5,
	0x3D7,
	0x3F0,
	0x3F3,
	0x3F4,
	0x3F6,
	0x3F9,
	0x3FA,
	0x587,
	0x588,
	0x675,
	0x679,
	0xE33,
	0xE34,
	0xEB3,
	0xEB4,
	0xEDC,
	0xEDE,
	0xF77,
	0xF78,
	0xF79,
	0xF7A,
	0x1E9A,
	0x1E9B,
	0x1FBD,
	0x1FBE,
	0x1FBF,
	0x1FC1,
	0x1FFE,
	0x1FFF,
	0x2002,
	0x2007,
	0x2008,
	0x200B,
	0x2017,
	0x2018,
	0x2024,
	0x2027,
	0x2033,
	0x2035,
	0x2036,
	0x2038,
	0x203C,
	0x203D,
	0x203E,
	0x203F,
	0x2047,
	0x204A,
	0x2057,
	0x2058,
	0x205F,
	0x2060,
	0x20A8,
	0x20A9,
	0x2100,
	0x2102,
	0x2103,
	0x2104,
	0x2105,
	0x2108,
	0x2109,
	0x210A,
	0x2116,
	0x2117,
	0x2121,
	0x2122,
	0x2135,
	0x2139,
	0x213B,
	0x213C,
	0x2160,
	0x2180,
	0x222C,
	0x222E,
	0x222F,
	0x2231,
	0x2474,
	0x24B6,
	0x2A0C,
	0x2A0D,
	0x2A74,
	0x2A77,
	0x2E9F,
	0x2EA0,
	0x2EF3,
	0x2EF4,
	0x2F00,
	0x2FD6,
	0x3036,
	0x3037,
	0x3038,
	0x303B,
	0x309B,
	0x309D,
	0x3131,
	0x318F,
	0x3200,
	0x321F,
	0x3220,
	0x3244,
	0x32C0,
	0x32CC,
	0x3358,
	0x3371,
	0x33E0,
	0x33FF,
	0xFB00,
	0xFB07,
	0xFB13,
	0xFB18,
	0xFB4F,
	0xFB50,
	0xFE49,
	0xFE50,
	0x1F100,
	0x1F10B,
	0x1F110,
	0x1F12B,
	0x1F240,
	0x1F249
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_DT__COM_invlist[] = {  /* for EBCDIC 037 */
	147,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x9D,
	0x9E,
	0xA0,
	0xA1,
	0xBC,
	0xBF,
	0x132,
	0x134,
	0x13F,
	0x141,
	0x149,
	0x14A,
	0x17F,
	0x180,
	0x1C4,
	0x1CD,
	0x1F1,
	0x1F4,
	0x2D8,
	0x2DE,
	0x37A,
	0x37B,
	0x384,
	0x385,
	0x3D0,
	0x3D3,
	0x3D5,
	0x3D7,
	0x3F0,
	0x3F3,
	0x3F4,
	0x3F6,
	0x3F9,
	0x3FA,
	0x587,
	0x588,
	0x675,
	0x679,
	0xE33,
	0xE34,
	0xEB3,
	0xEB4,
	0xEDC,
	0xEDE,
	0xF77,
	0xF78,
	0xF79,
	0xF7A,
	0x1E9A,
	0x1E9B,
	0x1FBD,
	0x1FBE,
	0x1FBF,
	0x1FC1,
	0x1FFE,
	0x1FFF,
	0x2002,
	0x2007,
	0x2008,
	0x200B,
	0x2017,
	0x2018,
	0x2024,
	0x2027,
	0x2033,
	0x2035,
	0x2036,
	0x2038,
	0x203C,
	0x203D,
	0x203E,
	0x203F,
	0x2047,
	0x204A,
	0x2057,
	0x2058,
	0x205F,
	0x2060,
	0x20A8,
	0x20A9,
	0x2100,
	0x2102,
	0x2103,
	0x2104,
	0x2105,
	0x2108,
	0x2109,
	0x210A,
	0x2116,
	0x2117,
	0x2121,
	0x2122,
	0x2135,
	0x2139,
	0x213B,
	0x213C,
	0x2160,
	0x2180,
	0x222C,
	0x222E,
	0x222F,
	0x2231,
	0x2474,
	0x24B6,
	0x2A0C,
	0x2A0D,
	0x2A74,
	0x2A77,
	0x2E9F,
	0x2EA0,
	0x2EF3,
	0x2EF4,
	0x2F00,
	0x2FD6,
	0x3036,
	0x3037,
	0x3038,
	0x303B,
	0x309B,
	0x309D,
	0x3131,
	0x318F,
	0x3200,
	0x321F,
	0x3220,
	0x3244,
	0x32C0,
	0x32CC,
	0x3358,
	0x3371,
	0x33E0,
	0x33FF,
	0xFB00,
	0xFB07,
	0xFB13,
	0xFB18,
	0xFB4F,
	0xFB50,
	0xFE49,
	0xFE50,
	0x1F100,
	0x1F10B,
	0x1F110,
	0x1F12B,
	0x1F240,
	0x1F249
};

#  endif	/* EBCDIC 037 */

static const UV UNI_DT__ENC_invlist[] = {  /* for all charsets */
	17,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2460,
	0x2474,
	0x24B6,
	0x24EB,
	0x3244,
	0x3248,
	0x3251,
	0x327F,
	0x3280,
	0x32C0,
	0x32D0,
	0x32FF,
	0x1F12B,
	0x1F12F,
	0x1F250,
	0x1F252
};

static const UV UNI_DT__FIN_invlist[] = {  /* for all charsets */
	227,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xFB51,
	0xFB52,
	0xFB53,
	0xFB54,
	0xFB57,
	0xFB58,
	0xFB5B,
	0xFB5C,
	0xFB5F,
	0xFB60,
	0xFB63,
	0xFB64,
	0xFB67,
	0xFB68,
	0xFB6B,
	0xFB6C,
	0xFB6F,
	0xFB70,
	0xFB73,
	0xFB74,
	0xFB77,
	0xFB78,
	0xFB7B,
	0xFB7C,
	0xFB7F,
	0xFB80,
	0xFB83,
	0xFB84,
	0xFB85,
	0xFB86,
	0xFB87,
	0xFB88,
	0xFB89,
	0xFB8A,
	0xFB8B,
	0xFB8C,
	0xFB8D,
	0xFB8E,
	0xFB8F,
	0xFB90,
	0xFB93,
	0xFB94,
	0xFB97,
	0xFB98,
	0xFB9B,
	0xFB9C,
	0xFB9F,
	0xFBA0,
	0xFBA1,
	0xFBA2,
	0xFBA5,
	0xFBA6,
	0xFBA7,
	0xFBA8,
	0xFBAB,
	0xFBAC,
	0xFBAF,
	0xFBB0,
	0xFBB1,
	0xFBB2,
	0xFBD4,
	0xFBD5,
	0xFBD8,
	0xFBD9,
	0xFBDA,
	0xFBDB,
	0xFBDC,
	0xFBDD,
	0xFBDF,
	0xFBE0,
	0xFBE1,
	0xFBE2,
	0xFBE3,
	0xFBE4,
	0xFBE5,
	0xFBE6,
	0xFBEB,
	0xFBEC,
	0xFBED,
	0xFBEE,
	0xFBEF,
	0xFBF0,
	0xFBF1,
	0xFBF2,
	0xFBF3,
	0xFBF4,
	0xFBF5,
	0xFBF6,
	0xFBF7,
	0xFBF8,
	0xFBFA,
	0xFBFB,
	0xFBFD,
	0xFBFE,
	0xFC64,
	0xFC97,
	0xFD11,
	0xFD2D,
	0xFD3C,
	0xFD3D,
	0xFD51,
	0xFD52,
	0xFD58,
	0xFD59,
	0xFD5A,
	0xFD5C,
	0xFD5E,
	0xFD60,
	0xFD62,
	0xFD63,
	0xFD64,
	0xFD65,
	0xFD66,
	0xFD68,
	0xFD69,
	0xFD6B,
	0xFD6C,
	0xFD6D,
	0xFD6E,
	0xFD70,
	0xFD71,
	0xFD72,
	0xFD74,
	0xFD77,
	0xFD78,
	0xFD7D,
	0xFD7E,
	0xFD83,
	0xFD84,
	0xFD86,
	0xFD87,
	0xFD88,
	0xFD8B,
	0xFD8C,
	0xFD96,
	0xFD98,
	0xFD99,
	0xFD9D,
	0xFD9E,
	0xFDB4,
	0xFDB6,
	0xFDB8,
	0xFDB9,
	0xFDBA,
	0xFDBB,
	0xFDC3,
	0xFDC6,
	0xFDC8,
	0xFE82,
	0xFE83,
	0xFE84,
	0xFE85,
	0xFE86,
	0xFE87,
	0xFE88,
	0xFE89,
	0xFE8A,
	0xFE8B,
	0xFE8E,
	0xFE8F,
	0xFE90,
	0xFE91,
	0xFE94,
	0xFE95,
	0xFE96,
	0xFE97,
	0xFE9A,
	0xFE9B,
	0xFE9E,
	0xFE9F,
	0xFEA2,
	0xFEA3,
	0xFEA6,
	0xFEA7,
	0xFEAA,
	0xFEAB,
	0xFEAC,
	0xFEAD,
	0xFEAE,
	0xFEAF,
	0xFEB0,
	0xFEB1,
	0xFEB2,
	0xFEB3,
	0xFEB6,
	0xFEB7,
	0xFEBA,
	0xFEBB,
	0xFEBE,
	0xFEBF,
	0xFEC2,
	0xFEC3,
	0xFEC6,
	0xFEC7,
	0xFECA,
	0xFECB,
	0xFECE,
	0xFECF,
	0xFED2,
	0xFED3,
	0xFED6,
	0xFED7,
	0xFEDA,
	0xFEDB,
	0xFEDE,
	0xFEDF,
	0xFEE2,
	0xFEE3,
	0xFEE6,
	0xFEE7,
	0xFEEA,
	0xFEEB,
	0xFEEE,
	0xFEEF,
	0xFEF0,
	0xFEF1,
	0xFEF2,
	0xFEF3,
	0xFEF6,
	0xFEF7,
	0xFEF8,
	0xFEF9,
	0xFEFA,
	0xFEFB,
	0xFEFC,
	0xFEFD
};

static const UV UNI_DT__FONT_invlist[] = {  /* for all charsets */
	137,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2102,
	0x2103,
	0x210A,
	0x2114,
	0x2115,
	0x2116,
	0x2119,
	0x211E,
	0x2124,
	0x2125,
	0x2128,
	0x2129,
	0x212C,
	0x212E,
	0x212F,
	0x2132,
	0x2133,
	0x2135,
	0x2139,
	0x213A,
	0x213C,
	0x2141,
	0x2145,
	0x214A,
	0xFB20,
	0xFB2A,
	0x1D400,
	0x1D455,
	0x1D456,
	0x1D49D,
	0x1D49E,
	0x1D4A0,
	0x1D4A2,
	0x1D4A3,
	0x1D4A5,
	0x1D4A7,
	0x1D4A9,
	0x1D4AD,
	0x1D4AE,
	0x1D4BA,
	0x1D4BB,
	0x1D4BC,
	0x1D4BD,
	0x1D4C4,
	0x1D4C5,
	0x1D506,
	0x1D507,
	0x1D50B,
	0x1D50D,
	0x1D515,
	0x1D516,
	0x1D51D,
	0x1D51E,
	0x1D53A,
	0x1D53B,
	0x1D53F,
	0x1D540,
	0x1D545,
	0x1D546,
	0x1D547,
	0x1D54A,
	0x1D551,
	0x1D552,
	0x1D6A6,
	0x1D6A8,
	0x1D7CC,
	0x1D7CE,
	0x1D800,
	0x1EE00,
	0x1EE04,
	0x1EE05,
	0x1EE20,
	0x1EE21,
	0x1EE23,
	0x1EE24,
	0x1EE25,
	0x1EE27,
	0x1EE28,
	0x1EE29,
	0x1EE33,
	0x1EE34,
	0x1EE38,
	0x1EE39,
	0x1EE3A,
	0x1EE3B,
	0x1EE3C,
	0x1EE42,
	0x1EE43,
	0x1EE47,
	0x1EE48,
	0x1EE49,
	0x1EE4A,
	0x1EE4B,
	0x1EE4C,
	0x1EE4D,
	0x1EE50,
	0x1EE51,
	0x1EE53,
	0x1EE54,
	0x1EE55,
	0x1EE57,
	0x1EE58,
	0x1EE59,
	0x1EE5A,
	0x1EE5B,
	0x1EE5C,
	0x1EE5D,
	0x1EE5E,
	0x1EE5F,
	0x1EE60,
	0x1EE61,
	0x1EE63,
	0x1EE64,
	0x1EE65,
	0x1EE67,
	0x1EE6B,
	0x1EE6C,
	0x1EE73,
	0x1EE74,
	0x1EE78,
	0x1EE79,
	0x1EE7D,
	0x1EE7E,
	0x1EE7F,
	0x1EE80,
	0x1EE8A,
	0x1EE8B,
	0x1EE9C,
	0x1EEA1,
	0x1EEA4,
	0x1EEA5,
	0x1EEAA,
	0x1EEAB,
	0x1EEBC,
	0x1FBF0,
	0x1FBFA
};

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_DT__FRA_invlist[] = {  /* for ASCII/Latin1 */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xBC,
	0xBF,
	0x2150,
	0x2160,
	0x2189,
	0x218A
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_DT__FRA_invlist[] = {  /* for EBCDIC 1047 */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xB7,
	0xBA,
	0x2150,
	0x2160,
	0x2189,
	0x218A
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_DT__FRA_invlist[] = {  /* for EBCDIC 037 */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xB7,
	0xBA,
	0x2150,
	0x2160,
	0x2189,
	0x218A
};

#  endif	/* EBCDIC 037 */

static const UV UNI_DT__INIT_invlist[] = {  /* for all charsets */
	151,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xFB54,
	0xFB55,
	0xFB58,
	0xFB59,
	0xFB5C,
	0xFB5D,
	0xFB60,
	0xFB61,
	0xFB64,
	0xFB65,
	0xFB68,
	0xFB69,
	0xFB6C,
	0xFB6D,
	0xFB70,
	0xFB71,
	0xFB74,
	0xFB75,
	0xFB78,
	0xFB79,
	0xFB7C,
	0xFB7D,
	0xFB80,
	0xFB81,
	0xFB90,
	0xFB91,
	0xFB94,
	0xFB95,
	0xFB98,
	0xFB99,
	0xFB9C,
	0xFB9D,
	0xFBA2,
	0xFBA3,
	0xFBA8,
	0xFBA9,
	0xFBAC,
	0xFBAD,
	0xFBD5,
	0xFBD6,
	0xFBE6,
	0xFBE7,
	0xFBE8,
	0xFBE9,
	0xFBF8,
	0xFBF9,
	0xFBFB,
	0xFBFC,
	0xFBFE,
	0xFBFF,
	0xFC97,
	0xFCDF,
	0xFD2D,
	0xFD34,
	0xFD50,
	0xFD51,
	0xFD52,
	0xFD58,
	0xFD59,
	0xFD5A,
	0xFD5C,
	0xFD5E,
	0xFD60,
	0xFD62,
	0xFD63,
	0xFD64,
	0xFD65,
	0xFD66,
	0xFD68,
	0xFD69,
	0xFD6B,
	0xFD6C,
	0xFD6D,
	0xFD6E,
	0xFD70,
	0xFD71,
	0xFD72,
	0xFD74,
	0xFD77,
	0xFD78,
	0xFD7D,
	0xFD7E,
	0xFD83,
	0xFD84,
	0xFD86,
	0xFD87,
	0xFD88,
	0xFD8B,
	0xFD8C,
	0xFD90,
	0xFD92,
	0xFD96,
	0xFD98,
	0xFD99,
	0xFD9D,
	0xFD9E,
	0xFDB4,
	0xFDB6,
	0xFDB8,
	0xFDB9,
	0xFDBA,
	0xFDBB,
	0xFDC3,
	0xFDC6,
	0xFE8B,
	0xFE8C,
	0xFE91,
	0xFE92,
	0xFE97,
	0xFE98,
	0xFE9B,
	0xFE9C,
	0xFE9F,
	0xFEA0,
	0xFEA3,
	0xFEA4,
	0xFEA7,
	0xFEA8,
	0xFEB3,
	0xFEB4,
	0xFEB7,
	0xFEB8,
	0xFEBB,
	0xFEBC,
	0xFEBF,
	0xFEC0,
	0xFEC3,
	0xFEC4,
	0xFEC7,
	0xFEC8,
	0xFECB,
	0xFECC,
	0xFECF,
	0xFED0,
	0xFED3,
	0xFED4,
	0xFED7,
	0xFED8,
	0xFEDB,
	0xFEDC,
	0xFEDF,
	0xFEE0,
	0xFEE3,
	0xFEE4,
	0xFEE7,
	0xFEE8,
	0xFEEB,
	0xFEEC,
	0xFEF3,
	0xFEF4
};

static const UV UNI_DT__ISO_invlist[] = {  /* for all charsets */
	197,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xFB50,
	0xFB51,
	0xFB52,
	0xFB53,
	0xFB56,
	0xFB57,
	0xFB5A,
	0xFB5B,
	0xFB5E,
	0xFB5F,
	0xFB62,
	0xFB63,
	0xFB66,
	0xFB67,
	0xFB6A,
	0xFB6B,
	0xFB6E,
	0xFB6F,
	0xFB72,
	0xFB73,
	0xFB76,
	0xFB77,
	0xFB7A,
	0xFB7B,
	0xFB7E,
	0xFB7F,
	0xFB82,
	0xFB83,
	0xFB84,
	0xFB85,
	0xFB86,
	0xFB87,
	0xFB88,
	0xFB89,
	0xFB8A,
	0xFB8B,
	0xFB8C,
	0xFB8D,
	0xFB8E,
	0xFB8F,
	0xFB92,
	0xFB93,
	0xFB96,
	0xFB97,
	0xFB9A,
	0xFB9B,
	0xFB9E,
	0xFB9F,
	0xFBA0,
	0xFBA1,
	0xFBA4,
	0xFBA5,
	0xFBA6,
	0xFBA7,
	0xFBAA,
	0xFBAB,
	0xFBAE,
	0xFBAF,
	0xFBB0,
	0xFBB1,
	0xFBD3,
	0xFBD4,
	0xFBD7,
	0xFBD8,
	0xFBD9,
	0xFBDA,
	0xFBDB,
	0xFBDC,
	0xFBDD,
	0xFBDF,
	0xFBE0,
