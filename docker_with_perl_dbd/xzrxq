                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="161">the #GdkPixbuf into which to render the results</doc>
            <type name="Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
          <parameter name="dest_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="162">the left coordinate for region to render</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="dest_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="163">the top coordinate for region to render</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="dest_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="164">the width of the region to render</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="dest_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="165">the height of the region to render</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="offset_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="166">the offset in the X direction (currently rounded to an integer)</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="offset_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="167">the offset in the Y direction (currently rounded to an integer)</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="scale_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="168">the scale factor in the X direction</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="scale_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="169">the scale factor in the Y direction</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="interp_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="170">the interpolation type for the transformation.</doc>
            <type name="InterpType" c:type="GdkInterpType"/>
          </parameter>
          <parameter name="overall_alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="171">overall alpha for source image (0..255)</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="check_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="172">the X offset for the checkboard (origin of checkboard is at -@check_x, -@check_y)</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="check_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="173">the Y offset for the checkboard</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="check_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="174">the size of checks in the checkboard (must be a power of two)</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="color1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="175">the color of check at upper left</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="color2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="176">the color of the other check</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="composite_color_simple"
              c:identifier="gdk_pixbuf_composite_color_simple">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf-scale.c"
             line="292">Creates a new pixbuf by scaling `src` to `dest_width` x `dest_height`
and alpha blending the result with a checkboard of colors `color1`
and `color2`.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-transform.h"
                         line="149"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf-scale.c"
               line="307">the new pixbuf</doc>
          <type name="Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="src" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="294">a #GdkPixbuf</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
          <parameter name="dest_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="295">the width of destination image</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="dest_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="296">the height of destination image</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="interp_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="297">the interpolation type for the transformation.</doc>
            <type name="InterpType" c:type="GdkInterpType"/>
          </parameter>
          <parameter name="overall_alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="298">overall alpha for source image (0..255)</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="check_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="299">the size of checks in the checkboard (must be a power of two)</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="color1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="300">the color of check at upper left</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="color2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="301">the color of the other check</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy" c:identifier="gdk_pixbuf_copy">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="643">Creates a new `GdkPixbuf` with a copy of the information in the specified
`pixbuf`.

Note that this does not copy the options set on the original `GdkPixbuf`,
use gdk_pixbuf_copy_options() for this.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="218"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="653">A newly-created pixbuf</doc>
          <type name="Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="645">A pixbuf.</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="copy_area" c:identifier="gdk_pixbuf_copy_area">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf-util.c"
             line="121">Copies a rectangular area from `src_pixbuf` to `dest_pixbuf`.

Conversion of pixbuf formats is done automatically.

If the source rectangle overlaps the destination rectangle on the
same pixbuf, it will be overwritten during the copy operation.
Therefore, you can not use this function to scroll a pixbuf.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="487"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="src_pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-util.c"
                 line="123">Source pixbuf.</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
          <parameter name="src_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-util.c"
                 line="124">Source X coordinate within @src_pixbuf.</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="src_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-util.c"
                 line="125">Source Y coordinate within @src_pixbuf.</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-util.c"
                 line="126">Width of the area to copy.</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-util.c"
                 line="127">Height of the area to copy.</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="dest_pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-util.c"
                 line="128">Destination pixbuf.</doc>
            <type name="Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
          <parameter name="dest_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-util.c"
                 line="129">X coordinate within @dest_pixbuf.</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="dest_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-util.c"
                 line="130">Y coordinate within @dest_pixbuf.</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_options"
              c:identifier="gdk_pixbuf_copy_options"
              version="2.36">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="1311">Copies the key/value pair options attached to a `GdkPixbuf` to another
`GdkPixbuf`.

This is useful to keep original metadata after having manipulated
a file. However be careful to remove metadata which you've already
applied, such as the "orientation" option after rotating the image.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="518"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="1323">`TRUE` on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="src_pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="1313">the source pixbuf</doc>
            <type name="Pixbuf" c:type="GdkPixbuf*"/>
          </instance-parameter>
          <parameter name="dest_pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="1314">the destination pixbuf</doc>
            <type name="Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fill" c:identifier="gdk_pixbuf_fill">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="1043">Clears a pixbuf to the given RGBA value, converting the RGBA value into
the pixbuf's pixel format.

The alpha component will be ignored if the pixbuf doesn't have an alpha
channel.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="306"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="1045">a `GdkPixbuf`</doc>
            <type name="Pixbuf" c:type="GdkPixbuf*"/>
          </instance-parameter>
          <parameter name="pixel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="1046">RGBA pixel to used to clear (`0xffffffff` is opaque white,
  `0x00000000` transparent black)</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="flip" c:identifier="gdk_pixbuf_flip" version="2.6">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf-scale.c"
             line="446">Flips a pixbuf horizontally or vertically and returns the
result in a new pixbuf.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-transform.h"
                         line="162"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf-scale.c"
               line="454">the new pixbuf</doc>
          <type name="Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="src" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="448">a #GdkPixbuf</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
          <parameter name="horizontal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="449">`TRUE` to flip horizontally, `FALSE` to flip vertically</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_bits_per_sample"
              c:identifier="gdk_pixbuf_get_bits_per_sample"
              glib:get-property="bits-per-sample">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="795">Queries the number of bits per color sample in a pixbuf.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="180"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="801">Number of bits per color sample.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="797">A pixbuf.</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_byte_length"
              c:identifier="gdk_pixbuf_get_byte_length"
              version="2.26">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="1008">Returns the length of the pixel data, in bytes.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="190"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="1014">The length of the pixel data.</doc>
          <type name="gsize" c:type="gsize"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="1010">A pixbuf</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_colorspace"
              c:identifier="gdk_pixbuf_get_colorspace"
              glib:get-property="colorspace">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="747">Queries the color space of a pixbuf.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="174"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="753">Color space.</doc>
          <type name="Colorspace" c:type="GdkColorspace"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="749">A pixbuf.</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_has_alpha"
              c:identifier="gdk_pixbuf_get_has_alpha"
              glib:get-property="has-alpha">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="779">Queries whether a pixbuf has an alpha channel (opacity information).</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="178"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="785">`TRUE` if it has an alpha channel, `FALSE` otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="781">A pixbuf.</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height"
              c:identifier="gdk_pixbuf_get_height"
              glib:get-property="height">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="975">Queries the height of a pixbuf.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="186"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="981">Height in pixels.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="977">A pixbuf.</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_channels"
              c:identifier="gdk_pixbuf_get_n_channels"
              glib:get-property="n-channels">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="763">Queries the number of channels of a pixbuf.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="176"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="769">Number of channels.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="765">A pixbuf.</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_option" c:identifier="gdk_pixbuf_get_option">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="1111">Looks up @key in the list of options that may have been attached to the
@pixbuf when it was loaded, or that may have been attached by another
function using gdk_pixbuf_set_option().

For instance, the ANI loader provides "Title" and "Artist" options.
The ICO, XBM, and XPM loaders provide "x_hot" and "y_hot" hot-spot
options for cursor definitions. The PNG loader provides the tEXt ancillary
chunk key/value pairs as options. Since 2.12, the TIFF and JPEG loaders
return an "orientation" option string that corresponds to the embedded
TIFF/Exif orientation tag (if present). Since 2.32, the TIFF loader sets
the "multipage" option string to "yes" when a multi-page TIFF is loaded.
Since 2.32 the JPEG and PNG loaders set "x-dpi" and "y-dpi" if the file
contains image density information in dots per inch.
Since 2.36.6, the JPEG loader sets the "comment" option with the comment
EXIF tag.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="510"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="1132">the value associated with `key`</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="1113">a `GdkPixbuf`</doc>
            <type name="Pixbuf" c:type="GdkPixbuf*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="1114">a nul-terminated string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_options"
              c:identifier="gdk_pixbuf_get_options"
              version="2.32">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="1156">Returns a `GHashTable` with a list of all the options that may have been
attached to the `pixbuf` when it was loaded, or that may have been
attached by another function using [method@GdkPixbuf.Pixbuf.set_option].</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="516"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="1164">a #GHashTable
  of key/values pairs</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="utf8"/>
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="1158">a `GdkPixbuf`</doc>
            <type name="Pixbuf" c:type="GdkPixbuf*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pixels"
              c:identifier="gdk_pixbuf_get_pixels"
              shadowed-by="get_pixels_with_length"
              glib:get-property="pixels">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="811">Queries a pointer to the pixel data of a pixbuf.

This function will cause an implicit copy of the pixbuf data if the
pixbuf was created from read-only data.

Please see the section on [image data](class.Pixbuf.html#image-data) for information
about how the pixel data is stored in memory.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="182"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="823">A pointer to the pixbuf's pixel data.</doc>
          <array zero-terminated="0" c:type="guchar*">
            <type name="guint8" c:type="guchar"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="813">A pixbuf.</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pixels_with_length"
              c:identifier="gdk_pixbuf_get_pixels_with_length"
              shadows="get_pixels"
              version="2.26">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="857">Queries a pointer to the pixel data of a pixbuf.

This function will cause an implicit copy of the pixbuf data if the
pixbuf was created from read-only data.

Please see the section on [image data](class.Pixbuf.html#image-data) for information
about how the pixel data is stored in memory.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="193"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="870">A pointer to the pixbuf's
pixel data.</doc>
          <array length="0" zero-terminated="0" c:type="guchar*">
            <type name="guint8" c:type="guchar"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="859">A pixbuf.</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="860">The length of the binary data.</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_rowstride"
              c:identifier="gdk_pixbuf_get_rowstride"
              glib:get-property="rowstride">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="991">Queries the rowstride of a pixbuf, which is the number of bytes between
the start of a row and the start of the next row.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="188"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="998">Distance between row starts.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="993">A pixbuf.</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="gdk_pixbuf_get_width"
              glib:get-property="width">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="959">Queries the width of a pixbuf.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="184"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="965">Width in pixels.</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="961">A pixbuf.</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="new_subpixbuf" c:identifier="gdk_pixbuf_new_subpixbuf">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="685">Creates a new pixbuf which represents a sub-region of `src_pixbuf`.

The new pixbuf shares its pixels with the original pixbuf, so
writing to one affects both.  The new pixbuf holds a reference to
`src_pixbuf`, so `src_pixbuf` will not be finalized until the new
pixbuf is finalized.

Note that if `src_pixbuf` is read-only, this function will force it
to be mutable.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="222"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="703">a new pixbuf</doc>
          <type name="Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="src_pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="687">a `GdkPixbuf`</doc>
            <type name="Pixbuf" c:type="GdkPixbuf*"/>
          </instance-parameter>
          <parameter name="src_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="688">X coord in @src_pixbuf</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="src_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="689">Y coord in @src_pixbuf</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="690">width of region in @src_pixbuf</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="691">height of region in @src_pixbuf</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_pixel_bytes"
              c:identifier="gdk_pixbuf_read_pixel_bytes"
              version="2.32">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="924">Provides a #GBytes buffer containing the raw pixel data; the data
must not be modified.

This function allows skipping the implicit copy that must be made
if gdk_pixbuf_get_pixels() is called on a read-only pixbuf.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="199"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="934">A new reference to a read-only copy of
  the pixel data.  Note that for mutable pixbufs, this function will
  incur a one-time copy of the pixel data for conversion into the
  returned #GBytes.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="926">A pixbuf</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="read_pixels"
              c:identifier="gdk_pixbuf_read_pixels"
              version="2.32">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="890">Provides a read-only pointer to the raw pixel data.

This function allows skipping the implicit copy that must be made
if gdk_pixbuf_get_pixels() is called on a read-only pixbuf.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="197"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="899">a read-only pointer to the raw pixel data</doc>
          <type name="guint8" c:type="const guint8*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="892">A pixbuf</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ref"
              c:identifier="gdk_pixbuf_ref"
              introspectable="0"
              deprecated="1"
              deprecated-version="2.0">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="414">Adds a reference to a pixbuf.</doc>
        <doc-deprecated xml:space="preserve">Use g_object_ref().</doc-deprecated>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="166"/>
        <return-value>
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="420">The same as the @pixbuf argument.</doc>
          <type name="Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="416">A pixbuf.</doc>
            <type name="Pixbuf" c:type="GdkPixbuf*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_option"
              c:identifier="gdk_pixbuf_remove_option"
              version="2.36">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf.c"
             line="1191">Removes the key/value pair option attached to a `GdkPixbuf`.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="513"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf.c"
               line="1198">`TRUE` if an option was removed, `FALSE` if not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="1193">a `GdkPixbuf`</doc>
            <type name="Pixbuf" c:type="GdkPixbuf*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf.c"
                 line="1194">a nul-terminated string representing the key to remove.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="rotate_simple"
              c:identifier="gdk_pixbuf_rotate_simple"
              version="2.6">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf-scale.c"
             line="340">Rotates a pixbuf by a multiple of 90 degrees, and returns the
result in a new pixbuf.

If `angle` is 0, this function will return a copy of `src`.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-transform.h"
                         line="159"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf-scale.c"
               line="350">the new pixbuf</doc>
          <type name="Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="src" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="342">a #GdkPixbuf</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
          <parameter name="angle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-scale.c"
                 line="343">the angle to rotate by</doc>
            <type name="PixbufRotation" c:type="GdkPixbufRotation"/>
          </parameter>
        </parameters>
      </method>
      <method name="saturate_and_pixelate"
              c:identifier="gdk_pixbuf_saturate_and_pixelate">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf-util.c"
             line="172">Modifies saturation and optionally pixelates `src`, placing the result in
`dest`.

The `src` and `dest` pixbufs must have the same image format, size, and
rowstride.

The `src` and `dest` arguments may be the same pixbuf with no ill effects.

If `saturation` is 1.0 then saturation is not changed. If it's less than 1.0,
saturation is reduced (the image turns toward grayscale); if greater than
1.0, saturation is increased (the image gets more vivid colors).

If `pixelate` is `TRUE`, then pixels are faded in a checkerboard pattern to
create a pixelated image.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="495"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="src" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-util.c"
                 line="174">source image</doc>
            <type name="Pixbuf" c:type="const GdkPixbuf*"/>
          </instance-parameter>
          <parameter name="dest" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-util.c"
                 line="175">place to write modified version of @src</doc>
            <type name="Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
          <parameter name="saturation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-util.c"
                 line="176">saturation factor</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="pixelate" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-util.c"
                 line="177">whether to pixelate</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="save" c:identifier="gdk_pixbuf_save" introspectable="0">
        <doc xml:space="preserve"
             filename="gdk-pixbuf/gdk-pixbuf-io.c"
             line="2416">Saves pixbuf to a file in format @type. By default, "jpeg", "png", "ico"
and "bmp" are possible file formats to save in, but more formats may be
installed. The list of all writable formats can be determined in the
following way:

```c
void add_if_writable (GdkPixbufFormat *data, GSList **list)
{
  if (gdk_pixbuf_format_is_writable (data))
    *list = g_slist_prepend (*list, data);
}

GSList *formats = gdk_pixbuf_get_formats ();
GSList *writable_formats = NULL;
g_slist_foreach (formats, add_if_writable, &amp;writable_formats);
g_slist_free (formats);
```

If `error` is set, `FALSE` will be returned. Possible errors include
those in the `GDK_PIXBUF_ERROR` domain and those in the `G_FILE_ERROR`
domain.

The variable argument list should be `NULL`-terminated; if not empty,
it should contain pairs of strings that modify the save
parameters. For example:

```c
gdk_pixbuf_save (pixbuf, handle, "jpeg", &amp;error, "quality", "100", NULL);
```

Currently only few parameters exist.

JPEG images can be saved with a "quality" parameter; its value should be
in the range `[0, 100]`. JPEG and PNG density can be set by setting the
"x-dpi" and "y-dpi" parameters to the appropriate values in dots per inch.

Text chunks can be attached to PNG images by specifying parameters of
the form "tEXt::key", where key is an ASCII string of length 1-79.
The values are UTF-8 encoded strings. The PNG compression level can
be specified using the "compression" parameter; it's value is in an
integer in the range of `[0, 9]`.

ICC color profiles can also be embedded into PNG, JPEG and TIFF images.
The "icc-profile" value should be the complete ICC profile encoded
into base64.

```c
char *contents;
gsize length;

// icm_path is set elsewhere
g_file_get_contents (icm_path, &amp;contents, &amp;length, NULL);

char *contents_encode = g_base64_encode ((const guchar *) contents, length);

gdk_pixbuf_save (pixbuf, handle, "png", &amp;error, "icc-profile", contents_encode, NULL);
```

TIFF images recognize:

 1. a "bits-per-sample" option (integer) which can be either 1 for saving
    bi-level CCITTFAX4 images, or 8 for saving 8-bits per sample
 2. a "compression" option (integer) which can be 1 for no compression,
    2 for Huffman, 5 for LZW, 7 for JPEG and 8 for DEFLATE (see the libtiff
    documentation and tiff.h for all supported codec values)
 3. an "icc-profile" option (zero-terminated string) containing a base64
    encoded ICC color profile.

ICO images can be saved in depth 16, 24, or 32, by using the "depth"
parameter. When the ICO saver is given "x_hot" and "y_hot" parameters,
it produces a CUR instead of an ICO.</doc>
        <source-position filename="gdk-pixbuf/gdk-pixbuf-core.h" line="319"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="gdk-pixbuf/gdk-pixbuf-io.c"
               line="2496">`TRUE` on success, and `FALSE` otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="pixbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-io.c"
                 line="2418">a `GdkPixbuf`.</doc>
            <type name="Pixbuf" c:type="GdkPixbuf*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-io.c"
                 line="2419">name of file to save.</doc>
            <type name="filename" c:type="const char*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="gdk-pixbuf/gdk-pixbuf-io.c"
                 line="2420">name of file format.</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="error"
                     transfer-ownership="none"
                     nullable="1"
