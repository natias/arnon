	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x42,
	0x4A,
	0x51,
	0x5A,
	0x62,
	0x6A,
	0x70,
	0x79,
	0x80,
	0x8A,
	0x8C,
	0x8F,
	0x91,
	0x9D,
	0x9E,
	0x9F,
	0xA2,
	0xAA,
	0xAC,
	0xAF,
	0xC1,
	0xCA,
	0xCB,
	0xD0,
	0xD1,
	0xDA,
	0xDB,
	0xE0,
	0xE2,
	0xEA,
	0xEB,
	0xF0,
	0xFB,
	0xFF,
	0x100,
	0x2B9,
	0x2E0,
	0x2E5,
	0x363,
	0x370,
	0x485,
	0x487,
	0x951,
	0x953,
	0x10FB,
	0x10FC,
	0x1D00,
	0x1D26,
	0x1D2C,
	0x1D5D,
	0x1D62,
	0x1D66,
	0x1D6B,
	0x1D78,
	0x1D79,
	0x1DBF,
	0x1E00,
	0x1F00,
	0x202F,
	0x2030,
	0x2071,
	0x2072,
	0x207F,
	0x2080,
	0x2090,
	0x209D,
	0x20F0,
	0x20F1,
	0x212A,
	0x212C,
	0x2132,
	0x2133,
	0x214E,
	0x214F,
	0x2160,
	0x2189,
	0x2C60,
	0x2C80,
	0xA700,
	0xA708,
	0xA722,
	0xA788,
	0xA78B,
	0xA7CB,
	0xA7D0,
	0xA7D2,
	0xA7D3,
	0xA7D4,
	0xA7D5,
	0xA7DA,
	0xA7F2,
	0xA800,
	0xA92E,
	0xA92F,
	0xAB30,
	0xAB5B,
	0xAB5C,
	0xAB65,
	0xAB66,
	0xAB6A,
	0xFB00,
	0xFB07,
	0xFF21,
	0xFF3B,
	0xFF41,
	0xFF5B,
	0x10780,
	0x10786,
	0x10787,
	0x107B1,
	0x107B2,
	0x107BB,
	0x1DF00,
	0x1DF1F
};

#  endif	/* EBCDIC 037 */

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_LB__AI_invlist[] = {  /* for ASCII/Latin1 */
	219,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA7,
	0xA9,
	0xAA,
	0xAB,
	0xB2,
	0xB4,
	0xB6,
	0xBB,
	0xBC,
	0xBF,
	0xD7,
	0xD8,
	0xF7,
	0xF8,
	0x2C7,
	0x2C8,
	0x2C9,
	0x2CC,
	0x2CD,
	0x2CE,
	0x2D0,
	0x2D1,
	0x2D8,
	0x2DC,
	0x2DD,
	0x2DE,
	0x2015,
	0x2017,
	0x2020,
	0x2022,
	0x203B,
	0x203C,
	0x2074,
	0x2075,
	0x207F,
	0x2080,
	0x2081,
	0x2085,
	0x2105,
	0x2106,
	0x2113,
	0x2114,
	0x2121,
	0x2123,
	0x212B,
	0x212C,
	0x2154,
	0x2156,
	0x215B,
	0x215C,
	0x215E,
	0x215F,
	0x2160,
	0x216C,
	0x2170,
	0x217A,
	0x2189,
	0x218A,
	0x2190,
	0x219A,
	0x21D2,
	0x21D3,
	0x21D4,
	0x21D5,
	0x2200,
	0x2201,
	0x2202,
	0x2204,
	0x2207,
	0x2209,
	0x220B,
	0x220C,
	0x220F,
	0x2210,
	0x2211,
	0x2212,
	0x2215,
	0x2216,
	0x221A,
	0x221B,
	0x221D,
	0x2221,
	0x2223,
	0x2224,
	0x2225,
	0x2226,
	0x2227,
	0x222D,
	0x222E,
	0x222F,
	0x2234,
	0x2238,
	0x223C,
	0x223E,
	0x2248,
	0x2249,
	0x224C,
	0x224D,
	0x2252,
	0x2253,
	0x2260,
	0x2262,
	0x2264,
	0x2268,
	0x226A,
	0x226C,
	0x226E,
	0x2270,
	0x2282,
	0x2284,
	0x2286,
	0x2288,
	0x2295,
	0x2296,
	0x2299,
	0x229A,
	0x22A5,
	0x22A6,
	0x22BF,
	0x22C0,
	0x2312,
	0x2313,
	0x2460,
	0x24FF,
	0x2500,
	0x254C,
	0x2550,
	0x2575,
	0x2580,
	0x2590,
	0x2592,
	0x2596,
	0x25A0,
	0x25A2,
	0x25A3,
	0x25AA,
	0x25B2,
	0x25B4,
	0x25B6,
	0x25B8,
	0x25BC,
	0x25BE,
	0x25C0,
	0x25C2,
	0x25C6,
	0x25C9,
	0x25CB,
	0x25CC,
	0x25CE,
	0x25D2,
	0x25E2,
	0x25E6,
	0x25EF,
	0x25F0,
	0x2605,
	0x2607,
	0x2609,
	0x260A,
	0x260E,
	0x2610,
	0x2616,
	0x2618,
	0x2640,
	0x2641,
	0x2642,
	0x2643,
	0x2660,
	0x2662,
	0x2663,
	0x2666,
	0x2667,
	0x2668,
	0x2669,
	0x266B,
	0x266C,
	0x266E,
	0x266F,
	0x2670,
	0x269E,
	0x26A0,
	0x26C9,
	0x26CD,
	0x26D2,
	0x26D3,
	0x26D5,
	0x26D8,
	0x26DA,
	0x26DC,
	0x26DD,
	0x26DF,
	0x26E3,
	0x26E4,
	0x26E8,
	0x26EA,
	0x26EB,
	0x26F1,
	0x26F6,
	0x26F7,
	0x26FB,
	0x26FD,
	0x2757,
	0x2758,
	0x2776,
	0x2794,
	0x2B55,
	0x2B5A,
	0x3248,
	0x3250,
	0xFFFD,
	0xFFFE,
	0x1F100,
	0x1F10D,
	0x1F110,
	0x1F12E,
	0x1F130,
	0x1F16A,
	0x1F170,
	0x1F1AD
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_LB__AI_invlist[] = {  /* for EBCDIC 1047 */
	225,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x9A,
	0x9C,
	0x9D,
	0x9E,
	0xB3,
	0xB4,
	0xB5,
	0xBA,
	0xBB,
	0xBC,
	0xBF,
	0xC0,
	0xDA,
	0xDB,
	0xE1,
	0xE2,
	0xEA,
	0xEB,
	0xFA,
	0xFB,
	0x2C7,
	0x2C8,
	0x2C9,
	0x2CC,
	0x2CD,
	0x2CE,
	0x2D0,
	0x2D1,
	0x2D8,
	0x2DC,
	0x2DD,
	0x2DE,
	0x2015,
	0x2017,
	0x2020,
	0x2022,
	0x203B,
	0x203C,
	0x2074,
	0x2075,
	0x207F,
	0x2080,
	0x2081,
	0x2085,
	0x2105,
	0x2106,
	0x2113,
	0x2114,
	0x2121,
	0x2123,
	0x212B,
	0x212C,
	0x2154,
	0x2156,
	0x215B,
	0x215C,
	0x215E,
	0x215F,
	0x2160,
	0x216C,
	0x2170,
	0x217A,
	0x2189,
	0x218A,
	0x2190,
	0x219A,
	0x21D2,
	0x21D3,
	0x21D4,
	0x21D5,
	0x2200,
	0x2201,
	0x2202,
	0x2204,
	0x2207,
	0x2209,
	0x220B,
	0x220C,
	0x220F,
	0x2210,
	0x2211,
	0x2212,
	0x2215,
	0x2216,
	0x221A,
	0x221B,
	0x221D,
	0x2221,
	0x2223,
	0x2224,
	0x2225,
	0x2226,
	0x2227,
	0x222D,
	0x222E,
	0x222F,
	0x2234,
	0x2238,
	0x223C,
	0x223E,
	0x2248,
	0x2249,
	0x224C,
	0x224D,
	0x2252,
	0x2253,
	0x2260,
	0x2262,
	0x2264,
	0x2268,
	0x226A,
	0x226C,
	0x226E,
	0x2270,
	0x2282,
	0x2284,
	0x2286,
	0x2288,
	0x2295,
	0x2296,
	0x2299,
	0x229A,
	0x22A5,
	0x22A6,
	0x22BF,
	0x22C0,
	0x2312,
	0x2313,
	0x2460,
	0x24FF,
	0x2500,
	0x254C,
	0x2550,
	0x2575,
	0x2580,
	0x2590,
	0x2592,
	0x2596,
	0x25A0,
	0x25A2,
	0x25A3,
	0x25AA,
	0x25B2,
	0x25B4,
	0x25B6,
	0x25B8,
	0x25BC,
	0x25BE,
	0x25C0,
	0x25C2,
	0x25C6,
	0x25C9,
	0x25CB,
	0x25CC,
	0x25CE,
	0x25D2,
	0x25E2,
	0x25E6,
	0x25EF,
	0x25F0,
	0x2605,
	0x2607,
	0x2609,
	0x260A,
	0x260E,
	0x2610,
	0x2616,
	0x2618,
	0x2640,
	0x2641,
	0x2642,
	0x2643,
	0x2660,
	0x2662,
	0x2663,
	0x2666,
	0x2667,
	0x2668,
	0x2669,
	0x266B,
	0x266C,
	0x266E,
	0x266F,
	0x2670,
	0x269E,
	0x26A0,
	0x26C9,
	0x26CD,
	0x26D2,
	0x26D3,
	0x26D5,
	0x26D8,
	0x26DA,
	0x26DC,
	0x26DD,
	0x26DF,
	0x26E3,
	0x26E4,
	0x26E8,
	0x26EA,
	0x26EB,
	0x26F1,
	0x26F6,
	0x26F7,
	0x26FB,
	0x26FD,
	0x2757,
	0x2758,
	0x2776,
	0x2794,
	0x2B55,
	0x2B5A,
	0x3248,
	0x3250,
	0xFFFD,
	0xFFFE,
	0x1F100,
	0x1F10D,
	0x1F110,
	0x1F12E,
	0x1F130,
	0x1F16A,
	0x1F170,
	0x1F1AD
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_LB__AI_invlist[] = {  /* for EBCDIC 037 */
	225,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x9A,
	0x9C,
	0x9D,
	0x9E,
	0xB3,
	0xB4,
	0xB5,
	0xBA,
	0xBD,
	0xBE,
	0xBF,
	0xC0,
	0xDA,
	0xDB,
	0xE1,
	0xE2,
	0xEA,
	0xEB,
	0xFA,
	0xFB,
	0x2C7,
	0x2C8,
	0x2C9,
	0x2CC,
	0x2CD,
	0x2CE,
	0x2D0,
	0x2D1,
	0x2D8,
	0x2DC,
	0x2DD,
	0x2DE,
	0x2015,
	0x2017,
	0x2020,
	0x2022,
	0x203B,
	0x203C,
	0x2074,
	0x2075,
	0x207F,
	0x2080,
	0x2081,
	0x2085,
	0x2105,
	0x2106,
	0x2113,
	0x2114,
	0x2121,
	0x2123,
	0x212B,
	0x212C,
	0x2154,
	0x2156,
	0x215B,
	0x215C,
	0x215E,
	0x215F,
	0x2160,
	0x216C,
	0x2170,
	0x217A,
	0x2189,
	0x218A,
	0x2190,
	0x219A,
	0x21D2,
	0x21D3,
	0x21D4,
	0x21D5,
	0x2200,
	0x2201,
	0x2202,
	0x2204,
	0x2207,
	0x2209,
	0x220B,
	0x220C,
	0x220F,
	0x2210,
	0x2211,
	0x2212,
	0x2215,
	0x2216,
	0x221A,
	0x221B,
	0x221D,
	0x2221,
	0x2223,
	0x2224,
	0x2225,
	0x2226,
	0x2227,
	0x222D,
	0x222E,
	0x222F,
	0x2234,
	0x2238,
	0x223C,
	0x223E,
	0x2248,
	0x2249,
	0x224C,
	0x224D,
	0x2252,
	0x2253,
	0x2260,
	0x2262,
	0x2264,
	0x2268,
	0x226A,
	0x226C,
	0x226E,
	0x2270,
	0x2282,
	0x2284,
	0x2286,
	0x2288,
	0x2295,
	0x2296,
	0x2299,
	0x229A,
	0x22A5,
	0x22A6,
	0x22BF,
	0x22C0,
	0x2312,
	0x2313,
	0x2460,
	0x24FF,
	0x2500,
	0x254C,
	0x2550,
	0x2575,
	0x2580,
	0x2590,
	0x2592,
	0x2596,
	0x25A0,
	0x25A2,
	0x25A3,
	0x25AA,
	0x25B2,
	0x25B4,
	0x25B6,
	0x25B8,
	0x25BC,
	0x25BE,
	0x25C0,
	0x25C2,
	0x25C6,
	0x25C9,
	0x25CB,
	0x25CC,
	0x25CE,
	0x25D2,
	0x25E2,
	0x25E6,
	0x25EF,
	0x25F0,
	0x2605,
	0x2607,
	0x2609,
	0x260A,
	0x260E,
	0x2610,
	0x2616,
	0x2618,
	0x2640,
	0x2641,
	0x2642,
	0x2643,
	0x2660,
	0x2662,
	0x2663,
	0x2666,
	0x2667,
	0x2668,
	0x2669,
	0x266B,
	0x266C,
	0x266E,
	0x266F,
	0x2670,
	0x269E,
	0x26A0,
	0x26C9,
	0x26CD,
	0x26D2,
	0x26D3,
	0x26D5,
	0x26D8,
	0x26DA,
	0x26DC,
	0x26DD,
	0x26DF,
	0x26E3,
	0x26E4,
	0x26E8,
	0x26EA,
	0x26EB,
	0x26F1,
	0x26F6,
	0x26F7,
	0x26FB,
	0x26FD,
	0x2757,
	0x2758,
	0x2776,
	0x2794,
	0x2B55,
	0x2B5A,
	0x3248,
	0x3250,
	0xFFFD,
	0xFFFE,
	0x1F100,
	0x1F10D,
	0x1F110,
	0x1F12E,
	0x1F130,
	0x1F16A,
	0x1F170,
	0x1F1AD
};

#  endif	/* EBCDIC 037 */

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_LB__AL_invlist[] = {  /* for ASCII/Latin1 */
	1597,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x23,
	0x24,
	0x26,
	0x27,
	0x2A,
	0x2B,
	0x3C,
	0x3F,
	0x40,
	0x5B,
	0x5E,
	0x7B,
	0x7E,
	0x7F,
	0xA6,
	0xA7,
	0xA9,
	0xAA,
	0xAC,
	0xAD,
	0xAE,
	0xB0,
	0xB5,
	0xB6,
	0xC0,
	0xD7,
	0xD8,
	0xF7,
	0xF8,
	0x2C7,
	0x2CE,
	0x2D0,
	0x2D1,
	0x2D8,
	0x2DC,
	0x2DD,
	0x2DE,
	0x2DF,
	0x2E0,
	0x300,
	0x370,
	0x378,
	0x37A,
	0x37E,
	0x37F,
	0x380,
	0x384,
	0x38B,
	0x38C,
	0x38D,
	0x38E,
	0x3A2,
	0x3A3,
	0x483,
	0x48A,
	0x530,
	0x531,
	0x557,
	0x559,
	0x589,
	0x58D,
	0x58F,
	0x5C0,
	0x5C1,
	0x5C3,
	0x5C4,
	0x5F3,
	0x5F5,
	0x600,
	0x609,
	0x60E,
	0x610,
	0x620,
	0x64B,
	0x66D,
	0x670,
	0x671,
	0x6D4,
	0x6D5,
	0x6D6,
	0x6DD,
	0x6DF,
	0x6E5,
	0x6E7,
	0x6E9,
	0x6EA,
	0x6EE,
	0x6F0,
	0x6FA,
	0x70E,
	0x70F,
	0x711,
	0x712,
	0x730,
	0x74D,
	0x7A6,
	0x7B1,
	0x7B2,
	0x7CA,
	0x7EB,
	0x7F4,
	0x7F8,
	0x7FA,
	0x7FB,
	0x800,
	0x816,
	0x81A,
	0x81B,
	0x824,
	0x825,
	0x828,
	0x829,
	0x830,
	0x83F,
	0x840,
	0x859,
	0x85E,
	0x85F,
	0x860,
	0x86B,
	0x870,
	0x88F,
	0x890,
	0x892,
	0x8A0,
	0x8CA,
	0x8E2,
	0x8E3,
	0x904,
	0x93A,
	0x93D,
	0x93E,
	0x950,
	0x951,
	0x958,
	0x962,
	0x970,
	0x981,
	0x985,
	0x98D,
	0x98F,
	0x991,
	0x993,
	0x9A9,
	0x9AA,
	0x9B1,
	0x9B2,
	0x9B3,
	0x9B6,
	0x9BA,
	0x9BD,
	0x9BE,
	0x9CE,
	0x9CF,
	0x9DC,
	0x9DE,
	0x9DF,
	0x9E2,
	0x9F0,
	0x9F2,
	0x9F4,
	0x9F9,
