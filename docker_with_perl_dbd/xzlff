=back

=back

=for hackers
Found in file pad.h

=over 4

=item C<PadlistNAMESMAX>
X<PadlistNAMESMAX>

NOTE: C<PadlistNAMESMAX> is B<experimental> and may change or be
removed without notice.

The index of the last pad name.

=over 3

 SSize_t  PadlistNAMESMAX(PADLIST * padlist)

=back

=back

=for hackers
Found in file pad.h

=over 4

=item C<PadlistREFCNT>
X<PadlistREFCNT>

NOTE: C<PadlistREFCNT> is B<experimental> and may change or be
removed without notice.

The reference count of the padlist.  Currently this is always 1.

=over 3

 U32  PadlistREFCNT(PADLIST * padlist)

=back

=back

=for hackers
Found in file pad.h

=over 4

=item C<PadMAX>
X<PadMAX>

NOTE: C<PadMAX> is B<experimental> and may change or be
removed without notice.

The index of the last pad entry.

=over 3

 SSize_t  PadMAX(PAD * pad)

=back

=back

=for hackers
Found in file pad.h

=over 4

=item C<PadnameLEN>
X<PadnameLEN>

NOTE: C<PadnameLEN> is B<experimental> and may change or be
removed without notice.

The length of the name.

=over 3

 STRLEN  PadnameLEN(PADNAME * pn)

=back

=back

=for hackers
Found in file pad.h

=over 4

=item C<PadnamelistARRAY>
X<PadnamelistARRAY>

NOTE: C<PadnamelistARRAY> is B<experimental> and may change or be
removed without notice.

The C array of pad names.

=over 3

 PADNAME **  PadnamelistARRAY(PADNAMELIST * pnl)

=back

=back

=for hackers
Found in file pad.h

=over 4

=item C<PadnamelistMAX>
X<PadnamelistMAX>

NOTE: C<PadnamelistMAX> is B<experimental> and may change or be
removed without notice.

The index of the last pad name.

=over 3

 SSize_t  PadnamelistMAX(PADNAMELIST * pnl)

=back

=back

=for hackers
Found in file pad.h

=over 4

=item C<PadnamelistREFCNT>
X<PadnamelistREFCNT>

NOTE: C<PadnamelistREFCNT> is B<experimental> and may change or be
removed without notice.

The reference count of the pad name list.

=over 3

 SSize_t  PadnamelistREFCNT(PADNAMELIST * pnl)

=back

=back

=for hackers
Found in file pad.h

=over 4

=item C<PadnamelistREFCNT_dec>
X<PadnamelistREFCNT_dec>

NOTE: C<PadnamelistREFCNT_dec> is B<experimental> and may change or be
removed without notice.

Lowers the reference count of the pad name list.

=over 3

 void  PadnamelistREFCNT_dec(PADNAMELIST * pnl)

=back

=back

=for hackers
Found in file pad.h

=over 4

=item C<PadnamePV>
X<PadnamePV>

NOTE: C<PadnamePV> is B<experimental> and may change or be
removed without notice.

The name stored in the pad name struct.  This returns C<NULL> for a target
slot.

=over 3

 char *  PadnamePV(PADNAME * pn)

=back

=back

=for hackers
Found in file pad.h

=over 4

=item C<PadnameREFCNT>
X<PadnameREFCNT>

NOTE: C<PadnameREFCNT> is B<experimental> and may change or be
removed without notice.

The reference count of the pad name.

=over 3

 SSize_t  PadnameREFCNT(PADNAME * pn)

=back

=back

=for hackers
Found in file pad.h

=over 4

=item C<PadnameREFCNT_dec>
X<PadnameREFCNT_dec>

NOTE: C<PadnameREFCNT_dec> is B<experimental> and may change or be
removed without notice.

Lowers the reference count of the pad name.

=over 3

 void  PadnameREFCNT_dec(PADNAME * pn)

=back

=back

=for hackers
Found in file pad.h

=over 4

=item C<PadnameREFCNT_inc>
X<PadnameREFCNT_inc>

NOTE: C<PadnameREFCNT_inc> is B<experimental> and may change or be
removed without notice.

Increases the reference count of the pad name.  Returns the pad name itself.

=over 3

 PADNAME *  PadnameREFCNT_inc(PADNAME * pn)

=back

=back

=for hackers
Found in file pad.h

=over 4

=item C<PadnameSV>
X<PadnameSV>

NOTE: C<PadnameSV> is B<experimental> and may change or be
removed without notice.

Returns the pad name as a mortal SV.

=over 3

 SV *  PadnameSV(PADNAME * pn)

=back

=back

=for hackers
Found in file pad.h

=over 4

=item C<PadnameUTF8>
X<PadnameUTF8>

NOTE: C<PadnameUTF8> is B<experimental> and may change or be
removed without notice.

Whether PadnamePV is in UTF-8.  Currently, this is always true.

=over 3

 bool  PadnameUTF8(PADNAME * pn)

=back

=back

=for hackers
Found in file pad.h

=over 4

=item C<pad_new>
X<pad_new>

Create a new padlist, updating the global variables for the
currently-compiling padlist to point to the new padlist.  The following
flags can be OR'ed together:

    padnew_CLONE	this pad is for a cloned CV
    padnew_SAVE		save old globals on the save stack
    padnew_SAVESUB	also save extra stuff for start of sub

=over 3

 PADLIST *  pad_new(int flags)

=back

=back

=for hackers
Found in file pad.c

=over 4

=item C<PL_comppad>
X<PL_comppad>

NOTE: C<PL_comppad> is B<experimental> and may change or be
removed without notice.

During compilation, this points to the array containing the values
part of the pad for the currently-compiling code.  (At runtime a CV may
have many such value arrays; at compile time just one is constructed.)
At runtime, this points to the array containing the currently-relevant
values for the pad for the currently-executing code.

=back

=for hackers
Found in file pad.c

=over 4

=item C<PL_comppad_name>
X<PL_comppad_name>

NOTE: C<PL_comppad_name> is B<experimental> and may change or be
removed without notice.

During compilation, this points to the array containing the names part
of the pad for the currently-compiling code.

=back

=for hackers
Found in file pad.c

=over 4

=item C<PL_curpad>
X<PL_curpad>

NOTE: C<PL_curpad> is B<experimental> and may change or be
removed without notice.

Points directly to the body of the L</PL_comppad> array.
(I.e., this is C<PadARRAY(PL_comppad)>.)

=back

=for hackers
Found in file pad.c

=over 4

=item C<SVs_PADMY>

C<B<DEPRECATED!>>  It is planned to remove C<SVs_PADMY>
from a future release of Perl.  Do not use it for
new code; remove it from existing code.

Described in L<perlguts>.

=back

=for hackers
Found in file pod/perlguts.pod

=over 4

=item C<SVs_PADTMP>

Described in L<perlguts>.

=back

=for hackers
Found in file pod/perlguts.pod

=head1 Password and Group access

=over 4

=item C<GRPASSWD>
X<GRPASSWD>

This symbol, if defined, indicates to the C program that C<struct group>
in F<grp.h> contains C<gr_passwd>.

=back

=for hackers
Found in file config.h

=over 4

=item C<HAS_ENDGRENT>
X<HAS_ENDGRENT>

This symbol, if defined, indicates that the getgrent routine is
available for finalizing sequential access of the group database.

=back

=for hackers
Found in file config.h

=over 4

=item C<HAS_ENDGRENT_R>
X<HAS_ENDGRENT_R>

This symbol, if defined, indicates that the C<endgrent_r> routine
is available to endgrent re-entrantly.

=back

=for hackers
Found in file config.h

=over 4

=item C<HAS_ENDPWENT>
X<HAS_ENDPWENT>

This symbol, if defined, indicates that the C<endpwent> routine is
available for finalizing sequential access of the passwd database.

=back

=for hackers
Found in file config.h

=over 4

=item C<HAS_ENDPWENT_R>
X<HAS_ENDPWENT_R>

This symbol, if defined, indicates that the C<endpwent_r> routine
is available to endpwent re-entrantly.

=back

=for hackers
Found in file config.h

=over 4

=item C<HAS_GETGRENT>
X<HAS_GETGRENT>

This symbol, if defined, indicates that the C<getgrent> routine is
available for sequential access of the group database.

=back

=for hackers
Found in file config.h

=over 4

=item C<HAS_GETGRENT_R>
X<HAS_GETGRENT_R>

This symbol, if defined, indicates that the C<getgrent_r> routine
is available to getgrent re-entrantly.

=back

=for hackers
Found in file config.h

=over 4

=item C<HAS_GETPWENT>
X<HAS_GETPWENT>

This symbol, if defined, indicates that the C<getpwent> routine is
available for sequential access of the passwd database.
If this is not available, the older C<getpw()> function may be available.

=back

=for hackers
Found in file config.h

=over 4

=item C<HAS_GETPWENT_R>
X<HAS_GETPWENT_R>

This symbol, if defined, indicates that the C<getpwent_r> routine
is available to getpwent re-entrantly.

=back

=for hackers
Found in file config.h

=over 4

=item C<HAS_SETGRENT>
X<HAS_SETGRENT>

This symbol, if defined, indicates that the C<setgrent> routine is
available for initializing sequential access of the group database.

=back

=for hackers
Found in file config.h

=over 4

=item C<HAS_SETGRENT_R>
X<HAS_SETGRENT_R>

This symbol, if defined, indicates that the C<setgrent_r> routine
is available to setgrent re-entrantly.

=back

=for hackers
Found in file config.h

=over 4

=item C<HAS_SETPWENT>
X<HAS_SETPWENT>

This symbol, if defined, indicates that the C<setpwent> routine is
available for initializing sequential access of the passwd database.

=back

=for hackers
Found in file config.h

=over 4

=item C<HAS_SETPWENT_R>
X<HAS_SETPWENT_R>

This symbol, if defined, indicates that the C<setpwent_r> routine
is available to setpwent re-entrantly.

=back

=for hackers
Found in file config.h

=over 4

=item C<PWAGE>
X<PWAGE>

This symbol, if defined, indicates to the C program that C<struct passwd>
contains C<pw_age>.

=back

=for hackers
Found in file config.h

=over 4

=item C<PWCHANGE>
X<PWCHANGE>

This symbol, if defined, indicates to the C program that C<struct passwd>
contains C<pw_change>.

=back

=for hackers
Found in file config.h

=over 4

=item C<PWCLASS>
X<PWCLASS>

This symbol, if defined, indicates to the C program that C<struct passwd>
contains C<pw_class>.

=back

=for hackers
Found in file config.h

=over 4

=item C<PWCOMMENT>
X<PWCOMMENT>

This symbol, if defined, indicates to the C program that C<struct passwd>
contains C<pw_comment>.

=back

=for hackers
Found in file config.h

=over 4

=item C<PWEXPIRE>
X<PWEXPIRE>

This symbol, if defined, indicates to the C program that C<struct passwd>
contains C<pw_expire>.

=back

=for hackers
Found in file config.h

=over 4

=item C<PWGECOS>
X<PWGECOS>

This symbol, if defined, indicates to the C program that C<struct passwd>
contains C<pw_gecos>.

=back

=for hackers
Found in file config.h

=over 4

=item C<PWPASSWD>
X<PWPASSWD>

This symbol, if defined, indicates to the C program that C<struct passwd>
contains C<pw_passwd>.

=back

=for hackers
Found in file config.h

=over 4

=item C<PWQUOTA>
X<PWQUOTA>

This symbol, if defined, indicates to the C program that C<struct passwd>
contains C<pw_quota>.

=back

=for hackers
Found in file config.h

=head1 Paths to system commands

=over 4

=item C<CSH>
X<CSH>

This symbol, if defined, contains the full pathname of csh.

=back

=for hackers
Found in file config.h

=over 4

=item C<LOC_SED>
X<LOC_SED>

This symbol holds the complete pathname to the sed program.

=back

=for hackers
Found in file config.h

=over 4

=item C<SH_PATH>
X<SH_PATH>

This symbol contains the full pathname to the shell used on this
on this system to execute Bourne shell scripts.  Usually, this will be
F</bin/sh>, though it's possible that some systems will have F</bin/ksh>,
F</bin/pdksh>, F</bin/ash>, F</bin/bash>, or even something such as
D:F</bin/sh.exe>.

=back

=for hackers
Found in file config.h

=head1 Prototype information

=over 4

=item C<CRYPT_R_PROTO>
X<CRYPT_R_PROTO>

This symbol encodes the prototype of C<crypt_r>.
It is zero if C<d_crypt_r> is undef, and one of the
C<REENTRANT_PROTO_T_ABC> macros of F<reentr.h> if C<d_crypt_r>
is defined.

=back

=for hackers
Found in file config.h

=over 4

=item C<CTERMID_R_PROTO>
X<CTERMID_R_PROTO>

This symbol encodes the prototype of C<ctermid_r>.
It is zero if C<d_ctermid_r> is undef, and one of the
C<REENTRANT_PROTO_T_ABC> macros of F<reentr.h> if C<d_ctermid_r>
is defined.

=back

=for hackers
Found in file config.h

=over 4

=item C<DRAND48_R_PROTO>
X<DRAND48_R_PROTO>

This symbol encodes the prototype of C<drand48_r>.
It is zero if C<d_drand48_r> is undef, and one of the
C<REENTRANT_PROTO_T_ABC> macros of F<reentr.h> if C<d_drand48_r>
is defined.

=back

=for hackers
Found in file config.h

=over 4

=item C<ENDGRENT_R_PROTO>
X<ENDGRENT_R_PROTO>

This symbol encodes the prototype of C<endgrent_r>.
It is zero if C<d_endgrent_r> is undef, and one of the
C<REENTRANT_PROTO_T_ABC> macros of F<reentr.h> if C<d_endgrent_r>
is defined.

=back

=for hackers
Found in file config.h

=over 4

=item C<ENDHOSTENT_R_PROTO>
X<ENDHOSTENT_R_PROTO>

This symbol encodes the prototype of C<endhostent_r>.
It is zero if C<d_endhostent_r> is undef, and one of the
C<REENTRANT_PROTO_T_ABC> macros of F<reentr.h> if C<d_endhostent_r>
is defined.

=back

=for hackers
Found in file config.h

=over 4

=item C<ENDNETENT_R_PROTO>
X<ENDNETENT_R_PROTO>

This symbol encodes the prototype of C<endnetent_r>.
It is zero if C<d_endnetent_r> is undef, and one of the
C<REENTRANT_PROTO_T_ABC> macros of F<reentr.h> if C<d_endnetent_r>
is defined.

=back

=for hackers
Found in file config.h

=over 4

=item C<ENDPROTOENT_R_PROTO>
X<ENDPROTOENT_R_PROTO>

This symbol encodes the prototype of C<endprotoent_r>.
It is zero if C<d_endprotoent_r> is undef, and one of the
C<REENTRANT_PROTO_T_ABC> macros of F<reentr.h> if C<d_endprotoent_r>
is defined.

=back

=for hackers
Found in file config.h

=over 4

=item C<ENDPWENT_R_PROTO>
X<ENDPWENT_R_PROTO>

This symbol encodes the prototype of C<endpwent_r>.
It is zero if C<d_endpwent_r> is undef, and one of the
C<REENTRANT_PROTO_T_ABC> macros of F<reentr.h> if C<d_endpwent_r>
is defined.

=back

=for hackers
Found in file config.h

=over 4

=item C<ENDSERVENT_R_PROTO>
X<ENDSERVENT_R_PROTO>

This symbol encodes the prototype of C<endservent_r>.
It is zero if C<d_endservent_r> is undef, and one of the
C<REENTRANT_PROTO_T_ABC> macros of F<reentr.h> if C<d_endservent_r>
is defined.

=back

=for hackers
Found in file config.h

=over 4

=item C<GDBMNDBM_H_USES_PROTOTYPES>
X<GDBMNDBM_H_USES_PROTOTYPES>

This symbol, if defined, indicates that F<gdbm/ndbm.h> uses real C<ANSI> C
prototypes instead of K&R style function declarations without any
parameter information. While C<ANSI> C prototypes are supported in C++,
K&R style function declarations will yield errors.

=back

=for hackers
Found in file config.h

=over 4

=item C<GDBM_NDBM_H_USES_PROTOTYPES>
X<GDBM_NDBM_H_USES_PROTOTYPES>

This symbol, if defined, indicates that <gdbm-F<ndbm.h>> uses real C<ANSI> C
prototypes instead of K&R style function declarations without any
parameter information. While C<ANSI> C prototypes are supported in C++,
K&R style function declarations will yield errors.

=back

=for hackers
Found in file config.h

=over 4

=item C<GETGRENT_R_PROTO>
X<GETGRENT_R_PROTO>

This symbol encodes the prototype of C<getgrent_r>.
It is zero if C<d_getgrent_r> is undef, and one of the
C<REENTRANT_PROTO_T_ABC> macros of F<reentr.h> if C<d_getgrent_r>
is defined.

=back

=for hackers
Found in file config.h

=over 4

=item C<GETGRGID_R_PROTO>
X<GETGRGID_R_PROTO>

This symbol encodes the prototype of C<getgrgid_r>.
It is zero if C<d_getgrgid_r> is undef, and one of the
C<REENTRANT_PROTO_T_ABC> macros of F<reentr.h> if C<d_getgrgid_r>
is defined.

=back

=for hackers
Found in file config.h

=over 4

=item C<GETGRNAM_R_PROTO>
X<GETGRNAM_R_PROTO>

This symbol encodes the prototype of C<getgrnam_r>.
It is zero if C<d_getgrnam_r> is undef, and one of the
C<REENTRANT_PROTO_T_ABC> macros of F<reentr.h> if C<d_getgrnam_r>
is defined.

=back

=for hackers
Found in file config.h

=over 4

=item C<GETHOSTBYADDR_R_PROTO>
X<GETHOSTBYADDR_R_PROTO>

This symbol encodes the prototype of C<gethostbyaddr_r>.
It is zero if C<d_gethostbyaddr_r> is undef, and one of the
C<REENTRANT_PROTO_T_ABC> macros of F<reentr.h> if C<d_gethostbyaddr_r>
is defined.

=back

=for hackers
Found in file config.h

=over 4

=item C<GETHOSTBYNAME_R_PROTO>
X<GETHOSTBYNAME_R_PROTO>

This symbol encodes the prototype of C<gethostbyname_r>.
It is zero if C<d_gethostbyname_r> is undef, and one of the
C<REENTRANT_PROTO_T_ABC> macros of F<reentr.h> if C<d_gethostbyname_r>
is defined.

=back

=for hackers
Found in file config.h

=over 4

=item C<GETHOSTENT_R_PROTO>
X<GETHOSTENT_R_PROTO>

This symbol encodes the prototype of C<gethostent_r>.
It is zero if C<d_gethostent_r> is undef, and one of the
C<REENTRANT_PROTO_T_ABC> macros of F<reentr.h> if C<d_gethostent_r>
is defined.

=back

=for hackers
Found in file config.h

=over 4

=item C<GETLOGIN_R_PROTO>
X<GETLOGIN_R_PROTO>

This symbol encodes the prototype of C<getlogin_r>.
It is zero if C<d_getlogin_r> is undef, and one of the
C<REENTRANT_PROTO_T_ABC> macros of F<reentr.h> if C<d_getlogin_r>
is defined.

=back

=for hackers
Found in file config.h

=over 4

=item C<GETNETBYADDR_R_PROTO>
X<GETNETBYADDR_R_PROTO>

This symbol encodes the prototype of C<getnetbyaddr_r>.
It is zero if C<d_getnetbyaddr_r> is undef, and one of the
