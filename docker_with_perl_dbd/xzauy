	0x1F100,
	0x1F1AE,
	0x1F1E6,
	0x1F203,
	0x1F210,
	0x1F23C,
	0x1F240,
	0x1F249,
	0x1F250,
	0x1F252,
	0x1F260,
	0x1F266,
	0x1F300,
	0x1F6D8,
	0x1F6DD,
	0x1F6ED,
	0x1F6F0,
	0x1F6FD,
	0x1F700,
	0x1F774,
	0x1F780,
	0x1F7D9,
	0x1F7E0,
	0x1F7EC,
	0x1F7F0,
	0x1F7F1,
	0x1F800,
	0x1F80C,
	0x1F810,
	0x1F848,
	0x1F850,
	0x1F85A,
	0x1F860,
	0x1F888,
	0x1F890,
	0x1F8AE,
	0x1F8B0,
	0x1F8B2,
	0x1F900,
	0x1FA54,
	0x1FA60,
	0x1FA6E,
	0x1FA70,
	0x1FA75,
	0x1FA78,
	0x1FA7D,
	0x1FA80,
	0x1FA87,
	0x1FA90,
	0x1FAAD,
	0x1FAB0,
	0x1FABB,
	0x1FAC0,
	0x1FAC6,
	0x1FAD0,
	0x1FADA,
	0x1FAE0,
	0x1FAE8,
	0x1FAF0,
	0x1FAF7,
	0x1FB00,
	0x1FB93,
	0x1FB94,
	0x1FBCB,
	0x1FBF0,
	0x1FBFA,
	0x20000,
	0x2A6E0,
	0x2A700,
	0x2B739,
	0x2B740,
	0x2B81E,
	0x2B820,
	0x2CEA2,
	0x2CEB0,
	0x2EBE1,
	0x2F800,
	0x2FA1E,
	0x30000,
	0x3134B,
	0xE0100,
	0xE01F0
};

#  endif	/* EBCDIC 037 */

static const UV UNI_CAKM_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x9E6,
	0x9F0,
	0x1040,
	0x104A,
	0x11100,
	0x11135,
	0x11136,
	0x11148
};

static const UV UNI_CANS_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1400,
	0x1680,
	0x18B0,
	0x18F6,
	0x11AB0,
	0x11AC0
};

static const UV UNI_CARI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x102A0,
	0x102D1
};

static const UV UNI_CCC__0_invlist[] = {  /* for all charsets */
	377,	/* Number of elements */
	148565664, /* Version and data structure type */
	0,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x300,
	0x34F,
	0x350,
	0x370,
	0x483,
	0x488,
	0x591,
	0x5BE,
	0x5BF,
	0x5C0,
	0x5C1,
	0x5C3,
	0x5C4,
	0x5C6,
	0x5C7,
	0x5C8,
	0x610,
	0x61B,
	0x64B,
	0x660,
	0x670,
	0x671,
	0x6D6,
	0x6DD,
	0x6DF,
	0x6E5,
	0x6E7,
	0x6E9,
	0x6EA,
	0x6EE,
	0x711,
	0x712,
	0x730,
	0x74B,
	0x7EB,
	0x7F4,
	0x7FD,
	0x7FE,
	0x816,
	0x81A,
	0x81B,
	0x824,
	0x825,
	0x828,
	0x829,
	0x82E,
	0x859,
	0x85C,
	0x898,
	0x8A0,
	0x8CA,
	0x8E2,
	0x8E3,
	0x900,
	0x93C,
	0x93D,
	0x94D,
	0x94E,
	0x951,
	0x955,
	0x9BC,
	0x9BD,
	0x9CD,
	0x9CE,
	0x9FE,
	0x9FF,
	0xA3C,
	0xA3D,
	0xA4D,
	0xA4E,
	0xABC,
	0xABD,
	0xACD,
	0xACE,
	0xB3C,
	0xB3D,
	0xB4D,
	0xB4E,
	0xBCD,
	0xBCE,
	0xC3C,
	0xC3D,
	0xC4D,
	0xC4E,
	0xC55,
	0xC57,
	0xCBC,
	0xCBD,
	0xCCD,
	0xCCE,
	0xD3B,
	0xD3D,
	0xD4D,
	0xD4E,
	0xDCA,
	0xDCB,
	0xE38,
	0xE3B,
	0xE48,
	0xE4C,
	0xEB8,
	0xEBB,
	0xEC8,
	0xECC,
	0xF18,
	0xF1A,
	0xF35,
	0xF36,
	0xF37,
	0xF38,
	0xF39,
	0xF3A,
	0xF71,
	0xF73,
	0xF74,
	0xF75,
	0xF7A,
	0xF7E,
	0xF80,
	0xF81,
	0xF82,
	0xF85,
	0xF86,
	0xF88,
	0xFC6,
	0xFC7,
	0x1037,
	0x1038,
	0x1039,
	0x103B,
	0x108D,
	0x108E,
	0x135D,
	0x1360,
	0x1714,
	0x1716,
	0x1734,
	0x1735,
	0x17D2,
	0x17D3,
	0x17DD,
	0x17DE,
	0x18A9,
	0x18AA,
	0x1939,
	0x193C,
	0x1A17,
	0x1A19,
	0x1A60,
	0x1A61,
	0x1A75,
	0x1A7D,
	0x1A7F,
	0x1A80,
	0x1AB0,
	0x1ABE,
	0x1ABF,
	0x1ACF,
	0x1B34,
	0x1B35,
	0x1B44,
	0x1B45,
	0x1B6B,
	0x1B74,
	0x1BAA,
	0x1BAC,
	0x1BE6,
	0x1BE7,
	0x1BF2,
	0x1BF4,
	0x1C37,
	0x1C38,
	0x1CD0,
	0x1CD3,
	0x1CD4,
	0x1CE1,
	0x1CE2,
	0x1CE9,
	0x1CED,
	0x1CEE,
	0x1CF4,
	0x1CF5,
	0x1CF8,
	0x1CFA,
	0x1DC0,
	0x1E00,
	0x20D0,
	0x20DD,
	0x20E1,
	0x20E2,
	0x20E5,
	0x20F1,
	0x2CEF,
	0x2CF2,
	0x2D7F,
	0x2D80,
	0x2DE0,
	0x2E00,
	0x302A,
	0x3030,
	0x3099,
	0x309B,
	0xA66F,
	0xA670,
	0xA674,
	0xA67E,
	0xA69E,
	0xA6A0,
	0xA6F0,
	0xA6F2,
	0xA806,
	0xA807,
	0xA82C,
	0xA82D,
	0xA8C4,
	0xA8C5,
	0xA8E0,
	0xA8F2,
	0xA92B,
	0xA92E,
	0xA953,
	0xA954,
	0xA9B3,
	0xA9B4,
	0xA9C0,
	0xA9C1,
	0xAAB0,
	0xAAB1,
	0xAAB2,
	0xAAB5,
	0xAAB7,
	0xAAB9,
	0xAABE,
	0xAAC0,
	0xAAC1,
	0xAAC2,
	0xAAF6,
	0xAAF7,
	0xABED,
	0xABEE,
	0xFB1E,
	0xFB1F,
	0xFE20,
	0xFE30,
	0x101FD,
	0x101FE,
	0x102E0,
	0x102E1,
	0x10376,
	0x1037B,
	0x10A0D,
	0x10A0E,
	0x10A0F,
	0x10A10,
	0x10A38,
	0x10A3B,
	0x10A3F,
	0x10A40,
	0x10AE5,
	0x10AE7,
	0x10D24,
	0x10D28,
	0x10EAB,
	0x10EAD,
	0x10F46,
	0x10F51,
	0x10F82,
	0x10F86,
	0x11046,
	0x11047,
	0x11070,
	0x11071,
	0x1107F,
	0x11080,
	0x110B9,
	0x110BB,
	0x11100,
	0x11103,
	0x11133,
	0x11135,
	0x11173,
	0x11174,
	0x111C0,
	0x111C1,
	0x111CA,
	0x111CB,
	0x11235,
	0x11237,
	0x112E9,
	0x112EB,
	0x1133B,
	0x1133D,
	0x1134D,
	0x1134E,
	0x11366,
	0x1136D,
	0x11370,
	0x11375,
	0x11442,
	0x11443,
	0x11446,
	0x11447,
	0x1145E,
	0x1145F,
	0x114C2,
	0x114C4,
	0x115BF,
	0x115C1,
	0x1163F,
	0x11640,
	0x116B6,
	0x116B8,
	0x1172B,
	0x1172C,
	0x11839,
	0x1183B,
	0x1193D,
	0x1193F,
	0x11943,
	0x11944,
	0x119E0,
	0x119E1,
	0x11A34,
	0x11A35,
	0x11A47,
	0x11A48,
	0x11A99,
	0x11A9A,
	0x11C3F,
	0x11C40,
	0x11D42,
	0x11D43,
	0x11D44,
	0x11D46,
	0x11D97,
	0x11D98,
	0x16AF0,
	0x16AF5,
	0x16B30,
	0x16B37,
	0x16FF0,
	0x16FF2,
	0x1BC9E,
	0x1BC9F,
	0x1D165,
	0x1D16A,
	0x1D16D,
	0x1D173,
	0x1D17B,
	0x1D183,
	0x1D185,
	0x1D18C,
	0x1D1AA,
	0x1D1AE,
	0x1D242,
	0x1D245,
	0x1E000,
	0x1E007,
	0x1E008,
	0x1E019,
	0x1E01B,
	0x1E022,
	0x1E023,
	0x1E025,
	0x1E026,
	0x1E02B,
	0x1E130,
	0x1E137,
	0x1E2AE,
	0x1E2AF,
	0x1E2EC,
	0x1E2F0,
	0x1E8D0,
	0x1E8D7,
	0x1E944,
	0x1E94B
};

static const UV UNI_CCC__1_invlist[] = {  /* for all charsets */
	23,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x334,
	0x339,
	0x1CD4,
	0x1CD5,
	0x1CE2,
	0x1CE9,
	0x20D2,
	0x20D4,
	0x20D8,
	0x20DB,
	0x20E5,
	0x20E7,
	0x20EA,
	0x20EC,
	0x10A39,
	0x10A3A,
	0x16AF0,
	0x16AF5,
	0x1BC9E,
	0x1BC9F,
	0x1D167,
	0x1D16A
};

static const UV UNI_CCC__10_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5B0,
	0x5B1
};

static const UV UNI_CCC__103_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xE38,
	0xE3A
};

static const UV UNI_CCC__107_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xE48,
	0xE4C
};

static const UV UNI_CCC__11_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5B1,
	0x5B2
};

static const UV UNI_CCC__118_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xEB8,
	0xEBA
};

static const UV UNI_CCC__12_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5B2,
	0x5B3
};

static const UV UNI_CCC__122_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xEC8,
	0xECC
};

static const UV UNI_CCC__129_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF71,
	0xF72
};

static const UV UNI_CCC__13_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5B3,
	0x5B4
};

static const UV UNI_CCC__130_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF72,
	0xF73,
	0xF7A,
	0xF7E,
	0xF80,
	0xF81
};

static const UV UNI_CCC__132_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF74,
	0xF75
};

static const UV UNI_CCC__14_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5B4,
	0x5B5
};

static const UV UNI_CCC__15_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5B5,
	0x5B6
};

static const UV UNI_CCC__16_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5B6,
	0x5B7
};

static const UV UNI_CCC__17_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5B7,
	0x5B8
};

static const UV UNI_CCC__18_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5B8,
	0x5B9,
	0x5C7,
	0x5C8
};

static const UV UNI_CCC__19_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5B9,
	0x5BB
};

static const UV UNI_CCC__20_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5BB,
	0x5BC
};

static const UV UNI_CCC__202_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x321,
	0x323,
	0x327,
	0x329,
	0x1DD0,
	0x1DD1
};

static const UV UNI_CCC__21_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5BC,
	0x5BD
};

static const UV UNI_CCC__214_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1DCE,
	0x1DCF
};

static const UV UNI_CCC__216_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x31B,
	0x31C,
	0xF39,
	0xF3A,
	0x1D165,
	0x1D167,
	0x1D16E,
	0x1D173
};

static const UV UNI_CCC__22_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5BD,
	0x5BE
};

static const UV UNI_CCC__23_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5BF,
	0x5C0
};

static const UV UNI_CCC__24_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5C1,
	0x5C2
};

static const UV UNI_CCC__25_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5C2,
	0x5C3
};

static const UV UNI_CCC__26_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xFB1E,
	0xFB1F
};

static const UV UNI_CCC__27_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x64B,
	0x64C,
	0x8F0,
	0x8F1
};

static const UV UNI_CCC__28_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x64C,
	0x64D,
	0x8F1,
	0x8F2
};

static const UV UNI_CCC__29_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x64D,
	0x64E,
	0x8F2,
	0x8F3
};

static const UV UNI_CCC__30_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x618,
	0x619,
	0x64E,
	0x64F
};

static const UV UNI_CCC__31_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x619,
	0x61A,
	0x64F,
	0x650
};

static const UV UNI_CCC__32_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x61A,
	0x61B,
	0x650,
	0x651
};

static const UV UNI_CCC__33_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x651,
	0x652
};

static const UV UNI_CCC__34_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x652,
	0x653
};

static const UV UNI_CCC__35_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x670,
	0x671
};

static const UV UNI_CCC__36_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x711,
	0x712
};

static const UV UNI_CCC__6_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16FF0,
	0x16FF2
};

static const UV UNI_CCC__7_invlist[] = {  /* for all charsets */
	53,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x93C,
	0x93D,
	0x9BC,
	0x9BD,
	0xA3C,
	0xA3D,
	0xABC,
	0xABD,
	0xB3C,
	0xB3D,
	0xC3C,
	0xC3D,
	0xCBC,
	0xCBD,
	0x1037,
	0x1038,
	0x1B34,
	0x1B35,
	0x1BE6,
	0x1BE7,
	0x1C37,
	0x1C38,
	0xA9B3,
	0xA9B4,
	0x110BA,
	0x110BB,
	0x11173,
	0x11174,
	0x111CA,
	0x111CB,
	0x11236,
	0x11237,
	0x112E9,
	0x112EA,
	0x1133B,
	0x1133D,
	0x11446,
	0x11447,
	0x114C3,
	0x114C4,
	0x115C0,
	0x115C1,
	0x116B7,
	0x116B8,
	0x1183A,
	0x1183B,
