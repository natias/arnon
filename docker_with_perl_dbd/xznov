#define XtCReverseVideo ((String)&XtStrings[1260])
#endif
#ifndef XtCScreen
#define XtCScreen ((String)&XtStrings[1273])
#endif
#ifndef XtCScrollProc
#define XtCScrollProc ((String)&XtStrings[1280])
#endif
#ifndef XtCScrollDCursor
#define XtCScrollDCursor ((String)&XtStrings[1291])
#endif
#ifndef XtCScrollHCursor
#define XtCScrollHCursor ((String)&XtStrings[1305])
#endif
#ifndef XtCScrollLCursor
#define XtCScrollLCursor ((String)&XtStrings[1319])
#endif
#ifndef XtCScrollRCursor
#define XtCScrollRCursor ((String)&XtStrings[1333])
#endif
#ifndef XtCScrollUCursor
#define XtCScrollUCursor ((String)&XtStrings[1347])
#endif
#ifndef XtCScrollVCursor
#define XtCScrollVCursor ((String)&XtStrings[1361])
#endif
#ifndef XtCSelection
#define XtCSelection ((String)&XtStrings[1375])
#endif
#ifndef XtCSensitive
#define XtCSensitive ((String)&XtStrings[1385])
#endif
#ifndef XtCSelectionArray
#define XtCSelectionArray ((String)&XtStrings[1395])
#endif
#ifndef XtCSpace
#define XtCSpace ((String)&XtStrings[1410])
#endif
#ifndef XtCString
#define XtCString ((String)&XtStrings[1416])
#endif
#ifndef XtCTextOptions
#define XtCTextOptions ((String)&XtStrings[1423])
#endif
#ifndef XtCTextPosition
#define XtCTextPosition ((String)&XtStrings[1435])
#endif
#ifndef XtCTextSink
#define XtCTextSink ((String)&XtStrings[1448])
#endif
#ifndef XtCTextSource
#define XtCTextSource ((String)&XtStrings[1457])
#endif
#ifndef XtCThickness
#define XtCThickness ((String)&XtStrings[1468])
#endif
#ifndef XtCThumb
#define XtCThumb ((String)&XtStrings[1478])
#endif
#ifndef XtCTranslations
#define XtCTranslations ((String)&XtStrings[1484])
#endif
#ifndef XtCValue
#define XtCValue ((String)&XtStrings[1497])
#endif
#ifndef XtCVSpace
#define XtCVSpace ((String)&XtStrings[1503])
#endif
#ifndef XtCWidth
#define XtCWidth ((String)&XtStrings[1510])
#endif
#ifndef XtCWindow
#define XtCWindow ((String)&XtStrings[1516])
#endif
#ifndef XtCX
#define XtCX ((String)&XtStrings[1523])
#endif
#ifndef XtCY
#define XtCY ((String)&XtStrings[1525])
#endif
#ifndef XtRAcceleratorTable
#define XtRAcceleratorTable ((String)&XtStrings[1527])
#endif
#ifndef XtRAtom
#define XtRAtom ((String)&XtStrings[1544])
#endif
#ifndef XtRBitmap
#define XtRBitmap ((String)&XtStrings[1549])
#endif
#ifndef XtRBool
#define XtRBool ((String)&XtStrings[1556])
#endif
#ifndef XtRBoolean
#define XtRBoolean ((String)&XtStrings[1561])
#endif
#ifndef XtRCallback
#define XtRCallback ((String)&XtStrings[1569])
#endif
#ifndef XtRCallProc
#define XtRCallProc ((String)&XtStrings[1578])
#endif
#ifndef XtRCardinal
#define XtRCardinal ((String)&XtStrings[1587])
#endif
#ifndef XtRColor
#define XtRColor ((String)&XtStrings[1596])
#endif
#ifndef XtRColormap
#define XtRColormap ((String)&XtStrings[1602])
#endif
#ifndef XtRCursor
#define XtRCursor ((String)&XtStrings[1611])
#endif
#ifndef XtRDimension
#define XtRDimension ((String)&XtStrings[1618])
#endif
#ifndef XtRDisplay
#define XtRDisplay ((String)&XtStrings[1628])
#endif
#ifndef XtREditMode
#define XtREditMode ((String)&XtStrings[1636])
#endif
#ifndef XtREnum
#define XtREnum ((String)&XtStrings[1645])
#endif
#ifndef XtRFile
#define XtRFile ((String)&XtStrings[1650])
#endif
#ifndef XtRFloat
#define XtRFloat ((String)&XtStrings[1655])
#endif
#ifndef XtRFont
#define XtRFont ((String)&XtStrings[1661])
#endif
#ifndef XtRFontStruct
#define XtRFontStruct ((String)&XtStrings[1666])
#endif
#ifndef XtRFunction
#define XtRFunction ((String)&XtStrings[1677])
#endif
#ifndef XtRGeometry
#define XtRGeometry ((String)&XtStrings[1686])
#endif
#ifndef XtRImmediate
#define XtRImmediate ((String)&XtStrings[1695])
#endif
#ifndef XtRInitialState
#define XtRInitialState ((String)&XtStrings[1705])
#endif
#ifndef XtRInt
#define XtRInt ((String)&XtStrings[1718])
#endif
#ifndef XtRJustify
#define XtRJustify ((String)&XtStrings[1722])
#endif
#ifndef XtRLongBoolean
#define XtRLongBoolean ((String)&XtStrings[1730])
#endif
#ifndef XtRObject
#define XtRObject ((String)&XtStrings[1735])
#endif
#ifndef XtROrientation
#define XtROrientation ((String)&XtStrings[1742])
#endif
#ifndef XtRPixel
#define XtRPixel ((String)&XtStrings[1754])
#endif
#ifndef XtRPixmap
#define XtRPixmap ((String)&XtStrings[1760])
#endif
#ifndef XtRPointer
#define XtRPointer ((String)&XtStrings[1767])
#endif
#ifndef XtRPosition
#define XtRPosition ((String)&XtStrings[1775])
#endif
#ifndef XtRScreen
#define XtRScreen ((String)&XtStrings[1784])
#endif
#ifndef XtRShort
#define XtRShort ((String)&XtStrings[1791])
#endif
#ifndef XtRString
#define XtRString ((String)&XtStrings[1797])
#endif
#ifndef XtRStringArray
#define XtRStringArray ((String)&XtStrings[1804])
#endif
#ifndef XtRStringTable
#define XtRStringTable ((String)&XtStrings[1816])
#endif
#ifndef XtRUnsignedChar
#define XtRUnsignedChar ((String)&XtStrings[1828])
#endif
#ifndef XtRTranslationTable
#define XtRTranslationTable ((String)&XtStrings[1841])
#endif
#ifndef XtRVisual
#define XtRVisual ((String)&XtStrings[1858])
#endif
#ifndef XtRWidget
#define XtRWidget ((String)&XtStrings[1865])
#endif
#ifndef XtRWidgetClass
#define XtRWidgetClass ((String)&XtStrings[1872])
#endif
#ifndef XtRWidgetList
#define XtRWidgetList ((String)&XtStrings[1884])
#endif
#ifndef XtRWindow
#define XtRWindow ((String)&XtStrings[1895])
#endif
#ifndef XtEoff
#define XtEoff ((String)&XtStrings[1902])
#endif
#ifndef XtEfalse
#define XtEfalse ((String)&XtStrings[1906])
#endif
#ifndef XtEno
#define XtEno ((String)&XtStrings[1912])
#endif
#ifndef XtEon
#define XtEon ((String)&XtStrings[1915])
#endif
#ifndef XtEtrue
#define XtEtrue ((String)&XtStrings[1918])
#endif
#ifndef XtEyes
#define XtEyes ((String)&XtStrings[1923])
#endif
#ifndef XtEvertical
#define XtEvertical ((String)&XtStrings[1927])
#endif
#ifndef XtEhorizontal
#define XtEhorizontal ((String)&XtStrings[1936])
#endif
#ifndef XtEtextRead
#define XtEtextRead ((String)&XtStrings[1947])
#endif
#ifndef XtEtextAppend
#define XtEtextAppend ((String)&XtStrings[1952])
#endif
#ifndef XtEtextEdit
#define XtEtextEdit ((String)&XtStrings[1959])
#endif
#ifndef XtExtdefaultbackground
#define XtExtdefaultbackground ((String)&XtStrings[1964])
#endif
#ifndef XtExtdefaultforeground
#define XtExtdefaultforeground ((String)&XtStrings[1984])
#endif
#ifndef XtExtdefaultfont
#define XtExtdefaultfont ((String)&XtStrings[2004])
#endif
#ifndef XtNfontSet
#define XtNfontSet ((String)&XtStrings[2018])
#endif
#ifndef XtRFontSet
#define XtRFontSet ((String)&XtStrings[2026])
#endif
#ifndef XtCFontSet
#define XtCFontSet ((String)&XtStrings[2034])
#endif
#ifndef XtRGravity
#define XtRGravity ((String)&XtStrings[2042])
#endif
#ifndef XtNcreateHook
#define XtNcreateHook ((String)&XtStrings[2050])
#endif
#ifndef XtNchangeHook
#define XtNchangeHook ((String)&XtStrings[2061])
#endif
#ifndef XtNconfigureHook
#define XtNconfigureHook ((String)&XtStrings[2072])
#endif
#ifndef XtNgeometryHook
#define XtNgeometryHook ((String)&XtStrings[2086])
#endif
#ifndef XtNdestroyHook
#define XtNdestroyHook ((String)&XtStrings[2099])
#endif
#ifndef XtNshells
#define XtNshells ((String)&XtStrings[2111])
#endif
#ifndef XtNnumShells
#define XtNnumShells ((String)&XtStrings[2118])
#endif
#ifndef XtRCommandArgArray
#define XtRCommandArgArray ((String)&XtStrings[2128])
#endif
#ifndef XtRDirectoryString
#define XtRDirectoryString ((String)&XtStrings[2144])
#endif
#ifndef XtREnvironmentArray
#define XtREnvironmentArray ((String)&XtStrings[2160])
#endif
#ifndef XtRRestartStyle
#define XtRRestartStyle ((String)&XtStrings[2177])
#endif
#ifndef XtRSmcConn
#define XtRSmcConn ((String)&XtStrings[2190])
#endif
#ifndef XtHcreate
#define XtHcreate ((String)&XtStrings[2198])
#endif
#ifndef XtHsetValues
#define XtHsetValues ((String)&XtStrings[2207])
#endif
#ifndef XtHmanageChildren
#define XtHmanageChildren ((String)&XtStrings[2219])
#endif
#ifndef XtHunmanageChildren
#define XtHunmanageChildren ((String)&XtStrings[2236])
#endif
#ifndef XtHmanageSet
#define XtHmanageSet ((String)&XtStrings[2255])
#endif
#ifndef XtHunmanageSet
#define XtHunmanageSet ((String)&XtStrings[2267])
#endif
#ifndef XtHrealizeWidget
#define XtHrealizeWidget ((String)&XtStrings[2281])
#endif
#ifndef XtHunrealizeWidget
#define XtHunrealizeWidget ((String)&XtStrings[2297])
#endif
#ifndef XtHaddCallback
#define XtHaddCallback ((String)&XtStrings[2315])
#endif
#ifndef XtHaddCallbacks
#define XtHaddCallbacks ((String)&XtStrings[2329])
#endif
#ifndef XtHremoveCallback
#define XtHremoveCallback ((String)&XtStrings[2344])
#endif
#ifndef XtHremoveCallbacks
#define XtHremoveCallbacks ((String)&XtStrings[2361])
#endif
#ifndef XtHremoveAllCallbacks
#define XtHremoveAllCallbacks ((String)&XtStrings[2379])
#endif
#ifndef XtHaugmentTranslations
#define XtHaugmentTranslations ((String)&XtStrings[2400])
#endif
#ifndef XtHoverrideTranslations
#define XtHoverrideTranslations ((String)&XtStrings[2422])
#endif
#ifndef XtHuninstallTranslations
#define XtHuninstallTranslations ((String)&XtStrings[2445])
#endif
#ifndef XtHsetKeyboardFocus
#define XtHsetKeyboardFocus ((String)&XtStrings[2469])
#endif
#ifndef XtHsetWMColormapWindows
#define XtHsetWMColormapWindows ((String)&XtStrings[2488])
#endif
#ifndef XtHsetMappedWhenManaged
#define XtHsetMappedWhenManaged ((String)&XtStrings[2511])
#endif
#ifndef XtHmapWidget
#define XtHmapWidget ((String)&XtStrings[2534])
#endif
#ifndef XtHunmapWidget
#define XtHunmapWidget ((String)&XtStrings[2546])
#endif
#ifndef XtHpopup
#define XtHpopup ((String)&XtStrings[2560])
#endif
#ifndef XtHpopupSpringLoaded
#define XtHpopupSpringLoaded ((String)&XtStrings[2568])
#endif
#ifndef XtHpopdown
#define XtHpopdown ((String)&XtStrings[2588])
#endif
#ifndef XtHconfigure
#define XtHconfigure ((String)&XtStrings[2598])
#endif
#ifndef XtHpreGeometry
#define XtHpreGeometry ((String)&XtStrings[2610])
#endif
#ifndef XtHpostGeometry
#define XtHpostGeometry ((String)&XtStrings[2624])
#endif
#ifndef XtHdestroy
#define XtHdestroy ((String)&XtStrings[2639])
#endif
#endif /* XTSTRINGDEFINES */

#ifndef XTSTRINGDEFINES
#undef _XtStringDefs_h_Const
#endif

#endif /* _XtStringDefs_h_ */
                                                  usr/include/X11/Sunkeysym.h                                                                         0000644 0000000 0000000 00000007666 14230447153 014253  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        /*
 * Copyright (c) 1991, Oracle and/or its affiliates. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
/************************************************************

Copyright 1991, 1998  The Open Group

Permission to use, copy, modify, distribute, and sell this software and its
documentation for any purpose is hereby granted without fee, provided that
the above copyright notice appear in all copies and that both that
copyright notice and this permission notice appear in supporting
documentation.

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the name of The Open Group shall not be
used in advertising or otherwise to promote the sale, use or other dealings
in this Software without prior written authorization from The Open Group.

***********************************************************/

/*
 * Floating Accent
 */

#define	SunXK_FA_Grave		0x1005FF00
#define	SunXK_FA_Circum		0x1005FF01
#define	SunXK_FA_Tilde		0x1005FF02
#define	SunXK_FA_Acute		0x1005FF03
#define	SunXK_FA_Diaeresis	0x1005FF04
#define	SunXK_FA_Cedilla	0x1005FF05

/*
 * Miscellaneous Functions
 */

#define	SunXK_F36		0x1005FF10	/* Labeled F11 */
#define	SunXK_F37		0x1005FF11	/* Labeled F12 */

#define SunXK_Sys_Req   	0x1005FF60
#define SunXK_Print_Screen	0x0000FF61	/* Same as XK_Print */

/*
 * International & Multi-Key Character Composition
 */

#define SunXK_Compose		0x0000FF20	/* Same as XK_Multi_key */
#define SunXK_AltGraph		0x0000FF7E	/* Same as XK_Mode_switch */

/*
 * Cursor Control
 */

#define SunXK_PageUp		0x0000FF55 	/* Same as XK_Prior */
#define SunXK_PageDown		0x0000FF56	/* Same as XK_Next */

/*
 * Open Look Functions
 */

#define SunXK_Undo		0x0000FF65	/* Same as XK_Undo */
#define SunXK_Again		0x0000FF66	/* Same as XK_Redo */
#define SunXK_Find		0x0000FF68	/* Same as XK_Find */
#define SunXK_Stop		0x0000FF69	/* Same as XK_Cancel */
#define SunXK_Props		0x1005FF70
#define SunXK_Front		0x1005FF71
#define SunXK_Copy		0x1005FF72
#define SunXK_Open		0x1005FF73
#define SunXK_Paste		0x1005FF74
#define SunXK_Cut		0x1005FF75

#define SunXK_PowerSwitch		0x1005FF76
#define SunXK_AudioLowerVolume		0x1005FF77
#define SunXK_AudioMute			0x1005FF78
#define SunXK_AudioRaiseVolume		0x1005FF79
#define SunXK_VideoDegauss		0x1005FF7A
#define SunXK_VideoLowerBrightness	0x1005FF7B
#define SunXK_VideoRaiseBrightness	0x1005FF7C
#define SunXK_PowerSwitchShift		0x1005FF7D
                                                                          usr/include/X11/ThreadsI.h                                                                          0000644 0000000 0000000 00000010265 14412554710 013734  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        /************************************************************

Copyright (c) 1993, Oracle and/or its affiliates. All rights reserved.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice (including the next
paragraph) shall be included in all copies or substantial portions of the
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

********************************************************/

/*

Copyright 1994, 1998  The Open Group

Permission to use, copy, modify, distribute, and sell this software and its
documentation for any purpose is hereby granted without fee, provided that
the above copyright notice appear in all copies and that both that
copyright notice and this permission notice appear in supporting
documentation.

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the name of The Open Group shall not be
used in advertising or otherwise to promote the sale, use or other dealings
in this Software without prior written authorization from The Open Group.

*/
/* $XFree86: xc/lib/Xt/ThreadsI.h,v 3.5 2001/12/14 19:56:31 dawes Exp $ */

#ifndef _XtThreadsI_h
#define _XtThreadsI_h

#include <X11/XlibConf.h>

#ifdef XTHREADS

typedef struct _LockRec *LockPtr;

typedef void (*ThreadAppProc)(
    XtAppContext /* app */
);

typedef void (*ThreadAppYieldLockProc)(
    XtAppContext, /* app */
    Boolean*, /* push_thread */
    Boolean*, /* pushed_thread */
    int* /* level */
);

typedef void (*ThreadAppRestoreLockProc)(
    XtAppContext /* app */,
    int, /* level */
    Boolean* /* pushed_thread */
);

_XFUNCPROTOBEGIN

extern void (*_XtProcessLock)(
    void
);

extern void (*_XtProcessUnlock)(
    void
);

extern void (*_XtInitAppLock)(
    XtAppContext /* app */
);

_XFUNCPROTOEND

#define INIT_APP_LOCK(app) if(_XtInitAppLock) (*_XtInitAppLock)(app)
#define FREE_APP_LOCK(app) if(app && app->free_lock)(*app->free_lock)(app)

#define LOCK_PROCESS if(_XtProcessLock)(*_XtProcessLock)()
#define UNLOCK_PROCESS if(_XtProcessUnlock)(*_XtProcessUnlock)()
#define LOCK_APP(app) if(app && app->lock)(*app->lock)(app)
#define UNLOCK_APP(app) if(app && app->unlock)(*app->unlock)(app)

#define YIELD_APP_LOCK(app,push,pushed,level)\
	 if(app && app->yield_lock) (*app->yield_lock)(app,push,pushed,level)
#define RESTORE_APP_LOCK(app,level,pushed)\
	 if(app && app->restore_lock) (*app->restore_lock)(app,level,pushed)

#define WIDGET_TO_APPCON(w) \
    XtAppContext app = (w && _XtProcessLock ? \
	XtWidgetToApplicationContext(w) : NULL)

#define DPY_TO_APPCON(d) \
    XtAppContext app = (_XtProcessLock ? XtDisplayToApplicationContext(d): NULL)

#else /* defined(XTHREADS) */

#define LOCK_PROCESS
#define UNLOCK_PROCESS
#define LOCK_APP(app)
#define UNLOCK_APP(app)

#define INIT_APP_LOCK(app)
#define FREE_APP_LOCK(app)

#define WIDGET_TO_APPCON(w)
#define DPY_TO_APPCON(d)

#endif /* !defined(XTHREADS) */
#endif /* _XtThreadsI_h */
                                                                                                                                                                                                                                                                                                                                           usr/include/X11/TranslateI.h                                                                        0000644 0000000 0000000 00000041411 14412554710 014274  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        /***********************************************************

Copyright 1987, 1988, 1998  The Open Group

Permission to use, copy, modify, distribute, and sell this software and its
documentation for any purpose is hereby granted without fee, provided that
the above copyright notice appear in all copies and that both that
copyright notice and this permission notice appear in supporting
documentation.

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the name of The Open Group shall not be
used in advertising or otherwise to promote the sale, use or other dealings
in this Software without prior written authorization from The Open Group.


Copyright 1987, 1988 by Digital Equipment Corporation, Maynard, Massachusetts.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted,
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in
supporting documentation, and that the name of Digital not be
used in advertising or publicity pertaining to distribution of the
software without specific, written prior permission.

DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
DIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/

/*
 * TranslateI.h - Header file private to translation management
 *
 * Author:	Gabe Beged-Dov, HP
 *
 * Former Author:	Charles Haynes
 * 		Digital Equipment Corporation
 * 		Western Research Laboratory
 * Date:	Sat Aug 29 1987
 */

/*#define REFCNT_TRANSLATIONS*/
#define CACHE_TRANSLATIONS

#define TM_NO_MATCH (-2)

#define _XtRStateTablePair "_XtStateTablePair"

typedef unsigned char TMByteCard;
typedef unsigned short TMShortCard;
typedef unsigned long TMLongCard;
typedef short TMShortInt;

typedef struct _TMTypeMatchRec *TMTypeMatch;
typedef struct _TMModifierMatchRec *TMModifierMatch;
typedef struct _TMEventRec *TMEventPtr;

typedef Boolean (*MatchProc)(TMTypeMatch typeMatch,
			     TMModifierMatch modMatch,
			     TMEventPtr eventSeq);

typedef struct _ModToKeysymTable {
    Modifiers mask;
    int count;
    int idx;
} ModToKeysymTable;

typedef struct _LateBindings {
    unsigned int knot:1;
    unsigned int pair:1;
    unsigned short ref_count;	/* garbage collection */
    KeySym keysym;
} LateBindings, *LateBindingsPtr;

typedef short ModifierMask;

typedef struct _ActionsRec *ActionPtr;
typedef struct _ActionsRec {
    int idx;			/* index into quarkTable to find proc */
    String *params;		/* pointer to array of params */
    Cardinal num_params;	/* number of params */
    ActionPtr next;		/* next action to perform */
} ActionRec;

typedef struct _XtStateRec *StatePtr;
typedef struct _XtStateRec {
    unsigned int	isCycleStart:1;
    unsigned int	isCycleEnd:1;
    TMShortCard		typeIndex;
    TMShortCard		modIndex;
    ActionPtr		actions;	/* rhs list of actions to perform */
    StatePtr 		nextLevel;
}StateRec;


#define XtTableReplace	0
#define XtTableAugment	1
#define XtTableOverride	2
#define XtTableUnmerge  3

typedef unsigned int _XtTranslateOp;

/*
 * New Definitions
 */
typedef struct _TMModifierMatchRec{
    TMLongCard	 modifiers;
    TMLongCard	 modifierMask;
    LateBindingsPtr lateModifiers;
    Boolean	 standard;
}TMModifierMatchRec;

typedef struct _TMTypeMatchRec{
    TMLongCard	 eventType;
    TMLongCard	 eventCode;
    TMLongCard	 eventCodeMask;
    MatchProc	 matchEvent;
}TMTypeMatchRec;

typedef struct _TMBranchHeadRec {
    unsigned int	isSimple:1;
    unsigned int	hasActions:1;
    unsigned int	hasCycles:1;
    unsigned int	more:13;
    TMShortCard		typeIndex;
    TMShortCard		modIndex;
}TMBranchHeadRec, *TMBranchHead;

/* NOTE: elements of this structure must match those of
 * TMComplexStateTreeRec and TMParseStateTreeRec.
 */
typedef struct _TMSimpleStateTreeRec{
    unsigned int	isSimple:1;
    unsigned int	isAccelerator:1;
    unsigned int	mappingNotifyInterest:1;
    unsigned int	refCount:13;
    TMShortCard		numBranchHeads;
    TMShortCard		numQuarks;   /* # of entries in quarkTbl */
    TMShortCard		unused;	     /* to ensure same alignment */
    TMBranchHeadRec	*branchHeadTbl;
    XrmQuark		*quarkTbl;  /* table of quarkified rhs*/
}TMSimpleStateTreeRec, *TMSimpleStateTree;

/* NOTE: elements of this structure must match those of
 * TMSimpleStateTreeRec and TMParseStateTreeRec.
 */
typedef struct _TMComplexStateTreeRec{
    unsigned int	isSimple:1;
    unsigned int	isAccelerator:1;
    unsigned int	mappingNotifyInterest:1;
    unsigned int	refCount:13;
    TMShortCard		numBranchHeads;
    TMShortCard		numQuarks;   /* # of entries in quarkTbl */
    TMShortCard		numComplexBranchHeads;
    TMBranchHeadRec	*branchHeadTbl;
    XrmQuark		*quarkTbl;  /* table of quarkified rhs*/
    StatePtr		*complexBranchHeadTbl;
}TMComplexStateTreeRec, *TMComplexStateTree;

/* NOTE: elements of this structure must match those of
 * TMSimpleStateTreeRec and TMComplexStateTreeRec.
 */
typedef struct _TMParseStateTreeRec{
    unsigned int	isSimple:1;
    unsigned int	isAccelerator:1;
    unsigned int	mappingNotifyInterest:1;
    unsigned int	isStackQuarks:1;
    unsigned int	isStackBranchHeads:1;
    unsigned int	isStackComplexBranchHeads:1;
    unsigned int	unused:10; /* to ensure correct alignment */
    TMShortCard		numBranchHeads;
    TMShortCard		numQuarks;   /* # of entries in quarkTbl */
    TMShortCard		numComplexBranchHeads;
    TMBranchHeadRec	*branchHeadTbl;
    XrmQuark		*quarkTbl;  /* table of quarkified rhs*/
    StatePtr		*complexBranchHeadTbl;
    TMShortCard		branchHeadTblSize;
    TMShortCard		quarkTblSize; /*total size of quarkTbl */
    TMShortCard		complexBranchHeadTblSize;
    StatePtr		head;
}TMParseStateTreeRec, *TMParseStateTree;

typedef union _TMStateTreeRec{
    TMSimpleStateTreeRec	simple;
    TMParseStateTreeRec		parse;
    TMComplexStateTreeRec	complex;
}*TMStateTree, **TMStateTreePtr, **TMStateTreeList;

typedef struct _TMSimpleBindProcsRec {
    XtActionProc	*procs;
}TMSimpleBindProcsRec, *TMSimpleBindProcs;

typedef struct _TMComplexBindProcsRec {
    Widget	 	widget;		/*widgetID to pass to action Proc*/
    XtTranslations	aXlations;
    XtActionProc	*procs;
}TMComplexBindProcsRec, *TMComplexBindProcs;

typedef struct _TMSimpleBindDataRec {
    unsigned int		isComplex:1;	/* must be first */
    TMSimpleBindProcsRec	bindTbl[1];	/* variable length */
}TMSimpleBindDataRec, *TMSimpleBindData;

typedef struct _TMComplexBindDataRec {
    unsigned int		isComplex:1;	/* must be first */
    struct _ATranslationData	*accel_context;	/* for GetValues */
    TMComplexBindProcsRec	bindTbl[1]; 	/* variable length */
}TMComplexBindDataRec, *TMComplexBindData;

typedef union _TMBindDataRec{
    TMSimpleBindDataRec		simple;
    TMComplexBindDataRec	complex;
}*TMBindData;

typedef struct _TranslationData{
    unsigned char		hasBindings;	/* must be first */
    unsigned char		operation; /*replace,augment,override*/
    TMShortCard			numStateTrees;
    struct _TranslationData    	*composers[2];
    EventMask			eventMask;
    TMStateTree			stateTreeTbl[1]; /* variable length */
}TranslationData;

/*
 * ATranslations is returned by GetValues for translations that contain
 * accelerators.  The TM can differentiate between this and TranslationData
 * (that don't have a bindTbl) by looking at the first field (hasBindings)
 * of either structure.  All ATranslationData structures associated with a
 * widget are chained off the BindData record of the widget.
 */
typedef struct _ATranslationData{
    unsigned char		hasBindings;	/* must be first */
    unsigned char		operation;
    struct _TranslationData	*xlations;  /* actual translations */
    struct _ATranslationData	*next;      /* chain the contexts together */
    TMComplexBindProcsRec	bindTbl[1]; /* accelerator bindings */
}ATranslationData, *ATranslations;

typedef struct _TMConvertRec {
    XtTranslations	old; /* table to merge into */
    XtTranslations	new; /* table to merge from */
} TMConvertRec;

#define _XtEventTimerEventType ((TMLongCard)~0L)
#define KeysymModMask		(1L<<27) /* private to TM */
#define AnyButtonMask		(1L<<28) /* private to TM */

typedef struct _EventRec {
    TMLongCard modifiers;
    TMLongCard modifierMask;
    LateBindingsPtr lateModifiers;
    TMLongCard eventType;
    TMLongCard eventCode;
    TMLongCard eventCodeMask;
    MatchProc matchEvent;
    Boolean standard;
} Event;

typedef struct _EventSeqRec *EventSeqPtr;
typedef struct _EventSeqRec {
    Event event;	/* X event description */
    StatePtr state;	/* private to state table builder */
    EventSeqPtr next;	/* next event on line */
    ActionPtr actions;	/* r.h.s.   list of actions to perform */
} EventSeqRec;

typedef EventSeqRec EventRec;
typedef EventSeqPtr EventPtr;

typedef struct _TMEventRec {
    XEvent *xev;
    Event event;
}TMEventRec;

typedef struct _ActionHookRec {
    struct _ActionHookRec* next; /* must remain first */
    XtAppContext app;
    XtActionHookProc proc;
    XtPointer closure;
} ActionHookRec, *ActionHook;

/* choose a number between 2 and 8 */
#define TMKEYCACHELOG2 6
#define TMKEYCACHESIZE (1<<TMKEYCACHELOG2)

typedef struct _KeyCacheRec {
    unsigned char modifiers_return[256]; /* constant per KeyCode, key proc */
    KeyCode keycode[TMKEYCACHESIZE];
    unsigned char modifiers[TMKEYCACHESIZE];
    KeySym keysym[TMKEYCACHESIZE];
} TMKeyCache;

typedef struct _TMKeyContextRec {
    XEvent *event;
    unsigned long serial;
    KeySym keysym;
    Modifiers modifiers;
    TMKeyCache keycache;  /* keep this last, to keep offsets to others small */
} TMKeyContextRec, *TMKeyContext;

typedef struct _TMGlobalRec{
    TMTypeMatchRec 		**typeMatchSegmentTbl;
    TMShortCard			numTypeMatches;
    TMShortCard			numTypeMatchSegments;
    TMShortCard			typeMatchSegmentTblSize;
    TMModifierMatchRec 		**modMatchSegmentTbl;
    TMShortCard			numModMatches;
    TMShortCard			numModMatchSegments;
    TMShortCard			modMatchSegmentTblSize;
    Boolean			newMatchSemantics;
#ifdef TRACE_TM
    XtTranslations		*tmTbl;
    TMShortCard			numTms;
    TMShortCard			tmTblSize;
    struct _TMBindCacheRec	**bindCacheTbl;
    TMShortCard			numBindCache;
    TMShortCard			bindCacheTblSize;
    TMShortCard			numLateBindings;
    TMShortCard			numBranchHeads;
    TMShortCard			numComplexStates;
    TMShortCard			numComplexActions;
#endif /* TRACE_TM */
}TMGlobalRec;

_XFUNCPROTOBEGIN

extern TMGlobalRec _XtGlobalTM;

#define TM_MOD_SEGMENT_SIZE 	16
#define TM_TYPE_SEGMENT_SIZE 	16

#define TMGetTypeMatch(idx) \
  ((TMTypeMatch) \
   &((_XtGlobalTM.typeMatchSegmentTbl[((idx) >> 4)])[(idx) & 15]))
#define TMGetModifierMatch(idx) \
  ((TMModifierMatch) \
   &((_XtGlobalTM.modMatchSegmentTbl[(idx) >> 4])[(idx) & 15]))

/* Useful Access Macros */
#define TMNewMatchSemantics() (_XtGlobalTM.newMatchSemantics)
#define TMBranchMore(branch) (branch->more)
#define TMComplexBranchHead(tree, br) \
  (((TMComplexStateTree)tree)->complexBranchHeadTbl[TMBranchMore(br)])

#define TMGetComplexBindEntry(bindData, idx) \
  ((TMComplexBindProcs)&(((TMComplexBindData)bindData)->bindTbl[idx]))

#define TMGetSimpleBindEntry(bindData, idx) \
  ((TMSimpleBindProcs)&(((TMSimpleBindData)bindData)->bindTbl[idx]))


#define _InitializeKeysymTables(dpy, pd) \
    if (pd->keysyms == NULL) \
        _XtBuildKeysymTables(dpy, pd)

