};

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_EA__N_invlist[] = {  /* for ASCII/Latin1 */
	563,	/* Number of elements */
	148565664, /* Version and data structure type */
	0,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x20,
	0x7F,
	0xA1,
	0xA9,
	0xAA,
	0xAB,
	0xAC,
	0xB5,
	0xB6,
	0xBB,
	0xBC,
	0xC0,
	0xC6,
	0xC7,
	0xD0,
	0xD1,
	0xD7,
	0xD9,
	0xDE,
	0xE2,
	0xE6,
	0xE7,
	0xE8,
	0xEB,
	0xEC,
	0xEE,
	0xF0,
	0xF1,
	0xF2,
	0xF4,
	0xF7,
	0xFB,
	0xFC,
	0xFD,
	0xFE,
	0xFF,
	0x101,
	0x102,
	0x111,
	0x112,
	0x113,
	0x114,
	0x11B,
	0x11C,
	0x126,
	0x128,
	0x12B,
	0x12C,
	0x131,
	0x134,
	0x138,
	0x139,
	0x13F,
	0x143,
	0x144,
	0x145,
	0x148,
	0x14C,
	0x14D,
	0x14E,
	0x152,
	0x154,
	0x166,
	0x168,
	0x16B,
	0x16C,
	0x1CE,
	0x1CF,
	0x1D0,
	0x1D1,
	0x1D2,
	0x1D3,
	0x1D4,
	0x1D5,
	0x1D6,
	0x1D7,
	0x1D8,
	0x1D9,
	0x1DA,
	0x1DB,
	0x1DC,
	0x1DD,
	0x251,
	0x252,
	0x261,
	0x262,
	0x2C4,
	0x2C5,
	0x2C7,
	0x2C8,
	0x2C9,
	0x2CC,
	0x2CD,
	0x2CE,
	0x2D0,
	0x2D1,
	0x2D8,
	0x2DC,
	0x2DD,
	0x2DE,
	0x2DF,
	0x2E0,
	0x300,
	0x370,
	0x391,
	0x3A2,
	0x3A3,
	0x3AA,
	0x3B1,
	0x3C2,
	0x3C3,
	0x3CA,
	0x401,
	0x402,
	0x410,
	0x450,
	0x451,
	0x452,
	0x1100,
	0x1160,
	0x2010,
	0x2011,
	0x2013,
	0x2017,
	0x2018,
	0x201A,
	0x201C,
	0x201E,
	0x2020,
	0x2023,
	0x2024,
	0x2028,
	0x2030,
	0x2031,
	0x2032,
	0x2034,
	0x2035,
	0x2036,
	0x203B,
	0x203C,
	0x203E,
	0x203F,
	0x2074,
	0x2075,
	0x207F,
	0x2080,
	0x2081,
	0x2085,
	0x20A9,
	0x20AA,
	0x20AC,
	0x20AD,
	0x2103,
	0x2104,
	0x2105,
	0x2106,
	0x2109,
	0x210A,
	0x2113,
	0x2114,
	0x2116,
	0x2117,
	0x2121,
	0x2123,
	0x2126,
	0x2127,
	0x212B,
	0x212C,
	0x2153,
	0x2155,
	0x215B,
	0x215F,
	0x2160,
	0x216C,
	0x2170,
	0x217A,
	0x2189,
	0x218A,
	0x2190,
	0x219A,
	0x21B8,
	0x21BA,
	0x21D2,
	0x21D3,
	0x21D4,
	0x21D5,
	0x21E7,
	0x21E8,
	0x2200,
	0x2201,
	0x2202,
	0x2204,
	0x2207,
	0x2209,
	0x220B,
	0x220C,
	0x220F,
	0x2210,
	0x2211,
	0x2212,
	0x2215,
	0x2216,
	0x221A,
	0x221B,
	0x221D,
	0x2221,
	0x2223,
	0x2224,
	0x2225,
	0x2226,
	0x2227,
	0x222D,
	0x222E,
	0x222F,
	0x2234,
	0x2238,
	0x223C,
	0x223E,
	0x2248,
	0x2249,
	0x224C,
	0x224D,
	0x2252,
	0x2253,
	0x2260,
	0x2262,
	0x2264,
	0x2268,
	0x226A,
	0x226C,
	0x226E,
	0x2270,
	0x2282,
	0x2284,
	0x2286,
	0x2288,
	0x2295,
	0x2296,
	0x2299,
	0x229A,
	0x22A5,
	0x22A6,
	0x22BF,
	0x22C0,
	0x2312,
	0x2313,
	0x231A,
	0x231C,
	0x2329,
	0x232B,
	0x23E9,
	0x23ED,
	0x23F0,
	0x23F1,
	0x23F3,
	0x23F4,
	0x2460,
	0x24EA,
	0x24EB,
	0x254C,
	0x2550,
	0x2574,
	0x2580,
	0x2590,
	0x2592,
	0x2596,
	0x25A0,
	0x25A2,
	0x25A3,
	0x25AA,
	0x25B2,
	0x25B4,
	0x25B6,
	0x25B8,
	0x25BC,
	0x25BE,
	0x25C0,
	0x25C2,
	0x25C6,
	0x25C9,
	0x25CB,
	0x25CC,
	0x25CE,
	0x25D2,
	0x25E2,
	0x25E6,
	0x25EF,
	0x25F0,
	0x25FD,
	0x25FF,
	0x2605,
	0x2607,
	0x2609,
	0x260A,
	0x260E,
	0x2610,
	0x2614,
	0x2616,
	0x261C,
	0x261D,
	0x261E,
	0x261F,
	0x2640,
	0x2641,
	0x2642,
	0x2643,
	0x2648,
	0x2654,
	0x2660,
	0x2662,
	0x2663,
	0x2666,
	0x2667,
	0x266B,
	0x266C,
	0x266E,
	0x266F,
	0x2670,
	0x267F,
	0x2680,
	0x2693,
	0x2694,
	0x269E,
	0x26A0,
	0x26A1,
	0x26A2,
	0x26AA,
	0x26AC,
	0x26BD,
	0x26C0,
	0x26C4,
	0x26E2,
	0x26E3,
	0x26E4,
	0x26E8,
	0x2700,
	0x2705,
	0x2706,
	0x270A,
	0x270C,
	0x2728,
	0x2729,
	0x273D,
	0x273E,
	0x274C,
	0x274D,
	0x274E,
	0x274F,
	0x2753,
	0x2756,
	0x2757,
	0x2758,
	0x2776,
	0x2780,
	0x2795,
	0x2798,
	0x27B0,
	0x27B1,
	0x27BF,
	0x27C0,
	0x27E6,
	0x27EE,
	0x2985,
	0x2987,
	0x2B1B,
	0x2B1D,
	0x2B50,
	0x2B51,
	0x2B55,
	0x2B5A,
	0x2E80,
	0x2E9A,
	0x2E9B,
	0x2EF4,
	0x2F00,
	0x2FD6,
	0x2FF0,
	0x2FFC,
	0x3000,
	0x303F,
	0x3041,
	0x3097,
	0x3099,
	0x3100,
	0x3105,
	0x3130,
	0x3131,
	0x318F,
	0x3190,
	0x31E4,
	0x31F0,
	0x321F,
	0x3220,
	0x4DC0,
	0x4E00,
	0xA48D,
	0xA490,
	0xA4C7,
	0xA960,
	0xA97D,
	0xAC00,
	0xD7A4,
	0xE000,
	0xFB00,
	0xFE00,
	0xFE1A,
	0xFE30,
	0xFE53,
	0xFE54,
	0xFE67,
	0xFE68,
	0xFE6C,
	0xFF01,
	0xFFBF,
	0xFFC2,
	0xFFC8,
	0xFFCA,
	0xFFD0,
	0xFFD2,
	0xFFD8,
	0xFFDA,
	0xFFDD,
	0xFFE0,
	0xFFE7,
	0xFFE8,
	0xFFEF,
	0xFFFD,
	0xFFFE,
	0x16FE0,
	0x16FE5,
	0x16FF0,
	0x16FF2,
	0x17000,
	0x187F8,
	0x18800,
	0x18CD6,
	0x18D00,
	0x18D09,
	0x1AFF0,
	0x1AFF4,
	0x1AFF5,
	0x1AFFC,
	0x1AFFD,
	0x1AFFF,
	0x1B000,
	0x1B123,
	0x1B132,
	0x1B133,
	0x1B150,
	0x1B153,
	0x1B155,
	0x1B156,
	0x1B164,
	0x1B168,
	0x1B170,
	0x1B2FC,
	0x1F004,
	0x1F005,
	0x1F0CF,
	0x1F0D0,
	0x1F100,
	0x1F10B,
	0x1F110,
	0x1F12E,
	0x1F130,
	0x1F16A,
	0x1F170,
	0x1F1AD,
	0x1F200,
	0x1F203,
	0x1F210,
	0x1F23C,
	0x1F240,
	0x1F249,
	0x1F250,
	0x1F252,
	0x1F260,
	0x1F266,
	0x1F300,
	0x1F321,
	0x1F32D,
	0x1F336,
	0x1F337,
	0x1F37D,
	0x1F37E,
	0x1F394,
	0x1F3A0,
	0x1F3CB,
	0x1F3CF,
	0x1F3D4,
	0x1F3E0,
	0x1F3F1,
	0x1F3F4,
	0x1F3F5,
	0x1F3F8,
	0x1F43F,
	0x1F440,
	0x1F441,
	0x1F442,
	0x1F4FD,
	0x1F4FF,
	0x1F53E,
	0x1F54B,
	0x1F54F,
	0x1F550,
	0x1F568,
	0x1F57A,
	0x1F57B,
	0x1F595,
	0x1F597,
	0x1F5A4,
	0x1F5A5,
	0x1F5FB,
	0x1F650,
	0x1F680,
	0x1F6C6,
	0x1F6CC,
	0x1F6CD,
	0x1F6D0,
	0x1F6D3,
	0x1F6D5,
	0x1F6D8,
	0x1F6DC,
	0x1F6E0,
	0x1F6EB,
	0x1F6ED,
	0x1F6F4,
	0x1F6FD,
	0x1F7E0,
	0x1F7EC,
	0x1F7F0,
	0x1F7F1,
	0x1F90C,
	0x1F93B,
	0x1F93C,
	0x1F946,
	0x1F947,
	0x1FA00,
	0x1FA70,
	0x1FA7D,
	0x1FA80,
	0x1FA89,
	0x1FA90,
	0x1FABE,
	0x1FABF,
	0x1FAC6,
	0x1FACE,
	0x1FADC,
	0x1FAE0,
	0x1FAE9,
	0x1FAF0,
	0x1FAF9,
	0x20000,
	0x2FFFE,
	0x30000,
	0x3FFFE,
	0xE0100,
	0xE01F0,
	0xF0000,
	0xFFFFE,
	0x100000,
	0x10FFFE
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_EA__N_invlist[] = {  /* for EBCDIC 1047 */
	561,	/* Number of elements */
	148565664, /* Version and data structure type */
	0,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x40,
	0x41,
	0x44,
	0x46,
	0x4A,
	0x53,
	0x54,
	0x56,
	0x58,
	0x62,
	0x6A,
	0x71,
	0x79,
	0x8A,
	0x8C,
	0x8D,
	0x8E,
	0xA0,
	0xA1,
	0xB4,
	0xB5,
	0xBA,
	0xBB,
	0xCB,
	0xCD,
	0xCF,
	0xD0,
	0xDB,
	0xDC,
	0xDF,
	0xE0,
	0xEB,
	0xF0,
	0xFB,
	0x101,
	0x102,
	0x111,
	0x112,
	0x113,
	0x114,
	0x11B,
	0x11C,
	0x126,
	0x128,
	0x12B,
	0x12C,
	0x131,
	0x134,
	0x138,
	0x139,
	0x13F,
	0x143,
	0x144,
	0x145,
	0x148,
	0x14C,
	0x14D,
	0x14E,
	0x152,
	0x154,
	0x166,
	0x168,
	0x16B,
	0x16C,
	0x1CE,
	0x1CF,
	0x1D0,
	0x1D1,
	0x1D2,
	0x1D3,
	0x1D4,
	0x1D5,
	0x1D6,
	0x1D7,
	0x1D8,
	0x1D9,
	0x1DA,
	0x1DB,
	0x1DC,
	0x1DD,
	0x251,
	0x252,
	0x261,
	0x262,
	0x2C4,
	0x2C5,
	0x2C7,
	0x2C8,
	0x2C9,
	0x2CC,
	0x2CD,
	0x2CE,
	0x2D0,
	0x2D1,
	0x2D8,
	0x2DC,
	0x2DD,
	0x2DE,
	0x2DF,
	0x2E0,
	0x300,
	0x370,
	0x391,
	0x3A2,
	0x3A3,
	0x3AA,
	0x3B1,
	0x3C2,
	0x3C3,
	0x3CA,
	0x401,
	0x402,
	0x410,
	0x450,
	0x451,
	0x452,
	0x1100,
	0x1160,
	0x2010,
	0x2011,
	0x2013,
	0x2017,
	0x2018,
	0x201A,
	0x201C,
	0x201E,
	0x2020,
	0x2023,
	0x2024,
	0x2028,
	0x2030,
	0x2031,
	0x2032,
	0x2034,
	0x2035,
	0x2036,
	0x203B,
	0x203C,
	0x203E,
	0x203F,
	0x2074,
	0x2075,
	0x207F,
	0x2080,
	0x2081,
	0x2085,
	0x20A9,
	0x20AA,
	0x20AC,
	0x20AD,
	0x2103,
	0x2104,
	0x2105,
	0x2106,
	0x2109,
	0x210A,
	0x2113,
	0x2114,
	0x2116,
	0x2117,
	0x2121,
	0x2123,
	0x2126,
	0x2127,
	0x212B,
	0x212C,
	0x2153,
	0x2155,
	0x215B,
	0x215F,
	0x2160,
	0x216C,
	0x2170,
	0x217A,
	0x2189,
	0x218A,
	0x2190,
	0x219A,
	0x21B8,
	0x21BA,
	0x21D2,
	0x21D3,
	0x21D4,
	0x21D5,
	0x21E7,
	0x21E8,
	0x2200,
	0x2201,
	0x2202,
	0x2204,
	0x2207,
	0x2209,
	0x220B,
	0x220C,
	0x220F,
	0x2210,
	0x2211,
	0x2212,
	0x2215,
	0x2216,
	0x221A,
	0x221B,
	0x221D,
	0x2221,
	0x2223,
	0x2224,
	0x2225,
	0x2226,
	0x2227,
	0x222D,
	0x222E,
	0x222F,
	0x2234,
	0x2238,
	0x223C,
	0x223E,
	0x2248,
	0x2249,
	0x224C,
	0x224D,
	0x2252,
	0x2253,
	0x2260,
	0x2262,
	0x2264,
	0x2268,
	0x226A,
	0x226C,
	0x226E,
	0x2270,
	0x2282,
	0x2284,
	0x2286,
	0x2288,
	0x2295,
	0x2296,
	0x2299,
	0x229A,
	0x22A5,
	0x22A6,
	0x22BF,
	0x22C0,
	0x2312,
	0x2313,
	0x231A,
	0x231C,
	0x2329,
	0x232B,
	0x23E9,
	0x23ED,
	0x23F0,
	0x23F1,
	0x23F3,
	0x23F4,
	0x2460,
	0x24EA,
	0x24EB,
	0x254C,
	0x2550,
	0x2574,
	0x2580,
	0x2590,
	0x2592,
	0x2596,
	0x25A0,
	0x25A2,
	0x25A3,
	0x25AA,
	0x25B2,
	0x25B4,
	0x25B6,
	0x25B8,
	0x25BC,
	0x25BE,
	0x25C0,
	0x25C2,
	0x25C6,
	0x25C9,
	0x25CB,
	0x25CC,
	0x25CE,
	0x25D2,
	0x25E2,
	0x25E6,
	0x25EF,
	0x25F0,
	0x25FD,
	0x25FF,
	0x2605,
	0x2607,
	0x2609,
	0x260A,
	0x260E,
	0x2610,
	0x2614,
	0x2616,
	0x261C,
	0x261D,
	0x261E,
	0x261F,
	0x2640,
	0x2641,
	0x2642,
	0x2643,
	0x2648,
	0x2654,
	0x2660,
	0x2662,
	0x2663,
	0x2666,
	0x2667,
	0x266B,
	0x266C,
	0x266E,
	0x266F,
	0x2670,
	0x267F,
	0x2680,
	0x2693,
	0x2694,
	0x269E,
	0x26A0,
	0x26A1,
	0x26A2,
	0x26AA,
	0x26AC,
	0x26BD,
	0x26C0,
	0x26C4,
	0x26E2,
	0x26E3,
	0x26E4,
	0x26E8,
	0x2700,
	0x2705,
	0x2706,
	0x270A,
	0x270C,
	0x2728,
	0x2729,
	0x273D,
	0x273E,
	0x274C,
	0x274D,
	0x274E,
	0x274F,
	0x2753,
	0x2756,
	0x2757,
	0x2758,
	0x2776,
	0x2780,
	0x2795,
	0x2798,
	0x27B0,
	0x27B1,
	0x27BF,
	0x27C0,
	0x27E6,
	0x27EE,
	0x2985,
	0x2987,
	0x2B1B,
	0x2B1D,
	0x2B50,
	0x2B51,
	0x2B55,
	0x2B5A,
	0x2E80,
	0x2E9A,
	0x2E9B,
	0x2EF4,
	0x2F00,
	0x2FD6,
	0x2FF0,
	0x2FFC,
	0x3000,
	0x303F,
	0x3041,
	0x3097,
	0x3099,
	0x3100,
	0x3105,
	0x3130,
	0x3131,
	0x318F,
	0x3190,
	0x31E4,
	0x31F0,
	0x321F,
	0x3220,
	0x4DC0,
	0x4E00,
	0xA48D,
	0xA490,
	0xA4C7,
	0xA960,
	0xA97D,
	0xAC00,
	0xD7A4,
	0xE000,
	0xFB00,
	0xFE00,
	0xFE1A,
	0xFE30,
	0xFE53,
	0xFE54,
	0xFE67,
	0xFE68,
	0xFE6C,
	0xFF01,
	0xFFBF,
	0xFFC2,
