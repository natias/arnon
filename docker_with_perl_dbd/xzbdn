	"bali",
	"Balinese",
	"balinese",
	"Bamu",
	"bamu",
	"Bamum",
	"bamum",
	"Bass",
	"bass",
	"Bassa_Vah",
	"bassavah",
	"Batak",
	"batak",
	"Batk",
	"batk",
	"Beng",
	"beng",
	"Bengali",
	"bengali",
	"Bhaiksuki",
	"bhaiksuki",
	"Bhks",
	"bhks",
	"Bopo",
	"bopo",
	"Bopomofo",
	"bopomofo",
	"Brah",
	"brah",
	"Brahmi",
	"brahmi",
	"Brai",
	"brai",
	"Braille",
	"braille",
	"Bugi",
	"bugi",
	"Buginese",
	"buginese",
	"Buhd",
	"buhd",
	"Buhid",
	"buhid",
	"Cakm",
	"cakm",
	"Canadian_Aboriginal",
	"canadianaboriginal",
	"Cans",
	"cans",
	"Cari",
	"cari",
	"Carian",
	"carian",
	"Caucasian_Albanian",
	"caucasianalbanian",
	"Chakma",
	"chakma",
	"Cham",
	"cham",
	"Cher",
	"cher",
	"Cherokee",
	"cherokee",
	"Chorasmian",
	"chorasmian",
	"Chrs",
	"chrs",
	"Common",
	"common",
	"Copt",
	"copt",
	"Coptic",
	"coptic",
	"Cpmn",
	"cpmn",
	"Cprt",
	"cprt",
	"Cuneiform",
	"cuneiform",
	"Cypriot",
	"cypriot",
	"Cypro_Minoan",
	"cyprominoan",
	"Cyrillic",
	"cyrillic",
	"Cyrl",
	"cyrl",
	"Deseret",
	"deseret",
	"Deva",
	"deva",
	"Devanagari",
	"devanagari",
	"Diak",
	"diak",
	"Dives_Akuru",
	"divesakuru",
	"Dogr",
	"dogr",
	"Dogra",
	"dogra",
	"Dsrt",
	"dsrt",
	"Dupl",
	"dupl",
	"Duployan",
	"duployan",
	"Egyp",
	"egyp",
	"Egyptian_Hieroglyphs",
	"egyptianhieroglyphs",
	"Elba",
	"elba",
	"Elbasan",
	"elbasan",
	"Elym",
	"elym",
	"Elymaic",
	"elymaic",
	"Ethi",
	"ethi",
	"Ethiopic",
	"ethiopic",
	"Geor",
	"geor",
	"Georgian",
	"georgian",
	"Glag",
	"glag",
	"Glagolitic",
	"glagolitic",
	"Gong",
	"gong",
	"Gonm",
	"gonm",
	"Goth",
	"goth",
	"Gothic",
	"gothic",
	"Gran",
	"gran",
	"Grantha",
	"grantha",
	"Greek",
	"greek",
	"Grek",
	"grek",
	"Gujarati",
	"gujarati",
	"Gujr",
	"gujr",
	"Gunjala_Gondi",
	"gunjalagondi",
	"Gurmukhi",
	"gurmukhi",
	"Guru",
	"guru",
	"Han",
	"han",
	"Hang",
	"hang",
	"Hangul",
	"hangul",
	"Hani",
	"hani",
	"Hanifi_Rohingya",
	"hanifirohingya",
	"Hano",
	"hano",
	"Hanunoo",
	"hanunoo",
	"Hatr",
	"hatr",
	"Hatran",
	"hatran",
	"Hebr",
	"hebr",
	"Hebrew",
	"hebrew",
	"Hira",
	"hira",
	"Hiragana",
	"hiragana",
	"Hluw",
	"hluw",
	"Hmng",
	"hmng",
	"Hmnp",
	"hmnp",
	"Hung",
	"hung",
	"Imperial_Aramaic",
	"imperialaramaic",
	"Inherited",
	"inherited",
	"Inscriptional_Pahlavi",
	"inscriptionalpahlavi",
	"Inscriptional_Parthian",
	"inscriptionalparthian",
	"Ital",
	"ital",
	"Java",
	"java",
	"Javanese",
	"javanese",
	"Kaithi",
	"kaithi",
	"Kali",
	"kali",
	"Kana",
	"kana",
	"Kannada",
	"kannada",
	"Katakana",
	"katakana",
	"Kayah_Li",
	"kayahli",
	"Khar",
	"khar",
	"Kharoshthi",
	"kharoshthi",
	"Khitan_Small_Script",
	"khitansmallscript",
	"Khmer",
	"khmer",
	"Khmr",
	"khmr",
	"Khoj",
	"khoj",
	"Khojki",
	"khojki",
	"Khudawadi",
	"khudawadi",
	"Kits",
	"kits",
	"Knda",
	"knda",
	"Kthi",
	"kthi",
	"Lana",
	"lana",
	"Lao",
	"lao",
	"Laoo",
	"laoo",
	"Latin",
	"latin",
	"Latn",
	"latn",
	"Lepc",
	"lepc",
	"Lepcha",
	"lepcha",
	"Limb",
	"limb",
	"Limbu",
	"limbu",
	"Lina",
	"lina",
	"Linb",
	"linb",
	"Linear_A",
	"lineara",
	"Linear_B",
	"linearb",
	"Lisu",
	"lisu",
	"Lyci",
	"lyci",
	"Lycian",
	"lycian",
	"Lydi",
	"lydi",
	"Lydian",
	"lydian",
	"Mahajani",
	"mahajani",
	"Mahj",
	"mahj",
	"Maka",
	"maka",
	"Makasar",
	"makasar",
	"Malayalam",
	"malayalam",
	"Mand",
	"mand",
	"Mandaic",
	"mandaic",
	"Mani",
	"mani",
	"Manichaean",
	"manichaean",
	"Marc",
	"marc",
	"Marchen",
	"marchen",
	"Masaram_Gondi",
	"masaramgondi",
	"Medefaidrin",
	"medefaidrin",
	"Medf",
	"medf",
	"Meetei_Mayek",
	"meeteimayek",
	"Mend",
	"mend",
	"Mende_Kikakui",
	"mendekikakui",
	"Merc",
	"merc",
	"Mero",
	"mero",
	"Meroitic_Cursive",
	"meroiticcursive",
	"Meroitic_Hieroglyphs",
	"meroitichieroglyphs",
	"Miao",
	"miao",
	"Mlym",
	"mlym",
	"Modi",
	"modi",
	"Mong",
	"mong",
	"Mongolian",
	"mongolian",
	"Mro",
	"mro",
	"Mroo",
	"mroo",
	"Mtei",
	"mtei",
	"Mult",
	"mult",
	"Multani",
	"multani",
	"Myanmar",
	"myanmar",
	"Mymr",
	"mymr",
	"Nabataean",
	"nabataean",
	"Nand",
	"nand",
	"Nandinagari",
	"nandinagari",
	"Narb",
	"narb",
	"Nbat",
	"nbat",
	"Newa",
	"newa",
	"New_Tai_Lue",
	"newtailue",
	"Nko",
	"nko",
	"Nkoo",
	"nkoo",
	"Nshu",
	"nshu",
	"Nushu",
	"nushu",
	"Nyiakeng_Puachue_Hmong",
	"nyiakengpuachuehmong",
	"Ogam",
	"ogam",
	"Ogham",
	"ogham",
	"Ol_Chiki",
	"olchiki",
	"Olck",
	"olck",
	"Old_Hungarian",
	"oldhungarian",
	"Old_Italic",
	"olditalic",
	"Old_North_Arabian",
	"oldnortharabian",
	"Old_Permic",
	"oldpermic",
	"Old_Persian",
	"oldpersian",
	"Old_Sogdian",
	"oldsogdian",
	"Old_South_Arabian",
	"oldsoutharabian",
	"Old_Turkic",
	"oldturkic",
	"Old_Uyghur",
	"olduyghur",
	"Oriya",
	"oriya",
	"Orkh",
	"orkh",
	"Orya",
	"orya",
	"Osage",
	"osage",
	"Osge",
	"osge",
	"Osma",
	"osma",
	"Osmanya",
	"osmanya",
	"Ougr",
	"ougr",
	"Pahawh_Hmong",
	"pahawhhmong",
	"Palm",
	"palm",
	"Palmyrene",
	"palmyrene",
	"Pauc",
	"pauc",
	"Pau_Cin_Hau",
	"paucinhau",
	"Perm",
	"perm",
	"Phag",
	"phag",
	"Phags_Pa",
	"phagspa",
	"Phli",
	"phli",
	"Phlp",
	"phlp",
	"Phnx",
	"phnx",
	"Phoenician",
	"phoenician",
	"Plrd",
	"plrd",
	"Prti",
	"prti",
	"Psalter_Pahlavi",
	"psalterpahlavi",
	"Qaac",
	"qaac",
	"Qaai",
	"qaai",
	"Rejang",
	"rejang",
	"Rjng",
	"rjng",
	"Rohg",
	"rohg",
	"Runic",
	"runic",
	"Runr",
	"runr",
	"Samaritan",
	"samaritan",
	"Samr",
	"samr",
	"Sarb",
	"sarb",
	"Saur",
	"saur",
	"Saurashtra",
	"saurashtra",
	"Sgnw",
	"sgnw",
	"Sharada",
	"sharada",
	"Shavian",
	"shavian",
	"Shaw",
	"shaw",
	"Shrd",
	"shrd",
	"Sidd",
	"sidd",
	"Siddham",
	"siddham",
	"SignWriting",
	"signwriting",
	"Sind",
	"sind",
	"Sinh",
	"sinh",
	"Sinhala",
	"sinhala",
	"Sogd",
	"sogd",
	"Sogdian",
	"sogdian",
	"Sogo",
	"sogo",
	"Sora",
	"sora",
	"Sora_Sompeng",
	"sorasompeng",
	"Soyo",
	"soyo",
	"Soyombo",
	"soyombo",
	"Sund",
	"sund",
	"Sundanese",
	"sundanese",
	"Sylo",
	"sylo",
	"Syloti_Nagri",
	"sylotinagri",
	"Syrc",
	"syrc",
	"Syriac",
	"syriac",
	"Tagalog",
	"tagalog",
	"Tagb",
	"tagb",
	"Tagbanwa",
	"tagbanwa",
	"Tai_Le",
	"taile",
	"Tai_Tham",
	"taitham",
	"Tai_Viet",
	"taiviet",
	"Takr",
	"takr",
	"Takri",
	"takri",
	"Tale",
	"tale",
	"Talu",
	"talu",
	"Tamil",
	"tamil",
	"Taml",
	"taml",
	"Tang",
	"tang",
	"Tangsa",
	"tangsa",
	"Tangut",
	"tangut",
	"Tavt",
	"tavt",
	"Telu",
	"telu",
	"Telugu",
	"telugu",
	"Tfng",
	"tfng",
	"Tglg",
	"tglg",
	"Thaa",
	"thaa",
	"Thaana",
	"thaana",
	"Thai",
	"thai",
	"Tibetan",
	"tibetan",
	"Tibt",
	"tibt",
	"Tifinagh",
	"tifinagh",
	"Tirh",
	"tirh",
	"Tirhuta",
	"tirhuta",
	"Tnsa",
	"tnsa",
	"Toto",
	"toto",
	"Ugar",
	"ugar",
	"Ugaritic",
	"ugaritic",
	"Unknown",
	"unknown",
	"Vai",
	"vai",
	"Vaii",
	"vaii",
	"Vith",
	"vith",
	"Vithkuqi",
	"vithkuqi",
	"Wancho",
	"wancho",
	"Wara",
	"wara",
	"Warang_Citi",
	"warangciti",
	"Wcho",
	"wcho",
	"Xpeo",
	"xpeo",
	"Xsux",
	"xsux",
	"Yezi",
	"yezi",
	"Yezidi",
	"yezidi",
	"Yi",
	"yi",
	"Yiii",
	"yiii",
	"Zanabazar_Square",
	"zanabazarsquare",
	"Zanb",
	"zanb",
	"Zinh",
	"zinh",
	"Zyyy",
	"zyyy",
	"Zzzz",
	"zzzz",
	NULL
};

static const char * const UNI_vo_values[] = {
	"R",
	"r",
	"Rotated",
	"rotated",
	"Tr",
	"tr",
	"Transformed_Rotated",
	"transformedrotated",
	"Transformed_Upright",
	"transformedupright",
	"Tu",
	"tu",
	"U",
	"u",
	"Upright",
	"upright",
	NULL
};

static const char * const UNI_wb_values[] = {
	"ALetter",
	"aletter",
	"CR",
	"cr",
	"Double_Quote",
	"doublequote",
	"DQ",
	"dq",
	"EB",
	"eb",
	"E_Base",
	"ebase",
	"E_Base_GAZ",
	"ebasegaz",
	"EBG",
	"ebg",
	"EM",
	"em",
	"E_Modifier",
	"emodifier",
	"EX",
	"ex",
	"Extend",
	"extend",
	"ExtendNumLet",
	"extendnumlet",
	"FO",
	"fo",
	"Format",
	"format",
	"GAZ",
	"gaz",
	"Glue_After_Zwj",
	"glueafterzwj",
	"Hebrew_Letter",
	"hebrewletter",
	"HL",
	"hl",
	"KA",
	"ka",
	"Katakana",
	"katakana",
	"LE",
	"le",
	"LF",
	"lf",
	"MB",
	"mb",
	"MidLetter",
	"midletter",
	"MidNum",
	"midnum",
	"MidNumLet",
	"midnumlet",
	"ML",
	"ml",
	"MN",
	"mn",
	"Newline",
	"newline",
	"NL",
	"nl",
	"NU",
	"nu",
	"Numeric",
	"numeric",
	"Other",
	"other",
	"Regional_Indicator",
	"regionalindicator",
	"RI",
	"ri",
	"Single_Quote",
	"singlequote",
	"SQ",
	"sq",
	"WSegSpace",
	"wsegspace",
	"XX",
	"xx",
	"ZWJ",
	"zwj",
	NULL
};

static const char * const * const UNI_prop_value_ptrs[] = {
NULL /* Placeholder so zero index is an error */,
UNI_age_values,
UNI_ahex_values,
UNI_bc_values,
UNI_blk_values,
UNI_bpt_values,
UNI_ccc_values,
UNI_dt_values,
UNI_ea_values,
UNI_gc_values,
UNI_gcb_values,
UNI_hst_values,
UNI_identifierstatus_values,
UNI_identifiertype_values,
UNI_inpc_values,
UNI_insc_values,
UNI_jg_values,
UNI_jt_values,
UNI_lb_values,
UNI_nfcqc_values,
UNI_nfdqc_values,
UNI_nt_values,
UNI_nv_values,
UNI_sb_values,
UNI_sc_values,
UNI_vo_values,
UNI_wb_values
};


#define UNI_age_values_index  1
#define UNI_ahex_values_index  2
#define UNI_alpha_values_index  UNI_ahex_values_index
#define UNI_bc_values_index  3
#define UNI_bidic_values_index  UNI_ahex_values_index
#define UNI_bidim_values_index  UNI_ahex_values_index
#define UNI_blk_values_index  4
#define UNI_bpt_values_index  5
#define UNI_cased_values_index  UNI_ahex_values_index
#define UNI_ccc_values_index  6
#define UNI_ce_values_index  UNI_ahex_values_index
#define UNI_ci_values_index  UNI_ahex_values_index
#define UNI_compex_values_index  UNI_ahex_values_index
#define UNI_cwcf_values_index  UNI_ahex_values_index
#define UNI_cwcm_values_index  UNI_ahex_values_index
#define UNI_cwkcf_values_index  UNI_ahex_values_index
#define UNI_cwl_values_index  UNI_ahex_values_index
#define UNI_cwt_values_index  UNI_ahex_values_index
#define UNI_cwu_values_index  UNI_ahex_values_index
#define UNI_dash_values_index  UNI_ahex_values_index
#define UNI_dep_values_index  UNI_ahex_values_index
#define UNI_di_values_index  UNI_ahex_values_index
#define UNI_dia_values_index  UNI_ahex_values_index
#define UNI_dt_values_index  7
#define UNI_ea_values_index  8
#define UNI_ebase_values_index  UNI_ahex_values_index
#define UNI_ecomp_values_index  UNI_ahex_values_index
#define UNI_emod_values_index  UNI_ahex_values_index
#define UNI_emoji_values_index  UNI_ahex_values_index
#define UNI_epres_values_index  UNI_ahex_values_index
#define UNI_ext_values_index  UNI_ahex_values_index
#define UNI_extpict_values_index  UNI_ahex_values_index
#define UNI_gc_values_index  9
#define UNI_gcb_values_index  10
#define UNI_grbase_values_index  UNI_ahex_values_index
#define UNI_grext_values_index  UNI_ahex_values_index
#define UNI_hex_values_index  UNI_ahex_values_index
#define UNI_hst_values_index  11
#define UNI_hyphen_values_index  UNI_ahex_values_index
#define UNI_idc_values_index  UNI_ahex_values_index
#define UNI_identifierstatus_values_index  12
#define UNI_identifiertype_values_index  13
#define UNI_ideo_values_index  UNI_ahex_values_index
#define UNI_ids_values_index  UNI_ahex_values_index
#define UNI_idsb_values_index  UNI_ahex_values_index
#define UNI_idst_values_index  UNI_ahex_values_index
#define UNI_in_values_index  UNI_age_values_index
#define UNI_inpc_values_index  14
#define UNI_insc_values_index  15
#define UNI_jg_values_index  16
#define UNI_joinc_values_index  UNI_ahex_values_index
#define UNI_jt_values_index  17
#define UNI_lb_values_index  18
#define UNI_loe_values_index  UNI_ahex_values_index
#define UNI_lower_values_index  UNI_ahex_values_index
#define UNI_math_values_index  UNI_ahex_values_index
#define UNI_nchar_values_index  UNI_ahex_values_index
#define UNI_nfcqc_values_index  19
#define UNI_nfdqc_values_index  20
#define UNI_nfkcqc_values_index  UNI_nfcqc_values_index
#define UNI_nfkdqc_values_index  UNI_nfdqc_values_index
#define UNI_nt_values_index  21
#define UNI_nv_values_index  22
#define UNI_patsyn_values_index  UNI_ahex_values_index
#define UNI_patws_values_index  UNI_ahex_values_index
#define UNI_pcm_values_index  UNI_ahex_values_index
#define UNI_qmark_values_index  UNI_ahex_values_index
#define UNI_radical_values_index  UNI_ahex_values_index
#define UNI_ri_values_index  UNI_ahex_values_index
#define UNI_sb_values_index  23
#define UNI_sc_values_index  24
#define UNI_scx_values_index  UNI_sc_values_index
#define UNI_sd_values_index  UNI_ahex_values_index
#define UNI_sterm_values_index  UNI_ahex_values_index
#define UNI_term_values_index  UNI_ahex_values_index
#define UNI_uideo_values_index  UNI_ahex_values_index
#define UNI_upper_values_index  UNI_ahex_values_index
#define UNI_vo_values_index  25
#define UNI_vs_values_index  UNI_ahex_values_index
#define UNI_wb_values_index  26
#define UNI_wspace_values_index  UNI_ahex_values_index
#define UNI_xidc_values_index  UNI_ahex_values_index
#define UNI_xids_values_index  UNI_ahex_values_index

#endif	/* (defined(PERL_IN_REGCOMP_C) && ! defined(PERL_IN_XSUB_RE)) */

#if defined(PERL_IN_REGEXEC_C)

#define GCB_NOBREAK                0
#define GCB_BREAKABLE              1
#define GCB_RI_then_RI             2
#define GCB_EX_then_EM             3
#define GCB_Maybe_Emoji_NonBreak   4

static const U8 GCB_table[17][17] = {
   /* 'edg' stands for 'EDGE'; 'EPX' stands for 'ExtPict_XX'; u
    * stands for 'unused in this Unicode release (and the data in
    * its row and column are garbage) */
/*        XX CN CR edg EPX EX  L LF LV LVT PP RI SM  T  V ZWJ  u */
/* XX */ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 1, 1,  0, 1 },
/* CN */ { 1, 1, 1,  1,  1, 1, 1, 1, 1,  1, 1, 1, 1, 1, 1,  1, 1 },
/* CR */ { 1, 1, 1,  1,  1, 1, 1, 0, 1,  1, 1, 1, 1, 1, 1,  1, 1 },
/* edg*/ { 1, 1, 1,  0,  1, 1, 1, 1, 1,  1, 1, 1, 1, 1, 1,  1, 1 },
/* EPX*/ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 1, 1,  0, 1 },
/* EX */ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 1, 1,  0, 3 },
/* L  */ { 1, 1, 1,  1,  1, 0, 0, 1, 0,  0, 1, 1, 0, 1, 0,  0, 1 },
/* LF */ { 1, 1, 1,  1,  1, 1, 1, 1, 1,  1, 1, 1, 1, 1, 1,  1, 1 },
/* LV */ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 0, 0,  0, 1 },
/* LVT*/ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 0, 1,  0, 1 },
/* PP */ { 0, 1, 1,  1,  0, 0, 0, 1, 0,  0, 0, 0, 0, 0, 0,  0, 0 },
/* RI */ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 2, 0, 1, 1,  0, 1 },
/* SM */ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 1, 1,  0, 1 },
/* T  */ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 0, 1,  0, 1 },
/* V  */ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 0, 0,  0, 1 },
/* ZWJ*/ { 1, 1, 1,  1,  4, 0, 1, 1, 1,  1, 1, 1, 0, 1, 1,  0, 0 },
/* u  */ { 1, 1, 1,  1,  1, 0, 1, 1, 1,  1, 1, 1, 0, 1, 1,  0, 0 }
};

#define LB_NOBREAK                        0
#define LB_BREAKABLE                      1
#define LB_NOBREAK_EVEN_WITH_SP_BETWEEN   2
#define LB_CM_ZWJ_foo                     3
#define LB_SP_foo                         6
#define LB_PR_or_PO_then_OP_or_HY         9
#define LB_SY_or_IS_then_various         11
#define LB_HY_or_BA_then_foo             13
#define LB_RI_then_RI                    15
#define LB_various_then_PO_or_PR         32

static const U8 LB_table[42][42] = {
   /* 'EAO' stands for 'East_Asian_OP'; 'edg' stands for 'EDGE'; 'UEP' stands for 'Unassigned_Extended_Pictographic_Ideographic'; u stands for
    * 'unused in this Unicode release (and the data in its row and column are garbage) */
/*        AL B2 BA BB BK CB CL CM CP CR EAO EB edg EM EX GL H2 H3 HL HY ID IN IS JL JT JV LF NL NS NU OP PO PR QU RI SP SY UEP WJ ZW ZWJ  u */
/* AL */ { 0, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 0, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* B2 */ { 1, 2, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* BA */ {14,14, 0,14, 0, 1, 2, 0, 2, 0, 14,14,  1,14, 2,14,14,14,14, 0,14,13, 2,14,14,14, 0, 0, 0,14,14,14,14, 0,14, 0, 2, 14, 0, 0,  0, 2 },
/* BB */ { 0, 0, 0, 0, 0, 1, 2, 0, 2, 0,  0, 0,  1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,  0, 0, 0,  0, 2 },
/* BK */ { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1, 1,  1, 1 },
/* CB */ { 1, 1, 1, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* CL */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 2, 1, 1,33,33, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* CM */ { 3, 3, 3, 3, 0, 3, 3, 0, 3, 0,  3, 3,  1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 3,  3, 3, 0,  3, 3 },
/* CP */ { 0, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 0, 0, 1, 0, 2, 1, 1, 1, 0, 0, 2, 0, 1,33,33, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* CR */ { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1, 1,  1, 1 },
/* EAO*/ { 2, 2, 2, 2, 0, 2, 2, 2, 2, 0,  2, 2,  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2,  2, 2, 0,  2, 2 },
/* EB */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 0, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* edg*/ { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0 },
/* EM */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* EX */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* GL */ { 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,  0, 0,  1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,  0, 0, 0,  0, 2 },
/* H2 */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* H3 */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* HL */ { 0, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 0, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* HY */ {14,14, 0,14, 0, 1, 2, 0, 2, 0, 14,14,  1,14, 2,14,14,14,14, 0,14,13, 2,14,14,14, 0, 0, 0,13,14,14,14, 0,14, 0, 2, 14, 0, 0,  0, 2 },
/* ID */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* IN */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* IS */ { 0, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 0, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0,12, 1,33,33, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* JL */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* JT */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* JV */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* LF */ { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1, 1,  1, 1 },
/* NL */ { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1, 1,  1, 1 },
/* NS */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* NU */ { 0, 1, 0, 1, 0, 1, 0, 0, 0, 0,  1, 1,  1, 1, 2, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,  1, 0, 0,  0, 0 },
/* OP */ { 2, 2, 2, 2, 0, 2, 2, 2, 2, 0,  2, 2,  1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2,  2, 2, 0,  2, 2 },
/* PO */ { 0, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 0, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 0,10, 1, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* PR */ { 0, 1, 0, 1, 0, 1, 2, 0, 2, 0, 10, 0,  1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0,10, 1, 1, 0, 1, 0, 2,  0, 0, 0,  0, 2 },
/* QU */ { 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,  2, 0,  1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2,  0, 0, 0,  0, 2 },
/* RI */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0,15, 0, 2,  1, 0, 0,  0, 2 },
/* SP */ { 7, 7, 7, 7, 0, 7, 8, 7, 8, 0,  7, 7,  1, 7, 8, 7, 7, 7, 7, 7, 7, 7, 8, 7, 7, 7, 0, 0, 7, 7, 7, 7, 7, 7, 7, 0, 8,  7, 8, 0,  7, 8 },
/* SY */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 0, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0,12, 1,33,33, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* UEP*/ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 0, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 2,  1, 0, 0,  0, 2 },
/* WJ */ { 0, 0, 0, 0, 0, 0, 2, 0, 2, 0,  0, 0,  1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,  0, 0, 0,  0, 2 },
/* ZW */ { 1, 1, 1, 1, 0, 1, 1, 1, 1, 0,  1, 1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1,  1, 1, 0,  1, 1 },
/* ZWJ*/ { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0,  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0,  0, 0 },
/* u  */ { 1, 1, 0, 1, 0, 1, 2, 0, 2, 0,  1, 1,  1, 1, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1, 0, 0, 2, 1, 1,33,33, 0, 1, 0, 2,  1, 0, 0,  0, 2 }
};

#define WB_NOBREAK                        0
#define WB_BREAKABLE                      1
#define WB_hs_then_hs                     2
#define WB_Ex_or_FO_or_ZWJ_then_foo       3
#define WB_DQ_then_HL                     4
#define WB_HL_then_DQ                     6
#define WB_LE_or_HL_then_MB_or_ML_or_SQ   8
#define WB_MB_or_ML_or_SQ_then_LE_or_HL  10
#define WB_MB_or_MN_or_SQ_then_NU        12
#define WB_NU_then_MB_or_MN_or_SQ        14
#define WB_RI_then_RI                    16

static const U8 WB_table[23][23] = {
   /* 'edg' stands for 'EDGE'; 'EPL' stands for 'ExtPict_LE'; 'EPX' stands for
    * 'ExtPict_XX'; 'Ext' stands for 'Extend'; 'hs' stands for 'Perl_Tailored_HSpace';
    * u stands for 'unused in this Unicode release (and the data in its row and column
    * are garbage) */
/*        XX CR DQ edg EPL EPX EX Ext FO HL hs KA LE LF MB ML MN NL NU RI SQ ZWJ  u */
/* XX */ { 1, 1, 1,  1,  1,  1, 1,  0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  0, 1 },
/* CR */ { 1, 0, 1,  1,  1,  1, 1,  1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,  1, 1 },
/* DQ */ { 1, 1, 1,  1,  1,  1, 1,  0, 0, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  0, 1 },
/* edg*/ { 1, 1, 1,  0,  1,  1, 1,  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1, 1 },
/* EPL*/ { 1, 1, 1,  1,  0,  1, 0,  0, 0, 0, 1, 1, 0, 1, 9, 9, 1, 1, 0, 1, 9,  0, 1 },
/* EPX*/ { 1, 1, 1,  1,  1,  1, 1,  0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  0, 1 },
/* EX */ { 1, 1, 1,  1,  0,  1, 0,  0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1,  0, 1 },
/* Ext*/ { 3, 1, 3,  1,  3,  3, 3,  0, 0, 3, 1, 3, 3, 1, 3, 3, 3, 1, 3, 3, 3,  0, 3 },
/* FO */ { 3, 1, 3,  1,  3,  3, 3,  0, 0, 3, 1, 3, 3, 1, 3, 3, 3, 1, 3, 3, 3,  0, 3 },
/* HL */ { 1, 1, 7,  1,  0,  1, 0,  0, 0, 0, 1, 1, 0, 1, 9, 9, 1, 1, 0, 1, 8,  0, 1 },
/* hs */ { 1, 0, 1,  1,  1,  1, 1,  0, 0, 1, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,  0, 1 },
/* KA */ { 1, 1, 1,  1,  1,  1, 0,  0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,  0, 1 },
/* LE */ { 1, 1, 1,  1,  1,  1, 0,  0, 0, 0, 1, 1, 0, 1, 9, 9, 1, 1, 0, 1, 9,  0, 1 },
/* LF */ { 1, 0, 1,  1,  1,  1, 1,  1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,  1, 1 },
/* MB */ { 1, 1, 1,  1, 11,  1, 1,  0, 0,11, 1, 1,11, 1, 1, 1, 1, 1,13, 1, 1,  0, 1 },
/* ML */ { 1, 1, 1,  1, 11,  1, 1,  0, 0,11, 1, 1,11, 1, 1, 1, 1, 1, 1, 1, 1,  0, 1 },
/* MN */ { 1, 1, 1,  1,  1,  1, 1,  0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,13, 1, 1,  0, 1 },
/* NL */ { 1, 0, 1,  1,  1,  1, 1,  1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,  1, 1 },
/* NU */ { 1, 1, 1,  1,  0,  1, 0,  0, 0, 0, 1, 1, 0, 1,15, 1,15, 1, 0, 1,15,  0, 1 },
/* RI */ { 1, 1, 1,  1,  1,  1, 1,  0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,16, 1,  0, 1 },
/* SQ */ { 1, 1, 1,  1, 11,  1, 1,  0, 0,11, 1, 1,11, 1, 1, 1, 1, 1,13, 1, 1,  0, 1 },
/* ZWJ*/ { 3, 1, 3,  1,  0,  0, 3,  0, 0, 3, 1, 3, 3, 1, 3, 3, 3, 1, 3, 3, 3,  0, 0 },
/* u  */ { 1, 1, 1,  1,  1,  1, 1,  0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  0, 0 }
};

#endif	/* defined(PERL_IN_REGEXEC_C) */

/* More than one code point may have the same code point as their fold.  This
 * gives the maximum number in the current Unicode release.  (The folded-to
 * code point is not included in this count.)  For example, both 'S' and
 * \x{17F} fold to 's', so the number for that fold is 2.  Another way to
 * look at it is the maximum length of all the IVCF_AUX_TABLE's */
#define MAX_FOLD_FROMS 3

/* Generated from:
 * 688d673ec947f7ccf898b4eae9848139d4d33676b688dee54f449f8bf9d3bbd2 lib/Unicode/UCD.pm
 * c7698811e9adb6cc98fb996a7de4be2b6532f2ac67e76055cc8afdbf6ee18af3 lib/unicore/ArabicShaping.txt
 * 24a74555f918bbe99f5b3f1b83cf36fc0e205bb8a600a6a3aa539c710a3dcf27 lib/unicore/BidiBrackets.txt
 * 7a5c74cedc1616a9af0a9d22e108ae592d86fe93649c144ae6ba49f193a44122 lib/unicore/BidiMirroring.txt
 * 598870dddef7b34b5a972916528c456aff2765b79cd4f9647fb58ceb767e7f17 lib/unicore/Blocks.txt
 * a566cd48687b2cd897e02501118b2413c14ae86d318f9abbbba97feb84189f0f lib/unicore/CaseFolding.txt
 * 3360762fc3295cea54ab251c31df621d05ba4b94d46c60eaac29aa16d70ad1e0 lib/unicore/CompositionExclusions.txt
 * 7e058dec02147098bc9c28d86209f0f251bba0538f3b5a705ad02ea3bb709fe0 lib/unicore/DAge.txt
 * e3eddd7d469cd1b0feed7528defad1a1cc7c6a9ceb0ae4446a6d10921ed2e7bc lib/unicore/DCoreProperties.txt
 * b2c444c20730b097787fdf50bd7d6dd3fc5256ab8084f5b35b11c8776eca674c lib/unicore/DNormalizationProps.txt
 * f901ac011aa32a09224d6555da71e2532c59c1d3381322829de0e3b880507250 lib/unicore/EastAsianWidth.txt
 * 5995522f01633073911dad1edb74d13aa832f42862c0392a79627b85d52f2391 lib/unicore/EquivalentUnifiedIdeograph.txt
 * cd1c9367cba438afa965fcb5edc6ed3ec6e685fd5dd21c0cc20c026f04beb0e5 lib/unicore/HangulSyllableType.txt
 * 3f3f368fccdb37f350ecedc20b37fa71ab31c04e847884c77780d34283539f73 lib/unicore/IdStatus.txt
 * 45a150c23961b58d7784704af6c4daccd6517d97b6489e53d13bbdbf9e4f065f lib/unicore/IdType.txt
 * d8704c8725568813a947ff2ef38bcf1f05e2a6fbea6876ba384890f187a8bf61 lib/unicore/IndicPositionalCategory.txt
 * c7b969b653dc278fb66ab4136223d320e30ad19367eb791ae60dcc6d92071b16 lib/unicore/IndicSyllabicCategory.txt
