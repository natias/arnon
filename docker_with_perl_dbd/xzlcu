This document describes differences between the 5.22.0 release and the 5.22.1
release.

If you are upgrading from an earlier release such as 5.20.0, first read
L<perl5220delta>, which describes differences between 5.20.0 and 5.22.0.

=head1 Incompatible Changes

There are no changes intentionally incompatible with 5.20.0 other than the
following single exception, which we deemed to be a sensible change to make in
order to get the new C<\b{wb}> and (in particular) C<\b{sb}> features sane
before people decided they're worthless because of bugs in their Perl 5.22.0
implementation and avoided them in the future.
If any others exist, they are bugs, and we request that you submit a report.
See L</Reporting Bugs> below.

=head2 Bounds Checking Constructs

Several bugs, including a segmentation fault, have been fixed with the bounds
checking constructs (introduced in Perl 5.22) C<\b{gcb}>, C<\b{sb}>, C<\b{wb}>,
C<\B{gcb}>, C<\B{sb}>, and C<\B{wb}>.  All the C<\B{}> ones now match an empty
string; none of the C<\b{}> ones do.
L<[GH #14976]|https://github.com/Perl/perl5/issues/14976>

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

=over 4

=item *

L<Module::CoreList> has been upgraded from version 5.20150520 to 5.20151213.

=item *

L<PerlIO::scalar> has been upgraded from version 0.22 to 0.23.

=item *

L<POSIX> has been upgraded from version 1.53 to 1.53_01.

If C<POSIX::strerror> was passed C<$!> as its argument then it accidentally
cleared C<$!>.  This has been fixed.
L<[GH #14951]|https://github.com/Perl/perl5/issues/14951>

=item *

L<Storable> has been upgraded from version 2.53 to 2.53_01.

=item *

L<warnings> has been upgraded from version 1.32 to 1.34.

The C<warnings::enabled> example now actually uses C<warnings::enabled>.
L<[GH #14905]|https://github.com/Perl/perl5/issues/14905>

=item *

L<Win32> has been upgraded from version 0.51 to 0.52.

This has been updated for Windows 8.1, 10 and 2012 R2 Server.

=back

=head1 Documentation

=head2 Changes to Existing Documentation

=head3 L<perltie>

=over 4

=item *

The usage of C<FIRSTKEY> and C<NEXTKEY> has been clarified.

=back

=head3 L<perlvar>

=over 4

=item *

The specific true value of C<$!{E...}> is now documented, noting that it is
subject to change and not guaranteed.

=back

=head1 Diagnostics

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

=head2 Changes to Existing Diagnostics

=over 4

=item *

The C<printf> and C<sprintf> builtins are now more careful about the warnings
they emit: argument reordering now disables the "redundant argument" warning in
all cases.
L<[GH #14772]|https://github.com/Perl/perl5/issues/14772>

=back

=head1 Configuration and Compilation

=over 4

=item *

Using the C<NO_HASH_SEED> define in combination with the default hash algorithm
C<PERL_HASH_FUNC_ONE_AT_A_TIME_HARD> resulted in a fatal error while compiling
the interpreter, since Perl 5.17.10.  This has been fixed.

=item *

Configuring with ccflags containing quotes (e.g.
C<< -Accflags='-DAPPLLIB_EXP=\"/usr/libperl\"' >>) was broken in Perl 5.22.0
but has now been fixed again.
L<[GH #14732]|https://github.com/Perl/perl5/issues/14732>

=back

=head1 Platform Support

=head2 Platform-Specific Notes

=over 4

=item IRIX

=over

=item *

Under some circumstances IRIX stdio fgetc() and fread() set the errno to
C<ENOENT>, which made no sense according to either IRIX or POSIX docs.  Errno
is now cleared in such cases.
L<[GH #14557]|https://github.com/Perl/perl5/issues/14557>

=item *

Problems when multiplying long doubles by infinity have been fixed.
L<[GH #14993]|https://github.com/Perl/perl5/issues/14993>

=item *

All tests pass now on IRIX with the default build configuration.

=back

=back

=head1 Selected Bug Fixes

=over 4

=item *

C<qr/(?[ () ])/> no longer segfaults, giving a syntax error message instead.
L<[GH #14851]|https://github.com/Perl/perl5/issues/14851>

=item *

Regular expression possessive quantifier Perl 5.20 regression now fixed.
C<qr/>I<PAT>C<{>I<min>,I<max>C<}+>C</> is supposed to behave identically to
C<qr/(?E<gt>>I<PAT>C<{>I<min>,I<max>C<})/>.  Since Perl 5.20, this didn't work
if I<min> and I<max> were equal.
L<[GH #14857]|https://github.com/Perl/perl5/issues/14857>

=item *

Certain syntax errors in
L<perlrecharclass/Extended Bracketed Character Classes> caused panics instead
of the proper error message.  This has now been fixed.
L<[GH #15016]|https://github.com/Perl/perl5/issues/15016>

=item *

C<< BEGIN <> >> no longer segfaults and properly produces an error message.
L<[GH #13546]|https://github.com/Perl/perl5/issues/13546>

=item *

A regression from Perl 5.20 has been fixed, in which some syntax errors in
L<C<(?[...])>|perlrecharclass/Extended Bracketed Character Classes> constructs
within regular expression patterns could cause a segfault instead of a proper
error message.
L<[GH #14933]|https://github.com/Perl/perl5/issues/14933>

=item *

Another problem with
L<C<(?[...])>|perlrecharclass/Extended Bracketed Character Classes>
constructs has been fixed wherein things like C<\c]> could cause panics.
L<[GH #14934]|https://github.com/Perl/perl5/issues/14934>

=item *

In Perl 5.22.0, the logic changed when parsing a numeric parameter to the -C
option, such that the successfully parsed number was not saved as the option
value if it parsed to the end of the argument.
L<[GH #14748]|https://github.com/Perl/perl5/issues/14748>

=item *

Warning fatality is now ignored when rewinding the stack.  This prevents
infinite recursion when the now fatal error also causes rewinding of the stack.
L<[GH #14319]|https://github.com/Perl/perl5/issues/14319>

=item *

A crash with C<< %::=(); J->${\"::"} >> has been fixed.
L<[GH #14790]|https://github.com/Perl/perl5/issues/14790>

=item *

Nested quantifiers such as C</.{1}??/> should cause perl to throw a fatal
error, but were being silently accepted since Perl 5.20.0.  This has been
fixed.
L<[GH #14960]|https://github.com/Perl/perl5/issues/14960>

=item *

Regular expression sequences such as C</(?i/> (and similarly with other
recognized flags or combination of flags) should cause perl to throw a fatal
error, but were being silently accepted since Perl 5.18.0.  This has been
fixed.
L<[GH #14931]|https://github.com/Perl/perl5/issues/14931>

=item *

A bug in hexadecimal floating point literal support meant that high-order bits
could be lost in cases where mantissa overflow was caused by too many trailing
zeros in the fractional part.  This has been fixed.
L<[GH #15032]|https://github.com/Perl/perl5/issues/15032>

=item *

Another hexadecimal floating point bug, causing low-order bits to be lost in
cases where the last hexadecimal digit of the mantissa has bits straddling the
limit of the number of bits allowed for the mantissa, has also been fixed.
L<[GH #15033]|https://github.com/Perl/perl5/issues/15033>

=item *

Further hexadecimal floating point bugs have been fixed: In some circumstances,
the C<%a> format specifier could variously lose the sign of the negative zero,
fail to display zeros after the radix point with the requested precision, or
even lose the radix point after the leftmost hexadecimal digit completely.

=item *

A crash caused by incomplete expressions within C<< /(?[ ])/ >> (e.g.
C<< /(?[[0]+()+])/ >>) has been fixed.
L<[GH #15045]|https://github.com/Perl/perl5/issues/15045>

=back

=head1 Acknowledgements

Perl 5.22.1 represents approximately 6 months of development since Perl 5.22.0
and contains approximately 19,000 lines of changes across 130 files from 27
authors.

Excluding auto-generated files, documentation and release tools, there were
approximately 1,700 lines of changes to 44 .pm, .t, .c and .h files.

Perl continues to flourish into its third decade thanks to a vibrant community
of users and developers.  The following people are known to have contributed
the improvements that became Perl 5.22.1:

Aaron Crane, Abigail, Andy Broad, Aristotle Pagaltzis, Chase Whitener, Chris
'BinGOs' Williams, Craig A. Berry, Daniel Dragan, David Mitchell, Father
Chrysostomos, Herbert Breunung, Hugo van der Sanden, James E Keenan, Jan
Dubois, Jarkko Hietaniemi, Karen Etheridge, Karl Williamson, Lukas Mai, Matthew
Horsfall, Peter Martini, Rafael Garcia-Suarez, Ricardo Signes, Shlomi Fish,
Sisyphus, Steve Hay, Tony Cook, Victor Adam.

The list above is almost certainly incomplete as it is automatically generated
from version control history.  In particular, it does not include the names of
the (very much appreciated) contributors who reported issues to the Perl bug
tracker.

Many of the changes included in this version originated in the CPAN modules
included in Perl's core.  We're grateful to the entire CPAN community for
helping Perl to flourish.

For a more complete list of all of Perl's historical contributors, please see
the F<AUTHORS> file in the Perl source distribution.

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
https://rt.perl.org/ .  There may also be information at
http://www.perl.org/ , the Perl Home Page.

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send it
to perl5-security-report@perl.org.  This points to a closed subscription
unarchived mailing list, which includes all the core committers, who will be
able to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported.  Please only use this address for
security issues in the Perl core, not for modules independently distributed on
CPAN.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
                                                                                                                                                                                                   usr/local/lib/perl5/5.40.0/pod/perl5222delta.pod                                                    0000644 0000000 0000000 00000030037 14714567415 017266  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        =encoding utf8

=head1 NAME

perl5222delta - what is new for perl v5.22.2

=head1 DESCRIPTION

This document describes differences between the 5.22.1 release and the 5.22.2
release.

If you are upgrading from an earlier release such as 5.22.0, first read
L<perl5221delta>, which describes differences between 5.22.0 and 5.22.1.

=head1 Security

=head2 Fix out of boundary access in Win32 path handling

This is CVE-2015-8608.  For more information see
L<[GH #15067]|https://github.com/Perl/perl5/issues/15067>.

=head2 Fix loss of taint in C<canonpath()>

This is CVE-2015-8607.  For more information see
L<[GH #15084]|https://github.com/Perl/perl5/issues/15084>.

=head2 Set proper umask before calling C<mkstemp(3)>

In 5.22.0 perl started setting umask to C<0600> before calling C<mkstemp(3)>
and restoring it afterwards.  This wrongfully tells C<open(2)> to strip the
owner read and write bits from the given mode before applying it, rather than
the intended negation of leaving only those bits in place.

Systems that use mode C<0666> in C<mkstemp(3)> (like old versions of glibc)
create a file with permissions C<0066>, leaving world read and write permissions
regardless of current umask.

This has been fixed by using umask C<0177> instead.

L<[GH #15135]|https://github.com/Perl/perl5/issues/15135>

=head2 Avoid accessing uninitialized memory in Win32 C<crypt()>

Validation that will detect both a short salt and invalid characters in the
salt has been added.

L<[GH #15091]|https://github.com/Perl/perl5/issues/15091>

=head2 Remove duplicate environment variables from C<environ>

Previously, if an environment variable appeared more than once in C<environ[]>,
L<C<%ENV>|perlvar/%ENV> would contain the last entry for that name, while a
typical C<getenv()> would return the first entry.  We now make sure C<%ENV>
contains the same as what C<getenv()> returns.

Secondly, we now remove duplicates from C<environ[]>, so if a setting with that
name is set in C<%ENV> we won't pass an unsafe value to a child process.

This is CVE-2016-2381.

=head1 Incompatible Changes

There are no changes intentionally incompatible with Perl 5.22.1.  If any
exist, they are bugs, and we request that you submit a report.  See
L</Reporting Bugs> below.

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

=over 4

=item *

L<File::Spec> has been upgraded from version 3.56 to 3.56_01.

C<canonpath()> now preserves taint.  See L</"Fix loss of taint in
C<canonpath()>">.

=item *

L<Module::CoreList> has been upgraded from version 5.20151213 to 5.20160429.

The version number of L<Digest::SHA> listed for Perl 5.18.4 was wrong and has
been corrected.  Likewise for the version number of L<Config> in 5.18.3 and
5.18.4.
L<[GH #15202]|https://github.com/Perl/perl5/issues/15202>

=back

=head1 Documentation

=head2 Changes to Existing Documentation

=head3 L<perldiag>

=over 4

=item *

The explanation of the warning "unable to close filehandle %s properly: %s"
which can occur when doing an implicit close of a filehandle has been expanded
and improved.

=back

=head3 L<perlfunc>

=over 4

=item *

The documentation of L<C<hex()>|perlfunc/hex> has been revised to clarify valid
inputs.

=back

=head1 Configuration and Compilation

=over 4

=item *

Dtrace builds now build successfully on systems with a newer dtrace that
require an input object file that uses the probes in the F<.d> file.

Previously the probe would fail and cause a build failure.

L<[GH #13985]|https://github.com/Perl/perl5/issues/13985>

=item *

F<Configure> no longer probes for F<libnm> by default.  Originally this was the
"New Math" library, but the name has been re-used by the GNOME NetworkManager.

L<[GH #15115]|https://github.com/Perl/perl5/issues/15115>

=item *

F<Configure> now knows about gcc 5.

=item *

Compiling perl with B<-DPERL_MEM_LOG> now works again.

=back

=head1 Platform Support

=head2 Platform-Specific Notes

=over 4

=item Darwin

Compiling perl with B<-Dusecbacktrace> on Darwin now works again.

L<[GH #15245]|https://github.com/Perl/perl5/issues/15245>

=item OS X/Darwin

Builds with both B<-DDEBUGGING> and threading enabled would fail with a "panic:
free from wrong pool" error when built or tested from Terminal on OS X.  This
was caused by perl's internal management of the environment conflicting with an
atfork handler using the libc C<setenv()> function to update the environment.

Perl now uses C<setenv()>/C<unsetenv()> to update the environment on OS X.

L<[GH #14955]|https://github.com/Perl/perl5/issues/14955>

=item ppc64el

The floating point format of ppc64el (Debian naming for little-endian PowerPC)
is now detected correctly.

=item Tru64

A test failure in F<t/porting/extrefs.t> has been fixed.

=back

=head1 Internal Changes

=over 4

=item *

An unwarranted assertion in C<Perl_newATTRSUB_x()> has been removed.  If a stub
subroutine definition with a prototype has been seen, then any subsequent stub
(or definition) of the same subroutine with an attribute was causing an
assertion failure because of a null pointer.

L<[GH #15081]|https://github.com/Perl/perl5/issues/15081>

=back

=head1 Selected Bug Fixes

=over 4

=item *

Calls to the placeholder C<&PL_sv_yes> used internally when an C<import()> or
C<unimport()> method isn't found now correctly handle scalar context.
L<[GH #14902]|https://github.com/Perl/perl5/issues/14902>

=item *

The L<C<pipe()>|perlfunc/pipe> operator would assert for C<DEBUGGING> builds
instead of producing the correct error message.  The condition asserted on is
detected and reported on correctly without the assertions, so the assertions
were removed.
L<[GH #15015]|https://github.com/Perl/perl5/issues/15015>

=item *

In some cases, failing to parse a here-doc would attempt to use freed memory.
This was caused by a pointer not being restored correctly.
L<[GH #15009]|https://github.com/Perl/perl5/issues/15009>

=item *

Perl now reports more context when it sees an array where it expects to see an
operator, and avoids an assertion failure.
L<[GH #14472]|https://github.com/Perl/perl5/issues/14472>

=item *

If a here-doc was found while parsing another operator, the parser had already
read end of file, and the here-doc was not terminated, perl could produce an
assertion or a segmentation fault.  This now reliably complains about the
unterminated here-doc.
L<[GH #14789]|https://github.com/Perl/perl5/issues/14789>

=item *

Parsing beyond the end of the buffer when processing a C<#line> directive with
no filename is now avoided.
L<[GH #15139]|https://github.com/Perl/perl5/issues/15139>

=item *

Perl 5.22.0 added support for the C99 hexadecimal floating point notation, but
sometimes misparsed hex floats.  This has been fixed.
L<[GH #15120]|https://github.com/Perl/perl5/issues/15120>

=item *

Certain regex patterns involving a complemented posix class in an inverted
bracketed character class, and matching something else optionally would
improperly fail to match.  An example of one that could fail is
C<qr/_?[^\Wbar]\x{100}/>.  This has been fixed.
L<[GH #15181]|https://github.com/Perl/perl5/issues/15181>

=item *

Fixed an issue with L<C<pack()>|perlfunc/pack> where C<< pack "H" >> (and
C<< pack "h" >>) could read past the source when given a non-utf8 source and a
utf8 target.
L<[GH #14977]|https://github.com/Perl/perl5/issues/14977>

=item *

Fixed some cases where perl would abort due to a segmentation fault, or a
C-level assert.
L<[GH #14941]|https://github.com/Perl/perl5/issues/14941>
L<[GH #14962]|https://github.com/Perl/perl5/issues/14962>
L<[GH #14963]|https://github.com/Perl/perl5/issues/14963>
L<[GH #14997]|https://github.com/Perl/perl5/issues/14997>
L<[GH #15039]|https://github.com/Perl/perl5/issues/15039>
L<[GH #15247]|https://github.com/Perl/perl5/issues/15247>
L<[GH #15251]|https://github.com/Perl/perl5/issues/15251>

=item *

A memory leak when setting C<$ENV{foo}> on Darwin has been fixed.
L<[GH #14955]|https://github.com/Perl/perl5/issues/14955>

=item *

Perl now correctly raises an error when trying to compile patterns with
unterminated character classes while there are trailing backslashes.
L<[GH #14919]|https://github.com/Perl/perl5/issues/14919>

=item *

C<NOTHING> regops and C<EXACTFU_SS> regops in C<make_trie()> are now handled
properly.
L<[GH #14945]|https://github.com/Perl/perl5/issues/14945>

=item *

Perl now only tests C<semctl()> if we have everything needed to use it.  In
FreeBSD the C<semctl()> entry point may exist, but it can be disabled by
policy.
L<[GH #15180]|https://github.com/Perl/perl5/issues/15180>

=item *

A regression that allowed undeclared barewords as hash keys to work despite
strictures has been fixed.
L<[GH #15099]|https://github.com/Perl/perl5/issues/15099>

=item *

As an optimization (introduced in Perl 5.20.0), L<C<uc()>|perlfunc/uc>,
L<C<lc()>|perlfunc/lc>, L<C<ucfirst()>|perlfunc/ucfirst> and
L<C<lcfirst()>|perlfunc/lcfirst> sometimes modify their argument in-place
rather than returning a modified copy.  The criteria for this optimization has
been made stricter to avoid these functions accidentally modifying in-place
when they should not, which has been happening in some cases, e.g. in
L<List::Util>.

=item *

Excessive memory usage in the compilation of some regular expressions involving
non-ASCII characters has been reduced.  A more complete fix is forthcoming in
Perl 5.24.0.

=back

=head1 Acknowledgements

Perl 5.22.2 represents approximately 5 months of development since Perl 5.22.1
and contains approximately 3,000 lines of changes across 110 files from 24
authors.

Excluding auto-generated files, documentation and release tools, there were
approximately 1,500 lines of changes to 52 .pm, .t, .c and .h files.

Perl continues to flourish into its third decade thanks to a vibrant community
of users and developers.  The following people are known to have contributed
the improvements that became Perl 5.22.2:

Aaron Crane, Abigail, Andreas König, Aristotle Pagaltzis, Chris 'BinGOs'
Williams, Craig A. Berry, Dagfinn Ilmari Mannsåker, David Golden, David
Mitchell, H.Merijn Brand, James E Keenan, Jarkko Hietaniemi, Karen Etheridge,
Karl Williamson, Matthew Horsfall, Niko Tyni, Ricardo Signes, Sawyer X, Stevan
Little, Steve Hay, Todd Rinaldo, Tony Cook, Vladimir Timofeev, Yves Orton.

The list above is almost certainly incomplete as it is automatically generated
from version control history.  In particular, it does not include the names of
the (very much appreciated) contributors who reported issues to the Perl bug
tracker.

Many of the changes included in this version originated in the CPAN modules
included in Perl's core.  We're grateful to the entire CPAN community for
helping Perl to flourish.

For a more complete list of all of Perl's historical contributors, please see
the F<AUTHORS> file in the Perl source distribution.

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
https://rt.perl.org/ .  There may also be information at http://www.perl.org/ ,
the Perl Home Page.

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send it
to perl5-security-report@perl.org.  This points to a closed subscription
unarchived mailing list, which includes all the core committers, who will be
able to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported.  Please only use this address for
security issues in the Perl core, not for modules independently distributed on
CPAN.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 usr/local/lib/perl5/5.40.0/pod/perl5223delta.pod                                                    0000644 0000000 0000000 00000020372 14714567415 017270  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        =encoding utf8

=head1 NAME

perl5223delta - what is new for perl v5.22.3

=head1 DESCRIPTION

This document describes differences between the 5.22.2 release and the 5.22.3
release.

If you are upgrading from an earlier release such as 5.22.1, first read
L<perl5222delta>, which describes differences between 5.22.1 and 5.22.2.

=head1 Security

=head2 B<-Di> switch is now required for PerlIO debugging output

Previously PerlIO debugging output would be sent to the file specified by the
C<PERLIO_DEBUG> environment variable if perl wasn't running setuid and the
B<-T> or B<-t> switches hadn't been parsed yet.

If perl performed output at a point where it hadn't yet parsed its switches
this could result in perl creating or overwriting the file named by
C<PERLIO_DEBUG> even when the B<-T> switch had been supplied.

Perl now requires the B<-Di> switch to produce PerlIO debugging output.  By
default this is written to C<stderr>, but can optionally be redirected to a
file by setting the C<PERLIO_DEBUG> environment variable.

If perl is running setuid or the B<-T> switch was supplied C<PERLIO_DEBUG> is
ignored and the debugging output is sent to C<stderr> as for any other B<-D>
switch.

=head2 Core modules and tools no longer search F<"."> for optional modules

The tools and many modules supplied in core no longer search the default
current directory entry in L<C<@INC>|perlvar/@INC> for optional modules.  For
example, L<Storable> will remove the final F<"."> from C<@INC> before trying to
load L<Log::Agent>.

This prevents an attacker injecting an optional module into a process run by
another user where the current directory is writable by the attacker, e.g. the
F</tmp> directory.

In most cases this removal should not cause problems, but difficulties were
encountered with L<base>, which treats every module name supplied as optional.
These difficulties have not yet been resolved, so for this release there are no
changes to L<base>.  We hope to have a fix for L<base> in Perl 5.22.4.

To protect your own code from this attack, either remove the default F<".">
entry from C<@INC> at the start of your script, so:

  #!/usr/bin/perl
  use strict;
  ...

becomes:

  #!/usr/bin/perl
  BEGIN { pop @INC if $INC[-1] eq '.' }
  use strict;
  ...

or for modules, remove F<"."> from a localized C<@INC>, so:

  my $can_foo = eval { require Foo; }

becomes:

  my $can_foo = eval {
      local @INC = @INC;
      pop @INC if $INC[-1] eq '.';
      require Foo;
  };

=head1 Incompatible Changes

Other than the security changes above there are no changes intentionally
incompatible with Perl 5.22.2.  If any exist, they are bugs, and we request
that you submit a report.  See L</Reporting Bugs> below.

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

=over 4

=item *

L<Archive::Tar> has been upgraded from version 2.04 to 2.04_01.

=item *

L<bignum> has been upgraded from version 0.39 to 0.39_01.

=item *

L<CPAN> has been upgraded from version 2.11 to 2.11_01.

=item *

L<Digest> has been upgraded from version 1.17 to 1.17_01.

=item *

L<Digest::SHA> has been upgraded from version 5.95 to 5.95_01.

=item *

L<Encode> has been upgraded from version 2.72 to 2.72_01.

=item *

L<ExtUtils::Command> has been upgraded from version 1.20 to 1.20_01.

=item *

L<ExtUtils::MakeMaker> has been upgraded from version 7.04_01 to 7.04_02.

=item *

L<File::Fetch> has been upgraded from version 0.48 to 0.48_01.

=item *

L<File::Spec> has been upgraded from version 3.56_01 to 3.56_02.

=item *

L<HTTP::Tiny> has been upgraded from version 0.054 to 0.054_01.

=item *

L<IO> has been upgraded from version 1.35 to 1.35_01.

=item *

The IO-Compress modules have been upgraded from version 2.068 to 2.068_001.

=item *

L<IPC::Cmd> has been upgraded from version 0.92 to 0.92_01.

=item *

L<JSON::PP> has been upgraded from version 2.27300 to 2.27300_01.

=item *

L<Locale::Maketext> has been upgraded from version 1.26 to 1.26_01.

=item *

L<Locale::Maketext::Simple> has been upgraded from version 0.21 to 0.21_01.

=item *

L<Memoize> has been upgraded from version 1.03 to 1.03_01.

=item *

L<Module::CoreList> has been upgraded from version 5.20160429 to 5.20170114_22.

=item *

L<Net::Ping> has been upgraded from version 2.43 to 2.43_01.

=item *

L<Parse::CPAN::Meta> has been upgraded from version 1.4414 to 1.4414_001.

=item *

L<Pod::Html> has been upgraded from version 1.22 to 1.2201.

=item *

L<Pod::Perldoc> has been upgraded from version 3.25 to 3.25_01.

=item *

L<Storable> has been upgraded from version 2.53_01 to 2.53_02.

=item *

L<Sys::Syslog> has been upgraded from version 0.33 to 0.33_01.

=item *

L<Test> has been upgraded from version 1.26 to 1.26_01.

=item *

L<Test::Harness> has been upgraded from version 3.35 to 3.35_01.

=item *

L<XSLoader> has been upgraded from version 0.20 to 0.20_01, fixing a security
hole in which binary files could be loaded from a path outside of C<@INC>.
L<[GH #15418]|https://github.com/Perl/perl5/issues/15418>

=back

=head1 Documentation

=head2 Changes to Existing Documentation

=head3 L<perlapio>

=over 4

=item *

The documentation of C<PERLIO_DEBUG> has been updated.

=back

=head3 L<perlrun>

=over 4

=item *

The new B<-Di> switch has been documented, and the documentation of
C<PERLIO_DEBUG> has been updated.

=back

=head1 Testing

=over 4

=item *

A new test script, F<t/run/switchDx.t>, has been added to test that the new
B<-Di> switch is working correctly.

=back

=head1 Selected Bug Fixes

=over 4

=item *

The C<PadlistNAMES> macro is an lvalue again.

=back

=head1 Acknowledgements

Perl 5.22.3 represents approximately 9 months of development since Perl 5.22.2
and contains approximately 4,400 lines of changes across 240 files from 20
authors.

Excluding auto-generated files, documentation and release tools, there were
approximately 2,200 lines of changes to 170 .pm, .t, .c and .h files.

Perl continues to flourish into its third decade thanks to a vibrant community
of users and developers.  The following people are known to have contributed
the improvements that became Perl 5.22.3:

Aaron Crane, Abigail, Alex Vandiver, Aristotle Pagaltzis, Chad Granum, Chris
'BinGOs' Williams, Craig A. Berry, David Mitchell, Father Chrysostomos, James E
Keenan, Jarkko Hietaniemi, Karen Etheridge, Karl Williamson, Matthew Horsfall,
Niko Tyni, Ricardo Signes, Sawyer X, Stevan Little, Steve Hay, Tony Cook.

The list above is almost certainly incomplete as it is automatically generated
from version control history.  In particular, it does not include the names of
the (very much appreciated) contributors who reported issues to the Perl bug
tracker.

Many of the changes included in this version originated in the CPAN modules
included in Perl's core.  We're grateful to the entire CPAN community for
helping Perl to flourish.

For a more complete list of all of Perl's historical contributors, please see
the F<AUTHORS> file in the Perl source distribution.

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the Perl bug database at
