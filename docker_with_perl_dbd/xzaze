	0x2082,
	0x2085,
	0x111C9,
	0x111CA,
	0x1145E,
	0x1145F,
	0x11A33,
	0x11A34
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_INSC__SYLLABLEMODIFIER_invlist[] = {  /* for EBCDIC 1047 */
	41,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xEA,
	0xEB,
	0xFA,
	0xFB,
	0x9FE,
	0x9FF,
	0xF35,
	0xF36,
	0xF37,
	0xF38,
	0xFC6,
	0xFC7,
	0x17CB,
	0x17CC,
	0x17CE,
	0x17D1,
	0x17D3,
	0x17D4,
	0x17DD,
	0x17DE,
	0x193B,
	0x193C,
	0x1A7B,
	0x1A7D,
	0x1A7F,
	0x1A80,
	0x1C36,
	0x1C37,
	0x1DFB,
	0x1DFC,
	0x2074,
	0x2075,
	0x2082,
	0x2085,
	0x111C9,
	0x111CA,
	0x1145E,
	0x1145F,
	0x11A33,
	0x11A34
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_INSC__SYLLABLEMODIFIER_invlist[] = {  /* for EBCDIC 037 */
	41,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xEA,
	0xEB,
	0xFA,
	0xFB,
	0x9FE,
	0x9FF,
	0xF35,
	0xF36,
	0xF37,
	0xF38,
	0xFC6,
	0xFC7,
	0x17CB,
	0x17CC,
	0x17CE,
	0x17D1,
	0x17D3,
	0x17D4,
	0x17DD,
	0x17DE,
	0x193B,
	0x193C,
	0x1A7B,
	0x1A7D,
	0x1A7F,
	0x1A80,
	0x1C36,
	0x1C37,
	0x1DFB,
	0x1DFC,
	0x2074,
	0x2075,
	0x2082,
	0x2085,
	0x111C9,
	0x111CA,
	0x1145E,
	0x1145F,
	0x11A33,
	0x11A34
};

#  endif	/* EBCDIC 037 */

static const UV UNI_INSC__TONELETTER_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1970,
	0x1975,
	0xAAC0,
	0xAAC1,
	0xAAC2,
	0xAAC3
};

static const UV UNI_INSC__TONEMARK_invlist[] = {  /* for all charsets */
	31,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xE48,
	0xE4C,
	0xEC8,
	0xECC,
	0x1037,
	0x1038,
	0x1063,
	0x1065,
	0x1069,
	0x106E,
	0x1087,
	0x108E,
	0x108F,
	0x1090,
	0x109A,
	0x109C,
	0x19C8,
	0x19CA,
	0x1A75,
	0x1A7A,
	0xA92B,
	0xA92E,
	0xAA7B,
	0xAA7E,
	0xAABF,
	0xAAC0,
	0xAAC1,
	0xAAC2,
	0xABEC,
	0xABED
};

static const UV UNI_INSC__VIRAMA_invlist[] = {  /* for all charsets */
	55,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x94D,
	0x94E,
	0x9CD,
	0x9CE,
	0xA4D,
	0xA4E,
	0xACD,
	0xACE,
	0xB4D,
	0xB4E,
	0xBCD,
	0xBCE,
	0xC4D,
	0xC4E,
	0xCCD,
	0xCCE,
	0xD4D,
	0xD4E,
	0xDCA,
	0xDCB,
	0x1B44,
	0x1B45,
	0xA806,
	0xA807,
	0xA8C4,
	0xA8C5,
	0xA9C0,
	0xA9C1,
	0x11046,
	0x11047,
	0x110B9,
	0x110BA,
	0x111C0,
	0x111C1,
	0x11235,
	0x11236,
	0x1134D,
	0x1134E,
	0x11442,
	0x11443,
	0x114C2,
	0x114C3,
	0x115BF,
	0x115C0,
	0x1163F,
	0x11640,
	0x116B6,
	0x116B7,
	0x11839,
	0x1183A,
	0x119E0,
	0x119E1,
	0x11C3F,
	0x11C40
};

static const UV UNI_INSC__VISARGA_invlist[] = {  /* for all charsets */
	71,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x903,
	0x904,
	0x983,
	0x984,
	0xA03,
	0xA04,
	0xA83,
	0xA84,
	0xB03,
	0xB04,
	0xC03,
	0xC04,
	0xC83,
	0xC84,
	0xD03,
	0xD04,
	0xD83,
	0xD84,
	0xF7F,
	0xF80,
	0x1038,
	0x1039,
	0x17C7,
	0x17C8,
	0x1B04,
	0x1B05,
	0x1B82,
	0x1B83,
	0xA881,
	0xA882,
	0xA983,
	0xA984,
	0xAAF5,
	0xAAF6,
	0x10A0F,
	0x10A10,
	0x11002,
	0x11003,
	0x11082,
	0x11083,
	0x11102,
	0x11103,
	0x11182,
	0x11183,
	0x11303,
	0x11304,
	0x11445,
	0x11446,
	0x114C1,
	0x114C2,
	0x115BE,
	0x115BF,
	0x1163E,
	0x1163F,
	0x116AC,
	0x116AD,
	0x11838,
	0x11839,
	0x119DF,
	0x119E0,
	0x11A39,
	0x11A3A,
	0x11A97,
	0x11A98,
	0x11C3E,
	0x11C3F,
	0x11D41,
	0x11D42,
	0x11D96,
	0x11D97
};

static const UV UNI_INSC__VOWEL_invlist[] = {  /* for all charsets */
	11,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1963,
	0x196E,
	0xA85E,
	0xA862,
	0xA866,
	0xA867,
	0xA922,
	0xA92B,
	0x11150,
	0x11155
};

static const UV UNI_INSC__VOWELDEPENDENT_invlist[] = {  /* for all charsets */
	269,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x93A,
	0x93C,
	0x93E,
	0x94D,
	0x94E,
	0x950,
	0x955,
	0x958,
	0x962,
	0x964,
	0x9BE,
	0x9C5,
	0x9C7,
	0x9C9,
	0x9CB,
	0x9CD,
	0x9D7,
	0x9D8,
	0x9E2,
	0x9E4,
	0xA3E,
	0xA43,
	0xA47,
	0xA49,
	0xA4B,
	0xA4D,
	0xABE,
	0xAC6,
	0xAC7,
	0xACA,
	0xACB,
	0xACD,
	0xAE2,
	0xAE4,
	0xB3E,
	0xB45,
	0xB47,
	0xB49,
	0xB4B,
	0xB4D,
	0xB55,
	0xB58,
	0xB62,
	0xB64,
	0xBBE,
	0xBC3,
	0xBC6,
	0xBC9,
	0xBCA,
	0xBCD,
	0xBD7,
	0xBD8,
	0xC3E,
	0xC45,
	0xC46,
	0xC49,
	0xC4A,
	0xC4D,
	0xC55,
	0xC57,
	0xC62,
	0xC64,
	0xCBE,
	0xCC5,
	0xCC6,
	0xCC9,
	0xCCA,
	0xCCD,
	0xCD5,
	0xCD7,
	0xCE2,
	0xCE4,
	0xD3E,
	0xD45,
	0xD46,
	0xD49,
	0xD4A,
	0xD4D,
	0xD57,
	0xD58,
	0xD62,
	0xD64,
	0xDCF,
	0xDD5,
	0xDD6,
	0xDD7,
	0xDD8,
	0xDE0,
	0xDF2,
	0xDF4,
	0xE30,
	0xE3A,
	0xE40,
	0xE46,
	0xE47,
	0xE48,
	0xEB0,
	0xEBA,
	0xEBB,
	0xEBC,
	0xEC0,
	0xEC5,
	0xF71,
	0xF7E,
	0xF80,
	0xF82,
	0x102B,
	0x1036,
	0x1056,
	0x105A,
	0x1062,
	0x1063,
	0x1067,
	0x1069,
	0x1071,
	0x1075,
	0x1083,
	0x1087,
	0x109C,
	0x109E,
	0x1712,
	0x1714,
	0x1732,
	0x1734,
	0x1752,
	0x1754,
	0x1772,
	0x1774,
	0x17B6,
	0x17C6,
	0x17C8,
	0x17C9,
	0x1920,
	0x1929,
	0x193A,
	0x193B,
	0x19B0,
	0x19C1,
	0x1A17,
	0x1A1C,
	0x1A61,
	0x1A74,
	0x1B35,
	0x1B44,
	0x1BA4,
	0x1BAA,
	0x1BE7,
	0x1BF0,
	0x1C26,
	0x1C2D,
	0xA802,
	0xA803,
	0xA823,
	0xA828,
	0xA8B5,
	0xA8C4,
	0xA8FF,
	0xA900,
	0xA947,
	0xA94F,
	0xA9B4,
	0xA9BD,
	0xA9E5,
	0xA9E6,
	0xAA29,
	0xAA33,
	0xAAB0,
	0xAABF,
	0xAAEB,
	0xAAF0,
	0xABE3,
	0xABEB,
	0x10A01,
	0x10A04,
	0x10A05,
	0x10A07,
	0x10A0C,
	0x10A0E,
	0x11038,
	0x11046,
	0x11073,
	0x11075,
	0x110B0,
	0x110B9,
	0x110C2,
	0x110C3,
	0x11127,
	0x11133,
	0x11145,
	0x11147,
	0x111B3,
	0x111C0,
	0x111CB,
	0x111CD,
	0x111CE,
	0x111CF,
	0x1122C,
	0x11234,
	0x112E0,
	0x112E9,
	0x1133E,
	0x11345,
	0x11347,
	0x11349,
	0x1134B,
	0x1134D,
	0x11357,
	0x11358,
	0x11362,
	0x11364,
	0x11435,
	0x11442,
	0x114B0,
	0x114BF,
	0x115AF,
	0x115B6,
	0x115B8,
	0x115BC,
	0x115DC,
	0x115DE,
	0x11630,
	0x1163D,
	0x11640,
	0x11641,
	0x116AD,
	0x116B6,
	0x11720,
	0x1172B,
	0x1182C,
	0x11837,
	0x11930,
	0x11936,
	0x11937,
	0x11939,
	0x119D1,
	0x119D8,
	0x119DA,
	0x119DE,
	0x119E4,
	0x119E5,
	0x11A01,
	0x11A0B,
	0x11A51,
	0x11A5C,
	0x11C2F,
	0x11C37,
	0x11C38,
	0x11C3C,
	0x11CB0,
	0x11CB5,
	0x11D31,
	0x11D37,
	0x11D3A,
	0x11D3B,
	0x11D3C,
	0x11D3E,
	0x11D3F,
	0x11D40,
	0x11D43,
	0x11D44,
	0x11D8A,
	0x11D8F,
	0x11D90,
	0x11D92,
	0x11D93,
	0x11D95,
	0x11EF3,
	0x11EF7
};

static const UV UNI_INSC__VOWELINDEPENDENT_invlist[] = {  /* for all charsets */
	177,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x904,
	0x915,
	0x960,
	0x962,
	0x972,
	0x978,
	0x985,
	0x98D,
	0x98F,
	0x991,
	0x993,
	0x995,
	0x9E0,
	0x9E2,
	0xA05,
	0xA0B,
	0xA0F,
	0xA11,
	0xA13,
	0xA15,
	0xA85,
	0xA8E,
	0xA8F,
	0xA92,
	0xA93,
	0xA95,
	0xAE0,
	0xAE2,
	0xB05,
	0xB0D,
	0xB0F,
	0xB11,
	0xB13,
	0xB15,
	0xB60,
	0xB62,
	0xB85,
	0xB8B,
	0xB8E,
	0xB91,
	0xB92,
	0xB95,
	0xC05,
	0xC0D,
	0xC0E,
	0xC11,
	0xC12,
	0xC15,
	0xC60,
	0xC62,
	0xC85,
	0xC8D,
	0xC8E,
	0xC91,
	0xC92,
	0xC95,
	0xCE0,
	0xCE2,
	0xD05,
	0xD0D,
	0xD0E,
	0xD11,
	0xD12,
	0xD15,
	0xD5F,
	0xD62,
	0xD85,
	0xD97,
	0x1021,
	0x102B,
	0x1052,
	0x1056,
	0x1700,
	0x1703,
	0x1720,
	0x1723,
	0x1740,
	0x1743,
	0x1760,
	0x1763,
	0x17A3,
	0x17B4,
	0x1A4D,
	0x1A53,
	0x1B05,
	0x1B13,
	0x1B83,
	0x1B8A,
	0x1BE4,
	0x1BE6,
	0xA800,
	0xA802,
	0xA803,
	0xA806,
	0xA882,
	0xA892,
	0xA8FE,
	0xA8FF,
	0xA984,
	0xA989,
	0xA98C,
	0xA98F,
	0xAA00,
	0xAA06,
	0xAAE0,
	0xAAE2,
	0xABCE,
	0xABD0,
	0xABD1,
	0xABD2,
	0x11005,
	0x11013,
	0x11071,
	0x11073,
	0x11083,
	0x1108D,
	0x11103,
	0x11107,
	0x11183,
	0x11191,
	0x11200,
	0x11208,
	0x11280,
	0x11284,
	0x112B0,
	0x112BA,
	0x11305,
	0x1130D,
	0x1130F,
	0x11311,
	0x11313,
	0x11315,
	0x11360,
	0x11362,
	0x11400,
	0x1140E,
	0x11481,
	0x1148F,
	0x11580,
	0x1158E,
	0x115D8,
	0x115DC,
	0x11600,
	0x1160E,
	0x11680,
	0x1168A,
	0x11800,
	0x1180A,
	0x11900,
	0x11907,
	0x11909,
	0x1190A,
	0x119A0,
	0x119A8,
	0x119AA,
	0x119AE,
	0x11A00,
	0x11A01,
	0x11A50,
	0x11A51,
	0x11C00,
	0x11C09,
	0x11C0A,
	0x11C0E,
	0x11D00,
	0x11D07,
	0x11D08,
	0x11D0A,
	0x11D0B,
	0x11D0C,
	0x11D60,
	0x11D66,
	0x11D67,
	0x11D69,
	0x11D6A,
	0x11D6C
};

static const UV UNI_INSIDDHAM_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11580,
	0x11600
};

static const UV UNI_INSINHALA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xD80,
	0xE00
};

static const UV UNI_INSOGDIAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10F30,
	0x10F70
};

static const UV UNI_INSORASOMPENG_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x110D0,
	0x11100
};

static const UV UNI_INSOYOMBO_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11A50,
	0x11AB0
};

static const UV UNI_INSUNDANESE_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1B80,
	0x1BC0
};

static const UV UNI_INSYLOTINAGRI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA800,
	0xA830
};

static const UV UNI_INSYRIAC_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x700,
	0x750
};

static const UV UNI_INTAGALOG_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1700,
	0x1720
};

static const UV UNI_INTAGBANWA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1760,
	0x1780
};

static const UV UNI_INTAILE_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1950,
	0x1980
};

static const UV UNI_INTAITHAM_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1A20,
	0x1AB0
};

static const UV UNI_INTAIVIET_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xAA80,
	0xAAE0
};

static const UV UNI_INTAKRI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11680,
	0x116D0
};

static const UV UNI_INTAMIL_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xB80,
	0xC00
};

static const UV UNI_INTANGSA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16A70,
	0x16AD0
};

static const UV UNI_INTANGUT_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x17000,
	0x18800
};

static const UV UNI_INTELUGU_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xC00,
	0xC80
};

static const UV UNI_INTHAANA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x780,
	0x7C0
};

static const UV UNI_INTHAI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xE00,
	0xE80
};

static const UV UNI_INTIBETAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF00,
	0x1000
