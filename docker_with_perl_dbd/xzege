IDENTIFIED
INCREMENT
INITIAL
LOCK
LONG
MAXEXTENTS
MINUS
MODE
MODIFY
NCLOB
NOAUDIT
NOCOMPRESS
NOWAIT
NUMBER
OFFLINE
ONLINE
PCTFREE
RAW
RENAME
RESOURCE
ROW
ROWID
ROWLABEL
ROWNUM
SHARE
START
SUCCESSFUL
SYNONYM
SYSDATE
TRIGGER
UID
VALIDATE
VARCHAR
);


sub sql_keywords {

    return join ',', @Keywords;

}



sub sql_data_source_name {
    my $dbh = shift;
    return "dbi:$sql_driver:" . $dbh->{Name};
}

sub sql_user_name {
    my $dbh = shift;
    # CURRENT_USER is a non-standard attribute, probably undef
    # Username is a standard DBI attribute
    return $dbh->{CURRENT_USER} || $dbh->{Username};
}


our %info = (
      0 => 0,                             # SQL_MAX_DRIVER_CONNECTIONS
      1 => 0,                             # SQL_MAX_CONCURRENT_ACTIVITIES
      2 => \&sql_data_source_name,        # SQL_DATA_SOURCE_NAME
      3 => 147209344,                     # SQL_DRIVER_HDBC
      4 => 147212776,                     # SQL_DRIVER_HENV
#     5 => undef,                         # SQL_DRIVER_HSTMT
      6 => $INC{'DBD/Oracle.pm'},         # SQL_DRIVER_NAME
      7 => $sql_driver_ver,               # SQL_DRIVER_VER
      8 => 191,                           # SQL_FETCH_DIRECTION
      9 => 1,                             # SQL_ODBC_API_CONFORMANCE
     10 => '03.52',                       # SQL_ODBC_VER
     11 => 'Y',                           # SQL_ROW_UPDATES
     12 => 0,                             # SQL_ODBC_SAG_CLI_CONFORMANCE
     13 => sub {"$_[0]->{Name}"},         # SQL_SERVER_NAME
     14 => '\\',                          # SQL_SEARCH_PATTERN_ESCAPE
     15 => 1,                             # SQL_ODBC_SQL_CONFORMANCE
     16 => 'DEVEL',                       # SQL_DATABASE_NAME
     17 => 'Oracle',                      # SQL_DBMS_NAME
     18 => \&sql_dbms_version,            # SQL_DBMS_VERSION
     19 => 'Y',                           # SQL_ACCESSIBLE_TABLES
     20 => 'Y',                           # SQL_ACCESSIBLE_PROCEDURES
     21 => 'Y',                           # SQL_PROCEDURES
     22 => 1,                             # SQL_CONCAT_NULL_BEHAVIOR
     23 => 2,                             # SQL_CURSOR_COMMIT_BEHAVIOR
     24 => 2,                             # SQL_CURSOR_ROLLBACK_BEHAVIOR
     25 => 'N',                           # SQL_DATA_SOURCE_READ_ONLY
     26 => 8,                             # SQL_DEFAULT_TRANSACTION_ISOLATION
     27 => 'Y',                           # SQL_EXPRESSIONS_IN_ORDERBY
     28 => 1,                             # SQL_IDENTIFIER_CASE
     29 => '"',                           # SQL_IDENTIFIER_QUOTE_CHAR
     30 => 30,                            # SQL_MAXIMUM_COLUMN_NAME_LENGTH
     31 => 30,                            # SQL_MAXIMUM_CURSOR_NAME_LENGTH
     32 => 30,                            # SQL_MAXIMUM_SCHEMA_NAME_LENGTH
     33 => 92,                            # SQL_MAX_PROCEDURE_NAME_LEN
     34 => 0,                             # SQL_MAXIMUM_CATALOG_NAME_LENGTH
     35 => 30,                            # SQL_MAXIMUM_TABLE_NAME_LENGTH
     36 => 'Y',                           # SQL_MULT_RESULT_SETS
     37 => 'Y',                           # SQL_MULTIPLE_ACTIVE_TXN
     38 => 'Y',                           # SQL_OUTER_JOINS
     39 => 'Owner',                       # SQL_SCHEMA_TERM
     40 => 'Procedure',                   # SQL_PROCEDURE_TERM
     41 => '@',                           # SQL_QUALIFIER_NAME_SEPARATOR
     42 => 'Database Link',               # SQL_QUALIFIER_TERM
     43 => 7,                             # SQL_SCROLL_CONCURRENCY
     44 => 19,                            # SQL_SCROLL_OPTIONS
     45 => 'Table',                       # SQL_TABLE_TERM
     46 => 3,                             # SQL_TRANSACTION_CAPABLE
     47 => \&sql_user_name,               # SQL_USER_NAME
     48 => 1,                             # SQL_CONVERT_FUNCTIONS
     49 => 16646015,                      # SQL_NUMERIC_FUNCTIONS
     50 => 8355839,                       # SQL_STRING_FUNCTIONS
     51 => 7,                             # SQL_SYSTEM_FUNCTIONS
     52 => 1023999,                       # SQL_TIMEDATE_FUNCTIONS
     53 => 10518015,                      # SQL_CONVERT_BIGINT
     54 => 10775839,                      # SQL_CONVERT_BINARY
     55 => 10518015,                      # SQL_CONVERT_BIT
     56 => 15106047,                      # SQL_CONVERT_CHAR
     57 => 164097,                        # SQL_CONVERT_DATE
     58 => 10518015,                      # SQL_CONVERT_DECIMAL
     59 => 10514943,                      # SQL_CONVERT_DOUBLE
     60 => 10514943,                      # SQL_CONVERT_FLOAT
     61 => 10518015,                      # SQL_CONVERT_INTEGER
     62 => 14680833,                      # SQL_CONVERT_LONGVARCHAR
     63 => 10518015,                      # SQL_CONVERT_NUMERIC
     64 => 10514943,                      # SQL_CONVERT_REAL
     65 => 10518015,                      # SQL_CONVERT_SMALLINT
     66 => 0,                             # SQL_CONVERT_TIME
     67 => 10718465,                      # SQL_CONVERT_TIMESTAMP
     68 => 10518015,                      # SQL_CONVERT_TINYINT
     69 => 10775839,                      # SQL_CONVERT_VARBINARY
     70 => 15204351,                      # SQL_CONVERT_VARCHAR
     71 => 265216,                        # SQL_CONVERT_LONGVARBINARY
     72 => 10,                            # SQL_TRANSACTION_ISOLATION_OPTION
     73 => 'N',                           # SQL_ODBC_SQL_OPT_IEF
     74 => 2,                             # SQL_CORRELATION_NAME
     75 => 1,                             # SQL_NON_NULLABLE_COLUMNS
#    76 => undef,                         # SQL_DRIVER_HLIB
     77 => '03.52',                       # SQL_DRIVER_ODBC_VER
     78 => 1,                             # SQL_LOCK_TYPES
     79 => 1,                             # SQL_POS_OPERATIONS
     80 => 7,                             # SQL_POSITIONED_STATEMENTS
     81 => 15,                            # SQL_GETDATA_EXTENSIONS
     82 => 88,                            # SQL_BOOKMARK_PERSISTENCE
     83 => 0,                             # SQL_STATIC_SENSITIVITY
     84 => 0,                             # SQL_FILE_USAGE
     85 => 1,                             # SQL_NULL_COLLATION
     86 => 1029739,                       # SQL_ALTER_TABLE
     87 => 'Y',                           # SQL_COLUMN_ALIAS
     88 => 2,                             # SQL_GROUP_BY
     89 => \&sql_keywords,                # SQL_KEYWORDS
     90 => 'N',                           # SQL_ORDER_BY_COLUMNS_IN_SELECT
     91 => 31,                            # SQL_SCHEMA_USAGE
     92 => 3,                             # SQL_QUALIFIER_USAGE
     93 => 3,                             # SQL_QUOTED_IDENTIFIER_CASE
     94 => '$#',                          # SQL_SPECIAL_CHARACTERS
     95 => 31,                            # SQL_SUBQUERIES
     96 => 3,                             # SQL_UNION_STATEMENT
     97 => 0,                             # SQL_MAXIMUM_COLUMNS_IN_GROUP_BY
     98 => 0,                             # SQL_MAXIMUM_COLUMNS_IN_INDEX
     99 => 0,                             # SQL_MAXIMUM_COLUMNS_IN_ORDER_BY
    100 => 1000,                          # SQL_MAXIMUM_COLUMNS_IN_SELECT
    101 => 1000,                          # SQL_MAXIMUM_COLUMNS_IN_TABLE
    102 => 0,                             # SQL_MAXIMUM_INDEX_SIZE
    103 => 'N',                           # SQL_MAX_ROW_SIZE_INCLUDES_LONG
    104 => 0,                             # SQL_MAXIMUM_ROW_SIZE
    105 => 0,                             # SQL_MAXIMUM_STATEMENT_LENGTH
    106 => 0,                             # SQL_MAXIMUM_TABLES_IN_SELECT
    107 => 30,                            # SQL_MAXIMUM_USER_NAME_LENGTH
    108 => 0,                             # SQL_MAX_CHAR_LITERAL_LEN
    109 => 0,                             # SQL_TIMEDATE_ADD_INTERVALS
    110 => 0,                             # SQL_TIMEDATE_DIFF_INTERVALS
    111 => 'N',                           # SQL_NEED_LONG_DATA_LEN
    112 => 0,                             # SQL_MAX_BINARY_LITERAL_LEN
    113 => 'Y',                           # SQL_LIKE_ESCAPE_CLAUSE
    114 => 2,                             # SQL_QUALIFIER_LOCATION
    115 => 127,                           # SQL_OUTER_JOIN_CAPABILITIES
    116 => 0,                             # SQL_ACTIVE_ENVIRONMENTS
    117 => 0,                             # SQL_ALTER_DOMAIN
    118 => 1,                             # SQL_SQL_CONFORMANCE
    119 => 0,                             # SQL_DATETIME_LITERALS
    120 => 0,                             # SQL_BATCH_ROW_COUNT
    121 => 0,                             # SQL_BATCH_SUPPORT
    122 => 15106047,                      # SQL_CONVERT_WCHAR
    123 => 0,                             # SQL_CONVERT_INTERVAL_DAY_TIME
    124 => 0,                             # SQL_CONVERT_INTERVAL_YEAR_MONTH
    125 => 14680833,                      # SQL_CONVERT_WLONGVARCHAR
    126 => 15106047,                      # SQL_CONVERT_WVARCHAR
    127 => 0,                             # SQL_CREATE_ASSERTION
    128 => 0,                             # SQL_CREATE_CHARACTER_SET
    129 => 0,                             # SQL_CREATE_COLLATION
    130 => 0,                             # SQL_CREATE_DOMAIN
    131 => 3,                             # SQL_CREATE_SCHEMA
    132 => 14305,                         # SQL_CREATE_TABLE
    133 => 0,                             # SQL_CREATE_TRANSLATION
    134 => 3,                             # SQL_CREATE_VIEW
#   135 => undef,                         # SQL_DRIVER_HDESC
    136 => 0,                             # SQL_DROP_ASSERTION
    137 => 0,                             # SQL_DROP_CHARACTER_SET
    138 => 0,                             # SQL_DROP_COLLATION
    139 => 0,                             # SQL_DROP_DOMAIN
    140 => 0,                             # SQL_DROP_SCHEMA
    141 => 1,                             # SQL_DROP_TABLE
    142 => 0,                             # SQL_DROP_TRANSLATION
    143 => 1,                             # SQL_DROP_VIEW
    144 => 0,                             # SQL_DYNAMIC_CURSOR_ATTRIBUTES1
    145 => 0,                             # SQL_DYNAMIC_CURSOR_ATTRIBUTES2
    146 => 57345,                         # SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1
    147 => 2183,                          # SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2
    148 => 3,                             # SQL_INDEX_KEYWORDS
    149 => 65568,                         # SQL_INFO_SCHEMA_VIEWS
    150 => 0,                             # SQL_KEYSET_CURSOR_ATTRIBUTES1
    151 => 0,                             # SQL_KEYSET_CURSOR_ATTRIBUTES2
    152 => 3,                             # SQL_ODBC_INTERFACE_CONFORMANCE
    153 => 2,                             # SQL_PARAM_ARRAY_ROW_COUNTS
    154 => 3,                             # SQL_PARAM_ARRAY_SELECTS
    155 => 0,                             # SQL_SQL92_DATETIME_FUNCTIONS
    156 => 0,                             # SQL_SQL92_FOREIGN_KEY_DELETE_RULE
    157 => 0,                             # SQL_SQL92_FOREIGN_KEY_UPDATE_RULE
    158 => 16,                            # SQL_SQL92_GRANT
    159 => 0,                             # SQL_SQL92_NUMERIC_VALUE_FUNCTIONS
    160 => 7687,                          # SQL_SQL92_PREDICATES
    161 => 0,                             # SQL_SQL92_RELATIONAL_JOIN_OPERATORS
    162 => 0,                             # SQL_SQL92_REVOKE
    163 => 0,                             # SQL_SQL92_ROW_VALUE_CONSTRUCTOR
    164 => 0,                             # SQL_SQL92_STRING_FUNCTIONS
    165 => 1,                             # SQL_SQL92_VALUE_EXPRESSIONS
    166 => 3,                             # SQL_STANDARD_CLI_CONFORMANCE
    167 => 57935,                         # SQL_STATIC_CURSOR_ATTRIBUTES1
    168 => 4231,                          # SQL_STATIC_CURSOR_ATTRIBUTES2
    169 => 64,                            # SQL_AGGREGATE_FUNCTIONS
    170 => 3,                             # SQL_DDL_INDEX
    171 => '03.52.0002.0002',             # SQL_DM_VER
    172 => 7,                             # SQL_INSERT_STATEMENT
    173 => 0,                             # SQL_CONVERT_GUID
  10000 => 1995,                          # SQL_XOPEN_CLI_YEAR
  10001 => 1,                             # SQL_CURSOR_SENSITIVITY
  10002 => 'Y',                           # SQL_DESCRIBE_PARAMETER
  10003 => 'N',                           # SQL_CATALOG_NAME
  10004 => '',                            # SQL_COLLATING_SEQUENCE
  10005 => 30,                            # SQL_MAXIMUM_IDENTIFIER_LENGTH
  10021 => 2,                             # SQL_ASYNC_MODE
  10022 => 0,                             # SQL_MAX_ASYNC_CONCURRENT_STATEMENTS
# 20000 => undef,                         # SQL_MAXIMUM_STMT_OCTETS
# 20001 => undef,                         # SQL_MAXIMUM_STMT_OCTETS_DATA
# 20002 => undef,                         # SQL_MAXIMUM_STMT_OCTETS_SCHEMA
);

1;

__END__

=pod

=encoding UTF-8

=head1 NAME

DBD::Oracle::GetInfo - Wrapper to get Oracle information

=head1 VERSION

version 1.90

=head1 AUTHORS

=over 4

=item *

Tim Bunce <timb@cpan.org>

=item *

John Scoles <byterock@cpan.org>

=item *

Yanick Champoux <yanick@cpan.org>

=item *

Martin J. Evans <mjevans@cpan.org>

=back

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2024, 2023, 2022, 2021, 2019, 2014, 2013, 2012, 2011, 2010 by Tim Bunce.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          root/.cpan/build/DBD-Oracle-1.90-1/blib/lib/DBD/Oracle/Object.pm                                    0000444 0000000 0000000 00000002056 14616324562 021676  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        #!perl
# ABSTRACT: Wrapper for Oracle objects
use strict;
use warnings;

package DBD::Oracle::Object;
our $VERSION = '1.90'; # VERSION

sub type_name { shift->{type_name} }

sub attributes { @{shift->{attributes}} }

sub attr_hash {
    my $self = shift;
    return $self->{attr_hash} ||= { $self->attributes };
}

sub attr {
    my $self = shift;
    if (@_) {
        my $key = shift;
        return $self->attr_hash->{$key};
    }
    return $self->attr_hash;
}

1;

__END__

=pod

=encoding UTF-8

=head1 NAME

DBD::Oracle::Object - Wrapper for Oracle objects

=head1 VERSION

version 1.90

=head1 AUTHORS

=over 4

=item *

Tim Bunce <timb@cpan.org>

=item *

John Scoles <byterock@cpan.org>

=item *

Yanick Champoux <yanick@cpan.org>

=item *

Martin J. Evans <mjevans@cpan.org>

=back

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2024, 2023, 2022, 2021, 2019, 2014, 2013, 2012, 2011, 2010 by Tim Bunce.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  root/.cpan/build/DBD-Oracle-1.90-1/blib/lib/DBD/Oracle/Troubleshooting/                             0000755 0000000 0000000 00000000000 14723047276 023323  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        root/.cpan/build/DBD-Oracle-1.90-1/blib/lib/DBD/Oracle/Troubleshooting/Aix.pod                      0000444 0000000 0000000 00000021710 14616324562 024544  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        #PODNAME: DBD::Oracle::Troubleshooting::Aix
#ABSTRACT: Tips and Hints to Troubleshoot DBD::Oracle on AIX

__END__

=pod

=encoding UTF-8

=head1 NAME

DBD::Oracle::Troubleshooting::Aix - Tips and Hints to Troubleshoot DBD::Oracle on AIX

=head1 VERSION

version 1.90

=head1 Using Visual Age 7 C Compiler

Oracle 9i is only certified as a 64-bit application on AIX 5L (5.1,5.2,5.3) with 32-bit support;
in other words, there is no 9i "32-bit" Oracle client

Oracle 10g is certified as both a 64-bit application and a 32-bit Oracle client

This information only pertains to deploying:

    the DBI (version 1.48)
    and DBD-Oracle (version 1.16):
    on AIX 5.3
    using Oracle 9i (9.2.0.1/9.2.0.5)
    using the existing Perl 5.8.2 (no custom-built Perl) which is 32-bit
    using Visual Age 7.0 C/C++ compiler

Install the DBI (required for the DBD-Oracle install - no issues here)
Untar the DBD-Oracle bundle
Run Makefile.PL

    $ perl Makefile.PL

Edit Makefile with following commands:

    1,$s?/lib/ ?/lib32/ ?g
    1,$s?-q64??g
    1,$s?/lib/sysliblist?/lib32/sysliblist?g

Now perform normal commands to perform the testing/making:

    $ make
    $ make test
    $ make install

I've tested the basics of the DBD-Oracle and it seems fully functional.

Stephen de Vries

=head1 Using gcc C Compiler

    DBD::Oracle with gcc and Oracle Instant Client on AIX
    --------------------------------------------------------------------------------------
    Nathan Vonnahme     Dec 15 2005, 4:28 pm   Newsgroups: perl.dbi.users
    See:  http://groups.google.com/group/perl.dbi.users/msg/0bd9097f80f2c8a9
    [ with updates 1/31/2006 - DBD::Oracle 1.17 doesn't need makefile hacking
    to work with instantclient on AIX ]


    Yes!  It eluded me last year but I finally got DBD::Oracle working on an
    AIX machine using gcc.  Here's the short version:

    First I had to recompile perl with gcc, using
            sh Configure -de -Dcc=gcc
    This apparently built a 32 bit perl, someday I will try getting it to go
    64 bit.

    I was then able to install and build DBI 1.50 with the CPAN shell.

    I downloaded the base and sdk packages of the Oracle Instant Client for
    AIX -- first I tried the 64 bit but that didn't work with my 32 bit perl
    -- the 32 bit version (still at 10.1.0.3) did the trick.  I unzipped
    them and moved the dir to /usr/local/oracle/instantclient10_1 and made a
    symlink without the version at /usr/local/oracle/instantclient , then
    set:

    export ORACLE_HOME=/usr/local/oracle/instantclient
    export LIBPATH=$ORACLE_HOME



    Oracle wasn't providing the sqlplus package for 32 bit AIX so I
    explicitly told Makefile.PL the version:

    perl Makefile.PL -V 10.1

    make

    My test databases were on other machines so I set these environment variables
    to get the tests to run:

    export ORACLE_DSN=DBI:Oracle://host/dbinstance
    export ORACLE_USERID="user/password"

    make test
    make install


    NOTE:  I have an older full version of Oracle on this machine, and the
    ORACLE_HOME environment variable is normally set to point to that, so
    my perl scripts that use DBD::Oracle have to make sure to first set
    $ENV{ORACLE_HOME}='/usr/local/oracle/instantclient';





    --------------------------------------------------------------------------------------
    The following setup worked to build on AIX 5.2:
    gcc-3.3.2 (32-bit) (configure opts [ --with-ld=/usr/ccs/bin/ld --with-as=/usr/ccs/bin/as])
    Oracle-9.2.0 ( full install w/32bit support)
    perl-5.8.3 (built with above gcc/latest stable as of March 2004)
    Followed the directions from Rafael's email below, only set ORACLE_HOME, (and
    the appropriate test environmentals).
    1) build perl-5.8.3 with gcc
    2) install DBI
    3) ORACLE_HOME="your oracle home"
    ORACLE_USERID..
    ORACLE_SID ..
    (I ignored ORACCENV, didn't use it.)
    4) install DBD::Oracle, after perl Makefile.PL, edit the created Makefile,
    changing references to Oracle's ../lib to ../lib32. and change crt0_64.o to
    crt0_r.o. Remove the -q32 and/or -q64 options from the list of libraries to
    link with.
    5) make should be clean, make test should pass.
    This setup worked with 8.1.7 w/32 bit support, and with 9.2.0 w/ 32-bit support.
    --Adrian Terranova

=head1 Using xlc_r C Compiler

    From: Rafael Caceres
    Date: 22 Jul 2003 10:05:20 -0500

    The following sequence worked for me on AIX 5.1:

    -use Perl 5.8.0 (the latest stable from CPAN)

    -use the xlc_r version of IBM's compiler and build a 32 bit Perl
    (which xlc_r will do by default). All tests should be successful.

    -get and install DBI

    -get DBD::Oracle. Edit the Makefile.PL or Makefile for DBD::Oracle,
    changing references to Oracle's ../lib to ../lib32. and change crt0_64.o
    to crt0_r.o. Remove the -q32 and/or -q64 options from the list of
    libraries to link with. Do the make and make test.

    -Set up the environment for making DBD::Oracle:
        ORACLE_HOME="your oracle home"
        ORACCENV = "xlc_r"
        ORACLE_USERID..
        ORACLE_SID ..

    -Run make, all tests should be successful -against Oracle 9.x at least.

    You should have no problems with Oracle 8.1.7, but accessing Oracle 7.x
    or previous is not possible (you'll core dump, or simply hang). The same
    goes for a Linux build or a Digital build, regarding access of different
    Oracle versions.

    Rafael Caceres

    > I don't believe I compiled Oracle.  During the installation it was linked
    > but I am not sure it was compiled
    >
    > I used a xlc compiler to compile PERL.
    > Got this message in the Perl Makefile.PL output
    >
    > Warning: You will may need to rebuild perl using the xlc_r compiler.
    >          You may also need do: ORACCENV='cc=xlc_r'; export ORACCENV
    >          Also see the README about the -p option
    >
    > this probably means I need to rebuild PERL with xlc_r??
    >
    > thanx
    >
    > Mike Paladino
    > Database Administrator


    From: Rafael Caceres
    >
    > Make sure you use the same compiler to build Oracle and Perl. We have
    > used xlc_r on Aix 5.1 with no problems. Your Perl build is 32 bit, so
    > when building DBD::Oracle, you should use the 32bit libraries (change
    > references to .../oracle/lib to .../oracle/lib32 in your Makefile).
    > Remove the references to the -q64 or -q32 parameters for ld in Makefile,
    > as they shouldn't be there.
    >
    > Rafael Caceres


    From: "cartman ltd"
    Subject: Tip for DBI and DBD::Oracle on AIX 5.1 and Oracle 9.2
    Date: Mon, 11 Aug 2003 18:15:38 +0000
    Message-ID: <BAY1-F58Temqpg2ItZe00032a0f@hotmail.com>

    Here is a tip for compiling DBD::Oracle as a 32 bit application on AIX 5.1
    64 bit and Oracle 9.2 64 bit without editing any makefiles. I hope people
    find this useful:

    First, the versions of products I used:
    DBI version 1.32
    DBD::Oracle version 1.14
    Oracle 9.2.0.2 - default 64 bit application with 32 bit libraries
    AIX 5.1 ML03 - 64 bit kernel - ships with Perl as a 32 bit application.
    VisualAge C/C++ 5.0.2

    Basically DBD must be compiled as 32 bit to link with Perl's 32 bit
    libraries.
    gunzip -c DBD-Oracle-1.14.tar.gz | tar xvf 
    cd DBD-Oracle-1.14
    perl Makefile.PL -m $ORACLE_HOME/rdbms/demo/demo_rdbms32.mk
    make

    NB: I think there is a bug in the Oracle 9.2.0.3 file
    $ORACLE_HOME/rdbms/lib/env_rdbms.mk
    I corrected this (before running the above commands) by replacing the
    invalid linker option
    LDFLAGS32=-q32
    with
    LDFLAGS32=-b32

    Have fun: KC.
    --------------------------------------------------------------------------------------

    Date: Wed, 30 Jun 2004 23:34:24 -0500
    From: "SCHULTZ, DARYLE (SBCSI)"

    Got it to work.  Using dbd 1.16

    Perl 5.8.4 built like this, with Visual Age 6.0:

    config_args='-Dcc=xlc_r -Dusenm -Dprefix=/appl/datasync/work/perl5
    -Dusethreads -Duse64bitall -des'
    ==============================================

    Used DBI 1.42
    =============================================
    Added this to top of Oracle.h:
    #define A_OSF

    #include <oratypes.h>
    =======================
    Set LIBPATH to point to 64bit Oracle libs first.
    export LIBPATH=$ORACLE_HOME/lib:$ORACLE_HOME/lib32:/usr/lib

    Use:   perl Makefile.PL -nob

    Change all references in Makefile  of LD_RUN_PATH to be LIBPATH.
    Change nothing else, left all flags in Makefile, including -q64.
    Passed make, and all tests.

    --------------------------------------------------------------------------------------

=head1 AUTHORS

=over 4

=item *

Tim Bunce <timb@cpan.org>

=item *

John Scoles <byterock@cpan.org>

=item *

Yanick Champoux <yanick@cpan.org>

=item *

Martin J. Evans <mjevans@cpan.org>

=back

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2024, 2023, 2022, 2021, 2019, 2014, 2013, 2012, 2011, 2010 by Tim Bunce.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
                                                        root/.cpan/build/DBD-Oracle-1.90-1/blib/lib/DBD/Oracle/Troubleshooting/Cygwin.pod                   0000444 0000000 0000000 00000004674 14616324562 025275  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        #PODNAME: DBD::Oracle::Troubleshooting::Cygwin
#ABSTRACT: Tips and Hints to Troubleshoot DBD::Oracle on Cygwin

__END__

=pod

=encoding UTF-8

=head1 NAME

DBD::Oracle::Troubleshooting::Cygwin - Tips and Hints to Troubleshoot DBD::Oracle on Cygwin

=head1 VERSION

version 1.90

=head1 General Info

Makefile.PL should find and make use of OCI include
files, but you have to build an import library for
OCI.DLL and put it somewhere in library search path.
one of the possible ways to do this is issuing command

    dlltool --input-def oci.def --output-lib liboci.a

in the directory where you unpacked DBD::Oracle distribution
archive.  this will create import library for Oracle 8.0.4.

Note: make clean removes '*.a' files, so put a copy in a safe place.

=head1 Compiling DBD::Oracle using the Oracle Instant Client, Cygwin Perl and gcc

=over

=item 1

Download these two packages from Oracle's Instant Client for
Windows site
(http://www.oracle.com/technology/software/tech/oci/instantclient/htdocs/winsoft.html):

Instant Client Package - Basic: All files required to run OCI,
OCCI, and JDBC-OCI applications

Instant Client Package - SDK: Additional header files and an
example makefile for developing Oracle applications with Instant Client

(I usually just use the latest version of the client)

=item 2

Unpack both into C:\oracle\instantclient_11_1

=item 3

Download and unpack DBD::Oracle from CPAN to some place with no
spaces in the path (I used /tmp/DBD-Oracle) and cd to it.

=item 4

Set up some environment variables (it didn't work until I got the
DSN right):

      ORACLE_DSN=DBI:Oracle:host=oraclehost;sid=oracledb1
      ORACLE_USERID=username/password

=item 5

      perl Makefile.PL
      make
      make test
      make install

=back

Note, the TNS Names stuff doesn't always seem to work with the instant
client so Perl scripts need to explicitly use host/sid in the DSN, like
this:

    my $dbh = DBI->connect('dbi:Oracle:host=oraclehost;sid=oracledb1',
    'username', 'password');

=head1 AUTHORS

=over 4

=item *

Tim Bunce <timb@cpan.org>

=item *

John Scoles <byterock@cpan.org>

=item *

Yanick Champoux <yanick@cpan.org>

=item *

Martin J. Evans <mjevans@cpan.org>

=back

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2024, 2023, 2022, 2021, 2019, 2014, 2013, 2012, 2011, 2010 by Tim Bunce.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
                                                                    root/.cpan/build/DBD-Oracle-1.90-1/blib/lib/DBD/Oracle/Troubleshooting/Hpux.pod                     0000444 0000000 0000000 00000101735 14616324562 024755  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        #PODNAME: DBD::Oracle::Troubleshooting::Hpux
#ABSTRACT: Tips and Hints to Troubleshoot DBD::Oracle on HP-UX

__END__

=pod

=encoding UTF-8

=head1 NAME

DBD::Oracle::Troubleshooting::Hpux - Tips and Hints to Troubleshoot DBD::Oracle on HP-UX

=head1 VERSION

version 1.90

=head1 INTRODUCTION

Building a working dynamically linked version of the Oracle DBD driver
on HP-UX (11.00) has been a challenge for many.  For months after taking
a new job, where HP-UX was the standard database server environment, I
had only been able to build a statically linked version of Perl and the
DBD-Oracle module on HP-UX 11.00.

Then Roger Foskett posted instructions for what turned out to be dynamic
build.  Rogers's post got me further than I had previously gotten.  In
fact, after resolving some undefined symbol errors, I succeeded where for
I had previously despaired of finding the time to hack out the right
incantation.

This document describes the combined knowledge of a number of
folks who invested many hours discovering a working set of build options.
The instructions in this file, which include building Perl from source,
will produce a working dynamically linked DBD-Oracle that can be used
with mod_perl and Apache.

See L<APPENDICES> for exact build configurations used by me an others.

For HPUX 11 on Itanium see also
http://www.nntp.perl.org/group/perl.dbi.users/23840

=head1 First things First:  Introduction

The reason you are even reading this file is because you want to connect
to an Oracle database from your perl program using the DBD::Oracle DBI
driver.  So before you start, install (at least the Oracle client
software) (SQL*Net, Pro*C, SQL*Plus) upon the machine you intend to
install Perl/DBI/DBD-Oracle.  You B<do not>, I repeat, I<do not> need to
build a database on this machine.

After you have installed the Oracle client software, B<test it!>. Make
sure you can connect to the target database using SQL*Plus (or any other
Oracle supplied tool).  The (gory) details of the install are beyond the
scope of this document, some information can be found in the section
L<Compiling on a Client Machine>, or see your friendly Oracle DBA.

One final remark, 3 years after this was first written.  This has been
updated numerous times over the years.  And some of the new build
recipe's see simpler than some of the original instructions in this file.

I think one reason the recipe is getting simpler may be that the build
hints, in the base perl build have gotten more right, as we have moved
from perl 5.6.1 to the 5.8.8 (now the stable version).

Someday, if I ever find myself building on HP again I should probably
update as many of these recipes (that I can test) by trying to remove
more of the special case stuff I have in my build scripts now.
Gram Ludlows's build for the default bundled C compiler shows that a lot
of this may no longer be necessary.

On the other hand, it would be bad if we deleted information that others
might need, so I err on the side of too much, in the hope that the
person who really needs the information, will not have to look beyond
this file.

   -- Lincoln

=head1 Build your own Perl

HP's default Perl is no good (and antique).

By default, HP-UX 11.00 delivered Perl 5.00503 until September 2001.
Others tell me that the default is a threaded GNUpro build of 5.6.1.
This is not what I found on our systems, and it probably depends on which
packages you install.  In any case, this version of Perl delivered by
HP will in all likelihood not work. Before you check, be sure to prevent
the perl4 located in /usr/contrib/bin from being the first Perl version
found in your $PATH.

As of application release September 2001, HP-UX 11.00 is shipped with
Perl-5.6.1 in /opt/perl. The first occurrence is on CD 5012-7954. The
build is a portable hppa-1.1 multithread build that supports large files
compiled with gcc-2.9-hppa-991112. When you have a modern system with a
hppa-2.0 architecture (PA8xxx processor) and/or the HP C-ANSI-C compiler
consider building your own Perl, which will surely outperform this
version.

If you are reading this, you have probably discovered that something did
not work.  To get a working version of the DBD-Oracle driver, we have to
start with a Perl that as been built with the correct compiler flags and
shared libraries.  This means that you must build your own version of
Perl from source.

The instructions below have been used for building a dynamically linked
working DBD-Oracle driver that works with mod_perl and Apache.  These
instructions are based on Perl 5.6.0 and 5.6.1, and 5.8.0.  To this
author's knowledge, they have not be tested on earlier versions of Perl.

Note that is important to build a B<non>-threaded Perl, but linked with
-lcl and -lpthread.   Since Oracle on HP uses libpthread, everything that
dynamically loads it (such as DBD-Oracle) must be built/linked
with '-lpthread -lcl'.  (When used with Apache, it and any associated
modules must also be built this way - otherwise all it does is core
dump when loading DBD::Oracle).

A good link that explains thread local storage problems is
http://my1.itrc.hp.com/cm/QuestionAnswer/1,1150,0x0d0a6d96588ad4118fef0090279cd0f9!0,00.html

One more note, it would appear that the README.hpux in the Perl 5.8.0
directory, is somewhat out of date, but is up-to-date in versions 5.8.3
and up.  H.Merijn Brand points out that Perl I<is> 64bit compliant when
the -Duse64bitall flag is used to Configure.  While Perl will be built
in a pure LP64 environment via the +DD64 flag is used, the +DA2.0w flag
is preferred on PA-RISC, and when an incantation can be concocted that
eliminates the noisy warnings the produces at link time, this will
probably become the default.  Older 64bit versions of GCC, are known to
be unable to build a good LP64 perl. And these flags will cause gcc to
barf. On HP-UX 11i (11.11), gcc-3.4.4 or gcc-3.4.5 is preferred over
gcc-4.0.2 (or older gcc-4 versions) as 64bit builds on PA-RISC with that
versions of the compiler are unreliable.

=head1 Compilers

=head2 HP Softbench Compiler

Both Roger Foskett, I and most others have been using the HP Softbench
C compiler normally installed in:

    /opt/softbench/bin/cc.

While the DBD-Oracle F<Makefile.PL> checks for some of the conditions
which, when met, we know will produce a working build, there are many
variations of Oracle installations and features.  Not all of these can
be tested by any one of us, if you discover a way to make a variation
which did not previously work, please submit patches to the Makefile.PL
to Tim Bunce, and patches to this README to me, and I will incorporate
them into the next README.

The instructions herein, have compiled, linked cleanly, and tested
cleanly using the HP softbench compiler, and Oracle 8.0.5 (32bit), and
Oracle 8.1.6, 8.1.7 (64 bit).  Oracle 8.1.5 will probably work as well.

Oracle 8.1.7.4 (32bit) with DBI-1.35 and DBD-Oracle-1.13 has been proven
to work on HP-UX 11.00 (64bit) with Perl 5.6.1, Perl 5.8.x using the
guidelines in this document for both HP-C-ANSI-C and gcc-3.2. Later
versions have been proven to work as well.  Current DBI-1.42 and
DBD-Oracle-1.16 have been proven to work.  This Oracle 9.2 client (at
least) should be used if you plan to do work with Unicode.  See the
DBD-Oracle POD/Man documentation.

=head2 gcc Compiler

As of gcc-3.4, perl-5.8.3 and up should build out-of-the box when
Configure is invoked with -Dcc=gcc. Please read README.hpux carefully
for the differences with HP C-ANSI-C. Once built, tested and installed,
both DBI and DBD-Oracle should be able to build against that perl
without trouble.

In the past, Waldemar Zurowski and Michael Schuh sent useful information
about builds of Perl with DBD-Oracle using gcc on HP-UX.  Both were able
to get working executables, and their explanations shed much light on
the issues.

Waldemar's build is described in L<Appendix A>, and Michael's is
described in L<Appendix C>.

While I have not reproduced either of these configurations, I believe
the information is complete enough (particularly in the aggregate) to
be helpful to others who might wish to replicate it.

=head2 The "default" built in compiler 64bit build (/usr/bin/cc)

And now, at long last, we have a recipe for building perl and DBD-Oracle
using the default bundled C compiler.  Please see the L<Appendix B> build
instructions provided by Gram Ludlow, using the default /usr/bin/cc
bundled compiler. Please note that perl itself will I<NOT> build using
that compiler.

=head2 Configure (doing it manually)

Once you have downloaded and unpacked the Perl sources (version 5.8.8
assumed here), you must configure Perl.  For those of you new to building
Perl from source, the Configure program will ask you a series of
questions about how to build Perl.  You may supply default answers to the
questions when you invoke the Configure program by command line flags.

We want to build a Perl that understands large files (over 2GB, which is
the default for building perl on HP-UX), and that is incompatible with
v5.005 Perl scripts (compiling with v5.005 compatibility causes mod_perl
to complain about malloc pollution).  At the command prompt type:

    cd perl-5.8.8
    sh ./Configure -A prepend:libswanted='cl pthread ' -des

or, if you need a 64bit build

    sh ./Configure -A prepend:libswanted='cl pthread ' -Duse64bitall -des

Do not forget the trailing space inside the single quotes. This is also
described by H.Merijn Brand in the README.hpux from the perl core
distribution.

When asked:

    Any additional cc flags? - Answer by prepending: I<+Z> to enable
    position independent code.

    For example:
    Any additional cc flags? [-D_HP-UX_SOURCE -Aa] -Ae +Z -z

Though this should be the default in more recent perl versions.

Lastly, and this is optional, when asked:

    Do you want to install Perl as /usr/bin/perl? [y] n

    You may or may not want to install directly in /usr/bin/perl,
    many persons on HP install Perl in /opt/perl<version>/bin/perl and
    put a symbolic link to /usr/bin/perl.  Furthermore, you can supply
    the answer to this question by adding an additional switch to the
    invocation of Configure such as: Configure -Dprefix=/opt/perl

After you have answered the above questions, accept the default values
