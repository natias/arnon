	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11800,
	0x11850
};

static const UV UNI_INDUPLOYAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1BC00,
	0x1BCA0
};

static const UV UNI_INEGYPTIANHIEROGLYPHS_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x13000,
	0x13430
};

static const UV UNI_INELBASAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10500,
	0x10530
};

static const UV UNI_INELYMAIC_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10FE0,
	0x11000
};

static const UV UNI_INETHIOPIC_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1200,
	0x1380
};

static const UV UNI_INGEORGIAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10A0,
	0x1100
};

static const UV UNI_INGLAGOLITIC_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2C00,
	0x2C60
};

static const UV UNI_INGOTHIC_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10330,
	0x10350
};

static const UV UNI_INGRANTHA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11300,
	0x11380
};

static const UV UNI_INGREEK_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x370,
	0x400
};

static const UV UNI_INGUJARATI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA80,
	0xB00
};

static const UV UNI_INGUNJALAGONDI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11D60,
	0x11DB0
};

static const UV UNI_INGURMUKHI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA00,
	0xA80
};

static const UV UNI_INHANGUL_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xAC00,
	0xD7B0
};

static const UV UNI_INHANIFIROHINGYA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10D00,
	0x10D40
};

static const UV UNI_INHANUNOO_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1720,
	0x1740
};

static const UV UNI_INHATRAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x108E0,
	0x10900
};

static const UV UNI_INHEBREW_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x590,
	0x600
};

static const UV UNI_INHIRAGANA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x3040,
	0x30A0
};

static const UV UNI_INIDC_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2FF0,
	0x3000
};

static const UV UNI_INIMPERIALARAMAIC_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10840,
	0x10860
};

static const UV UNI_ININSCRIPTIONALPAHLAVI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10B60,
	0x10B80
};

static const UV UNI_ININSCRIPTIONALPARTHIAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10B40,
	0x10B60
};

static const UV UNI_INJAVANESE_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA980,
	0xA9E0
};

static const UV UNI_INKAITHI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11080,
	0x110D0
};

static const UV UNI_INKANNADA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xC80,
	0xD00
};

static const UV UNI_INKATAKANA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x30A0,
	0x3100
};

static const UV UNI_INKHAROSHTHI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10A00,
	0x10A60
};

static const UV UNI_INKHITANSMALLSCRIPT_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x18B00,
	0x18D00
};

static const UV UNI_INKHMER_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1780,
	0x1800
};

static const UV UNI_INKHOJKI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11200,
	0x11250
};

static const UV UNI_INKHUDAWADI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x112B0,
	0x11300
};

static const UV UNI_INLAO_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xE80,
	0xF00
};

static const UV UNI_INLEPCHA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1C00,
	0x1C50
};

static const UV UNI_INLIMBU_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1900,
	0x1950
};

static const UV UNI_INLINEARA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10600,
	0x10780
};

static const UV UNI_INLISU_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA4D0,
	0xA500
};

static const UV UNI_INLYCIAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10280,
	0x102A0
};

static const UV UNI_INLYDIAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10920,
	0x10940
};

static const UV UNI_INMAHAJANI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11150,
	0x11180
};

static const UV UNI_INMAKASAR_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11EE0,
	0x11F00
};

static const UV UNI_INMALAYALAM_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xD00,
	0xD80
};

static const UV UNI_INMANDAIC_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x840,
	0x860
};

static const UV UNI_INMANICHAEAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10AC0,
	0x10B00
};

static const UV UNI_INMARCHEN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11C70,
	0x11CC0
};

static const UV UNI_INMASARAMGONDI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11D00,
	0x11D60
};

static const UV UNI_INMEDEFAIDRIN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16E40,
	0x16EA0
};

static const UV UNI_INMEETEIMAYEK_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xABC0,
	0xAC00
};

static const UV UNI_INMENDEKIKAKUI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1E800,
	0x1E8E0
};

static const UV UNI_INMEROITICCURSIVE_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x109A0,
	0x10A00
};

static const UV UNI_INMIAO_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16F00,
	0x16FA0
};

static const UV UNI_INMODI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11600,
	0x11660
};

static const UV UNI_INMONGOLIAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1800,
	0x18B0
};

static const UV UNI_INMRO_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16A40,
	0x16A70
};

static const UV UNI_INMULTANI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11280,
	0x112B0
};

static const UV UNI_INMYANMAR_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1000,
	0x10A0
};

static const UV UNI_INNABATAEAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10880,
	0x108B0
};

static const UV UNI_INNANDINAGARI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x119A0,
	0x11A00
};

static const UV UNI_INNEWA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11400,
	0x11480
};

static const UV UNI_INNEWTAILUE_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1980,
	0x19E0
};

static const UV UNI_INNKO_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x7C0,
	0x800
};

static const UV UNI_INNUSHU_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1B170,
	0x1B300
};

static const UV UNI_INNYIAKENGPUACHUEHMONG_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1E100,
	0x1E150
};

static const UV UNI_INOGHAM_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1680,
	0x16A0
};

static const UV UNI_INOLDHUNGARIAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10C80,
	0x10D00
};

static const UV UNI_INOLDITALIC_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10300,
	0x10330
};

static const UV UNI_INOLDPERMIC_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10350,
	0x10380
};

static const UV UNI_INOLDPERSIAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x103A0,
	0x103E0
};

static const UV UNI_INOLDSOGDIAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10F00,
	0x10F30
};

static const UV UNI_INOLDTURKIC_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10C00,
	0x10C50
};

static const UV UNI_INOLDUYGHUR_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10F70,
	0x10FB0
};

static const UV UNI_INORIYA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xB00,
	0xB80
};

static const UV UNI_INOSAGE_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x104B0,
	0x10500
};

static const UV UNI_INOSMANYA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10480,
	0x104B0
};

static const UV UNI_INPAHAWHHMONG_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16B00,
	0x16B90
};

static const UV UNI_INPAUCINHAU_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11AC0,
	0x11B00
};

static const UV UNI_INPC__BOTTOM_invlist[] = {  /* for all charsets */
	291,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x93C,
	0x93D,
	0x941,
	0x945,
	0x94D,
	0x94E,
	0x952,
	0x953,
	0x956,
	0x958,
	0x962,
	0x964,
	0x9BC,
	0x9BD,
	0x9C1,
	0x9C5,
	0x9CD,
	0x9CE,
	0x9E2,
	0x9E4,
	0xA3C,
	0xA3D,
	0xA41,
	0xA43,
	0xA4D,
	0xA4E,
	0xA51,
	0xA52,
	0xA75,
	0xA76,
	0xABC,
	0xABD,
	0xAC1,
	0xAC5,
	0xACD,
	0xACE,
	0xAE2,
	0xAE4,
	0xB3C,
	0xB3D,
	0xB41,
	0xB45,
	0xB4D,
	0xB4E,
	0xB62,
	0xB64,
	0xC3C,
	0xC3D,
	0xC56,
	0xC57,
	0xC62,
	0xC64,
	0xCBC,
	0xCBD,
	0xCE2,
	0xCE4,
	0xD43,
	0xD45,
	0xD62,
	0xD64,
	0xDD4,
	0xDD5,
	0xDD6,
	0xDD7,
	0xE38,
	0xE3B,
	0xEB8,
	0xEBB,
	0xEBC,
	0xEBD,
	0xF18,
	0xF1A,
	0xF35,
	0xF36,
	0xF37,
	0xF38,
	0xF71,
	0xF72,
	0xF74,
	0xF76,
	0xF84,
	0xF85,
	0xF8D,
	0xF98,
	0xF99,
	0xFBD,
	0xFC6,
	0xFC7,
	0x102F,
	0x1031,
	0x1037,
	0x1038,
	0x103D,
	0x103F,
	0x1058,
	0x105A,
	0x105E,
	0x1061,
	0x1082,
	0x1083,
	0x108D,
	0x108E,
	0x1713,
	0x1715,
	0x1733,
	0x1734,
	0x1753,
	0x1754,
	0x1773,
	0x1774,
	0x17BB,
	0x17BE,
	0x1922,
	0x1923,
	0x1932,
	0x1933,
	0x1939,
	0x193A,
	0x193B,
	0x193C,
	0x1A18,
	0x1A19,
	0x1A56,
	0x1A57,
	0x1A5B,
	0x1A5F,
	0x1A69,
	0x1A6B,
	0x1A6C,
	0x1A6D,
	0x1A7F,
	0x1A80,
	0x1B38,
	0x1B3B,
	0x1B6C,
	0x1B6D,
	0x1BA2,
	0x1BA4,
	0x1BA5,
	0x1BA6,
	0x1BAC,
	0x1BAE,
	0x1C2C,
	0x1C2D,
	0x1C37,
	0x1C38,
	0x1CD5,
	0x1CDA,
	0x1CDC,
	0x1CE0,
	0x1CED,
	0x1CEE,
	0xA825,
	0xA826,
	0xA82C,
	0xA82D,
	0xA8C4,
	0xA8C5,
	0xA92B,
	0xA92E,
	0xA947,
	0xA94A,
	0xA94B,
	0xA94F,
	0xA9B8,
	0xA9BA,
	0xA9BD,
	0xA9BE,
	0xAA2D,
	0xAA2E,
	0xAA32,
	0xAA33,
	0xAA35,
	0xAA37,
	0xAAB4,
	0xAAB5,
	0xAAEC,
	0xAAED,
	0xABE8,
	0xABE9,
	0xABED,
	0xABEE,
	0x10A02,
	0x10A04,
	0x10A0C,
	0x10A0F,
	0x10A39,
	0x10A3B,
	0x1103C,
	0x11042,
	0x110B3,
	0x110B5,
	0x110B9,
	0x110BB,
	0x110C2,
	0x110C3,
	0x1112A,
	0x1112C,
	0x11131,
	0x11133,
	0x11173,
	0x11174,
	0x111B6,
	0x111BC,
	0x111C9,
	0x111CB,
	0x111CC,
	0x111CD,
	0x1122F,
	0x11230,
	0x112E3,
	0x112E5,
	0x112E9,
	0x112EB,
	0x1133B,
	0x1133D,
	0x11438,
	0x1143E,
	0x11442,
	0x11443,
	0x11446,
	0x11447,
	0x114B3,
	0x114B9,
	0x114C2,
	0x114C4,
