	0x2499,
	0x24F1,
	0x24F2,
	0x16E91,
	0x16E92,
	0x1D2D1,
	0x1D2D2,
	0x1D2F1,
	0x1D2F2
};

static const UV UNI_NV__17_SLASH_2_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF32,
	0xF33
};

static const UV UNI_NV__18_invlist[] = {  /* for all charsets */
	17,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16EF,
	0x16F0,
	0x2471,
	0x2472,
	0x2485,
	0x2486,
	0x2499,
	0x249A,
	0x24F2,
	0x24F3,
	0x16E92,
	0x16E93,
	0x1D2D2,
	0x1D2D3,
	0x1D2F2,
	0x1D2F3
};

static const UV UNI_NV__19_invlist[] = {  /* for all charsets */
	17,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16F0,
	0x16F1,
	0x2472,
	0x2473,
	0x2486,
	0x2487,
	0x249A,
	0x249B,
	0x24F3,
	0x24F4,
	0x16E93,
	0x16E94,
	0x1D2D3,
	0x1D2D4,
	0x1D2F3,
	0x1D2F4
};

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_NV__2_invlist[] = {  /* for ASCII/Latin1 */
	281,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x32,
	0x33,
	0xB2,
	0xB3,
	0x662,
	0x663,
	0x6F2,
	0x6F3,
	0x7C2,
	0x7C3,
	0x968,
	0x969,
	0x9E8,
	0x9E9,
	0xA68,
	0xA69,
	0xAE8,
	0xAE9,
	0xB68,
	0xB69,
	0xBE8,
	0xBE9,
	0xC68,
	0xC69,
	0xC7A,
	0xC7B,
	0xC7D,
	0xC7E,
	0xCE8,
	0xCE9,
	0xD68,
	0xD69,
	0xDE8,
	0xDE9,
	0xE52,
	0xE53,
	0xED2,
	0xED3,
	0xF22,
	0xF23,
	0x1042,
	0x1043,
	0x1092,
	0x1093,
	0x136A,
	0x136B,
	0x17E2,
	0x17E3,
	0x17F2,
	0x17F3,
	0x1812,
	0x1813,
	0x1948,
	0x1949,
	0x19D2,
	0x19D3,
	0x1A82,
	0x1A83,
	0x1A92,
	0x1A93,
	0x1B52,
	0x1B53,
	0x1BB2,
	0x1BB3,
	0x1C42,
	0x1C43,
	0x1C52,
	0x1C53,
	0x2082,
	0x2083,
	0x2161,
	0x2162,
	0x2171,
	0x2172,
	0x2461,
	0x2462,
	0x2475,
	0x2476,
	0x2489,
	0x248A,
	0x24F6,
	0x24F7,
	0x2777,
	0x2778,
	0x2781,
	0x2782,
	0x278B,
	0x278C,
	0x3022,
	0x3023,
	0x3193,
	0x3194,
	0x3221,
	0x3222,
	0x3281,
	0x3282,
	0x3483,
	0x3484,
	0x4E8C,
	0x4E8D,
	0x5169,
	0x516A,
	0x5F0D,
	0x5F0E,
	0x5F10,
	0x5F11,
	0x8CAE,
	0x8CAF,
	0x8CB3,
	0x8CB4,
	0x8D30,
	0x8D31,
	0xA622,
	0xA623,
	0xA6E7,
	0xA6E8,
	0xA8D2,
	0xA8D3,
	0xA902,
	0xA903,
	0xA9D2,
	0xA9D3,
	0xA9F2,
	0xA9F3,
	0xAA52,
	0xAA53,
	0xABF2,
	0xABF3,
	0xF978,
	0xF979,
	0xFF12,
	0xFF13,
	0x10108,
	0x10109,
	0x1015B,
	0x1015F,
	0x102E2,
	0x102E3,
	0x103D2,
	0x103D3,
	0x104A2,
	0x104A3,
	0x10859,
	0x1085A,
	0x1087A,
	0x1087B,
	0x108A8,
	0x108A9,
	0x1091A,
	0x1091B,
	0x109C1,
	0x109C2,
	0x10A41,
	0x10A42,
	0x10B59,
	0x10B5A,
	0x10B79,
	0x10B7A,
	0x10BAA,
	0x10BAB,
	0x10D32,
	0x10D33,
	0x10E61,
	0x10E62,
	0x10F1E,
	0x10F1F,
	0x10FC6,
	0x10FC7,
	0x11053,
	0x11054,
	0x11068,
	0x11069,
	0x110F2,
	0x110F3,
	0x11138,
	0x11139,
	0x111D2,
	0x111D3,
	0x111E2,
	0x111E3,
	0x112F2,
	0x112F3,
	0x11452,
	0x11453,
	0x114D2,
	0x114D3,
	0x11652,
	0x11653,
	0x116C2,
	0x116C3,
	0x11732,
	0x11733,
	0x118E2,
	0x118E3,
	0x11952,
	0x11953,
	0x11C52,
	0x11C53,
	0x11C5B,
	0x11C5C,
	0x11D52,
	0x11D53,
	0x11DA2,
	0x11DA3,
	0x11F52,
	0x11F53,
	0x12400,
	0x12401,
	0x12416,
	0x12417,
	0x1241F,
	0x12420,
	0x12423,
	0x12424,
	0x1242D,
	0x1242E,
	0x12435,
	0x12436,
	0x1244A,
	0x1244B,
	0x12450,
	0x12451,
	0x12456,
	0x12457,
	0x12459,
	0x1245A,
	0x16A62,
	0x16A63,
	0x16AC2,
	0x16AC3,
	0x16B52,
	0x16B53,
	0x16E82,
	0x16E83,
	0x16E95,
	0x16E96,
	0x1D2C2,
	0x1D2C3,
	0x1D2E2,
	0x1D2E3,
	0x1D361,
	0x1D362,
	0x1D373,
	0x1D374,
	0x1D7D0,
	0x1D7D1,
	0x1D7DA,
	0x1D7DB,
	0x1D7E4,
	0x1D7E5,
	0x1D7EE,
	0x1D7EF,
	0x1D7F8,
	0x1D7F9,
	0x1E142,
	0x1E143,
	0x1E2F2,
	0x1E2F3,
	0x1E4F2,
	0x1E4F3,
	0x1E8C8,
	0x1E8C9,
	0x1E952,
	0x1E953,
	0x1EC72,
	0x1EC73,
	0x1ECA4,
	0x1ECA5,
	0x1ECB2,
	0x1ECB3,
	0x1ED02,
	0x1ED03,
	0x1ED2F,
	0x1ED30,
	0x1F103,
	0x1F104,
	0x1FBF2,
	0x1FBF3,
	0x22390,
	0x22391
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_NV__2_invlist[] = {  /* for EBCDIC 1047 */
	281,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xEA,
	0xEB,
	0xF2,
	0xF3,
	0x662,
	0x663,
	0x6F2,
	0x6F3,
	0x7C2,
	0x7C3,
	0x968,
	0x969,
	0x9E8,
	0x9E9,
	0xA68,
	0xA69,
	0xAE8,
	0xAE9,
	0xB68,
	0xB69,
	0xBE8,
	0xBE9,
	0xC68,
	0xC69,
	0xC7A,
	0xC7B,
	0xC7D,
	0xC7E,
	0xCE8,
	0xCE9,
	0xD68,
	0xD69,
	0xDE8,
	0xDE9,
	0xE52,
	0xE53,
	0xED2,
	0xED3,
	0xF22,
	0xF23,
	0x1042,
	0x1043,
	0x1092,
	0x1093,
	0x136A,
	0x136B,
	0x17E2,
	0x17E3,
	0x17F2,
	0x17F3,
	0x1812,
	0x1813,
	0x1948,
	0x1949,
	0x19D2,
	0x19D3,
	0x1A82,
	0x1A83,
	0x1A92,
	0x1A93,
	0x1B52,
	0x1B53,
	0x1BB2,
	0x1BB3,
	0x1C42,
	0x1C43,
	0x1C52,
	0x1C53,
	0x2082,
	0x2083,
	0x2161,
	0x2162,
	0x2171,
	0x2172,
	0x2461,
	0x2462,
	0x2475,
	0x2476,
	0x2489,
	0x248A,
	0x24F6,
	0x24F7,
	0x2777,
	0x2778,
	0x2781,
	0x2782,
	0x278B,
	0x278C,
	0x3022,
	0x3023,
	0x3193,
	0x3194,
	0x3221,
	0x3222,
	0x3281,
	0x3282,
	0x3483,
	0x3484,
	0x4E8C,
	0x4E8D,
	0x5169,
	0x516A,
	0x5F0D,
	0x5F0E,
	0x5F10,
	0x5F11,
	0x8CAE,
	0x8CAF,
	0x8CB3,
	0x8CB4,
	0x8D30,
	0x8D31,
	0xA622,
	0xA623,
	0xA6E7,
	0xA6E8,
	0xA8D2,
	0xA8D3,
	0xA902,
	0xA903,
	0xA9D2,
	0xA9D3,
	0xA9F2,
	0xA9F3,
	0xAA52,
	0xAA53,
	0xABF2,
	0xABF3,
	0xF978,
	0xF979,
	0xFF12,
	0xFF13,
	0x10108,
	0x10109,
	0x1015B,
	0x1015F,
	0x102E2,
	0x102E3,
	0x103D2,
	0x103D3,
	0x104A2,
	0x104A3,
	0x10859,
	0x1085A,
	0x1087A,
	0x1087B,
	0x108A8,
	0x108A9,
	0x1091A,
	0x1091B,
	0x109C1,
	0x109C2,
	0x10A41,
	0x10A42,
	0x10B59,
	0x10B5A,
	0x10B79,
	0x10B7A,
	0x10BAA,
	0x10BAB,
	0x10D32,
	0x10D33,
	0x10E61,
	0x10E62,
	0x10F1E,
	0x10F1F,
	0x10FC6,
	0x10FC7,
	0x11053,
	0x11054,
	0x11068,
	0x11069,
	0x110F2,
	0x110F3,
	0x11138,
	0x11139,
	0x111D2,
	0x111D3,
	0x111E2,
	0x111E3,
	0x112F2,
	0x112F3,
	0x11452,
	0x11453,
	0x114D2,
	0x114D3,
	0x11652,
	0x11653,
	0x116C2,
	0x116C3,
	0x11732,
	0x11733,
	0x118E2,
	0x118E3,
	0x11952,
	0x11953,
	0x11C52,
	0x11C53,
	0x11C5B,
	0x11C5C,
	0x11D52,
	0x11D53,
	0x11DA2,
	0x11DA3,
	0x11F52,
	0x11F53,
	0x12400,
	0x12401,
	0x12416,
	0x12417,
	0x1241F,
	0x12420,
	0x12423,
	0x12424,
	0x1242D,
	0x1242E,
	0x12435,
	0x12436,
	0x1244A,
	0x1244B,
	0x12450,
	0x12451,
	0x12456,
	0x12457,
	0x12459,
	0x1245A,
	0x16A62,
	0x16A63,
	0x16AC2,
	0x16AC3,
	0x16B52,
	0x16B53,
	0x16E82,
	0x16E83,
	0x16E95,
	0x16E96,
	0x1D2C2,
	0x1D2C3,
	0x1D2E2,
	0x1D2E3,
	0x1D361,
	0x1D362,
	0x1D373,
	0x1D374,
	0x1D7D0,
	0x1D7D1,
	0x1D7DA,
	0x1D7DB,
	0x1D7E4,
	0x1D7E5,
	0x1D7EE,
	0x1D7EF,
	0x1D7F8,
	0x1D7F9,
	0x1E142,
	0x1E143,
	0x1E2F2,
	0x1E2F3,
	0x1E4F2,
	0x1E4F3,
	0x1E8C8,
	0x1E8C9,
	0x1E952,
	0x1E953,
	0x1EC72,
	0x1EC73,
	0x1ECA4,
	0x1ECA5,
	0x1ECB2,
	0x1ECB3,
	0x1ED02,
	0x1ED03,
	0x1ED2F,
	0x1ED30,
	0x1F103,
	0x1F104,
	0x1FBF2,
	0x1FBF3,
	0x22390,
	0x22391
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_NV__2_invlist[] = {  /* for EBCDIC 037 */
	281,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xEA,
	0xEB,
	0xF2,
	0xF3,
	0x662,
	0x663,
	0x6F2,
	0x6F3,
	0x7C2,
	0x7C3,
	0x968,
	0x969,
	0x9E8,
	0x9E9,
	0xA68,
	0xA69,
	0xAE8,
	0xAE9,
	0xB68,
	0xB69,
	0xBE8,
	0xBE9,
	0xC68,
	0xC69,
	0xC7A,
	0xC7B,
	0xC7D,
	0xC7E,
	0xCE8,
	0xCE9,
	0xD68,
	0xD69,
	0xDE8,
	0xDE9,
	0xE52,
	0xE53,
	0xED2,
	0xED3,
	0xF22,
	0xF23,
	0x1042,
	0x1043,
	0x1092,
	0x1093,
	0x136A,
	0x136B,
	0x17E2,
	0x17E3,
	0x17F2,
	0x17F3,
	0x1812,
	0x1813,
	0x1948,
	0x1949,
	0x19D2,
	0x19D3,
	0x1A82,
	0x1A83,
	0x1A92,
	0x1A93,
	0x1B52,
	0x1B53,
	0x1BB2,
	0x1BB3,
	0x1C42,
	0x1C43,
	0x1C52,
	0x1C53,
	0x2082,
	0x2083,
	0x2161,
	0x2162,
	0x2171,
	0x2172,
	0x2461,
	0x2462,
	0x2475,
	0x2476,
	0x2489,
	0x248A,
	0x24F6,
	0x24F7,
	0x2777,
	0x2778,
	0x2781,
	0x2782,
	0x278B,
	0x278C,
	0x3022,
	0x3023,
	0x3193,
	0x3194,
	0x3221,
	0x3222,
	0x3281,
	0x3282,
	0x3483,
	0x3484,
	0x4E8C,
	0x4E8D,
	0x5169,
	0x516A,
	0x5F0D,
	0x5F0E,
	0x5F10,
	0x5F11,
	0x8CAE,
	0x8CAF,
	0x8CB3,
	0x8CB4,
	0x8D30,
	0x8D31,
	0xA622,
	0xA623,
	0xA6E7,
	0xA6E8,
	0xA8D2,
	0xA8D3,
	0xA902,
	0xA903,
	0xA9D2,
	0xA9D3,
	0xA9F2,
	0xA9F3,
	0xAA52,
	0xAA53,
	0xABF2,
	0xABF3,
	0xF978,
	0xF979,
	0xFF12,
	0xFF13,
	0x10108,
	0x10109,
	0x1015B,
	0x1015F,
	0x102E2,
	0x102E3,
	0x103D2,
	0x103D3,
	0x104A2,
	0x104A3,
	0x10859,
	0x1085A,
	0x1087A,
	0x1087B,
	0x108A8,
	0x108A9,
	0x1091A,
	0x1091B,
	0x109C1,
	0x109C2,
	0x10A41,
	0x10A42,
	0x10B59,
	0x10B5A,
	0x10B79,
	0x10B7A,
	0x10BAA,
	0x10BAB,
	0x10D32,
	0x10D33,
	0x10E61,
	0x10E62,
	0x10F1E,
	0x10F1F,
	0x10FC6,
	0x10FC7,
	0x11053,
	0x11054,
	0x11068,
	0x11069,
	0x110F2,
	0x110F3,
	0x11138,
	0x11139,
	0x111D2,
	0x111D3,
	0x111E2,
	0x111E3,
	0x112F2,
	0x112F3,
	0x11452,
	0x11453,
	0x114D2,
	0x114D3,
	0x11652,
	0x11653,
	0x116C2,
	0x116C3,
	0x11732,
	0x11733,
	0x118E2,
	0x118E3,
	0x11952,
	0x11953,
	0x11C52,
	0x11C53,
	0x11C5B,
	0x11C5C,
	0x11D52,
	0x11D53,
	0x11DA2,
	0x11DA3,
	0x11F52,
	0x11F53,
	0x12400,
	0x12401,
	0x12416,
	0x12417,
	0x1241F,
	0x12420,
	0x12423,
	0x12424,
	0x1242D,
	0x1242E,
	0x12435,
	0x12436,
	0x1244A,
	0x1244B,
	0x12450,
	0x12451,
	0x12456,
	0x12457,
	0x12459,
	0x1245A,
	0x16A62,
	0x16A63,
	0x16AC2,
	0x16AC3,
	0x16B52,
	0x16B53,
	0x16E82,
	0x16E83,
	0x16E95,
	0x16E96,
	0x1D2C2,
	0x1D2C3,
	0x1D2E2,
	0x1D2E3,
	0x1D361,
	0x1D362,
	0x1D373,
	0x1D374,
	0x1D7D0,
	0x1D7D1,
	0x1D7DA,
	0x1D7DB,
	0x1D7E4,
	0x1D7E5,
	0x1D7EE,
	0x1D7EF,
	0x1D7F8,
	0x1D7F9,
	0x1E142,
	0x1E143,
	0x1E2F2,
	0x1E2F3,
	0x1E4F2,
	0x1E4F3,
	0x1E8C8,
	0x1E8C9,
	0x1E952,
	0x1E953,
	0x1EC72,
	0x1EC73,
	0x1ECA4,
	0x1ECA5,
	0x1ECB2,
	0x1ECB3,
	0x1ED02,
	0x1ED03,
	0x1ED2F,
	0x1ED30,
	0x1F103,
	0x1F104,
	0x1FBF2,
	0x1FBF3,
	0x22390,
	0x22391
};

#  endif	/* EBCDIC 037 */

static const UV UNI_NV__2_SLASH_3_invlist[] = {  /* for all charsets */
	15,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2154,
	0x2155,
	0x10177,
	0x10178,
	0x109FD,
	0x109FE,
	0x10E7E,
	0x10E7F,
	0x1245B,
	0x1245C,
	0x1245E,
	0x1245F,
	0x12466,
	0x12467
};

static const UV UNI_NV__2_SLASH_5_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2156,
	0x2157
};

static const UV UNI_NV__20_invlist[] = {  /* for all charsets */
	73,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1373,
	0x1374,
	0x2473,
	0x2474,
	0x2487,
	0x2488,
	0x249B,
	0x249C,
	0x24F4,
	0x24F5,
	0x3039,
