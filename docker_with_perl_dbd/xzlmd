
=item $IPC::Cmd::USE_IPC_OPEN3

=item $IPC::Cmd::WARN

=item $IPC::Cmd::INSTANCES

=item $IPC::Cmd::ALLOW_NULL_ARGS

=back

=item Caveats

Whitespace and IPC::Open3 / system(), Whitespace and IPC::Run, IO Redirect,
Interleaving STDOUT/STDERR

=item See Also

=item ACKNOWLEDGEMENTS

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 IPC::Msg - SysV Msg IPC object class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , FLAGS ), id, rcv ( BUF, LEN [, TYPE [, FLAGS ]] ), remove, set
( STAT ), set ( NAME => VALUE [, NAME => VALUE ...] ), snd ( TYPE, MSG [,
FLAGS ] ), stat

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back

=head2 IPC::Open2 - open a process for both reading and writing using
open2()

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item WARNING 

=item SEE ALSO

=back

=head2 IPC::Open3 - open a process for reading, writing, and error handling
using open3()

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item See Also

L<IPC::Open2>, L<IPC::Run>

=item WARNING

=back

=head2 IPC::Semaphore - SysV Semaphore IPC object class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , NSEMS , FLAGS ), getall, getncnt ( SEM ), getpid ( SEM ),
getval ( SEM ), getzcnt ( SEM ), id, op ( OPLIST ), remove, set ( STAT ),
set ( NAME => VALUE [, NAME => VALUE ...] ), setall ( VALUES ), setval ( N
, VALUE ), stat

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back

=head2 IPC::SharedMem - SysV Shared Memory IPC object class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

new ( KEY , SIZE , FLAGS ), id, read ( POS, SIZE ), write ( STRING, POS,
SIZE ), remove, is_removed, stat, attach ( [FLAG] ), detach, addr

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back

=head2 IPC::SysV - System V IPC constants and system calls

=over 4

=item SYNOPSIS

=item DESCRIPTION

ftok( PATH ), ftok( PATH, ID ), shmat( ID, ADDR, FLAG ), shmdt( ADDR ),
memread( ADDR, VAR, POS, SIZE ), memwrite( ADDR, STRING, POS, SIZE )

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=back

=head2 Internals - Reserved special namespace for internals related
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item FUNCTIONS

SvREFCNT(THING [, $value]), SvREADONLY(THING, [, $value]),
hv_clear_placeholders(%hash), stack_refcounted

=back

=item AUTHOR

=item SEE ALSO

=back

=head2 JSON::PP - JSON::XS compatible pure-Perl module.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONAL INTERFACE

=over 4

=item encode_json

=item decode_json

=item JSON::PP::is_bool

=back

=item OBJECT-ORIENTED INTERFACE

=over 4

=item new

=item ascii

=item latin1

=item utf8

=item pretty

=item indent

=item space_before

=item space_after

=item relaxed

list items can have an end-comma, shell-style '#'-comments, C-style
multiple-line '/* */'-comments (JSON::PP only), C++-style one-line
'//'-comments (JSON::PP only), literal ASCII TAB characters in strings

=item canonical

=item allow_nonref

=item allow_unknown

=item allow_blessed

=item convert_blessed

=item allow_tags

=item boolean_values

=item core_bools

=item filter_json_object

=item filter_json_single_key_object

=item shrink

=item max_depth

=item max_size

=item encode

=item decode

=item decode_prefix

=back

=item FLAGS FOR JSON::PP ONLY

=over 4

=item allow_singlequote

=item allow_barekey

=item allow_bignum

=item loose

=item escape_slash

=item indent_length

=item sort_by

=back

=item INCREMENTAL PARSING

=over 4

=item incr_parse

=item incr_text

=item incr_skip

=item incr_reset

=back

=item MAPPING

=over 4

=item JSON -> PERL

object, array, string, number, true, false, null, shell-style comments (C<<
# I<text> >>), tagged values (C<< (I<tag>)I<value> >>)

=item PERL -> JSON

hash references, array references, other references, JSON::PP::true,
JSON::PP::false, JSON::PP::null, blessed objects, simple scalars

=item OBJECT SERIALISATION

1. C<allow_tags> is enabled and the object has a C<FREEZE> method, 2.
C<convert_blessed> is enabled and the object has a C<TO_JSON> method, 3.
C<allow_bignum> is enabled and the object is a C<Math::BigInt> or
C<Math::BigFloat>, 4. C<allow_blessed> is enabled, 5. none of the above

=back

=item ENCODING/CODESET FLAG NOTES

C<utf8> flag disabled, C<utf8> flag enabled, C<latin1> or C<ascii> flags
enabled

=item BUGS

=item SEE ALSO

=item AUTHOR

=item CURRENT MAINTAINER

=item COPYRIGHT AND LICENSE

=back

=head2 JSON::PP::Boolean - dummy module providing JSON::PP::Boolean

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item AUTHOR

=item LICENSE

=back

=head2 List::Util - A selection of general-utility list subroutines

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=over 4

=item LIST-REDUCTION FUNCTIONS

=back

=over 4

=item reduce

=item reductions

=item any

=item all

=item none

=item notall

=item first

=item max

=item maxstr

=item min

=item minstr

=item product

=item sum

=item sum0

=back

=over 4

=item KEY/VALUE PAIR LIST FUNCTIONS

=back

=over 4

=item pairs

=item unpairs

=item pairkeys

=item pairvalues

=item pairgrep

=item pairfirst

=item pairmap

=back

=over 4

=item OTHER FUNCTIONS

=back

=over 4

=item shuffle

=back

=over 4

=item sample

=item uniq

=item uniqint

=item uniqnum

=item uniqstr

=back

=over 4

=item head

=item tail

=item zip

=item mesh

=back

=over 4

=item CONFIGURATION VARIABLES

=over 4

=item $RAND

=back

=item KNOWN BUGS

=over 4

=item RT #95409

=item uniqnum() on oversized bignums

=back

=item SUGGESTED ADDITIONS

=item SEE ALSO

=item COPYRIGHT

=back

=head2 List::Util::XS - Indicate if List::Util was compiled with a C
compiler

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SEE ALSO

=item COPYRIGHT

=back

=head2 Locale::Maketext - framework for localization

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item QUICK OVERVIEW

=item METHODS

=over 4

=item Construction Methods

=item The "maketext" Method

$lh->fail_with I<or> $lh->fail_with(I<PARAM>), $lh->failure_handler_auto,
$lh->denylist(@list) <or> $lh->blacklist(@list), $lh->allowlist(@list) <or>
$lh->whitelist(@list)

=item Utility Methods

$language->quant($number, $singular), $language->quant($number, $singular,
$plural), $language->quant($number, $singular, $plural, $negative),
$language->numf($number), $language->numerate($number, $singular, $plural,
$negative), $language->sprintf($format, @items), $language->language_tag(),
$language->encoding()

=item Language Handle Attributes and Internals

=back

=item LANGUAGE CLASS HIERARCHIES

=item ENTRIES IN EACH LEXICON

=item BRACKET NOTATION

=item BRACKET NOTATION SECURITY

=item AUTO LEXICONS

=item READONLY LEXICONS

=item CONTROLLING LOOKUP FAILURE

=item HOW TO USE MAKETEXT

=item SEE ALSO

=item COPYRIGHT AND DISCLAIMER

=item AUTHOR

=back

=head2 Locale::Maketext::Cookbook - recipes for using Locale::Maketext

=over 4

=item INTRODUCTION

=item ONESIDED LEXICONS

=item DECIMAL PLACES IN NUMBER FORMATTING

=back

=head2 Locale::Maketext::Guts - Deprecated module to load Locale::Maketext
utf8 code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 Locale::Maketext::GutsLoader - Deprecated module to load
Locale::Maketext utf8 code

=over 4

=item SYNOPSIS

=item DESCRIPTION

=back

=head2 Locale::Maketext::Simple - Simple interface to
Locale::Maketext::Lexicon

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

=over 4

=item Class

=item Path

=item Style

=item Export

=item Subclass

=item Decode

=item Encoding

=back

=back

=over 4

=item ACKNOWLEDGMENTS

=item SEE ALSO

=item AUTHORS

=item COPYRIGHT

=over 4

=item The "MIT" License

=back

=back

=head2 Locale::Maketext::TPJ13 -- article about software localization

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Localization and Perl: gettext breaks, Maketext fixes

=over 4

=item A Localization Horror Story: It Could Happen To You

=item The Linguistic View

=item Breaking gettext

=item Replacing gettext

=item Buzzwords: Abstraction and Encapsulation

=item Buzzword: Isomorphism

=item Buzzword: Inheritance

=item Buzzword: Concision

=item The Devil in the Details

=item The Proof in the Pudding: Localizing Web Sites

=item References

=back

=back

=head2 MIME::Base64 - Encoding and decoding of base64 strings

=over 4

=item SYNOPSIS

=item DESCRIPTION

encode_base64( $bytes ), encode_base64( $bytes, $eol );, decode_base64(
$str ), encode_base64url( $bytes ), decode_base64url( $str ),
encoded_base64_length( $bytes ), encoded_base64_length( $bytes, $eol ),
decoded_base64_length( $str )

=item EXAMPLES

=item COPYRIGHT

=item SEE ALSO

=back

=head2 MIME::QuotedPrint - Encoding and decoding of quoted-printable
strings

=over 4

=item SYNOPSIS

=item DESCRIPTION

encode_qp( $str), encode_qp( $str, $eol), encode_qp( $str, $eol, $binmode
), decode_qp( $str )

=item COPYRIGHT

=item SEE ALSO

=back

=head2 Math::BigFloat - arbitrary size floating point math package

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Input

=item Output

=back

=item METHODS

=over 4

=item Configuration methods

accuracy(), precision()

=item Constructor methods

from_hex(), from_oct(), from_bin(), from_ieee754(), bpi()

=item Arithmetic methods

bmuladd(), binv(), bdiv(), bmod(), bexp(), bnok(), bsin(), bcos(), batan(),
batan2(), as_float(), to_ieee754()

=item ACCURACY AND PRECISION

=item Rounding

bfround ( +$scale ), bfround ( -$scale ), bfround ( 0 ), bround  ( +$scale
), bround  ( -$scale ) and bround ( 0 )

=back

=item NUMERIC LITERALS

=over 4

=item Hexadecimal, octal, and binary floating point literals

=item Math library

=back

=item EXPORTS

stringify, bstr(), brsft(), Modifying and =, precision() vs. accuracy()

=item BUGS

=item SUPPORT

GitHub, RT: CPAN's request tracker, MetaCPAN, CPAN Testers Matrix

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 Math::BigInt - arbitrary size integer math package

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Input

=item Output

=back

=item METHODS

=over 4

=item Configuration methods

accuracy(), precision(), div_scale(), round_mode(), trap_inf(), trap_nan(),
upgrade(), downgrade(), modify(), config()

=item Constructor methods

new(), from_dec(), from_hex(), from_oct(), from_bin(), from_bytes(),
from_base(), from_base_num(), bzero(), bone(), binf(), bnan(), bpi(),
copy(), as_int(), as_number(), as_float(), as_rat()

=item Boolean methods

is_zero(), is_one( [ SIGN ]), is_finite(), is_inf( [ SIGN ] ), is_nan(),
is_positive(), is_pos(), is_negative(), is_neg(), is_non_positive(),
is_non_negative(), is_odd(), is_even(), is_int()

=item Comparison methods

bcmp(), bacmp(), beq(), bne(), blt(), ble(), bgt(), bge()

=item Arithmetic methods

bneg(), babs(), bsgn(), bnorm(), binc(), bdec(), badd(), bsub(), bmul(),
bmuladd(), binv(), bdiv(), btdiv(), bmod(), btmod(), bmodinv(), bmodpow(),
bpow(), blog(), bexp(), bilog2(), bilog10(), bclog2(), bclog10(), bnok(),
buparrow(), uparrow(), backermann(), ackermann(), bsin(), bcos(), batan(),
batan2(), bsqrt(), broot(), bfac(), bdfac(), btfac(), bmfac(), bfib(),
blucas(), brsft(), blsft()

=item Bitwise methods

bbrsft(), bblsft(), band(), bior(), bxor(), bnot()

=item Rounding methods

round(), bround(), bfround(), bfloor(), bceil(), bint()

=item Other mathematical methods

bgcd(), blcm()

=item Object property methods

sign(), digit(), digitsum(), bdigitsum(), length(), mantissa(), exponent(),
parts(), sparts(), nparts(), eparts(), dparts(), fparts(), numerator(),
denominator()

=item String conversion methods

bstr(), bsstr(), bnstr(), bestr(), bdstr(), bfstr(), to_hex(), to_bin(),
to_oct(), to_bytes(), to_base(), to_base_num(), as_hex(), as_bin(),
as_oct(), as_bytes()

=item Other conversion methods

numify()

=item Utility methods

dec_str_to_dec_flt_str(), hex_str_to_dec_flt_str(),
oct_str_to_dec_flt_str(), bin_str_to_dec_flt_str(), dec_str_to_dec_str(),
hex_str_to_dec_str(), oct_str_to_dec_str(), bin_str_to_dec_str()

=back

=item ACCURACY and PRECISION

=over 4

=item Precision P

=item Accuracy A

=item Fallback F

=item Rounding mode R

'trunc', 'even', 'odd', '+inf', '-inf', 'zero', 'common', Precision,
Accuracy (significant digits), Setting/Accessing, Creating numbers, Usage,
Precedence, Overriding globals, Local settings, Rounding, Default values,
Remarks

=back

=item Infinity and Not a Number

oct()/hex()

=item INTERNALS

=over 4

=item MATH LIBRARY

=item SIGN

=back

=item EXAMPLES

=item NUMERIC LITERALS

=over 4

=item Hexadecimal, octal, and binary floating point literals

=back

=item PERFORMANCE

=over 4

=item Alternative math libraries

=back

=item SUBCLASSING

=over 4

=item Subclassing Math::BigInt

=back

=item UPGRADING

=over 4

=item Auto-upgrade

=back

=item EXPORTS

=item CAVEATS

Comparing numbers as strings, int(), Modifying and =, Overloading -$x,
Mixing different object types

=item BUGS

=item SUPPORT

GitHub, RT: CPAN's request tracker, MetaCPAN, CPAN Testers Matrix

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 Math::BigInt::Calc - pure Perl module to support Math::BigInt

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPTIONS

base_len, use_int

=item METHODS

_base_len()

=item SEE ALSO

=back

=head2 Math::BigInt::FastCalc - Math::BigInt::Calc with some XS for more
speed

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item STORAGE

=item METHODS

=item BUGS

=item SUPPORT

GitHub, RT: CPAN's request tracker, MetaCPAN, CPAN Testers Matrix

=item LICENSE

=item AUTHORS

=item SEE ALSO

=back
