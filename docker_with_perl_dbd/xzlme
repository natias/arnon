
=head2 Math::BigInt::Lib - virtual parent class for Math::BigInt libraries

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item General Notes

CLASS-E<gt>api_version(), CLASS-E<gt>_new(STR), CLASS-E<gt>_zero(),
CLASS-E<gt>_one(), CLASS-E<gt>_two(), CLASS-E<gt>_ten(),
CLASS-E<gt>_from_bin(STR), CLASS-E<gt>_from_oct(STR),
CLASS-E<gt>_from_hex(STR), CLASS-E<gt>_from_bytes(STR),
CLASS-E<gt>_from_base(STR, BASE, COLLSEQ), CLASS-E<gt>_from_base_num(ARRAY,
BASE), CLASS-E<gt>_add(OBJ1, OBJ2), CLASS-E<gt>_mul(OBJ1, OBJ2),
CLASS-E<gt>_div(OBJ1, OBJ2), CLASS-E<gt>_sub(OBJ1, OBJ2, FLAG),
CLASS-E<gt>_sub(OBJ1, OBJ2), CLASS-E<gt>_sadd(OBJ1, SIGN1, OBJ2, SIGN2),
CLASS-E<gt>_ssub(OBJ1, SIGN1, OBJ2, SIGN2), CLASS-E<gt>_dec(OBJ),
CLASS-E<gt>_inc(OBJ), CLASS-E<gt>_mod(OBJ1, OBJ2), CLASS-E<gt>_sqrt(OBJ),
CLASS-E<gt>_root(OBJ, N), CLASS-E<gt>_fac(OBJ), CLASS-E<gt>_dfac(OBJ),
CLASS-E<gt>_pow(OBJ1, OBJ2), CLASS-E<gt>_modinv(OBJ1, OBJ2),
CLASS-E<gt>_modpow(OBJ1, OBJ2, OBJ3), CLASS-E<gt>_rsft(OBJ, N, B),
CLASS-E<gt>_lsft(OBJ, N, B), CLASS-E<gt>_log_int(OBJ, B),
CLASS-E<gt>_ilog2(OBJ), CLASS-E<gt>_ilog10(OBJ), CLASS-E<gt>_clog2(OBJ),
CLASS-E<gt>_clog10(OBJ), CLASS-E<gt>_gcd(OBJ1, OBJ2), CLASS-E<gt>_lcm(OBJ1,
OBJ2), CLASS-E<gt>_fib(OBJ), CLASS-E<gt>_lucas(OBJ), CLASS-E<gt>_and(OBJ1,
OBJ2), CLASS-E<gt>_or(OBJ1, OBJ2), CLASS-E<gt>_xor(OBJ1, OBJ2),
CLASS-E<gt>_sand(OBJ1, OBJ2, SIGN1, SIGN2), CLASS-E<gt>_sor(OBJ1, OBJ2,
SIGN1, SIGN2), CLASS-E<gt>_sxor(OBJ1, OBJ2, SIGN1, SIGN2),
CLASS-E<gt>_is_zero(OBJ), CLASS-E<gt>_is_one(OBJ), CLASS-E<gt>_is_two(OBJ),
CLASS-E<gt>_is_ten(OBJ), CLASS-E<gt>_is_even(OBJ), CLASS-E<gt>_is_odd(OBJ),
CLASS-E<gt>_acmp(OBJ1, OBJ2), CLASS-E<gt>_str(OBJ),
CLASS-E<gt>_to_bin(OBJ), CLASS-E<gt>_to_oct(OBJ), CLASS-E<gt>_to_hex(OBJ),
CLASS-E<gt>_to_bytes(OBJ), CLASS-E<gt>_to_base(OBJ, BASE, COLLSEQ),
CLASS-E<gt>_to_base_num(OBJ, BASE), CLASS-E<gt>_as_bin(OBJ),
CLASS-E<gt>_as_oct(OBJ), CLASS-E<gt>_as_hex(OBJ),
CLASS-E<gt>_as_bytes(OBJ), CLASS-E<gt>_num(OBJ), CLASS-E<gt>_copy(OBJ),
CLASS-E<gt>_len(OBJ), CLASS-E<gt>_zeros(OBJ), CLASS-E<gt>_digit(OBJ, N),
CLASS-E<gt>_digitsum(OBJ), CLASS-E<gt>_check(OBJ), CLASS-E<gt>_set(OBJ)

=item API version 2

CLASS-E<gt>_1ex(N), CLASS-E<gt>_nok(OBJ1, OBJ2), CLASS-E<gt>_alen(OBJ)

=back

=item WRAP YOUR OWN

=item BUGS

=item SUPPORT

GitHub Source Repository, RT: CPAN's request tracker, MetaCPAN, CPAN
Testers Matrix

=item LICENSE

=item AUTHOR

=item SEE ALSO

=back

=head2 Math::BigRat - arbitrary size rational number math package

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item MATH LIBRARY

=back

=item METHODS

new(), numerator(), denominator(), parts(), dparts(), fparts(), numify(),
as_int(), as_number(), as_float(), as_hex(), as_bin(), as_oct(),
from_hex(), from_oct(), from_bin(), bnan(), bzero(), binf(), bone(),
length(), digit(), bnorm(), bfac(), bround()/round()/bfround(), bmod(),
bmodinv(), bmodpow(), bneg(), is_one(), is_zero(), is_pos()/is_positive(),
is_neg()/is_negative(), is_int(), is_odd(), is_even(), bceil(), bfloor(),
bint(), bsqrt(), broot(), badd(), bmul(), bsub(), bdiv(), binv(), bdec(),
binc(), copy(), bstr()/bsstr(), bcmp(), bacmp(), beq(), bne(), blt(),
ble(), bgt(), bge(), blsft()/brsft(), band(), bior(), bxor(), bnot(),
bpow(), blog(), bexp(), bnok(), config()

=item NUMERIC LITERALS

=over 4

=item Hexadecimal, octal, and binary floating point literals

=back

=item BUGS

=item SUPPORT

GitHub, RT: CPAN's request tracker, MetaCPAN, CPAN Testers Matrix

=item LICENSE

=item SEE ALSO

=item AUTHORS

=back

=head2 Math::Complex - complex numbers and associated mathematical
functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item OPERATIONS

=item CREATION

=item DISPLAYING

=over 4

=item CHANGED IN PERL 5.6

=back

=item USAGE

=item CONSTANTS

=over 4

=item PI

=item Inf

=back

=item ERRORS DUE TO DIVISION BY ZERO OR LOGARITHM OF ZERO

=item ERRORS DUE TO INDIGESTIBLE ARGUMENTS

=item BUGS

=item SEE ALSO

=item AUTHORS

=item LICENSE

=back

=head2 Math::Trig - trigonometric functions

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item TRIGONOMETRIC FUNCTIONS

B<tan>

=over 4

=item ERRORS DUE TO DIVISION BY ZERO

=item SIMPLE (REAL) ARGUMENTS, COMPLEX RESULTS

=back

=item PLANE ANGLE CONVERSIONS

deg2rad, grad2rad, rad2deg, grad2deg, deg2grad, rad2grad, rad2rad, deg2deg,
grad2grad

=item RADIAL COORDINATE CONVERSIONS

=over 4

=item COORDINATE SYSTEMS

=item 3-D ANGLE CONVERSIONS

cartesian_to_cylindrical, cartesian_to_spherical, cylindrical_to_cartesian,
cylindrical_to_spherical, spherical_to_cartesian, spherical_to_cylindrical

=back

=item GREAT CIRCLE DISTANCES AND DIRECTIONS

=over 4

=item great_circle_distance

=item great_circle_direction

=item great_circle_bearing

=item great_circle_destination

=item great_circle_midpoint

=item great_circle_waypoint

=back

=item EXAMPLES

=over 4

=item CAVEAT FOR GREAT CIRCLE FORMULAS

=item Real-valued asin and acos

asin_real, acos_real

=back

=item BUGS

=item SEE ALSO

=item AUTHORS

=item LICENSE

=back

=head2 Memoize - Make functions faster by trading space for time

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item EXAMPLE

=item DETAILS

=item OPTIONS

=over 4

=item INSTALL

=item NORMALIZER

=item C<SCALAR_CACHE>, C<LIST_CACHE>

C<MEMORY>, C<HASH>, C<TIE>, C<FAULT>, C<MERGE>

=back

=item OTHER FACILITIES

=over 4

=item C<unmemoize>

=item C<flush_cache>

=back

=item CAVEATS

=item PERSISTENT CACHE SUPPORT

=item EXPIRATION SUPPORT

=item BUGS

=item SEE ALSO

=item THANK YOU

=item AUTHOR

=item COPYRIGHT AND LICENSE

=back

=head2 Memoize::AnyDBM_File - glue to provide EXISTS for AnyDBM_File for
Storable use

=over 4

=item DESCRIPTION

=back

=head2 Memoize::Expire - Plug-in module for automatic expiration of
memoized values

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item INTERFACE

 TIEHASH,  EXISTS,  STORE

=item ALTERNATIVES

=item CAVEATS

=item AUTHOR

=item SEE ALSO

=back

=head2 Memoize::NDBM_File - glue to provide EXISTS for NDBM_File for
Storable use

=over 4

=item DESCRIPTION

=back

=head2 Memoize::SDBM_File - DEPRECATED compability shim

=over 4

=item DESCRIPTION

=back

=head2 Memoize::Storable - store Memoized data in Storable database

=over 4

=item DESCRIPTION

=back

=head2 Module::CoreList - what modules shipped with versions of perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS API

C<first_release( MODULE )>, C<first_release_by_date( MODULE )>,
C<find_modules( REGEX, [ LIST OF PERLS ] )>, C<find_version( PERL_VERSION
)>, C<is_core( MODULE, [ MODULE_VERSION, [ PERL_VERSION ] ] )>,
C<is_deprecated( MODULE, PERL_VERSION )>, C<deprecated_in( MODULE )>,
C<removed_from( MODULE )>, C<removed_from_by_date( MODULE )>,
C<changes_between( PERL_VERSION, PERL_VERSION )>

=item DATA STRUCTURES

C<%Module::CoreList::version>, C<%Module::CoreList::delta>,
C<%Module::CoreList::released>, C<%Module::CoreList::families>,
C<%Module::CoreList::deprecated>, C<%Module::CoreList::upstream>,
C<%Module::CoreList::bug_tracker>

=item CAVEATS

=item HISTORY

=item AUTHOR

=item LICENSE

=item SEE ALSO

=back

=head2 Module::CoreList::Utils - what utilities shipped with versions of
perl

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS API

C<utilities>, C<first_release( UTILITY )>, C<first_release_by_date( UTILITY
)>, C<removed_from( UTILITY )>, C<removed_from_by_date( UTILITY )>

=item DATA STRUCTURES

C<%Module::CoreList::Utils::utilities>

=item AUTHOR

=item LICENSE

=item SEE ALSO

=back

=head2 Module::Load - runtime require of both modules and files

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Difference between C<load> and C<autoload>

=back

=item FUNCTIONS

load, autoload, load_remote, autoload_remote

=item Rules

=item IMPORTS THE FUNCTIONS

"load","autoload","load_remote","autoload_remote", 'all', '','none',undef

=item Caveats

=item SEE ALSO

=item ACKNOWLEDGEMENTS

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 Module::Load::Conditional - Looking up module information / loading
at runtime

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Methods

=over 4

=item $href = check_install( module => NAME [, version => VERSION, verbose
=> BOOL ] );

module, version, verbose, file, dir, version, uptodate

=back

=back

=over 4

=item $bool = can_load( modules => { NAME => VERSION [,NAME => VERSION] },
[verbose => BOOL, nocache => BOOL, autoload => BOOL] )

modules, verbose, nocache, autoload

=back

=over 4

=item @list = requires( MODULE );

=back

=over 4

=item Global Variables

=over 4

=item $Module::Load::Conditional::VERBOSE

=item $Module::Load::Conditional::FIND_VERSION

=item $Module::Load::Conditional::CHECK_INC_HASH

=item $Module::Load::Conditional::FORCE_SAFE_INC

=item $Module::Load::Conditional::CACHE

=item $Module::Load::Conditional::ERROR

=item $Module::Load::Conditional::DEPRECATED

=back

=item See Also

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 Module::Loaded - mark modules as loaded or unloaded

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item FUNCTIONS

=over 4

=item $bool = mark_as_loaded( PACKAGE );

=back

=back

=over 4

=item $bool = mark_as_unloaded( PACKAGE );

=back

=over 4

=item $loc = is_loaded( PACKAGE );

=back

=over 4

=item BUG REPORTS

=item AUTHOR

=item COPYRIGHT

=back

=head2 Module::Metadata - Gather package and POD information from perl
module files

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=item CLASS METHODS

=over 4

=item C<< new_from_file($filename, collect_pod => 1, decode_pod => 1) >>

=item C<< new_from_handle($handle, $filename, collect_pod => 1, decode_pod
=> 1) >>

=item C<< new_from_module($module, collect_pod => 1, inc => \@dirs,
decode_pod => 1) >>

=item C<< find_module_by_name($module, \@dirs) >>

=item C<< find_module_dir_by_name($module, \@dirs) >>

=item C<< provides( %options ) >>

version B<(required)>, dir, files, prefix

=item C<< package_versions_from_directory($dir, \@files?) >>

=item C<< log_info (internal) >>

=back

=item OBJECT METHODS

=over 4

=item C<< name() >>

=item C<< version($package) >>

=item C<< filename() >>

=item C<< packages_inside() >>

=item C<< pod_inside() >>

=item C<< contains_pod() >>

=item C<< pod($section) >>

=item C<< is_indexable($package) >> or C<< is_indexable() >>

=back

=item SUPPORT

=item AUTHOR

=item CONTRIBUTORS

=item COPYRIGHT & LICENSE

=back

=head2 NEXT - Provide a pseudo-class NEXT (et al) that allows method
redispatch

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Enforcing redispatch

=item Avoiding repetitions

=item Invoking all versions of a method with a single call

=item Using C<EVERY> methods

=back

=item SEE ALSO

=item AUTHOR

=item BUGS AND IRRITATIONS

=item COPYRIGHT

=back

=head2 Net::Cmd - Network Command class (as used by FTP, SMTP etc)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Public Methods

C<debug($level)>, C<message()>, C<code()>, C<ok()>, C<status()>,
C<datasend($data)>, C<dataend()>

=item Protected Methods

C<debug_print($dir, $text)>, C<debug_text($dir, $text)>, C<command($cmd[,
$args, ... ])>, C<unsupported()>, C<response()>, C<parse_response($text)>,
C<getline()>, C<ungetline($text)>, C<rawdatasend($data)>,
C<read_until_dot()>, C<tied_fh()>

=item Pseudo Responses

Initial value, Connection closed, Timeout

=back

=item EXPORTS

Default Exports, Optional Exports, Export Tags

=item KNOWN BUGS

=item AUTHOR

=item COPYRIGHT

=item LICENCE

=item VERSION

=item DATE

=item HISTORY

=back

=head2 Net::Config - Local configuration data for libnet

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Class Methods

C<requires_firewall($host)>

=item NetConfig Values

nntp_hosts, snpp_hosts, pop3_hosts, smtp_hosts, ph_hosts, daytime_hosts,
time_hosts, inet_domain, ftp_firewall, ftp_firewall_type, 0Z<>, 1Z<>, 2Z<>,
3Z<>, 4Z<>, 5Z<>, 6Z<>, 7Z<>, ftp_ext_passive, ftp_int_passive,
local_netmask, test_hosts, test_exists

=back

=item EXPORTS

Default Exports, Optional Exports, Export Tags

=item KNOWN BUGS

=item AUTHOR

=item COPYRIGHT

=item LICENCE

=item VERSION

=item DATE

=item HISTORY

=back

=head2 Net::Domain - Attempt to evaluate the current host's internet name
and domain

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Functions

C<hostfqdn()>, C<domainname()>, C<hostname()>, C<hostdomain()>

=back

=item EXPORTS

Default Exports, Optional Exports, Export Tags

=item KNOWN BUGS

=item AUTHOR

=item COPYRIGHT

=item LICENCE

=item VERSION

=item DATE

=item HISTORY

=back

=head2 Net::FTP - FTP Client class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Overview

=item Class Methods

C<new([$host][, %options])>

=item Object Methods

C<login([$login[, $password[, $account]]])>, C<starttls()>, C<stoptls()>,
C<prot($level)>, C<host()>, C<account($acct)>, C<authorize([$auth[,
$resp]])>, C<site($args)>, C<ascii()>, C<binary()>, C<type([$type])>,
C<rename($oldname, $newname)>, C<delete($filename)>, C<cwd([$dir])>,
C<cdup()>, C<passive([$passive])>, C<pwd()>, C<restart($where)>,
C<rmdir($dir[, $recurse])>, C<mkdir($dir[, $recurse])>, C<alloc($size[,
$record_size])>, C<ls([$dir])>, C<dir([$dir])>, C<get($remote_file[,
$local_file[, $where]])>, C<put($local_file[, $remote_file])>,
C<put_unique($local_file[, $remote_file])>, C<append($local_file[,
$remote_file])>, C<unique_name()>, C<mdtm($file)>, C<size($file)>,
C<supported($cmd)>, C<hash([$filehandle_glob_ref[,
$bytes_per_hash_mark]])>, C<feature($name)>, C<nlst([$dir])>,
C<list([$dir])>, C<retr($file)>, C<stor($file)>, C<stou($file)>,
C<appe($file)>, C<port([$port])>, C<eprt([$port])>, C<pasv()>, C<epsv()>,
C<pasv_xfer($src_file, $dest_server[, $dest_file ])>,
C<pasv_xfer_unique($src_file, $dest_server[, $dest_file ])>,
C<pasv_wait($non_pasv_server)>, C<abort()>, C<quit()>

=item Methods for the Adventurous

C<quot($cmd[, $args])>, C<can_inet6()>, C<can_ssl()>

=item The dataconn Class

=item Unimplemented

C<SMNT>, C<HELP>, C<MODE>, C<SYST>, C<STAT>, C<STRU>, C<REIN>

=back

=item EXPORTS

=item KNOWN BUGS

=over 4

=item Reporting Bugs

=back

=item SEE ALSO

=item ACKNOWLEDGEMENTS

=item AUTHOR

=item COPYRIGHT

=item LICENCE

=item VERSION

=item DATE

=item HISTORY

=back

=head2 Net::NNTP - NNTP Client class

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Class Methods

C<new([$host][, %options])>

=item Object Methods

C<host()>, C<starttls()>, C<article([{$msgid|$msgnum}[, $fh]])>,
C<body([{$msgid|$msgnum}[, [$fh]])>, C<head([{$msgid|$msgnum}[, [$fh]])>,
C<articlefh([{$msgid|$msgnum}])>, C<bodyfh([{$msgid|$msgnum}])>,
C<headfh([{$msgid|$msgnum}])>, C<nntpstat([{$msgid|$msgnum}])>,
C<group([$group])>, C<help()>, C<ihave($msgid[, $message])>, C<last()>,
C<date()>, C<postok()>, C<authinfo($user, $pass)>, C<authinfo_simple($user,
$pass)>, C<list()>, C<newgroups($since[, $distributions])>,
C<newnews($since[, $groups[, $distributions]])>, C<next()>,
C<post([$message])>, C<postfh()>, C<slave()>, C<quit()>, C<can_inet6()>,
C<can_ssl()>

=item Extension Methods

C<newsgroups([$pattern])>, C<distributions()>, C<distribution_patterns()>,
C<subscriptions()>, C<overview_fmt()>, C<active_times()>,
C<active([$pattern])>, C<xgtitle($pattern)>, C<xhdr($header,
$message_spec)>, C<xover($message_spec)>, C<xpath($message_id)>,
C<xpat($header, $pattern, $message_spec)>, C<xrover($message_spec)>,
C<listgroup([$group])>, C<reader()>

=item Unsupported

=item Definitions

$message_spec, $pattern, Examples, C<[^]-]>, C<*bdc>, C<[0-9a-zA-Z]>,
C<a??d>

=back

=item EXPORTS

=item KNOWN BUGS

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=item LICENCE

=item VERSION

=item DATE

=item HISTORY

=back

=head2 Net::Netrc - OO interface to users netrc file

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item The F<.netrc> File

machine name, default, login name, password string, account string, macdef
name

=item Class Methods

C<lookup($machine[, $login])>

=item Object Methods

C<login()>, C<password()>, C<account()>, C<lpa()>

=back

=item EXPORTS

=item KNOWN BUGS

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=item LICENCE

=item VERSION

=item DATE

=item HISTORY

=back

=head2 Net::POP3 - Post Office Protocol 3 Client class (RFC1939)

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Class Methods

C<new([$host][, %options])>

=item Object Methods

C<host()>, C<auth($username, $password)>, C<user($user)>, C<pass($pass)>,
C<login([$user[, $pass]])>, C<starttls(%sslargs)>, C<apop([$user[,
$pass]])>, C<banner()>, C<capa()>, C<capabilities()>, C<top($msgnum[,
$numlines])>, C<list([$msgnum])>, C<get($msgnum[, $fh])>,
C<getfh($msgnum)>, C<last()>, C<popstat()>, C<ping($user)>,
C<uidl([$msgnum])>, C<delete($msgnum)>, C<reset()>, C<quit()>,
C<can_inet6()>, C<can_ssl()>

=item Notes
