Files:	    src/normal.c

Patch 6.0.070
Problem:    Win32: The error message for a failed dynamic linking of a Perl,
	    Ruby, Tcl and Python library is unclear about what went wrong.
Solution:   Give the name of the library or function that could not be loaded.
	    Also for the iconv and gettext libraries when 'verbose' is set.
Files:	    src/eval.c, src/if_perl.xs, src/if_python.c, src/if_ruby.c,
	    src/if_tcl.c, src/mbyte.c, src/os_win32.c, src/proto/if_perl.pro,
	    src/proto/if_python.pro, src/proto/if_ruby.pro,
	    src/proto/if_tcl.pro, src/proto/mbyte.pro

Patch 6.0.071
Problem:    The "iris-ansi" builtin termcap isn't very good.
Solution:   Fix the wrong entries. (David Harrison)
Files:	    src/term.c

Patch 6.0.072
Problem:    When 'lazyredraw' is set, a mapping that stops Visual mode, moves
	    the cursor and starts Visual mode again causes a redraw problem.
	    (Brian Silverman)
Solution:   Redraw both the old and the new Visual area when necessary.
Files:	    src/normal.c, src/screen.c

Patch 6.0.073 (extra)
Problem:    DJGPP: When using CTRL-Z to start a shell, the prompt is halfway
	    the text. (Volker Kiefel)
Solution:   Position the system cursor before starting the shell.
Files:	    src/os_msdos.c

Patch 6.0.074
Problem:    When using "&" in a substitute string a multibyte character with
	    a trailbyte 0x5c is not handled correctly.
Solution:   Recognize multibyte characters inside the "&" part. (Muraoka Taro)
Files:	    src/regexp.c

Patch 6.0.075
Problem:    When closing a horizontally split window while 'eadirection' is
	    "hor" another horizontally split window is still resized. (Aron
	    Griffis)
Solution:   Only resize windows in the same top frame as the window that is
	    split or closed.
Files:	    src/main.c, src/proto/window.pro, src/window.c

Patch 6.0.076
Problem:    Warning for wrong pointer type when compiling.
Solution:   Use char instead of char_u pointer.
Files:	    src/version.c

Patch 6.0.077
Problem:    Patch 6.0.075 was incomplete.
Solution:   Fix another call to win_equal().
Files:	    src/option.c

Patch 6.0.078
Problem:    Using "daw" at the end of a line on a single-character word didn't
	    include the white space before it.  At the end of the file it
	    didn't work at all.  (Gavin Sinclair)
Solution:   Include the white space before the word.
Files:	    src/search.c

Patch 6.0.079
Problem:    When "W" is in 'cpoptions' and 'backupcopy' is "no" or "auto", can
	    still overwrite a read-only file, because it's renamed. (Gary
	    Holloway)
Solution:   Add a check for a read-only file before renaming the file to
	    become the backup.
Files:	    src/fileio.c

Patch 6.0.080
Problem:    When using a session file that has the same file in two windows,
	    the fileinfo() call in do_ecmd() causes a scroll and a hit-enter
	    prompt. (Robert Webb)
Solution:   Don't scroll this message when 'shortmess' contains 'O'.
Files:	    src/ex_cmds.c

Patch 6.0.081
Problem:    After using ":saveas" the new buffer name is added to the Buffers
	    menu with a wrong number. (Chauk-Mean Proum)
Solution:   Trigger BufFilePre and BufFilePost events for the renamed buffer
	    and BufAdd for the old name (which is with a new buffer).
Files:	    src/ex_cmds.c

Patch 6.0.082
Problem:    When swapping screens in an xterm and there is an (error) message
	    from the vimrc script, the shell prompt is after the message.
Solution:   Output a newline when there was output on the alternate screen.
	    Also when starting the GUI.
Files:	    src/main.c

Patch 6.0.083
Problem:    GTK: When compiled without menu support the buttons in a dialog
	    don't have any text. (Erik Edelmann)
Solution:   Add the text also when GTK_USE_ACCEL isn't defined.  And define
	    GTK_USE_ACCEL also when not using menus.
Files:	    src/gui_gtk.c

Patch 6.0.084
Problem:    UTF-8: a "r" command with an argument that is a keymap for a
	    character with a composing character can't be repeated with ".".
	    (Raphael Finkel)
Solution:   Add the composing characters to the redo buffer.
Files:	    src/normal.c

Patch 6.0.085
Problem:    When 'mousefocus' is set, using "s" to go to Insert mode and then
	    moving the mouse pointer to another window stops Insert mode,
	    while this doesn't happen with "a" or "i". (Robert Webb)
Solution:   Reset finish_op before calling edit().
Files:	    src/normal.c

Patch 6.0.086
Problem:    When using "gu" the message says "~ed".
Solution:   Make the message say "changed".
Files:	    src/ops.c

Patch 6.0.087 (lang)
Problem:    Message translations are incorrect, which may cause a crash.
	    (Peter Figura)
	    The Turkish translations needed more work and the maintainer
	    didn't have time.
Solution:   Fix order of printf arguments.  Remove %2$d constructs.
	    Add "-v" to msgfmt to get a warning for wrong translations.
	    Don't install the Turkish translations for now.
	    Update a few more translations.
Files:	    src/po/Makefile, src/po/af.po, src/po/cs.po, src/po/cs.cp1250.po,
	    src/po/de.po, src/po/es.po, src/po/fr.po, src/po/it.po,
	    src/po/ja.po, src/po/ja.sjis.po, src/po/ko.po, src/po/pl.po,
	    src/po/sk.po, src/po/uk.po, src/po/zh_CN.UTF-8.po,
	    src/po/zh_CN.cp936.po, src/po/zh_CN.po, src/po/zh_TW.po

Patch 6.0.088
Problem:    "." doesn't work after using "rx" in Visual mode.  (Charles
	    Campbell)
Solution:   Also store the replacement character in the redo buffer.
Files:	    src/normal.c

Patch 6.0.089
Problem:    In a C file, using "==" to align a line starting with "*  " after
	    a line with "* -" indents one space too few.  (Piet Delport)
Solution:   Align with the previous line if the comment-start-string matches
	    there.
Files:	    src/misc1.c

Patch 6.0.090
Problem:    When a wrapping line does not fit in a window and 'scrolloff' is
	    bigger than half the window height, moving the cursor left or
	    right causes the screen to flash badly. (Lubomir Host)
Solution:   When there is not enough room to show 'scrolloff' screen lines and
	    near the end of the line, show the end of the line.
Files:	    src/move.c

Patch 6.0.091
Problem:    Using CTRL-O in Insert mode, while 'virtualedit' is "all" and the
	    cursor is after the end-of-line, moves the cursor left. (Yegappan
	    Lakshmanan)
Solution:   Keep the cursor in the same position.
Files:	    src/edit.c

Patch 6.0.092
Problem:    The explorer plugin doesn't ignore case of 'suffixes' on
	    MS-Windows. (Mike Williams)
Solution:   Match or ignore case as appropriate for the OS.
Files:	    runtime/plugin/explorer.vim

Patch 6.0.093
Problem:    When the Tcl library couldn't be loaded dynamically, get an error
	    message when closing a buffer or window. (Muraoka Taro)
Solution:   Only free structures if already using the Tcl interpreter.
Files:	    src/if_tcl.c

Patch 6.0.094
Problem:    Athena: When clicking in the horizontal scrollbar Vim crashes.
	    (Paul Ackersviller)
Solution:   Use the thumb size instead of the window pointer of the scrollbar
	    (which is NULL). (David Harrison)
	    Also avoid that scrolling goes the wrong way in a narrow window.
Files:	    src/gui_athena.c

Patch 6.0.095
Problem:    Perl: Deleting lines may leave the cursor beyond the end of the
	    file.
Solution:   Check the cursor position after deleting a line. (Serguei)
Files:	    src/if_perl.xs

Patch 6.0.096
Problem:    When ":saveas fname" fails because the file already exists, the
	    file name is changed anyway and a following ":w" will overwrite
	    the file. (Eric Carlier)
Solution:   Don't change the file name if the file already exists.
Files:	    src/ex_cmds.c

Patch 6.0.097
Problem:    Re-indenting in Insert mode with CTRL-F may cause a crash with a
	    multibyte encoding.
Solution:   Avoid using a character before the start of a line. (Sergey
	    Vlasov)
Files:	    src/edit.c

Patch 6.0.098
Problem:    GTK: When using Gnome the "Search" and "Search and Replace" dialog
	    boxes are not translated.
Solution:   Define ENABLE_NLS before including gnome.h. (Eduardo Fernandez)
Files:	    src/gui_gtk.c, src/gui_gtk_x11.c

Patch 6.0.099
Problem:    Cygwin: When running Vi compatible MS-DOS line endings cause
	    trouble.
Solution:   Make the default for 'fileformats' "unix,dos" in Vi compatible
	    mode.  (Michael Schaap)
Files:	    src/option.h

Patch 6.0.100
Problem:    ":badd +0 test%file" causes a crash.
Solution:   Take into account that the "+0" is NUL terminated when allocating
	    room for replacing the "%".
Files:	    src/ex_docmd.c

Patch 6.0.101
Problem:    ":mksession" doesn't restore editing a file that has a '#' or '%'
	    in its name.  (Wolfgang Blankenburg)
Solution:   Put a backslash before the '#' and '%'.
Files:	    src/ex_docmd.c

Patch 6.0.102
Problem:    When changing folds the cursor may appear halfway a closed fold.
	    (Nam SungHyun)
Solution:   Set w_cline_folded correctly. (Yasuhiro Matsumoto)
Files:	    src/move.c

Patch 6.0.103
Problem:    When using 'scrollbind' a large value of 'scrolloff' will make the
	    scroll binding stop near the end of the file. (Coen Engelbarts)
Solution:   Don't use 'scrolloff' when limiting the topline for scroll
	    binding. (Dany StAmant)
Files:	    src/normal.c

Patch 6.0.104
Problem:    Multi-byte: When '$' is in 'cpoptions', typing a double-wide
	    character that overwrites the left half of an old double-wide
	    character causes a redraw problem and the cursor stops blinking.
Solution:   Clear the right half of the old character. (Yasuhiro Matsumoto)
Files:	    src/edit.c, src/screen.c

Patch 6.0.105
Problem:    Multi-byte: In a window of one column wide, with syntax
	    highlighting enabled a crash might happen.
Solution:   Skip getting the syntax attribute when the character doesn't fit
	    anyway.  (Yasuhiro Matsumoto)
Files:	    src/screen.c

Patch 6.0.106 (extra)
Problem:    Win32: When the printer font is wrong, there is no error message.
Solution:   Give an appropriate error message. (Yasuhiro Matsumoto)
Files:	    src/os_mswin.c

Patch 6.0.107 (extra)
Problem:    VisVim: When editing another file, a modified file may be written
	    unexpectedly and without warning.
Solution:   Split the window if a file was modified.
Files:	    VisVim/Commands.cpp

Patch 6.0.108
Problem:    When using folding could try displaying line zero, resulting in an
	    error for a NULL pointer.
Solution:   Stop decrementing w_topline when the first line of a window is in
	    a closed fold.
Files:	    src/window.c

Patch 6.0.109
Problem:    XIM: When the input method is enabled, repeating an insertion with
	    "." disables it. (Marcel Svitalsky)
Solution:   Don't store the input method status when a command comes from the
	    stuff buffer.
Files:	    src/ui.c

Patch 6.0.110
Problem:    Using undo after executing "OxjAxkdd" from a register in
	    an empty buffer gives an error message.  (Gerhard Hochholzer)
Solution:   Don't adjust the bottom line number of an undo block when it's
	    zero.  Add a test for this problem.
Files:	    src/undo.c, src/testdir/test20.in, src/testdir/test20.ok

Patch 6.0.111
Problem:    The virtcol() function doesn't take care of 'virtualedit'.
Solution:   Add the column offset when needed. (Yegappan Lakshmanan)
Files:	    src/eval.c

Patch 6.0.112
Problem:    The explorer plugin doesn't sort directories with a space or
	    special character after a directory with a shorter name.
Solution:   Ignore the trailing slash when comparing directory names.  (Mike
	    Williams)
Files:	    runtime/plugin/explorer.vim

Patch 6.0.113
Problem:    ":edit ~/fname" doesn't work if $HOME includes a space.  Also,
	    expanding wildcards with the shell may fail. (John Daniel)
Solution:   Escape spaces with a backslash when needed.
Files:	    src/ex_docmd.c, src/misc1.c, src/proto/misc1.pro, src/os_unix.c

Patch 6.0.114
Problem:    Using ":p" with fnamemodify() didn't expand "~/" or "~user/" to a
	    full path.  For Win32 the current directory was prepended.
	    (Michael Geddes)
Solution:   Expand the home directory.
Files:	    src/eval.c

Patch 6.0.115 (extra)
Problem:    Win32: When using a dialog with a textfield it cannot scroll the
	    text.
Solution:   Add ES_AUTOHSCROLL to the textfield style. (Pedro Gomes)
Files:	    src/gui_w32.c

Patch 6.0.116 (extra)
Problem:    MS-Windows NT/2000/XP: filewritable() doesn't work correctly for
	    filesystems that use ACLs.
Solution:   Use ACL functions to check if a file is writable. (Mike Williams)
Files:	    src/eval.c, src/macros.h, src/os_win32.c, src/proto/os_win32.pro

Patch 6.0.117 (extra)
Problem:    Win32: when disabling the menu, "set lines=999" doesn't use all
	    the available screen space.
Solution:   Don't subtract the fixed caption height but the real menu height
	    from the available screen space.  Also: Avoid recursion in
	    gui_mswin_get_menu_height().
Files:	    src/gui_w32.c, src/gui_w48.c

Patch 6.0.118
Problem:    When $TMPDIR is a relative path, the temp directory is missing a
	    trailing slash and isn't deleted when Vim exits. (Peter Holm)
Solution:   Add the slash after expanding the directory to an absolute path.
Files:	    src/fileio.c

Patch 6.0.119 (depends on patch 6.0.116)
Problem:    VMS: filewritable() doesn't work properly.
Solution:   Use the same method as for Unix. (Zoltan Arpadffy)
Files:	    src/eval.c

Patch 6.0.120
Problem:    The conversion to html isn't compatible with XHTML.
Solution:   Quote the values. (Jess Thrysoee)
Files:	    runtime/syntax/2html.vim

Patch 6.0.121 (extra) (depends on patch 6.0.116)
Problem:    Win32: After patch 6.0.116 Vim doesn't compile with mingw32.
Solution:   Add an #ifdef HAVE_ACL.
Files:	    src/os_win32.c

Patch 6.0.122 (extra)
Problem:    Win16: Same resize problems as patch 6.0.117 fixed for Win32.  And
	    dialog textfield problem from patch 6.0.115.
Solution:   Set old_menu_height only when used.  Add ES_AUTOHSCROLL flag.
	    (Vince Negri)
Files:	    src/gui_w16.c

Patch 6.0.123 (depends on patch 6.0.119)
Problem:    Win16: Compilation problems.
Solution:   Move "&&" to other lines. (Vince Negri)
Files:	    src/eval.c

Patch 6.0.124
Problem:    When using a ":substitute" command that starts with "\="
	    (evaluated as an expression), "~" was still replaced with the
	    previous substitute string.
Solution:   Skip the replacement when the substitute string starts with "\=".
	    Also adjust the documentation about doubling backslashes.
Files:	    src/ex_cmds.c, runtime/doc/change.txt

Patch 6.0.125 (extra)
Problem:    Win32: When using the multi_byte_ime feature pressing the shift
	    key would be handled as if a character was entered, thus mappings
	    with a shifted key didn't work. (Charles Campbell)
Solution:   Ignore pressing the shift, control and alt keys.
Files:	    src/os_win32.c

Patch 6.0.126
Problem:    The python library was always statically linked.
Solution:   Link the python library dynamically. (Matthias Klose)
Files:	    src/auto/configure, src/configure.in

Patch 6.0.127
Problem:    When using a terminal that swaps screens and the Normal background
	    color has a different background, using an external command may
	    cause the color of the wrong screen to be changed. (Mark Waggoner)
Solution:   Don't call screen_stop_highlight() in stoptermcap().
Files:	    src/term.c

Patch 6.0.128
Problem:    When moving a vertically split window to the far left or right,
	    the scrollbars are not adjusted. (Scott E Lee)  When 'mousefocus'
	    is set the mouse pointer wasn't adjusted.
Solution:   Adjust the scrollbars and the mouse pointer.
Files:	    src/window.c

Patch 6.0.129
Problem:    When using a very long file name, ":ls" (repeated a few times)
	    causes a crash.  Test with "vim `perl -e 'print "A"x1000'`".
	    (Tejeda)
Solution:   Terminate a string before getting its length in buflist_list().
Files:	    src/buffer.c

Patch 6.0.130
Problem:    When using ":cprev" while the error window is open, and the new
	    line at the top wraps, the window isn't correctly drawn.
	    (Yegappan Lakshmanan)
Solution:   When redrawing the topline don't scroll twice.
Files:	    src/screen.c

Patch 6.0.131
Problem:    When using bufname() and there are two matches for listed buffers
	    and one match for an unlisted buffer, the unlisted buffer is used.
	    (Aric Blumer)
Solution:   When there is a match with a listed buffer, don't check for
	    unlisted buffers.
Files:	    src/buffer.c

Patch 6.0.132
Problem:    When setting 'iminsert' in the vimrc and using an xterm with two
	    screens the ruler is drawn in the wrong screen. (Igor Goldenberg)
Solution:   Only draw the ruler when using the right screen.
Files:	    src/option.c

Patch 6.0.133
Problem:    When opening another buffer while 'keymap' is set and 'iminsert'
	    is zero, 'iminsert' is set to one unexpectedly. (Igor Goldenberg)
Solution:   Don't set 'iminsert' as a side effect of defining a ":lmap"
	    mapping.  Only do that when 'keymap' is set.
Files:	    src/getchar.c, src/option.c

Patch 6.0.134
Problem:    When completing ":set tags=" a path with an embedded space causes
	    the completion to stop. (Sektor van Skijlen)
Solution:   Escape spaces with backslashes, like for ":set path=".  Also take
	    backslashes into account when searching for the start of the path
	    to complete (e.g., for 'backupdir' and 'cscopeprg').
Files:	    src/ex_docmd.c, src/ex_getln.c, src/option.c, src/structs.h

Patch 6.0.135
Problem:    Menus that are not supposed to do anything used "<Nul>", which
	    still produced an error beep.
	    When CTRL-O is mapped for Insert mode, ":amenu" commands didn't
	    work in Insert mode.
	    Menu language falls back to English when $LANG ends in "@euro".
Solution:   Use "<Nop>" for a menu item that doesn't do anything, just like
	    mappings.
	    Use ":anoremenu" instead of ":amenu".
	    Ignore "@euro" in the locale name.
Files:	    runtime/makemenu.vim, runtime/menu.vim, src/menu.c

Patch 6.0.136
Problem:    When completing in Insert mode, a mapping could be unexpectedly
	    applied.
Solution:   Don't use mappings when checking for a typed character.
Files:	    src/edit.c

Patch 6.0.137
Problem:    GUI: When using the find or find/replace dialog from Insert mode,
	    the input mode is stopped.
Solution:   Don't use the input method status when the main window doesn't
	    have focus.
Files:	    src/ui.c

Patch 6.0.138
Problem:    GUI: When using the find or find/replace dialog from Insert mode,
	    the text is inserted when CTRL-O is mapped. (Andre Pang)
	    When opening the dialog again, a whole word search isn't
	    recognized.
	    When doing "replace all" a whole word search was never done.
Solution:   Don't put a search or replace command in the input buffer,
	    execute it directly.
	    Recognize "\<" and "\>" after removing "\V".
	    Add "\<" and "\>" also for "replace all".
Files:	    src/gui.c

Patch 6.0.139
Problem:    When stopping 'wildmenu' completion, the statusline of the
	    bottom-left vertically split window isn't redrawn. (Yegappan
	    Lakshmanan)
Solution:   Redraw all the bottom statuslines.
Files:	    src/ex_getln.c, src/proto/screen.pro, src/screen.c

Patch 6.0.140
Problem:    Memory allocated for local mappings and abbreviations is leaked
	    when the buffer is wiped out.
Solution:   Clear the local mappings when deleting a buffer.
Files:	    src/buffer.c, src/getchar.c, src/proto/getchar.pro, src/vim.h

Patch 6.0.141
Problem:    When using ":enew" in an empty buffer, some buffer-local things
	    are not cleared.  b:keymap_name is not set.
Solution:   Clear user commands and mappings local to the buffer when re-using
	    the current buffer.  Reload the keymap.
Files:	    src/buffer.c

Patch 6.0.142
Problem:    When Python is linked statically, loading dynamic extensions might
	    fail.
Solution:   Add an extra linking flag when needed. (Andrew Rodionoff)
Files:	    src/configure.in, src/auto/configure

Patch 6.0.143
Problem:    When a syntax item includes a line break in a pattern, the syntax
	    may not be updated properly when making a change.
Solution:   Add the "linebreaks" argument to ":syn sync".
Files:	    runtime/doc/syntax.txt, src/screen.c, src/structs.h, src/syntax.c

Patch 6.0.144
Problem:    After patch 6.0.088 redoing "veU" doesn't work.
Solution:   Don't add the "U" to the redo buffer, it will be used as an undo
	    command.
Files:	    src/normal.c

Patch 6.0.145
Problem:    When Vim can't read any input it might get stuck.  When
	    redirecting stdin and stderr Vim would not read commands from a
	    file.  (Servatius Brandt)
Solution:   When repeatedly trying to read a character when it's not possible,
	    exit Vim.  When stdin and stderr are not a tty, still try reading
	    from them, but don't do a blocking wait.
Files:	    src/ui.c

Patch 6.0.146
Problem:    When 'statusline' contains "%{'-'}" this results in a zero.
	    (Milan Vancura)
Solution:   Don't handle numbers with a minus as a number, they were not
	    displayed anyway.
Files:	    src/buffer.c

Patch 6.0.147
Problem:    It's not easy to mark a Vim version as being modified.  The new
	    license requires this.
Solution:   Add the --modified-by argument to configure and the MODIFIED_BY
	    define.  It's used in the intro screen and the ":version" output.
Files:	    src/auto/configure, src/configure.in, src/config.h.in,
	    src/feature.h, src/version.c

Patch 6.0.148
Problem:    After "p" in an empty line, `[ goes to the second character.
	    (Kontra Gergely)
Solution:   Don't increment the column number in an empty line.
Files:	    src/ops.c

Patch 6.0.149
Problem:    The pattern "\(.\{-}\)*" causes a hang.  When using a search
	    pattern that causes a stack overflow to be detected Vim could
	    still hang.
Solution:   Correctly report "operand could be empty" when using "\{-}".
	    Check for "out_of_stack" inside loops to avoid a hang.
Files:	    src/regexp.c

Patch 6.0.150
Problem:    When using a multibyte encoding, patch 6.0.148 causes "p" to work
	    like "P". (Sung-Hyun Nam)
Solution:   Compute the byte length of a multibyte character.
Files:	    src/ops.c

Patch 6.0.151
Problem:    Redrawing the status line and ruler can be wrong when it contains
	    multibyte characters.
Solution:   Use character width and byte length correctly. (Yasuhiro Matsumoto)
Files:	    src/screen.c

Patch 6.0.152
Problem:    strtrans() could hang on an illegal UTF-8 byte sequence.
Solution:   Skip over illegal bytes. (Yasuhiro Matsumoto)
Files:	    src/charset.c

Patch 6.0.153
Problem:    When using (illegal) double-byte characters and Vim syntax
	    highlighting Vim can crash. (Yasuhiro Matsumoto)
Solution:   Increase a pointer over a character instead of a byte.
Files:	    src/regexp.c

Patch 6.0.154
Problem:    MS-DOS and MS-Windows: The menu entries for xxd don't work when
	    there is no xxd in the path.
	    When converting back from Hex the filetype may remain "xxd" if it
	    is not detected.
Solution:   When xxd is not in the path use the one in the runtime directory,
	    where the install program has put it.
	    Clear the 'filetype' option before detecting the new value.
Files:	    runtime/menu.vim

Patch 6.0.155
Problem:    Mac: compilation problems in ui.c after patch 6.0.145. (Axel
	    Kielhorn)
Solution:   Don't call mch_inchar() when NO_CONSOLE is defined.
Files:	    src/ui.c

Patch 6.0.156
Problem:    Starting Vim with the -b argument and two files, ":next" doesn't
	    set 'binary' in the second file, like Vim 5.7. (Norman Diamond)
Solution:   Set the global value for 'binary'.
Files:	    src/option.c

Patch 6.0.157
Problem:    When defining a user command with "-complete=dir" files will also
	    be expanded.  Also, "-complete=mapping" doesn't appear to work.
	    (Michael Naumann)
Solution:   Use the expansion flags defined with the user command.
	    Handle expanding mappings specifically.
Files:	    src/ex_docmd.c

Patch 6.0.158
Problem:    When getting the warning for a file being changed outside of Vim
	    and reloading the file, the 'readonly' option is reset, even when
	    the permissions didn't change. (Marcel Svitalsky)
Solution:   Keep 'readonly' set when reloading a file and the permissions
	    didn't change.
Files:	    src/fileio.c

Patch 6.0.159
Problem:    Wildcard expansion for ":emenu" also shows separators.
Solution:   Skip menu separators for ":emenu", ":popup" and ":tearoff".
	    Also, don't handle ":tmenu" as if it was ":tearoff".  And leave
	    out the alternatives with "&" included.
Files:	    src/menu.c

Patch 6.0.160
Problem:    When compiling with GCC 3.0.2 and using the "-O2" argument, the
	    optimizer causes a problem that makes Vim crash.
Solution:   Add a configure check to avoid "-O2" for this version of gcc.
Files:	    src/configure.in, src/auto/configure

Patch 6.0.161 (extra)
Problem:    Win32: Bitmaps don't work with signs.
Solution:   Make it possible to use bitmaps with signs. (Muraoka Taro)
Files:	    src/ex_cmds.c, src/feature.h, src/gui_w32.c, src/gui_x11.c,
	    src/proto/gui_w32.pro, src/proto/gui_x11.pro

Patch 6.0.162
Problem:    Client-server: An error message for a wrong expression appears in
	    the server instead of the client.
Solution:   Pass the error message from the server to the client.  Also
	    adjust the example code. (Flemming Madsen)
Files:	    src/globals.h, src/if_xcmdsrv.c, src/main.c, src/os_mswin.c,
	    src/proto/if_xcmdsrv.pro, src/proto/os_mswin.pro,
	    runtime/doc/eval.txt, runtime/tools/xcmdsrv_client.c

Patch 6.0.163
Problem:    When using a GUI dialog, a file name is sometimes used like it was
	    a directory.
Solution:   Separate path and file name properly.
	    For GTK, Motif and Athena concatenate directory and file name for
	    the default selection.
Files:	    src/diff.c, src/ex_cmds.c, src/ex_cmds2.c, src/ex_docmd.c,
	    src/gui_athena.c, src/gui_gtk.c, src/gui_motif.c, src/message.c

Patch 6.0.164
Problem:    After patch 6.0.135 the menu entries for pasting don't work in
	    Insert and Visual mode. (Muraoka Taro)
Solution:   Add <script> to allow script-local mappings.
Files:	    runtime/menu.vim

Patch 6.0.165
Problem:    Using --remote and executing locally gives unavoidable error
	    messages.
Solution:   Add --remote-silent and --remote-wait-silent to silently execute
	    locally.
	    For Win32 there was no error message when a server didn't exist.
Files:	    src/eval.c, src/if_xcmdsrv.c, src/main.c, src/os_mswin.c,
	    src/proto/if_xcmdsrv.pro, src/proto/os_mswin.pro

Patch 6.0.166
Problem:    GUI: There is no way to avoid dialogs to pop up.
Solution:   Add the 'c' flag to 'guioptions': Use console dialogs.  (Yegappan
	    Lakshmanan)
Files:	    runtime/doc/options.txt, src/option.h, src/message.c

Patch 6.0.167
Problem:    When 'fileencodings' is "latin2" some characters in the help files
	    are displayed wrong.
Solution:   Force the 'fileencoding' for the help files to be "latin1".
Files:	    src/fileio.c

Patch 6.0.168
Problem:    ":%s/\n/#/" doesn't replace at an empty line. (Bruce DeVisser)
Solution:   Don't skip matches after joining two lines.
Files:	    src/ex_cmds.c

Patch 6.0.169
Problem:    When run as evim and the GUI can't be started we get stuck in a
	    terminal without menus in Insert mode.
Solution:   Exit when using "evim" and "gvim -y" when the GUI can't be
	    started.
Files:	    src/main.c

Patch 6.0.170
Problem:    When printing double-width characters the size of tabs after them
	    is wrong.  (Muraoka Taro)
Solution:   Correctly compute the column after a double-width character.
Files:	    src/ex_cmds2.c

Patch 6.0.171
Problem:    With 'keymodel' including "startsel", in Insert mode after the end
	    of a line, shift-Left does not move the cursor. (Steve Hall)
Solution:   CTRL-O doesn't move the cursor left, need to do that explicitly.
Files:	    src/edit.c

Patch 6.0.172
Problem:    CTRL-Q doesn't replace CTRL-V after CTRL-X in Insert mode while it
	    does in most other situations.
Solution:   Make CTRL-X CTRL-Q work like CTRL-X CTRL-V in Insert mode.
Files:	    src/edit.c

Patch 6.0.173
Problem:    When using "P" to insert a line break the cursor remains past the
	    end of the line.
Solution:   Check for the cursor being beyond the end of the line.
Files:	    src/ops.c

Patch 6.0.174
Problem:    After using "gd" or "gD" the search direction for "n" may still be
	    backwards. (Servatius Brandt)
Solution:   Reset the search direction to forward.
Files:	    src/normal.c, src/search.c, src/proto/search.pro

Patch 6.0.175
Problem:    ":help /\z(\)" doesn't work. (Thomas Koehler)
Solution:   Double the backslashes.
Files:	    src/ex_cmds.c

Patch 6.0.176
Problem:    When killed by a signal autocommands are still triggered as if
	    nothing happened.
Solution:   Add the v:dying variable to allow autocommands to work differently
	    when a deadly signal has been trapped.
Files:	    src/eval.c, src/os_unix.c, src/vim.h

Patch 6.0.177
Problem:    When 'commentstring' is empty and 'foldmethod' is "marker", "zf"
	    doesn't work. (Thomas S. Urban)
Solution:   Add the marker even when 'commentstring' is empty.
Files:	    src/fold.c, src/normal.c

Patch 6.0.178
Problem:    Uninitialized memory read from xp_backslash field.
Solution:   Initialize xp_backslash field properly.
Files:	    src/eval.c, src/ex_docmd.c, src/ex_getln.c, src/misc1.c, src/tag.c

Patch 6.0.179
Problem:    Win32: When displaying UTF-8 characters may read uninitialized
	    memory.
Solution:   Add utfc_ptr2len_check_len() to avoid reading past the end of a
	    string.
Files:	    src/mbyte.c, src/proto/mbyte.pro, src/gui_w32.c

Patch 6.0.180
Problem:    Expanding environment variables in a string that ends in a
	    backslash could go past the end of the string.
Solution:   Detect the trailing backslash.
Files:	    src/misc1.c

Patch 6.0.181
Problem:    When using ":cd dir" memory was leaked.
Solution:   Free the allocated memory.  Also avoid an uninitialized memory
	    read.
Files:	    src/misc2.c

Patch 6.0.182
Problem:    When using a regexp on multibyte characters, could try to read a
	    character before the start of the line.
Solution:   Don't decrement a pointer to before the start of the line.
Files:	    src/regexp.c

Patch 6.0.183
Problem:    Leaking memory when ":func!" redefines a function.
Solution:   Free the function name when it's not used.
Files:	    src/eval.c

Patch 6.0.184
Problem:    Leaking memory when expanding option values.
Solution:   Don't always copy the expanded option into allocated memory.
Files:	    src/option.c

Patch 6.0.185
Problem:    Crash in Vim when pasting a selection in another application, on a
	    64 bit machine.
Solution:   Fix the format for an Atom to 32 bits. (Peter Derr)
Files:	    src/ui.c

Patch 6.0.186
Problem:    X11: Three warnings when compiling the client-server code.
Solution:   Add a typecast to unsigned char.
Files:	    src/if_xcmdsrv.c

Patch 6.0.187
Problem:    "I" in Visual mode and then "u" reports too many changes. (Andrew
	    Stryker)
	    "I" in Visual linewise mode adjusts the indent for no apparent
	    reason.
Solution:   Only save those lines for undo that are changed.
	    Don't change the indent after inserting in Visual linewise mode.
Files:	    src/ops.c

Patch 6.0.188
Problem:    Win32: After patch 6.0.161 signs defined in the vimrc file don't
	    work.
Solution:   Initialize the sign icons after initializing the GUI. (Vince
	    Negri)
Files:	    src/gui.c, src/gui_x11.c

Patch 6.0.189
Problem:    The size of the Visual area isn't always displayed when scrolling
	    ('ruler' off, 'showcmd' on).  Also not when using a search
	    command. (Sylvain Hitier)
Solution:   Redisplay the size of the selection after showing the mode.
Files:	    src/screen.c

Patch 6.0.190
Problem:    GUI: when 'mouse' is empty a click with the middle button still
	    moves the cursor.
Solution:   Paste at the cursor position instead of the mouse position.
Files:	    src/normal.c

Patch 6.0.191
Problem:    When no servers are available serverlist() gives an error instead
	    of returning an empty string. (Hari Krishna)
Solution:   Don't give an error message.
Files:	    src/eval.c

Patch 6.0.192
Problem:    When 'virtualedit' is set, "ylj" goes to the wrong column. (Andrew
	    Nikitin)
Solution:   Reset the flag that w_virtcol is valid when moving the cursor back
	    to the start of the operated area.
Files:	    src/normal.c

Patch 6.0.193
Problem:    When 'virtualedit' is set, col(".") after the end of the line
	    should return one extra.
Solution:   Add one to the column.
Files:	    src/eval.c

Patch 6.0.194
Problem:    "--remote-silent" tries to send a reply to the client, like it was
	    "--remote-wait".
Solution:   Properly check for the argument.
Files:	    src/main.c

Patch 6.0.195
Problem:    When 'virtualedit' is set and a search starts in virtual space
	    ":call search('x')" goes to the wrong position. (Eric Long)
Solution:   Reset coladd when finding a match.
Files:	    src/search.c

Patch 6.0.196
Problem:    When 'virtualedit' is set, 'selection' is "exclusive" and visually
	    selecting part of a tab at the start of a line, "x" joins it with
	    the previous line.  Also, when the selection spans more than one
	    line the whole tab is deleted.
Solution:   Take coladd into account when adjusting for 'selection' being
	    "exclusive".  Also expand a tab into spaces when deleting more
	    than one line.
Files:	    src/normal.c, src/ops.c

Patch 6.0.197
Problem:    When 'virtualedit' is set and 'selection' is "exclusive", "v$x"
	    doesn't delete the last character in the line. (Eric Long)
Solution:   Don't reset the inclusive flag. (Helmut Stiegler)
Files:	    src/normal.c

Patch 6.0.198
Problem:    When 'virtualedit' is set and 'showbreak' is not empty, moving the
	    cursor over the line break doesn't work properly. (Eric Long)
Solution:   Make getviscol() and getviscol2() use getvvcol() to obtain the
	    virtual cursor position.  Adjust coladvance() and oneleft() to
	    skip over the 'showbreak' characters.
Files:	    src/edit.c, src/misc2.c

Patch 6.0.199
Problem:    Multi-byte: could use iconv() after calling iconv_end().
	    (Yasuhiro Matsumoto)
Solution:   Stop converting input and output stream after calling iconv_end().
Files:	    src/mbyte.c

Patch 6.0.200
Problem:    A script that starts with "#!perl" isn't recognized as a Perl
	    filetype.
Solution:   Ignore a missing path in a script header.  Also, speed up
	    recognizing scripts by simplifying the patterns used.
Files:	    runtime/scripts.vim

Patch 6.0.201
Problem:    When scrollbinding and doing a long jump, switching windows jumps
	    to another position in the file.  Scrolling a few lines at a time
	    is OK. (Johannes Zellner)
Solution:   When setting w_topline reset the flag that indicates w_botline is
	    valid.
Files:	    src/diff.c

Patch 6.0.202
Problem:    The "icon=" argument for the menu command to define a toolbar icon
	    with a file didn't work for GTK. (Christian J. Robinson)
	    For Motif and Athena a full path was required.
Solution:   Search the icon file using the specified path.  Expand environment
	    variables in the file name.
Files:	    src/gui_gtk.c, src/gui_x11.c

Patch 6.0.203
Problem:    Can change 'fileformat' even though 'modifiable' is off.
	    (Servatius Brandt)
Solution:   Correct check for kind of set command.
Files:	    src/option.c

Patch 6.0.204
Problem:    ":unlet" doesn't work for variables with curly braces. (Thomas
	    Scott Urban)
Solution:   Handle variable names with curly braces properly. (Vince Negri)
Files:	    src/eval.c

Patch 6.0.205 (extra)
Problem:    "gvim -f" still forks when using the batch script to start Vim.
Solution:   Add an argument to "start" to use a foreground session (Michael
	    Geddes)
Files:	    src/dosinst.c

Patch 6.0.206
Problem:    Unix: if expanding a wildcard in a file name results in a
	    wildcard character and there are more parts in the path with a
	    wildcard, it is expanded again.
	    Windows: ":edit \[abc]" could never edit the file "[abc]".
Solution:   Don't expand wildcards in already expanded parts.
	    Don't remove backslashes used to escape the special meaning of a
	    wildcard; can edit "[abc]" if '[' is removed from 'isfname'.
Files:	    src/misc1.c, src/os_unix.c

Patch 6.0.207 (extra)
Problem:    Win32: The shortcuts and start menu entries let Vim startup in the
	    desktop directory, which is not very useful.
Solution:   Let shortcuts start Vim in $HOME or $HOMEDIR$HOMEPATH.
Files:	    src/dosinst.c

Patch 6.0.208
Problem:    GUI: When using a keymap and the cursor is not blinking, CTRL-^ in
	    Insert mode doesn't directly change the cursor color.  (Alex
	    Solow)
Solution:   Force a redraw of the cursor after CTRL-^.
Files:	    src/edit.c

Patch 6.0.209
Problem:    GUI GTK: After selecting a 'guifont' with the font dialog there
	    are redraw problems for multibyte characters.
Solution:   Separate the font dialog from setting the new font name to avoid
	    that "*" is used to find wide and bold fonts.
	    When redrawing extra characters for the bold trick, take care of
	    UTF-8 characters.
Files:	    src/gui.c, src/gui_gtk_x11.c, src/option.c, src/proto/gui.pro,
	    src/proto/gui_gtk_x11.pro

Patch 6.0.210
Problem:    After patch 6.0.167 it's no longer possible to edit a help file in
	    another encoding than latin1.
Solution:   Let the "++enc=" argument overrule the encoding.
Files:	    src/fileio.c

Patch 6.0.211
Problem:    When reading a file fails, the buffer is empty, but it might still
	    be possible to write it with ":w" later.  The original file is
	    lost then. (Steve Amerige)
Solution:   Set the 'readonly' option for the buffer.
Files:	    src/fileio.c

Patch 6.0.212
Problem:    GUI GTK: confirm("foo", "") causes a crash.
Solution:   Don't make a non-existing button the default.  Add a default "OK"
	    button if none is specified.
Files:	    src/eval.c, src/gui_gtk.c

Patch 6.0.213
Problem:    When a file name contains unprintable characters, CTRL-G and other
	    commands don't work well.
Solution:   Turn unprintable into printable characters. (Yasuhiro Matsumoto)
Files:	    src/buffer.c, src/charset.c

Patch 6.0.214
Problem:    When there is a buffer without a name, empty entries appear in the
	    jumplist saved in the viminfo file.
Solution:   Don't write jumplist entries without a file name.
Files:	    src/mark.c

Patch 6.0.215
Problem:    After using "/" from Visual mode the Paste menu and Toolbar
	    entries don't work.  Pasting with the middle mouse doesn't work
	    and modeless selection doesn't work.
Solution:   Use the command line mode menus and use the mouse like in the
	    command line.
Files:	    src/gui.c, src/menu.c, src/ui.c

Patch 6.0.216
Problem:    After reloading a file, displayed in another window than the
	    current one, which was changed outside of Vim the part of the file
	    around the cursor set by autocommands may be displayed, but
	    jumping back to the original cursor position when entering the
	    window again.
Solution:   Restore the topline of the window.
Files:	    src/fileio.c

Patch 6.0.217
