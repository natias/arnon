	0x1F571,
	0x1F573,
	0x1F57B,
	0x1F587,
	0x1F588,
	0x1F58A,
	0x1F58E,
	0x1F590,
	0x1F591,
	0x1F595,
	0x1F597,
	0x1F5A4,
	0x1F5A6,
	0x1F5A8,
	0x1F5A9,
	0x1F5B1,
	0x1F5B3,
	0x1F5BC,
	0x1F5BD,
	0x1F5C2,
	0x1F5C5,
	0x1F5D1,
	0x1F5D4,
	0x1F5DC,
	0x1F5DF,
	0x1F5E1,
	0x1F5E2,
	0x1F5E3,
	0x1F5E4,
	0x1F5E8,
	0x1F5E9,
	0x1F5EF,
	0x1F5F0,
	0x1F5F3,
	0x1F5F4,
	0x1F5FA,
	0x1F650,
	0x1F680,
	0x1F6C6,
	0x1F6CB,
	0x1F6D3,
	0x1F6D5,
	0x1F6D8,
	0x1F6DD,
	0x1F6E6,
	0x1F6E9,
	0x1F6EA,
	0x1F6EB,
	0x1F6ED,
	0x1F6F0,
	0x1F6F1,
	0x1F6F3,
	0x1F6FD,
	0x1F7E0,
	0x1F7EC,
	0x1F7F0,
	0x1F7F1,
	0x1F90C,
	0x1F93B,
	0x1F93C,
	0x1F946,
	0x1F947,
	0x1FA00,
	0x1FA70,
	0x1FA75,
	0x1FA78,
	0x1FA7D,
	0x1FA80,
	0x1FA87,
	0x1FA90,
	0x1FAAD,
	0x1FAB0,
	0x1FABB,
	0x1FAC0,
	0x1FAC6,
	0x1FAD0,
	0x1FADA,
	0x1FAE0,
	0x1FAE8,
	0x1FAF0,
	0x1FAF7
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_EMOJI_invlist[] = {  /* for EBCDIC 1047 */
	307,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5C,
	0x5D,
	0x7B,
	0x7C,
	0xAF,
	0xB0,
	0xB4,
	0xB5,
	0xF0,
	0xFA,
	0x203C,
	0x203D,
	0x2049,
	0x204A,
	0x2122,
	0x2123,
	0x2139,
	0x213A,
	0x2194,
	0x219A,
	0x21A9,
	0x21AB,
	0x231A,
	0x231C,
	0x2328,
	0x2329,
	0x23CF,
	0x23D0,
	0x23E9,
	0x23F4,
	0x23F8,
	0x23FB,
	0x24C2,
	0x24C3,
	0x25AA,
	0x25AC,
	0x25B6,
	0x25B7,
	0x25C0,
	0x25C1,
	0x25FB,
	0x25FF,
	0x2600,
	0x2605,
	0x260E,
	0x260F,
	0x2611,
	0x2612,
	0x2614,
	0x2616,
	0x2618,
	0x2619,
	0x261D,
	0x261E,
	0x2620,
	0x2621,
	0x2622,
	0x2624,
	0x2626,
	0x2627,
	0x262A,
	0x262B,
	0x262E,
	0x2630,
	0x2638,
	0x263B,
	0x2640,
	0x2641,
	0x2642,
	0x2643,
	0x2648,
	0x2654,
	0x265F,
	0x2661,
	0x2663,
	0x2664,
	0x2665,
	0x2667,
	0x2668,
	0x2669,
	0x267B,
	0x267C,
	0x267E,
	0x2680,
	0x2692,
	0x2698,
	0x2699,
	0x269A,
	0x269B,
	0x269D,
	0x26A0,
	0x26A2,
	0x26A7,
	0x26A8,
	0x26AA,
	0x26AC,
	0x26B0,
	0x26B2,
	0x26BD,
	0x26BF,
	0x26C4,
	0x26C6,
	0x26C8,
	0x26C9,
	0x26CE,
	0x26D0,
	0x26D1,
	0x26D2,
	0x26D3,
	0x26D5,
	0x26E9,
	0x26EB,
	0x26F0,
	0x26F6,
	0x26F7,
	0x26FB,
	0x26FD,
	0x26FE,
	0x2702,
	0x2703,
	0x2705,
	0x2706,
	0x2708,
	0x270E,
	0x270F,
	0x2710,
	0x2712,
	0x2713,
	0x2714,
	0x2715,
	0x2716,
	0x2717,
	0x271D,
	0x271E,
	0x2721,
	0x2722,
	0x2728,
	0x2729,
	0x2733,
	0x2735,
	0x2744,
	0x2745,
	0x2747,
	0x2748,
	0x274C,
	0x274D,
	0x274E,
	0x274F,
	0x2753,
	0x2756,
	0x2757,
	0x2758,
	0x2763,
	0x2765,
	0x2795,
	0x2798,
	0x27A1,
	0x27A2,
	0x27B0,
	0x27B1,
	0x27BF,
	0x27C0,
	0x2934,
	0x2936,
	0x2B05,
	0x2B08,
	0x2B1B,
	0x2B1D,
	0x2B50,
	0x2B51,
	0x2B55,
	0x2B56,
	0x3030,
	0x3031,
	0x303D,
	0x303E,
	0x3297,
	0x3298,
	0x3299,
	0x329A,
	0x1F004,
	0x1F005,
	0x1F0CF,
	0x1F0D0,
	0x1F170,
	0x1F172,
	0x1F17E,
	0x1F180,
	0x1F18E,
	0x1F18F,
	0x1F191,
	0x1F19B,
	0x1F1E6,
	0x1F200,
	0x1F201,
	0x1F203,
	0x1F21A,
	0x1F21B,
	0x1F22F,
	0x1F230,
	0x1F232,
	0x1F23B,
	0x1F250,
	0x1F252,
	0x1F300,
	0x1F322,
	0x1F324,
	0x1F394,
	0x1F396,
	0x1F398,
	0x1F399,
	0x1F39C,
	0x1F39E,
	0x1F3F1,
	0x1F3F3,
	0x1F3F6,
	0x1F3F7,
	0x1F4FE,
	0x1F4FF,
	0x1F53E,
	0x1F549,
	0x1F54F,
	0x1F550,
	0x1F568,
	0x1F56F,
	0x1F571,
	0x1F573,
	0x1F57B,
	0x1F587,
	0x1F588,
	0x1F58A,
	0x1F58E,
	0x1F590,
	0x1F591,
	0x1F595,
	0x1F597,
	0x1F5A4,
	0x1F5A6,
	0x1F5A8,
	0x1F5A9,
	0x1F5B1,
	0x1F5B3,
	0x1F5BC,
	0x1F5BD,
	0x1F5C2,
	0x1F5C5,
	0x1F5D1,
	0x1F5D4,
	0x1F5DC,
	0x1F5DF,
	0x1F5E1,
	0x1F5E2,
	0x1F5E3,
	0x1F5E4,
	0x1F5E8,
	0x1F5E9,
	0x1F5EF,
	0x1F5F0,
	0x1F5F3,
	0x1F5F4,
	0x1F5FA,
	0x1F650,
	0x1F680,
	0x1F6C6,
	0x1F6CB,
	0x1F6D3,
	0x1F6D5,
	0x1F6D8,
	0x1F6DD,
	0x1F6E6,
	0x1F6E9,
	0x1F6EA,
	0x1F6EB,
	0x1F6ED,
	0x1F6F0,
	0x1F6F1,
	0x1F6F3,
	0x1F6FD,
	0x1F7E0,
	0x1F7EC,
	0x1F7F0,
	0x1F7F1,
	0x1F90C,
	0x1F93B,
	0x1F93C,
	0x1F946,
	0x1F947,
	0x1FA00,
	0x1FA70,
	0x1FA75,
	0x1FA78,
	0x1FA7D,
	0x1FA80,
	0x1FA87,
	0x1FA90,
	0x1FAAD,
	0x1FAB0,
	0x1FABB,
	0x1FAC0,
	0x1FAC6,
	0x1FAD0,
	0x1FADA,
	0x1FAE0,
	0x1FAE8,
	0x1FAF0,
	0x1FAF7
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_EMOJI_invlist[] = {  /* for EBCDIC 037 */
	307,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5C,
	0x5D,
	0x7B,
	0x7C,
	0xAF,
	0xB0,
	0xB4,
	0xB5,
	0xF0,
	0xFA,
	0x203C,
	0x203D,
	0x2049,
	0x204A,
	0x2122,
	0x2123,
	0x2139,
	0x213A,
	0x2194,
	0x219A,
	0x21A9,
	0x21AB,
	0x231A,
	0x231C,
	0x2328,
	0x2329,
	0x23CF,
	0x23D0,
	0x23E9,
	0x23F4,
	0x23F8,
	0x23FB,
	0x24C2,
	0x24C3,
	0x25AA,
	0x25AC,
	0x25B6,
	0x25B7,
	0x25C0,
	0x25C1,
	0x25FB,
	0x25FF,
	0x2600,
	0x2605,
	0x260E,
	0x260F,
	0x2611,
	0x2612,
	0x2614,
	0x2616,
	0x2618,
	0x2619,
	0x261D,
	0x261E,
	0x2620,
	0x2621,
	0x2622,
	0x2624,
	0x2626,
	0x2627,
	0x262A,
	0x262B,
	0x262E,
	0x2630,
	0x2638,
	0x263B,
	0x2640,
	0x2641,
	0x2642,
	0x2643,
	0x2648,
	0x2654,
	0x265F,
	0x2661,
	0x2663,
	0x2664,
	0x2665,
	0x2667,
	0x2668,
	0x2669,
	0x267B,
	0x267C,
	0x267E,
	0x2680,
	0x2692,
	0x2698,
	0x2699,
	0x269A,
	0x269B,
	0x269D,
	0x26A0,
	0x26A2,
	0x26A7,
	0x26A8,
	0x26AA,
	0x26AC,
	0x26B0,
	0x26B2,
	0x26BD,
	0x26BF,
	0x26C4,
	0x26C6,
	0x26C8,
	0x26C9,
	0x26CE,
	0x26D0,
	0x26D1,
	0x26D2,
	0x26D3,
	0x26D5,
	0x26E9,
	0x26EB,
	0x26F0,
	0x26F6,
	0x26F7,
	0x26FB,
	0x26FD,
	0x26FE,
	0x2702,
	0x2703,
	0x2705,
	0x2706,
	0x2708,
	0x270E,
	0x270F,
	0x2710,
	0x2712,
	0x2713,
	0x2714,
	0x2715,
	0x2716,
	0x2717,
	0x271D,
	0x271E,
	0x2721,
	0x2722,
	0x2728,
	0x2729,
	0x2733,
	0x2735,
	0x2744,
	0x2745,
	0x2747,
	0x2748,
	0x274C,
	0x274D,
	0x274E,
	0x274F,
	0x2753,
	0x2756,
	0x2757,
	0x2758,
	0x2763,
	0x2765,
	0x2795,
	0x2798,
	0x27A1,
	0x27A2,
	0x27B0,
	0x27B1,
	0x27BF,
	0x27C0,
	0x2934,
	0x2936,
	0x2B05,
	0x2B08,
	0x2B1B,
	0x2B1D,
	0x2B50,
	0x2B51,
	0x2B55,
	0x2B56,
	0x3030,
	0x3031,
	0x303D,
	0x303E,
	0x3297,
	0x3298,
	0x3299,
	0x329A,
	0x1F004,
	0x1F005,
	0x1F0CF,
	0x1F0D0,
	0x1F170,
	0x1F172,
	0x1F17E,
	0x1F180,
	0x1F18E,
	0x1F18F,
	0x1F191,
	0x1F19B,
	0x1F1E6,
	0x1F200,
	0x1F201,
	0x1F203,
	0x1F21A,
	0x1F21B,
	0x1F22F,
	0x1F230,
	0x1F232,
	0x1F23B,
	0x1F250,
	0x1F252,
	0x1F300,
	0x1F322,
	0x1F324,
	0x1F394,
	0x1F396,
	0x1F398,
	0x1F399,
	0x1F39C,
	0x1F39E,
	0x1F3F1,
	0x1F3F3,
	0x1F3F6,
	0x1F3F7,
	0x1F4FE,
	0x1F4FF,
	0x1F53E,
	0x1F549,
	0x1F54F,
	0x1F550,
	0x1F568,
	0x1F56F,
	0x1F571,
	0x1F573,
	0x1F57B,
	0x1F587,
	0x1F588,
	0x1F58A,
	0x1F58E,
	0x1F590,
	0x1F591,
	0x1F595,
	0x1F597,
	0x1F5A4,
	0x1F5A6,
	0x1F5A8,
	0x1F5A9,
	0x1F5B1,
	0x1F5B3,
	0x1F5BC,
	0x1F5BD,
	0x1F5C2,
	0x1F5C5,
	0x1F5D1,
	0x1F5D4,
	0x1F5DC,
	0x1F5DF,
	0x1F5E1,
	0x1F5E2,
	0x1F5E3,
	0x1F5E4,
	0x1F5E8,
	0x1F5E9,
	0x1F5EF,
	0x1F5F0,
	0x1F5F3,
	0x1F5F4,
	0x1F5FA,
	0x1F650,
	0x1F680,
	0x1F6C6,
	0x1F6CB,
	0x1F6D3,
	0x1F6D5,
	0x1F6D8,
	0x1F6DD,
	0x1F6E6,
	0x1F6E9,
	0x1F6EA,
	0x1F6EB,
	0x1F6ED,
	0x1F6F0,
	0x1F6F1,
	0x1F6F3,
	0x1F6FD,
	0x1F7E0,
	0x1F7EC,
	0x1F7F0,
	0x1F7F1,
	0x1F90C,
	0x1F93B,
	0x1F93C,
	0x1F946,
	0x1F947,
	0x1FA00,
	0x1FA70,
	0x1FA75,
	0x1FA78,
	0x1FA7D,
	0x1FA80,
	0x1FA87,
	0x1FA90,
	0x1FAAD,
	0x1FAB0,
	0x1FABB,
	0x1FAC0,
	0x1FAC6,
	0x1FAD0,
	0x1FADA,
	0x1FAE0,
	0x1FAE8,
	0x1FAF0,
	0x1FAF7
};

#  endif	/* EBCDIC 037 */

static const UV UNI_EMOTICONS_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1F600,
	0x1F650
};

static const UV UNI_ENCLOSEDALPHANUM_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2460,
	0x2500
};

static const UV UNI_ENCLOSEDALPHANUMSUP_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1F100,
	0x1F200
};

static const UV UNI_ENCLOSEDCJK_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x3200,
	0x3300
};

static const UV UNI_ENCLOSEDIDEOGRAPHICSUP_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1F200,
	0x1F300
};

static const UV UNI_EPRES_invlist[] = {  /* for all charsets */
	167,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x231A,
	0x231C,
	0x23E9,
	0x23ED,
	0x23F0,
	0x23F1,
	0x23F3,
	0x23F4,
	0x25FD,
	0x25FF,
	0x2614,
	0x2616,
	0x2648,
	0x2654,
	0x267F,
	0x2680,
	0x2693,
	0x2694,
	0x26A1,
	0x26A2,
	0x26AA,
	0x26AC,
	0x26BD,
	0x26BF,
	0x26C4,
	0x26C6,
	0x26CE,
	0x26CF,
	0x26D4,
	0x26D5,
	0x26EA,
	0x26EB,
	0x26F2,
	0x26F4,
	0x26F5,
	0x26F6,
	0x26FA,
	0x26FB,
	0x26FD,
	0x26FE,
	0x2705,
	0x2706,
	0x270A,
	0x270C,
	0x2728,
	0x2729,
	0x274C,
	0x274D,
	0x274E,
	0x274F,
	0x2753,
	0x2756,
	0x2757,
	0x2758,
	0x2795,
	0x2798,
	0x27B0,
	0x27B1,
	0x27BF,
	0x27C0,
	0x2B1B,
	0x2B1D,
	0x2B50,
	0x2B51,
	0x2B55,
	0x2B56,
	0x1F004,
	0x1F005,
	0x1F0CF,
	0x1F0D0,
	0x1F18E,
	0x1F18F,
	0x1F191,
	0x1F19B,
	0x1F1E6,
	0x1F200,
	0x1F201,
	0x1F202,
	0x1F21A,
	0x1F21B,
	0x1F22F,
	0x1F230,
	0x1F232,
	0x1F237,
	0x1F238,
	0x1F23B,
	0x1F250,
	0x1F252,
	0x1F300,
	0x1F321,
	0x1F32D,
	0x1F336,
	0x1F337,
	0x1F37D,
	0x1F37E,
	0x1F394,
	0x1F3A0,
	0x1F3CB,
	0x1F3CF,
	0x1F3D4,
	0x1F3E0,
	0x1F3F1,
	0x1F3F4,
	0x1F3F5,
	0x1F3F8,
	0x1F43F,
	0x1F440,
	0x1F441,
	0x1F442,
	0x1F4FD,
	0x1F4FF,
	0x1F53E,
	0x1F54B,
	0x1F54F,
	0x1F550,
	0x1F568,
	0x1F57A,
	0x1F57B,
	0x1F595,
	0x1F597,
	0x1F5A4,
	0x1F5A5,
	0x1F5FB,
	0x1F650,
	0x1F680,
	0x1F6C6,
	0x1F6CC,
	0x1F6CD,
	0x1F6D0,
	0x1F6D3,
	0x1F6D5,
	0x1F6D8,
	0x1F6DD,
	0x1F6E0,
	0x1F6EB,
	0x1F6ED,
	0x1F6F4,
	0x1F6FD,
	0x1F7E0,
	0x1F7EC,
	0x1F7F0,
	0x1F7F1,
	0x1F90C,
	0x1F93B,
	0x1F93C,
	0x1F946,
	0x1F947,
	0x1FA00,
	0x1FA70,
	0x1FA75,
	0x1FA78,
	0x1FA7D,
	0x1FA80,
	0x1FA87,
	0x1FA90,
	0x1FAAD,
	0x1FAB0,
	0x1FABB,
	0x1FAC0,
	0x1FAC6,
	0x1FAD0,
	0x1FADA,
	0x1FAE0,
	0x1FAE8,
	0x1FAF0,
	0x1FAF7
};

static const UV UNI_ETHI_invlist[] = {  /* for all charsets */
	73,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1200,
	0x1249,
	0x124A,
	0x124E,
	0x1250,
	0x1257,
	0x1258,
	0x1259,
	0x125A,
	0x125E,
	0x1260,
	0x1289,
	0x128A,
	0x128E,
	0x1290,
	0x12B1,
	0x12B2,
	0x12B6,
	0x12B8,
	0x12BF,
	0x12C0,
	0x12C1,
	0x12C2,
	0x12C6,
	0x12C8,
	0x12D7,
	0x12D8,
	0x1311,
	0x1312,
	0x1316,
	0x1318,
	0x135B,
	0x135D,
	0x137D,
	0x1380,
	0x139A,
	0x2D80,
	0x2D97,
	0x2DA0,
	0x2DA7,
	0x2DA8,
	0x2DAF,
	0x2DB0,
