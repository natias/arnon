	0x1D2E6,
	0x1D2E7,
	0x1D365,
	0x1D366,
	0x1D7D4,
	0x1D7D5,
	0x1D7DE,
	0x1D7DF,
	0x1D7E8,
	0x1D7E9,
	0x1D7F2,
	0x1D7F3,
	0x1D7FC,
	0x1D7FD,
	0x1E146,
	0x1E147,
	0x1E2F6,
	0x1E2F7,
	0x1E4F6,
	0x1E4F7,
	0x1E8CC,
	0x1E8CD,
	0x1E956,
	0x1E957,
	0x1EC76,
	0x1EC77,
	0x1ECA8,
	0x1ECA9,
	0x1ED06,
	0x1ED07,
	0x1ED33,
	0x1ED34,
	0x1F107,
	0x1F108,
	0x1FBF6,
	0x1FBF7,
	0x20AEA,
	0x20AEB
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_NV__6_invlist[] = {  /* for EBCDIC 037 */
	235,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF6,
	0xF7,
	0x666,
	0x667,
	0x6F6,
	0x6F7,
	0x7C6,
	0x7C7,
	0x96C,
	0x96D,
	0x9EC,
	0x9ED,
	0xA6C,
	0xA6D,
	0xAEC,
	0xAED,
	0xB6C,
	0xB6D,
	0xBEC,
	0xBED,
	0xC6C,
	0xC6D,
	0xCEC,
	0xCED,
	0xD6C,
	0xD6D,
	0xDEC,
	0xDED,
	0xE56,
	0xE57,
	0xED6,
	0xED7,
	0xF26,
	0xF27,
	0x1046,
	0x1047,
	0x1096,
	0x1097,
	0x136E,
	0x136F,
	0x17E6,
	0x17E7,
	0x17F6,
	0x17F7,
	0x1816,
	0x1817,
	0x194C,
	0x194D,
	0x19D6,
	0x19D7,
	0x1A86,
	0x1A87,
	0x1A96,
	0x1A97,
	0x1B56,
	0x1B57,
	0x1BB6,
	0x1BB7,
	0x1C46,
	0x1C47,
	0x1C56,
	0x1C57,
	0x2076,
	0x2077,
	0x2086,
	0x2087,
	0x2165,
	0x2166,
	0x2175,
	0x2176,
	0x2185,
	0x2186,
	0x2465,
	0x2466,
	0x2479,
	0x247A,
	0x248D,
	0x248E,
	0x24FA,
	0x24FB,
	0x277B,
	0x277C,
	0x2785,
	0x2786,
	0x278F,
	0x2790,
	0x3026,
	0x3027,
	0x3225,
	0x3226,
	0x3285,
	0x3286,
	0x516D,
	0x516E,
	0x9646,
	0x9647,
	0x9678,
	0x9679,
	0xA626,
	0xA627,
	0xA6EB,
	0xA6EC,
	0xA8D6,
	0xA8D7,
	0xA906,
	0xA907,
	0xA9D6,
	0xA9D7,
	0xA9F6,
	0xA9F7,
	0xAA56,
	0xAA57,
	0xABF6,
	0xABF7,
	0xF9D1,
	0xF9D2,
	0xF9D3,
	0xF9D4,
	0xFF16,
	0xFF17,
	0x1010C,
	0x1010D,
	0x102E6,
	0x102E7,
	0x104A6,
	0x104A7,
	0x109C5,
	0x109C6,
	0x10D36,
	0x10D37,
	0x10E65,
	0x10E66,
	0x11057,
	0x11058,
	0x1106C,
	0x1106D,
	0x110F6,
	0x110F7,
	0x1113C,
	0x1113D,
	0x111D6,
	0x111D7,
	0x111E6,
	0x111E7,
	0x112F6,
	0x112F7,
	0x11456,
	0x11457,
	0x114D6,
	0x114D7,
	0x11656,
	0x11657,
	0x116C6,
	0x116C7,
	0x11736,
	0x11737,
	0x118E6,
	0x118E7,
	0x11956,
	0x11957,
	0x11C56,
	0x11C57,
	0x11C5F,
	0x11C60,
	0x11D56,
	0x11D57,
	0x11DA6,
	0x11DA7,
	0x11F56,
	0x11F57,
	0x12404,
	0x12405,
	0x1240B,
	0x1240C,
	0x12411,
	0x12412,
	0x1241A,
	0x1241B,
	0x12428,
	0x12429,
	0x12440,
	0x12441,
	0x1244E,
	0x1244F,
	0x1246B,
	0x1246C,
	0x16A66,
	0x16A67,
	0x16AC6,
	0x16AC7,
	0x16B56,
	0x16B57,
	0x16E86,
	0x16E87,
	0x1D2C6,
	0x1D2C7,
	0x1D2E6,
	0x1D2E7,
	0x1D365,
	0x1D366,
	0x1D7D4,
	0x1D7D5,
	0x1D7DE,
	0x1D7DF,
	0x1D7E8,
	0x1D7E9,
	0x1D7F2,
	0x1D7F3,
	0x1D7FC,
	0x1D7FD,
	0x1E146,
	0x1E147,
	0x1E2F6,
	0x1E2F7,
	0x1E4F6,
	0x1E4F7,
	0x1E8CC,
	0x1E8CD,
	0x1E956,
	0x1E957,
	0x1EC76,
	0x1EC77,
	0x1ECA8,
	0x1ECA9,
	0x1ED06,
	0x1ED07,
	0x1ED33,
	0x1ED34,
	0x1F107,
	0x1F108,
	0x1FBF6,
	0x1FBF7,
	0x20AEA,
	0x20AEB
};

#  endif	/* EBCDIC 037 */

static const UV UNI_NV__60_invlist[] = {  /* for all charsets */
	27,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1377,
	0x1378,
	0x324D,
	0x324E,
	0x10115,
	0x10116,
	0x102EF,
	0x102F0,
	0x109CE,
	0x109CF,
	0x10E6E,
	0x10E6F,
	0x11060,
	0x11061,
	0x111EF,
	0x111F0,
	0x118EF,
	0x118F0,
	0x11C68,
	0x11C69,
	0x1D36E,
	0x1D36F,
	0x1EC7F,
	0x1EC80,
	0x1ED0F,
	0x1ED10
};

static const UV UNI_NV__600_invlist[] = {  /* for all charsets */
	15,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1011E,
	0x1011F,
	0x102F8,
	0x102F9,
	0x109D7,
	0x109D8,
	0x10E77,
	0x10E78,
	0x1EC88,
	0x1EC89,
	0x1ED18,
	0x1ED19,
	0x1ED39,
	0x1ED3A
};

static const UV UNI_NV__6000_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10127,
	0x10128,
	0x109E0,
	0x109E1,
	0x1EC91,
	0x1EC92,
	0x1ED21,
	0x1ED22
};

static const UV UNI_NV__60000_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10130,
	0x10131,
	0x109E9,
	0x109EA,
	0x1EC9A,
	0x1EC9B,
	0x1ED2A,
	0x1ED2B
};

static const UV UNI_NV__600000_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x109F2,
	0x109F3
};

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_NV__7_invlist[] = {  /* for ASCII/Latin1 */
	229,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x37,
	0x38,
	0x667,
	0x668,
	0x6F7,
	0x6F8,
	0x7C7,
	0x7C8,
	0x96D,
	0x96E,
	0x9ED,
	0x9EE,
	0xA6D,
	0xA6E,
	0xAED,
	0xAEE,
	0xB6D,
	0xB6E,
	0xBED,
	0xBEE,
	0xC6D,
	0xC6E,
	0xCED,
	0xCEE,
	0xD6D,
	0xD6E,
	0xDED,
	0xDEE,
	0xE57,
	0xE58,
	0xED7,
	0xED8,
	0xF27,
	0xF28,
	0x1047,
	0x1048,
	0x1097,
	0x1098,
	0x136F,
	0x1370,
	0x17E7,
	0x17E8,
	0x17F7,
	0x17F8,
	0x1817,
	0x1818,
	0x194D,
	0x194E,
	0x19D7,
	0x19D8,
	0x1A87,
	0x1A88,
	0x1A97,
	0x1A98,
	0x1B57,
	0x1B58,
	0x1BB7,
	0x1BB8,
	0x1C47,
	0x1C48,
	0x1C57,
	0x1C58,
	0x2077,
	0x2078,
	0x2087,
	0x2088,
	0x2166,
	0x2167,
	0x2176,
	0x2177,
	0x2466,
	0x2467,
	0x247A,
	0x247B,
	0x248E,
	0x248F,
	0x24FB,
	0x24FC,
	0x277C,
	0x277D,
	0x2786,
	0x2787,
	0x2790,
	0x2791,
	0x3027,
	0x3028,
	0x3226,
	0x3227,
	0x3286,
	0x3287,
	0x3B4D,
	0x3B4E,
	0x4E03,
	0x4E04,
	0x67D2,
	0x67D3,
	0x6F06,
	0x6F07,
	0xA627,
	0xA628,
	0xA6EC,
	0xA6ED,
	0xA8D7,
	0xA8D8,
	0xA907,
	0xA908,
	0xA9D7,
	0xA9D8,
	0xA9F7,
	0xA9F8,
	0xAA57,
	0xAA58,
	0xABF7,
	0xABF8,
	0xFF17,
	0xFF18,
	0x1010D,
	0x1010E,
	0x102E7,
	0x102E8,
	0x104A7,
	0x104A8,
	0x109C6,
	0x109C7,
	0x10D37,
	0x10D38,
	0x10E66,
	0x10E67,
	0x11058,
	0x11059,
	0x1106D,
	0x1106E,
	0x110F7,
	0x110F8,
	0x1113D,
	0x1113E,
	0x111D7,
	0x111D8,
	0x111E7,
	0x111E8,
	0x112F7,
	0x112F8,
	0x11457,
	0x11458,
	0x114D7,
	0x114D8,
	0x11657,
	0x11658,
	0x116C7,
	0x116C8,
	0x11737,
	0x11738,
	0x118E7,
	0x118E8,
	0x11957,
	0x11958,
	0x11C57,
	0x11C58,
	0x11C60,
	0x11C61,
	0x11D57,
	0x11D58,
	0x11DA7,
	0x11DA8,
	0x11F57,
	0x11F58,
	0x12405,
	0x12406,
	0x1240C,
	0x1240D,
	0x12412,
	0x12413,
	0x1241B,
	0x1241C,
	0x12429,
	0x1242A,
	0x12441,
	0x12444,
	0x1246C,
	0x1246D,
	0x16A67,
	0x16A68,
	0x16AC7,
	0x16AC8,
	0x16B57,
	0x16B58,
	0x16E87,
	0x16E88,
	0x1D2C7,
	0x1D2C8,
	0x1D2E7,
	0x1D2E8,
	0x1D366,
	0x1D367,
	0x1D7D5,
	0x1D7D6,
	0x1D7DF,
	0x1D7E0,
	0x1D7E9,
	0x1D7EA,
	0x1D7F3,
	0x1D7F4,
	0x1D7FD,
	0x1D7FE,
	0x1E147,
	0x1E148,
	0x1E2F7,
	0x1E2F8,
	0x1E4F7,
	0x1E4F8,
	0x1E8CD,
	0x1E8CE,
	0x1E957,
	0x1E958,
	0x1EC77,
	0x1EC78,
	0x1ECA9,
	0x1ECAA,
	0x1ED07,
	0x1ED08,
	0x1ED34,
	0x1ED35,
	0x1F108,
	0x1F109,
	0x1FBF7,
	0x1FBF8,
	0x20001,
	0x20002
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_NV__7_invlist[] = {  /* for EBCDIC 1047 */
	229,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF7,
	0xF8,
	0x667,
	0x668,
	0x6F7,
	0x6F8,
	0x7C7,
	0x7C8,
	0x96D,
	0x96E,
	0x9ED,
	0x9EE,
	0xA6D,
	0xA6E,
	0xAED,
	0xAEE,
	0xB6D,
	0xB6E,
	0xBED,
	0xBEE,
	0xC6D,
	0xC6E,
	0xCED,
	0xCEE,
	0xD6D,
	0xD6E,
	0xDED,
	0xDEE,
	0xE57,
	0xE58,
	0xED7,
	0xED8,
	0xF27,
	0xF28,
	0x1047,
	0x1048,
	0x1097,
	0x1098,
	0x136F,
	0x1370,
	0x17E7,
	0x17E8,
	0x17F7,
	0x17F8,
	0x1817,
	0x1818,
	0x194D,
	0x194E,
	0x19D7,
	0x19D8,
	0x1A87,
	0x1A88,
	0x1A97,
	0x1A98,
	0x1B57,
	0x1B58,
	0x1BB7,
	0x1BB8,
	0x1C47,
	0x1C48,
	0x1C57,
	0x1C58,
	0x2077,
	0x2078,
	0x2087,
	0x2088,
	0x2166,
	0x2167,
	0x2176,
	0x2177,
	0x2466,
	0x2467,
	0x247A,
	0x247B,
	0x248E,
	0x248F,
	0x24FB,
	0x24FC,
	0x277C,
	0x277D,
	0x2786,
	0x2787,
	0x2790,
	0x2791,
	0x3027,
	0x3028,
	0x3226,
	0x3227,
	0x3286,
	0x3287,
	0x3B4D,
	0x3B4E,
	0x4E03,
	0x4E04,
	0x67D2,
	0x67D3,
	0x6F06,
	0x6F07,
	0xA627,
	0xA628,
	0xA6EC,
	0xA6ED,
	0xA8D7,
	0xA8D8,
	0xA907,
	0xA908,
	0xA9D7,
	0xA9D8,
	0xA9F7,
	0xA9F8,
	0xAA57,
	0xAA58,
	0xABF7,
	0xABF8,
	0xFF17,
	0xFF18,
	0x1010D,
	0x1010E,
	0x102E7,
	0x102E8,
	0x104A7,
	0x104A8,
	0x109C6,
	0x109C7,
	0x10D37,
	0x10D38,
	0x10E66,
	0x10E67,
	0x11058,
	0x11059,
	0x1106D,
	0x1106E,
	0x110F7,
	0x110F8,
	0x1113D,
	0x1113E,
	0x111D7,
	0x111D8,
	0x111E7,
	0x111E8,
	0x112F7,
	0x112F8,
	0x11457,
	0x11458,
	0x114D7,
	0x114D8,
	0x11657,
	0x11658,
	0x116C7,
	0x116C8,
	0x11737,
	0x11738,
	0x118E7,
	0x118E8,
	0x11957,
	0x11958,
	0x11C57,
	0x11C58,
	0x11C60,
	0x11C61,
	0x11D57,
	0x11D58,
	0x11DA7,
	0x11DA8,
	0x11F57,
	0x11F58,
	0x12405,
	0x12406,
	0x1240C,
	0x1240D,
	0x12412,
	0x12413,
	0x1241B,
	0x1241C,
	0x12429,
	0x1242A,
	0x12441,
	0x12444,
	0x1246C,
	0x1246D,
	0x16A67,
	0x16A68,
	0x16AC7,
	0x16AC8,
	0x16B57,
	0x16B58,
	0x16E87,
	0x16E88,
	0x1D2C7,
	0x1D2C8,
	0x1D2E7,
	0x1D2E8,
	0x1D366,
	0x1D367,
	0x1D7D5,
	0x1D7D6,
	0x1D7DF,
	0x1D7E0,
	0x1D7E9,
	0x1D7EA,
	0x1D7F3,
	0x1D7F4,
	0x1D7FD,
	0x1D7FE,
	0x1E147,
	0x1E148,
	0x1E2F7,
	0x1E2F8,
	0x1E4F7,
	0x1E4F8,
	0x1E8CD,
	0x1E8CE,
	0x1E957,
	0x1E958,
	0x1EC77,
	0x1EC78,
	0x1ECA9,
	0x1ECAA,
	0x1ED07,
	0x1ED08,
	0x1ED34,
	0x1ED35,
	0x1F108,
	0x1F109,
	0x1FBF7,
	0x1FBF8,
	0x20001,
	0x20002
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_NV__7_invlist[] = {  /* for EBCDIC 037 */
	229,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF7,
	0xF8,
	0x667,
	0x668,
	0x6F7,
	0x6F8,
	0x7C7,
	0x7C8,
	0x96D,
	0x96E,
	0x9ED,
	0x9EE,
	0xA6D,
	0xA6E,
	0xAED,
	0xAEE,
	0xB6D,
	0xB6E,
	0xBED,
	0xBEE,
	0xC6D,
	0xC6E,
	0xCED,
	0xCEE,
	0xD6D,
	0xD6E,
	0xDED,
	0xDEE,
	0xE57,
	0xE58,
	0xED7,
	0xED8,
	0xF27,
	0xF28,
	0x1047,
	0x1048,
	0x1097,
	0x1098,
	0x136F,
	0x1370,
	0x17E7,
	0x17E8,
	0x17F7,
	0x17F8,
	0x1817,
	0x1818,
	0x194D,
	0x194E,
	0x19D7,
	0x19D8,
	0x1A87,
	0x1A88,
	0x1A97,
	0x1A98,
	0x1B57,
	0x1B58,
	0x1BB7,
	0x1BB8,
	0x1C47,
	0x1C48,
	0x1C57,
	0x1C58,
	0x2077,
	0x2078,
	0x2087,
	0x2088,
	0x2166,
	0x2167,
	0x2176,
	0x2177,
	0x2466,
	0x2467,
	0x247A,
	0x247B,
	0x248E,
	0x248F,
	0x24FB,
	0x24FC,
	0x277C,
	0x277D,
	0x2786,
	0x2787,
	0x2790,
	0x2791,
	0x3027,
	0x3028,
	0x3226,
	0x3227,
	0x3286,
	0x3287,
	0x3B4D,
	0x3B4E,
	0x4E03,
	0x4E04,
	0x67D2,
	0x67D3,
	0x6F06,
	0x6F07,
	0xA627,
	0xA628,
	0xA6EC,
	0xA6ED,
	0xA8D7,
	0xA8D8,
	0xA907,
	0xA908,
	0xA9D7,
	0xA9D8,
	0xA9F7,
	0xA9F8,
	0xAA57,
	0xAA58,
	0xABF7,
	0xABF8,
	0xFF17,
	0xFF18,
	0x1010D,
