
=back

=over 4

=item C<IO::Socket::INET> INCOMPATIBILITES

=back

=over 4

=item TODO

=item AUTHOR

=back

=head2 IO::Socket::UNIX - Object interface for AF_UNIX domain sockets

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item METHODS

hostpath(), peerpath()

=item SEE ALSO

=item AUTHOR

=item COPYRIGHT

=back

=head2 IO::Uncompress::AnyInflate - Uncompress zlib-based (zip, gzip)
file/buffer

=over 4

=item SYNOPSIS

=item DESCRIPTION

RFC 1950, RFC 1951 (optionally), gzip (RFC 1952), zip

=item Functional Interface

=over 4

=item anyinflate $input_filename_or_reference =>
$output_filename_or_reference [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>, A
Buffer, A Filename, A Filehandle, C<< MultiStream => 0|1 >>, C<<
TrailingData => $scalar >>

=item OneShot Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>, C<< RawInflate => 0|1
>>, C<< ParseExtra => 0|1 >> If the gzip FEXTRA header field is present and
this option is set, it will force the module to check that it conforms to
the sub-field structure as defined in RFC 1952

=back

=item Methods

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing

:all

=item EXAMPLES

=over 4

=item Working with Net::FTP

=back

=item SUPPORT

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::AnyUncompress - Uncompress gzip, zip, bzip2, zstd,
xz, lzma, lzip, lzf or lzop file/buffer

=over 4

=item SYNOPSIS

=item DESCRIPTION

RFC 1950, RFC 1951 (optionally), gzip (RFC 1952), zip, zstd (Zstandard),
bzip2, lzop, lzf, lzma, lzip, xz

=item Functional Interface

=over 4

=item anyuncompress $input_filename_or_reference =>
$output_filename_or_reference [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>, A
Buffer, A Filename, A Filehandle, C<< MultiStream => 0|1 >>, C<<
TrailingData => $scalar >>

=item OneShot Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>, C<< RawInflate => 0|1
>>, C<< UnLzma => 0|1 >>

=back

=item Methods

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing

:all

=item EXAMPLES

=item SUPPORT

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::Base - Base Class for IO::Uncompress modules

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item SUPPORT

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::Bunzip2 - Read bzip2 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item bunzip2 $input_filename_or_reference => $output_filename_or_reference
[, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>, A
Buffer, A Filename, A Filehandle, C<< MultiStream => 0|1 >>, C<<
TrailingData => $scalar >>

=item OneShot Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>, C<< Small => 0|1 >>

=back

=item Methods

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing

:all

=item EXAMPLES

=over 4

=item Working with Net::FTP

=back

=item SUPPORT

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::Gunzip - Read RFC 1952 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item gunzip $input_filename_or_reference => $output_filename_or_reference
[, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>, A
Buffer, A Filename, A Filehandle, C<< MultiStream => 0|1 >>, C<<
TrailingData => $scalar >>

=item OneShot Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>, C<< ParseExtra => 0|1
>> If the gzip FEXTRA header field is present and this option is set, it
will force the module to check that it conforms to the sub-field structure
as defined in RFC 1952

=back

=item Methods

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

Name, Comment

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing

:all

=item EXAMPLES

=over 4

=item Working with Net::FTP

=back

=item SUPPORT

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::Inflate - Read RFC 1950 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item inflate $input_filename_or_reference => $output_filename_or_reference
[, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>, A
Buffer, A Filename, A Filehandle, C<< MultiStream => 0|1 >>, C<<
TrailingData => $scalar >>

=item OneShot Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>

=back

=item Methods

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing

:all

=item EXAMPLES

=over 4

=item Working with Net::FTP

=back

=item SUPPORT

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::RawInflate - Read RFC 1951 files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item Functional Interface

=over 4

=item rawinflate $input_filename_or_reference =>
$output_filename_or_reference [, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>, A
Buffer, A Filename, A Filehandle, C<< MultiStream => 0|1 >>, C<<
TrailingData => $scalar >>

=item OneShot Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< AutoClose => 0|1 >>, C<< MultiStream => 0|1 >>, C<< Prime => $string
>>, C<< Transparent => 0|1 >>, C<< BlockSize => $num >>, C<< InputLength =>
$size >>, C<< Append => 0|1 >>, C<< Strict => 0|1 >>

=back

=item Methods

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing

:all

=item EXAMPLES

=over 4

=item Working with Net::FTP

=back

=item SUPPORT

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Uncompress::Unzip - Read zip files/buffers

=over 4

=item SYNOPSIS

=item DESCRIPTION

Store (0), Deflate (8), Bzip2 (12), Lzma (14), Xz (95), Zstandard (93)

=item Functional Interface

=over 4

=item unzip $input_filename_or_reference => $output_filename_or_reference
[, OPTS]

A filename, A filehandle, A scalar reference, An array reference, An Input
FileGlob string, A filename, A filehandle, A scalar reference, An Array
Reference, An Output FileGlob

=item Notes

=item Optional Parameters

C<< AutoClose => 0|1 >>, C<< BinModeOut => 0|1 >>, C<< Append => 0|1 >>, A
Buffer, A Filename, A Filehandle, C<< MultiStream => 0|1 >>, C<<
TrailingData => $scalar >>

=item OneShot Examples

=back

=item OO Interface

=over 4

=item Constructor

A filename, A filehandle, A scalar reference

=item Constructor Options

C<< Name => "membername" >>, C<< Efs => 0| 1 >>, C<< AutoClose => 0|1 >>,
C<< MultiStream => 0|1 >>, C<< Prime => $string >>, C<< Transparent => 0|1
>>, C<< BlockSize => $num >>, C<< InputLength => $size >>, C<< Append =>
0|1 >>, C<< Strict => 0|1 >>

=back

=item Methods

=over 4

=item read

=item read

=item getline

=item getc

=item ungetc

=item inflateSync

=item getHeaderInfo

=item tell

=item eof

=item seek

=item binmode

=item opened

=item autoflush

=item input_line_number

=item fileno

=item close

=item nextStream

=item trailingData

=back

=item Importing

:all

=item EXAMPLES

=over 4

=item  Simple Read

=item Walking through a zip file

=item Unzipping a complete zip file to disk

=item Working with Net::FTP

=back

=item SUPPORT

=item SEE ALSO

=item AUTHOR

=item MODIFICATION HISTORY

=item COPYRIGHT AND LICENSE

=back

=head2 IO::Zlib - IO:: style interface to L<Compress::Zlib>

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CONSTRUCTOR

new ( [ARGS] )

=item OBJECT METHODS

open ( FILENAME, MODE ), opened, close, getc, getline, getlines, print (
ARGS... ), read ( BUF, NBYTES, [OFFSET] ), eof, seek ( OFFSET, WHENCE ),
tell, setpos ( POS ), getpos ( POS )

=item USING THE EXTERNAL GZIP

=item CLASS METHODS

has_Compress_Zlib, gzip_external, gzip_used, gzip_read_open,
gzip_write_open

=item DIAGNOSTICS

IO::Zlib::getlines: must be called in list context,
IO::Zlib::gzopen_external: mode '...' is illegal, IO::Zlib::import: '...'
is illegal, IO::Zlib::import: ':gzip_external' requires an argument,
IO::Zlib::import: 'gzip_read_open' requires an argument, IO::Zlib::import:
'gzip_read' '...' is illegal, IO::Zlib::import: 'gzip_write_open' requires
an argument, IO::Zlib::import: 'gzip_write_open' '...' is illegal,
IO::Zlib::import: no Compress::Zlib and no external gzip, IO::Zlib::open:
needs a filename, IO::Zlib::READ: NBYTES must be specified,
IO::Zlib::WRITE: too long LENGTH

=item SEE ALSO

=item HISTORY

=item COPYRIGHT

=back

=head2 IPC::Cmd - finding and running system commands made easy

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item CLASS METHODS

=over 4

=item $ipc_run_version = IPC::Cmd->can_use_ipc_run( [VERBOSE] )

=back

=back

=over 4

=item $ipc_open3_version = IPC::Cmd->can_use_ipc_open3( [VERBOSE] )

=back

=over 4

=item $bool = IPC::Cmd->can_capture_buffer

=back

=over 4

=item $bool = IPC::Cmd->can_use_run_forked

=back

=over 4

=item FUNCTIONS

=over 4

=item $path = can_run( PROGRAM );

=back

=back

=over 4

=item $ok | ($ok, $err, $full_buf, $stdout_buff, $stderr_buff) = run(
command => COMMAND, [verbose => BOOL, buffer => \$SCALAR, timeout => DIGIT]
);

command, verbose, buffer, timeout, success, error message, full_buffer,
out_buffer, error_buffer

=back

=over 4

=item $hashref = run_forked( COMMAND, { child_stdin => SCALAR, timeout =>
DIGIT, stdout_handler => CODEREF, stderr_handler => CODEREF} );

C<timeout>, C<child_stdin>, C<stdout_handler>, C<stderr_handler>,
C<wait_loop_callback>, C<discard_output>,
C<terminate_on_parent_sudden_death>, C<exit_code>, C<timeout>, C<stdout>,
C<stderr>, C<merged>, C<err_msg>

=back

=over 4

=item $q = QUOTE

=back

=over 4

=item HOW IT WORKS

=item Global Variables

=over 4

=item $IPC::Cmd::VERBOSE

=item $IPC::Cmd::USE_IPC_RUN
