	0x1FF8,
	0x214E,
	0x214F,
	0x2170,
	0x2180,
	0x2184,
	0x2185,
	0x24D0,
	0x24EA,
	0x2C30,
	0x2C60,
	0x2C61,
	0x2C62,
	0x2C65,
	0x2C66,
	0x2C67,
	0x2C68,
	0x2C69,
	0x2C6A,
	0x2C6B,
	0x2C6C,
	0x2C6D,
	0x2C73,
	0x2C74,
	0x2C76,
	0x2C77,
	0x2C81,
	0x2C82,
	0x2C83,
	0x2C84,
	0x2C85,
	0x2C86,
	0x2C87,
	0x2C88,
	0x2C89,
	0x2C8A,
	0x2C8B,
	0x2C8C,
	0x2C8D,
	0x2C8E,
	0x2C8F,
	0x2C90,
	0x2C91,
	0x2C92,
	0x2C93,
	0x2C94,
	0x2C95,
	0x2C96,
	0x2C97,
	0x2C98,
	0x2C99,
	0x2C9A,
	0x2C9B,
	0x2C9C,
	0x2C9D,
	0x2C9E,
	0x2C9F,
	0x2CA0,
	0x2CA1,
	0x2CA2,
	0x2CA3,
	0x2CA4,
	0x2CA5,
	0x2CA6,
	0x2CA7,
	0x2CA8,
	0x2CA9,
	0x2CAA,
	0x2CAB,
	0x2CAC,
	0x2CAD,
	0x2CAE,
	0x2CAF,
	0x2CB0,
	0x2CB1,
	0x2CB2,
	0x2CB3,
	0x2CB4,
	0x2CB5,
	0x2CB6,
	0x2CB7,
	0x2CB8,
	0x2CB9,
	0x2CBA,
	0x2CBB,
	0x2CBC,
	0x2CBD,
	0x2CBE,
	0x2CBF,
	0x2CC0,
	0x2CC1,
	0x2CC2,
	0x2CC3,
	0x2CC4,
	0x2CC5,
	0x2CC6,
	0x2CC7,
	0x2CC8,
	0x2CC9,
	0x2CCA,
	0x2CCB,
	0x2CCC,
	0x2CCD,
	0x2CCE,
	0x2CCF,
	0x2CD0,
	0x2CD1,
	0x2CD2,
	0x2CD3,
	0x2CD4,
	0x2CD5,
	0x2CD6,
	0x2CD7,
	0x2CD8,
	0x2CD9,
	0x2CDA,
	0x2CDB,
	0x2CDC,
	0x2CDD,
	0x2CDE,
	0x2CDF,
	0x2CE0,
	0x2CE1,
	0x2CE2,
	0x2CE3,
	0x2CE4,
	0x2CEC,
	0x2CED,
	0x2CEE,
	0x2CEF,
	0x2CF3,
	0x2CF4,
	0x2D00,
	0x2D26,
	0x2D27,
	0x2D28,
	0x2D2D,
	0x2D2E,
	0xA641,
	0xA642,
	0xA643,
	0xA644,
	0xA645,
	0xA646,
	0xA647,
	0xA648,
	0xA649,
	0xA64A,
	0xA64B,
	0xA64C,
	0xA64D,
	0xA64E,
	0xA64F,
	0xA650,
	0xA651,
	0xA652,
	0xA653,
	0xA654,
	0xA655,
	0xA656,
	0xA657,
	0xA658,
	0xA659,
	0xA65A,
	0xA65B,
	0xA65C,
	0xA65D,
	0xA65E,
	0xA65F,
	0xA660,
	0xA661,
	0xA662,
	0xA663,
	0xA664,
	0xA665,
	0xA666,
	0xA667,
	0xA668,
	0xA669,
	0xA66A,
	0xA66B,
	0xA66C,
	0xA66D,
	0xA66E,
	0xA681,
	0xA682,
	0xA683,
	0xA684,
	0xA685,
	0xA686,
	0xA687,
	0xA688,
	0xA689,
	0xA68A,
	0xA68B,
	0xA68C,
	0xA68D,
	0xA68E,
	0xA68F,
	0xA690,
	0xA691,
	0xA692,
	0xA693,
	0xA694,
	0xA695,
	0xA696,
	0xA697,
	0xA698,
	0xA699,
	0xA69A,
	0xA69B,
	0xA69C,
	0xA723,
	0xA724,
	0xA725,
	0xA726,
	0xA727,
	0xA728,
	0xA729,
	0xA72A,
	0xA72B,
	0xA72C,
	0xA72D,
	0xA72E,
	0xA72F,
	0xA730,
	0xA733,
	0xA734,
	0xA735,
	0xA736,
	0xA737,
	0xA738,
	0xA739,
	0xA73A,
	0xA73B,
	0xA73C,
	0xA73D,
	0xA73E,
	0xA73F,
	0xA740,
	0xA741,
	0xA742,
	0xA743,
	0xA744,
	0xA745,
	0xA746,
	0xA747,
	0xA748,
	0xA749,
	0xA74A,
	0xA74B,
	0xA74C,
	0xA74D,
	0xA74E,
	0xA74F,
	0xA750,
	0xA751,
	0xA752,
	0xA753,
	0xA754,
	0xA755,
	0xA756,
	0xA757,
	0xA758,
	0xA759,
	0xA75A,
	0xA75B,
	0xA75C,
	0xA75D,
	0xA75E,
	0xA75F,
	0xA760,
	0xA761,
	0xA762,
	0xA763,
	0xA764,
	0xA765,
	0xA766,
	0xA767,
	0xA768,
	0xA769,
	0xA76A,
	0xA76B,
	0xA76C,
	0xA76D,
	0xA76E,
	0xA76F,
	0xA770,
	0xA77A,
	0xA77B,
	0xA77C,
	0xA77D,
	0xA77F,
	0xA780,
	0xA781,
	0xA782,
	0xA783,
	0xA784,
	0xA785,
	0xA786,
	0xA787,
	0xA788,
	0xA78C,
	0xA78D,
	0xA791,
	0xA792,
	0xA793,
	0xA794,
	0xA795,
	0xA797,
	0xA798,
	0xA799,
	0xA79A,
	0xA79B,
	0xA79C,
	0xA79D,
	0xA79E,
	0xA79F,
	0xA7A0,
	0xA7A1,
	0xA7A2,
	0xA7A3,
	0xA7A4,
	0xA7A5,
	0xA7A6,
	0xA7A7,
	0xA7A8,
	0xA7A9,
	0xA7AA,
	0xA7B5,
	0xA7B6,
	0xA7B7,
	0xA7B8,
	0xA7B9,
	0xA7BA,
	0xA7BB,
	0xA7BC,
	0xA7BD,
	0xA7BE,
	0xA7BF,
	0xA7C0,
	0xA7C1,
	0xA7C2,
	0xA7C3,
	0xA7C4,
	0xA7C8,
	0xA7C9,
	0xA7CA,
	0xA7CB,
	0xA7D1,
	0xA7D2,
	0xA7D7,
	0xA7D8,
	0xA7D9,
	0xA7DA,
	0xA7F6,
	0xA7F7,
	0xAB53,
	0xAB54,
	0xAB70,
	0xABC0,
	0xFB00,
	0xFB01,
	0xFB02,
	0xFB03,
	0xFB04,
	0xFB05,
	0xFB07,
	0xFB13,
	0xFB14,
	0xFB15,
	0xFB16,
	0xFB17,
	0xFB18,
	0xFF41,
	0xFF5B,
	0x10428,
	0x10450,
	0x104D8,
	0x104FC,
	0x10597,
	0x105A2,
	0x105A3,
	0x105B2,
	0x105B3,
	0x105BA,
	0x105BB,
	0x105BD,
	0x10CC0,
	0x10CF3,
	0x118C0,
	0x118E0,
	0x16E60,
	0x16E80,
	0x1E922,
	0x1E944
};

#  endif	/* ASCII/Latin1 */

#endif	/* (defined(PERL_IN_REGCOMP_C) && ! defined(PERL_IN_XSUB_RE)) */

#if defined(PERL_IN_UTF8_C)

#  if 'A' == 65 /* ASCII/Latin1 */

/* Negative enum values indicate the need to use an auxiliary table
 * consisting of the list of enums this one expands to.  The absolute
 * values of the negative enums are indices into a table of the auxiliary
 * tables' addresses */
typedef enum {
	TC_0 = 0,
	TC_use_AUX_TABLE_1 = -1,
	TC_use_AUX_TABLE_2 = -2,
	TC_use_AUX_TABLE_3 = -3,
	TC_use_AUX_TABLE_4 = -4,
	TC_use_AUX_TABLE_5 = -5,
	TC_use_AUX_TABLE_6 = -6,
	TC_use_AUX_TABLE_7 = -7,
	TC_use_AUX_TABLE_8 = -8,
	TC_use_AUX_TABLE_9 = -9,
	TC_use_AUX_TABLE_10 = -10,
	TC_use_AUX_TABLE_11 = -11,
	TC_use_AUX_TABLE_12 = -12,
	TC_use_AUX_TABLE_13 = -13,
	TC_use_AUX_TABLE_14 = -14,
	TC_use_AUX_TABLE_15 = -15,
	TC_use_AUX_TABLE_16 = -16,
	TC_use_AUX_TABLE_17 = -17,
	TC_use_AUX_TABLE_18 = -18,
	TC_use_AUX_TABLE_19 = -19,
	TC_use_AUX_TABLE_20 = -20,
	TC_use_AUX_TABLE_21 = -21,
	TC_use_AUX_TABLE_22 = -22,
	TC_use_AUX_TABLE_23 = -23,
	TC_use_AUX_TABLE_24 = -24,
	TC_use_AUX_TABLE_25 = -25,
	TC_use_AUX_TABLE_26 = -26,
	TC_use_AUX_TABLE_27 = -27,
	TC_use_AUX_TABLE_28 = -28,
	TC_use_AUX_TABLE_29 = -29,
	TC_use_AUX_TABLE_30 = -30,
	TC_use_AUX_TABLE_31 = -31,
	TC_use_AUX_TABLE_32 = -32,
	TC_use_AUX_TABLE_33 = -33,
	TC_use_AUX_TABLE_34 = -34,
	TC_use_AUX_TABLE_35 = -35,
	TC_use_AUX_TABLE_36 = -36,
	TC_use_AUX_TABLE_37 = -37,
	TC_use_AUX_TABLE_38 = -38,
	TC_use_AUX_TABLE_39 = -39,
	TC_use_AUX_TABLE_40 = -40,
	TC_use_AUX_TABLE_41 = -41,
	TC_use_AUX_TABLE_42 = -42,
	TC_use_AUX_TABLE_43 = -43,
	TC_use_AUX_TABLE_44 = -44,
	TC_use_AUX_TABLE_45 = -45
} TC_enum;

#define HAS_TC_AUX_TABLES

static const U32 TC_AUX_TABLE_1[] = {
	0x53,
	0x73
};

static const U32 TC_AUX_TABLE_2[] = {
	0x2BC,
	0x4E
};

static const U32 TC_AUX_TABLE_3[] = {
	0x4A,
	0x30C
};

static const U32 TC_AUX_TABLE_4[] = {
	0x399,
	0x308,
	0x301
};

static const U32 TC_AUX_TABLE_5[] = {
	0x3A5,
	0x308,
	0x301
};

static const U32 TC_AUX_TABLE_6[] = {
	0x535,
	0x582
};

static const U32 TC_AUX_TABLE_7[] = {
	0x48,
	0x331
};

static const U32 TC_AUX_TABLE_8[] = {
	0x54,
	0x308
};

static const U32 TC_AUX_TABLE_9[] = {
	0x57,
	0x30A
};

static const U32 TC_AUX_TABLE_10[] = {
	0x59,
	0x30A
};

static const U32 TC_AUX_TABLE_11[] = {
	0x41,
	0x2BE
};

static const U32 TC_AUX_TABLE_12[] = {
	0x3A5,
	0x313
};

static const U32 TC_AUX_TABLE_13[] = {
	0x3A5,
	0x313,
	0x300
};

static const U32 TC_AUX_TABLE_14[] = {
	0x3A5,
	0x313,
	0x301
};

static const U32 TC_AUX_TABLE_15[] = {
	0x3A5,
	0x313,
	0x342
};

static const U32 TC_AUX_TABLE_16[] = {
	0x1FBA,
	0x345
};

static const U32 TC_AUX_TABLE_17[] = {
	0x386,
	0x345
};

static const U32 TC_AUX_TABLE_18[] = {
	0x391,
	0x342
};

static const U32 TC_AUX_TABLE_19[] = {
	0x391,
	0x342,
	0x345
};

static const U32 TC_AUX_TABLE_20[] = {
	0x1FCA,
	0x345
};

static const U32 TC_AUX_TABLE_21[] = {
	0x389,
	0x345
};

static const U32 TC_AUX_TABLE_22[] = {
	0x397,
	0x342
};

static const U32 TC_AUX_TABLE_23[] = {
	0x397,
	0x342,
	0x345
};

static const U32 TC_AUX_TABLE_24[] = {
	0x399,
	0x308,
	0x300
};

static const U32 TC_AUX_TABLE_25[] = {
	0x399,
	0x342
};

static const U32 TC_AUX_TABLE_26[] = {
	0x399,
	0x308,
	0x342
};

static const U32 TC_AUX_TABLE_27[] = {
	0x3A5,
	0x308,
	0x300
};

static const U32 TC_AUX_TABLE_28[] = {
	0x3A1,
	0x313
};

static const U32 TC_AUX_TABLE_29[] = {
	0x3A5,
	0x342
};

static const U32 TC_AUX_TABLE_30[] = {
	0x3A5,
	0x308,
	0x342
};

static const U32 TC_AUX_TABLE_31[] = {
	0x1FFA,
	0x345
};

static const U32 TC_AUX_TABLE_32[] = {
	0x38F,
	0x345
};

static const U32 TC_AUX_TABLE_33[] = {
	0x3A9,
	0x342
};

static const U32 TC_AUX_TABLE_34[] = {
	0x3A9,
	0x342,
	0x345
};

static const U32 TC_AUX_TABLE_35[] = {
	0x46,
	0x66
};

static const U32 TC_AUX_TABLE_36[] = {
	0x46,
	0x69
};

static const U32 TC_AUX_TABLE_37[] = {
	0x46,
	0x6C
};

static const U32 TC_AUX_TABLE_38[] = {
	0x46,
	0x66,
	0x69
};

static const U32 TC_AUX_TABLE_39[] = {
	0x46,
	0x66,
	0x6C
};

static const U32 TC_AUX_TABLE_40[] = {
	0x53,
	0x74
};

static const U32 TC_AUX_TABLE_41[] = {
	0x544,
	0x576
};

static const U32 TC_AUX_TABLE_42[] = {
	0x544,
	0x565
};

static const U32 TC_AUX_TABLE_43[] = {
	0x544,
	0x56B
};

static const U32 TC_AUX_TABLE_44[] = {
	0x54E,
	0x576
};

static const U32 TC_AUX_TABLE_45[] = {
	0x544,
	0x56D
};

static const U32 * const TC_AUX_TABLE_ptrs[] = {
	NULL,	/* Placeholder */
	TC_AUX_TABLE_1,
	TC_AUX_TABLE_2,
	TC_AUX_TABLE_3,
	TC_AUX_TABLE_4,
	TC_AUX_TABLE_5,
	TC_AUX_TABLE_6,
	TC_AUX_TABLE_7,
	TC_AUX_TABLE_8,
	TC_AUX_TABLE_9,
	TC_AUX_TABLE_10,
	TC_AUX_TABLE_11,
	TC_AUX_TABLE_12,
	TC_AUX_TABLE_13,
	TC_AUX_TABLE_14,
	TC_AUX_TABLE_15,
	TC_AUX_TABLE_16,
	TC_AUX_TABLE_17,
	TC_AUX_TABLE_18,
	TC_AUX_TABLE_19,
	TC_AUX_TABLE_20,
	TC_AUX_TABLE_21,
	TC_AUX_TABLE_22,
	TC_AUX_TABLE_23,
	TC_AUX_TABLE_24,
	TC_AUX_TABLE_25,
	TC_AUX_TABLE_26,
	TC_AUX_TABLE_27,
	TC_AUX_TABLE_28,
	TC_AUX_TABLE_29,
	TC_AUX_TABLE_30,
	TC_AUX_TABLE_31,
	TC_AUX_TABLE_32,
	TC_AUX_TABLE_33,
	TC_AUX_TABLE_34,
	TC_AUX_TABLE_35,
	TC_AUX_TABLE_36,
	TC_AUX_TABLE_37,
	TC_AUX_TABLE_38,
	TC_AUX_TABLE_39,
	TC_AUX_TABLE_40,
	TC_AUX_TABLE_41,
	TC_AUX_TABLE_42,
	TC_AUX_TABLE_43,
	TC_AUX_TABLE_44,
	TC_AUX_TABLE_45
};

/* Parallel table to the above, giving the number of elements in each table
 * pointed to */

static const U8 TC_AUX_TABLE_lengths[] = {
	0,	/* Placeholder */
	2	/* TC_AUX_TABLE_1 */,
	2	/* TC_AUX_TABLE_2 */,
	2	/* TC_AUX_TABLE_3 */,
	3	/* TC_AUX_TABLE_4 */,
	3	/* TC_AUX_TABLE_5 */,
	2	/* TC_AUX_TABLE_6 */,
	2	/* TC_AUX_TABLE_7 */,
	2	/* TC_AUX_TABLE_8 */,
	2	/* TC_AUX_TABLE_9 */,
	2	/* TC_AUX_TABLE_10 */,
	2	/* TC_AUX_TABLE_11 */,
	2	/* TC_AUX_TABLE_12 */,
	3	/* TC_AUX_TABLE_13 */,
	3	/* TC_AUX_TABLE_14 */,
	3	/* TC_AUX_TABLE_15 */,
	2	/* TC_AUX_TABLE_16 */,
	2	/* TC_AUX_TABLE_17 */,
	2	/* TC_AUX_TABLE_18 */,
	3	/* TC_AUX_TABLE_19 */,
	2	/* TC_AUX_TABLE_20 */,
	2	/* TC_AUX_TABLE_21 */,
	2	/* TC_AUX_TABLE_22 */,
	3	/* TC_AUX_TABLE_23 */,
	3	/* TC_AUX_TABLE_24 */,
	2	/* TC_AUX_TABLE_25 */,
	3	/* TC_AUX_TABLE_26 */,
	3	/* TC_AUX_TABLE_27 */,
	2	/* TC_AUX_TABLE_28 */,
	2	/* TC_AUX_TABLE_29 */,
	3	/* TC_AUX_TABLE_30 */,
	2	/* TC_AUX_TABLE_31 */,
	2	/* TC_AUX_TABLE_32 */,
	2	/* TC_AUX_TABLE_33 */,
	3	/* TC_AUX_TABLE_34 */,
	2	/* TC_AUX_TABLE_35 */,
	2	/* TC_AUX_TABLE_36 */,
	2	/* TC_AUX_TABLE_37 */,
	3	/* TC_AUX_TABLE_38 */,
	3	/* TC_AUX_TABLE_39 */,
	2	/* TC_AUX_TABLE_40 */,
	2	/* TC_AUX_TABLE_41 */,
	2	/* TC_AUX_TABLE_42 */,
	2	/* TC_AUX_TABLE_43 */,
	2	/* TC_AUX_TABLE_44 */,
	2	/* TC_AUX_TABLE_45 */
};

static const I32 Titlecase_Mapping_invmap[] = {  /* for ASCII/Latin1 */
	0,
	0x41,
	0,
	0x39C,
	0,
	TC_use_AUX_TABLE_1,
	0xC0,
	0,
	0xD8,
	0x178,
	0,
	0x100,
	0,
	0x102,
	0,
	0x104,
	0,
	0x106,
	0,
	0x108,
	0,
	0x10A,
	0,
	0x10C,
	0,
	0x10E,
	0,
	0x110,
	0,
	0x112,
	0,
	0x114,
	0,
	0x116,
	0,
	0x118,
	0,
	0x11A,
	0,
	0x11C,
	0,
	0x11E,
	0,
	0x120,
	0,
	0x122,
	0,
	0x124,
	0,
	0x126,
	0,
	0x128,
	0,
	0x12A,
	0,
	0x12C,
	0,
	0x12E,
	0,
	0x49,
	0,
	0x132,
	0,
	0x134,
	0,
	0x136,
	0,
	0x139,
	0,
	0x13B,
	0,
	0x13D,
	0,
	0x13F,
	0,
	0x141,
	0,
	0x143,
	0,
	0x145,
	0,
	0x147,
	TC_use_AUX_TABLE_2,
	0,
	0x14A,
	0,
	0x14C,
	0,
	0x14E,
	0,
	0x150,
	0,
	0x152,
	0,
	0x154,
	0,
	0x156,
	0,
	0x158,
	0,
	0x15A,
	0,
	0x15C,
	0,
	0x15E,
	0,
	0x160,
	0,
	0x162,
	0,
	0x164,
	0,
	0x166,
	0,
	0x168,
	0,
	0x16A,
	0,
	0x16C,
	0,
	0x16E,
	0,
	0x170,
	0,
	0x172,
	0,
	0x174,
	0,
	0x176,
	0,
	0x179,
	0,
	0x17B,
	0,
	0x17D,
	0x53,
	0x243,
	0,
	0x182,
	0,
	0x184,
	0,
	0x187,
	0,
	0x18B,
	0,
	0x191,
	0,
	0x1F6,
	0,
	0x198,
	0x23D,
	0,
	0x220,
	0,
	0x1A0,
	0,
	0x1A2,
	0,
	0x1A4,
	0,
	0x1A7,
	0,
	0x1AC,
	0,
	0x1AF,
	0,
	0x1B3,
	0,
	0x1B5,
	0,
	0x1B8,
	0,
	0x1BC,
	0,
	0x1F7,
	0,
	0x1C5,
	0,
	0x1C5,
	0x1C8,
	0,
	0x1C8,
	0x1CB,
	0,
	0x1CB,
	0,
	0x1CD,
	0,
	0x1CF,
	0,
	0x1D1,
	0,
	0x1D3,
	0,
	0x1D5,
	0,
	0x1D7,
