=item TAP::Parser::Result::Version

TAP syntax version token.

=item TAP::Parser::Result::YAML

YAML result token.

=item TAP::Parser::ResultFactory

Factory for creating TAP::Parser output objects

=item TAP::Parser::Scheduler

Schedule tests during parallel testing

=item TAP::Parser::Scheduler::Job

A single testing job.

=item TAP::Parser::Scheduler::Spinner

A no-op job.

=item TAP::Parser::Source

A TAP source & meta data about it

=item TAP::Parser::SourceHandler

Base class for different TAP source handlers

=item TAP::Parser::SourceHandler::Executable

Stream output from an executable TAP source

=item TAP::Parser::SourceHandler::File

Stream TAP from a text file.

=item TAP::Parser::SourceHandler::Handle

Stream TAP from an IO::Handle or a GLOB.

=item TAP::Parser::SourceHandler::Perl

Stream TAP from a Perl executable

=item TAP::Parser::SourceHandler::RawTAP

Stream output from raw TAP in a scalar/array ref.

=item TAP::Parser::YAMLish::Reader

Read YAMLish data from iterator

=item TAP::Parser::YAMLish::Writer

Write YAMLish data

=item Term::ANSIColor

Color screen output using ANSI escape sequences

=item Term::Cap

Perl termcap interface

=item Term::Complete

Perl word completion module

=item Term::ReadLine

Perl interface to various C<readline> packages.

=item Term::Table

Format a header and rows into a table

=item Term::Table::Cell

Representation of a cell in a table.

=item Term::Table::CellStack

Combine several cells into one (vertical)

=item Term::Table::HashBase

Build hash based classes.

=item Term::Table::LineBreak

Break up lines for use in tables.

=item Term::Table::Util

Utilities for Term::Table.

=item Test

Provides a simple framework for writing test scripts

=item Test2

Framework for writing test tools that all work together.

=item Test2::API

Primary interface for writing Test2 based testing tools.

=item Test2::API::Breakage

What breaks at what version

=item Test2::API::Context

Object to represent a testing context.

=item Test2::API::Instance

Object used by Test2::API under the hood

=item Test2::API::InterceptResult

Representation of a list of events.

=item Test2::API::InterceptResult::Event

Representation of an event for use in

=item Test2::API::InterceptResult::Hub

Hub used by InterceptResult.

=item Test2::API::InterceptResult::Squasher

Encapsulation of the algorithm that

=item Test2::API::Stack

Object to manage a stack of L<Test2::Hub>

=item Test2::AsyncSubtest

Object representing an async subtest.

=item Test2::AsyncSubtest::Event::Attach

Event to attach a subtest to the parent.

=item Test2::AsyncSubtest::Event::Detach

Event to detach a subtest from the parent.

=item Test2::AsyncSubtest::Hub

Hub used by async subtests.

=item Test2::Bundle

Documentation for bundles.

=item Test2::Bundle::Extended

Old name for Test2::V0

=item Test2::Bundle::More

ALMOST a drop-in replacement for Test::More.

=item Test2::Bundle::Simple

ALMOST a drop-in replacement for Test::Simple.

=item Test2::Compare

Test2 extension for writing deep comparison tools.

=item Test2::Compare::Array

Internal representation of an array comparison.

=item Test2::Compare::Bag

Internal representation of a bag comparison.

=item Test2::Compare::Base

Base class for comparison classes.

=item Test2::Compare::Bool

Compare two values as booleans

=item Test2::Compare::Custom

Custom field check for comparisons.

=item Test2::Compare::DeepRef

Ref comparison

=item Test2::Compare::Delta

Representation of differences between nested data

=item Test2::Compare::Event

Event specific Object subclass.

=item Test2::Compare::EventMeta

Meta class for events in deep comparisons

=item Test2::Compare::Float

Compare two values as numbers with tolerance.

=item Test2::Compare::Hash

Representation of a hash in a deep comparison.

=item Test2::Compare::Isa

Check if the value is an instance of the class.

=item Test2::Compare::Meta

Check library for meta-checks

=item Test2::Compare::Negatable

Poor mans 'role' for compare objects that can be negated.

=item Test2::Compare::Number

Compare two values as numbers

=item Test2::Compare::Object

Representation of an object during deep

=item Test2::Compare::OrderedSubset

Internal representation of an ordered subset.

=item Test2::Compare::Pattern

Use a pattern to validate values in a deep

=item Test2::Compare::Ref

Ref comparison

=item Test2::Compare::Regex

Regex direct comparison

=item Test2::Compare::Scalar

Representation of a Scalar Ref in deep

=item Test2::Compare::Set

Allows a field to be matched against a set of

=item Test2::Compare::String

Compare two values as strings

=item Test2::Compare::Undef

Check that something is undefined

=item Test2::Compare::Wildcard

Placeholder check.

=item Test2::Event

Base class for events

=item Test2::Event::Bail

Bailout!

=item Test2::Event::Diag

Diag event type

=item Test2::Event::Encoding

Set the encoding for the output stream

=item Test2::Event::Exception

Exception event

=item Test2::Event::Fail

Event for a simple failed assertion

=item Test2::Event::Generic

Generic event type.

=item Test2::Event::Note

Note event type

=item Test2::Event::Ok

Ok event type

=item Test2::Event::Pass

Event for a simple passing assertion

=item Test2::Event::Plan

The event of a plan

=item Test2::Event::Skip

Skip event type

=item Test2::Event::Subtest

Event for subtest types

=item Test2::Event::TAP::Version

Event for TAP version.

=item Test2::Event::V2

Second generation event.

=item Test2::Event::Waiting

Tell all procs/threads it is time to be done

=item Test2::EventFacet

Base class for all event facets.

=item Test2::EventFacet::About

Facet with event details.

=item Test2::EventFacet::Amnesty

Facet for assertion amnesty.

=item Test2::EventFacet::Assert

Facet representing an assertion.

=item Test2::EventFacet::Control

Facet for hub actions and behaviors.

=item Test2::EventFacet::Error

Facet for errors that need to be shown.

=item Test2::EventFacet::Hub

Facet for the hubs an event passes through.

=item Test2::EventFacet::Info

Facet for information a developer might care about.

=item Test2::EventFacet::Info::Table

Intermediary representation of a table.

=item Test2::EventFacet::Meta

Facet for meta-data

=item Test2::EventFacet::Parent

Facet for events contains other events

=item Test2::EventFacet::Plan

Facet for setting the plan

=item Test2::EventFacet::Render

Facet that dictates how to render an event.

=item Test2::EventFacet::Trace

Debug information for events

=item Test2::Formatter

Namespace for formatters.

=item Test2::Formatter::TAP

Standard TAP formatter

=item Test2::Hub

The conduit through which all events flow.

=item Test2::Hub::Interceptor

Hub used by interceptor to grab results.

=item Test2::Hub::Interceptor::Terminator

Exception class used by

=item Test2::Hub::Subtest

Hub used by subtests

=item Test2::IPC

Turn on IPC for threading or forking support.

=item Test2::IPC::Driver

Base class for Test2 IPC drivers.

=item Test2::IPC::Driver::Files

Temp dir + Files concurrency model.

=item Test2::Manual

Documentation hub for Test2 and Test2-Suite.

=item Test2::Manual::Anatomy

The hub for documentation of the inner workings of

=item Test2::Manual::Anatomy::API

Internals documentation for the API.

=item Test2::Manual::Anatomy::Context

Internals documentation for the Context

=item Test2::Manual::Anatomy::Event

The internals of events

=item Test2::Manual::Anatomy::Hubs

Internals documentation for the hub stack, and

=item Test2::Manual::Anatomy::IPC

Manual for the IPC system.

=item Test2::Manual::Anatomy::Utilities

Overview of utilities for Test2.

=item Test2::Manual::Concurrency

Documentation for Concurrency support.

=item Test2::Manual::Contributing

How to contribute to the Test2 project.

=item Test2::Manual::EndToEnd

Overview of Test2 from load to finish.

=item Test2::Manual::Testing

Hub for documentation about writing tests with Test2.

=item Test2::Manual::Testing::Introduction

Introduction to testing with Test2.

=item Test2::Manual::Testing::Migrating

How to migrate existing tests from

=item Test2::Manual::Testing::Planning

The many ways to set a plan.

=item Test2::Manual::Testing::Todo

Tutorial for marking tests as TODO.

=item Test2::Manual::Tooling

Manual page for tool authors.

=item Test2::Manual::Tooling::FirstTool

Write your first tool with Test2.

=item Test2::Manual::Tooling::Formatter

How to write a custom formatter, in our

=item Test2::Manual::Tooling::Nesting

Tutorial for using other tools within your

=item Test2::Manual::Tooling::Plugin::TestExit

How to safely add pre-exit

=item Test2::Manual::Tooling::Plugin::TestingDone

Run code when the test file is

=item Test2::Manual::Tooling::Plugin::ToolCompletes

How to add behaviors that occur

=item Test2::Manual::Tooling::Plugin::ToolStarts

How to add behaviors that occur

=item Test2::Manual::Tooling::Subtest

How to implement a tool that makes use of

=item Test2::Manual::Tooling::TestBuilder

This section maps Test::Builder methods

=item Test2::Manual::Tooling::Testing

Tutorial on how to test your testing tools.

=item Test2::Mock

Module for managing mocked classes and instances.

=item Test2::Plugin

Documentation for plugins

=item Test2::Plugin::BailOnFail

Automatically bail out of testing on the first test

=item Test2::Plugin::DieOnFail

Automatically die on the first test failure.

=item Test2::Plugin::ExitSummary

Add extra diagnostics on failure at the end of the

=item Test2::Plugin::SRand

Control the random seed for more controlled test

=item Test2::Plugin::Times

Output timing data at the end of the test.

=item Test2::Plugin::UTF8

Test2 plugin to test with utf8.

=item Test2::Require

Base class and documentation for skip-unless type test

=item Test2::Require::AuthorTesting

Only run a test when the AUTHOR_TESTING

=item Test2::Require::AutomatedTesting

Only run a test when the AUTOMATED_TESTING

=item Test2::Require::EnvVar

Only run a test when a specific environment variable

=item Test2::Require::ExtendedTesting

Only run a test when the EXTENDED_TESTING

=item Test2::Require::Fork

Skip a test file unless the system supports forking

=item Test2::Require::Module

Skip tests if certain packages are not installed, or

=item Test2::Require::NonInteractiveTesting

Only run a test when the NONINTERACTIVE_TESTING

=item Test2::Require::Perl

Skip the test unless the necessary version of Perl is

=item Test2::Require::RealFork

Skip a test file unless the system supports true

=item Test2::Require::ReleaseTesting

Only run a test when the RELEASE_TESTING

=item Test2::Require::Threads

Skip a test file unless the system supports threading

=item Test2::Suite

Distribution with a rich set of tools built upon the Test2

=item Test2::Todo

TODO extension for Test2.

=item Test2::Tools

Documentation for Tools.

=item Test2::Tools::AsyncSubtest

Tools for writing async subtests.

=item Test2::Tools::Basic

Test2 implementation of the basic testing tools.

=item Test2::Tools::Class

Test2 implementation of the tools for testing classes.

=item Test2::Tools::ClassicCompare

Classic (Test::More style) comparison tools.

=item Test2::Tools::Compare

Tools for comparing deep data structures.

=item Test2::Tools::Defer

Write tests that get executed at a later time

=item Test2::Tools::Encoding

Tools for managing the encoding of L<Test2> based

=item Test2::Tools::Event

Tools for generating test events.

=item Test2::Tools::Exception

Test2 based tools for checking exceptions

=item Test2::Tools::Exports

Tools for validating exporters.

=item Test2::Tools::GenTemp

Tool for generating a populated temp directory.

=item Test2::Tools::Grab

Temporarily intercept all events without adding a scope

=item Test2::Tools::Mock

Class/Instance mocking for Test2.

=item Test2::Tools::Ref

Tools for validating references.

=item Test2::Tools::Spec

RSPEC implementation on top of Test2::Workflow

=item Test2::Tools::Subtest

Tools for writing subtests

=item Test2::Tools::Target

Alias the testing target package.

=item Test2::Tools::Tester

Tools to help you test other testing tools.

=item Test2::Tools::Tiny

Tiny set of tools for unfortunate souls who cannot use

=item Test2::Tools::Warnings

Tools to verify warnings.

=item Test2::Transition

Transition notes when upgrading to Test2

=item Test2::Util

Tools used by Test2 and friends.

=item Test2::Util::ExternalMeta

Allow third party tools to safely attach meta-data

=item Test2::Util::Facets2Legacy

Convert facet data to the legacy event API.

=item Test2::Util::Grabber

Object used to temporarily intercept all events.

=item Test2::Util::Guard

Inline copy of L<Scope::Guard>

=item Test2::Util::HashBase

Build hash based classes.

=item Test2::Util::Importer

Inline copy of L<Importer>.

=item Test2::Util::Ref

Tools for inspecting or manipulating references.

=item Test2::Util::Stash

Utilities for manipulating stashes and globs.

=item Test2::Util::Sub

Tools for inspecting and manipulating subs.

=item Test2::Util::Table

Format a header and rows into a table

=item Test2::Util::Table::LineBreak

Break up lines for use in tables.

=item Test2::Util::Times

Format timing/benchmark information.

=item Test2::Util::Trace

Legacy wrapper fro L<Test2::EventFacet::Trace>.

=item Test2::V0

0Th edition of the Test2 recommended bundle.

=item Test2::Workflow

A test workflow is a way of structuring tests using

=item Test2::Workflow::BlockBase

Base class for all workflow blocks.

=item Test2::Workflow::Build

Represents a build in progress.

=item Test2::Workflow::Runner

Runs the workflows.

=item Test2::Workflow::Task

Encapsulation of a Task

=item Test2::Workflow::Task::Action

Encapsulation of an action.

=item Test2::Workflow::Task::Group

Encapsulation of a group (describe).

=item Test::Builder

Backend for building test libraries

=item Test::Builder::Formatter

Test::Builder subclass of Test2::Formatter::TAP

=item Test::Builder::IO::Scalar

A copy of IO::Scalar for Test::Builder

=item Test::Builder::Module

Base class for test modules

=item Test::Builder::Tester

Test testsuites that have been built with

=item Test::Builder::Tester::Color

Turn on colour in Test::Builder::Tester

=item Test::Builder::TodoDiag

Test::Builder subclass of Test2::Event::Diag

=item Test::Harness

Run Perl standard test scripts with statistics

=item Test::Harness::Beyond

Beyond make test

=item Test::More

Yet another framework for writing test scripts

=item Test::Simple

Basic utilities for writing tests.

=item Test::Tester

Ease testing test modules built with Test::Builder

=item Test::Tester::Capture

Help testing test modules built with Test::Builder

=item Test::Tester::CaptureRunner

Help testing test modules built with Test::Builder

=item Test::Tutorial

A tutorial about writing really basic tests

=item Test::use::ok

Alternative to Test::More::use_ok

=item Text::Abbrev

Abbrev - create an abbreviation table from a list

=item Text::Balanced

Extract delimited text sequences from strings.

=item Text::ParseWords

Parse text into an array of tokens or array of arrays

=item Text::Tabs

Expand and unexpand tabs like unix expand(1) and unexpand(1)

=item Text::Wrap

Line wrapping to form simple paragraphs

=item Thread

Manipulate threads in Perl (for old code only)

=item Thread::Queue

Thread-safe queues

=item Thread::Semaphore

Thread-safe semaphores

=item Tie::Array

Base class for tied arrays

=item Tie::File

Access the lines of a disk file via a Perl array

=item Tie::Handle

Base class definitions for tied handles

=item Tie::Hash

Base class definitions for tied hashes

=item Tie::Hash::NamedCapture

Named regexp capture buffers

=item Tie::Memoize

Add data to hash when needed

=item Tie::RefHash

Use references as hash keys

=item Tie::Scalar

Base class definitions for tied scalars

=item Tie::StdHandle

Base class definitions for tied handles

=item Tie::SubstrHash

Fixed-table-size, fixed-key-length hashing

=item Time::HiRes

High resolution alarm, sleep, gettimeofday, interval timers

=item Time::Local

Efficiently compute time from local and GMT time

=item Time::Piece

Object Oriented time objects

=item Time::Seconds

A simple API to convert seconds to other date values

=item Time::gmtime

By-name interface to Perl's built-in gmtime() function

=item Time::localtime

By-name interface to Perl's built-in localtime() function

=item Time::tm

Internal object used by Time::gmtime and Time::localtime

=item UNIVERSAL

Base class for ALL classes (blessed references)

=item Unicode::Collate

Unicode Collation Algorithm

=item Unicode::Collate::CJK::Big5

Weighting CJK Unified Ideographs

=item Unicode::Collate::CJK::GB2312

Weighting CJK Unified Ideographs

=item Unicode::Collate::CJK::JISX0208

Weighting JIS KANJI for Unicode::Collate

=item Unicode::Collate::CJK::Korean

Weighting CJK Unified Ideographs

=item Unicode::Collate::CJK::Pinyin

Weighting CJK Unified Ideographs

