syn match rakuRxP5WriteRef   display contained "\\g\%(\d\|{\)\@=" nextgroup=rakuRxP5WriteRefId
syn match rakuRxP5WriteRefId display contained "\d\+"
syn region rakuRxP5WriteRefId
    \ matchgroup=rakuRxP5Escape
    \ start="{"
    \ end="}"
    \ contained
syn match rakuRxP5Prop       display contained "\\[pP]\%(\a\|{\)\@=" nextgroup=rakuRxP5PropId
syn match rakuRxP5PropId     display contained "\a"
syn region rakuRxP5PropId
    \ matchgroup=rakuRxP5Escape
    \ start="{"
    \ end="}"
    \ contained
syn match rakuRxP5Meta       display contained "[(|).]"
syn match rakuRxP5ParenMod   display contained "(\@1<=?\@=" nextgroup=rakuRxP5Mod,rakuRxP5ModName,rakuRxP5Code
syn match rakuRxP5Mod        display contained "?\%(<\?=\|<\?!\|[#:|]\)"
syn match rakuRxP5Mod        display contained "?-\?[impsx]\+"
syn match rakuRxP5Mod        display contained "?\%([-+]\?\d\+\|R\)"
syn match rakuRxP5Mod        display contained "?(DEFINE)"
syn match rakuRxP5Mod        display contained "?\%(&\|P[>=]\)" nextgroup=rakuRxP5ModDef
syn match rakuRxP5ModDef     display contained "\h\w*"
syn region rakuRxP5ModName
    \ matchgroup=rakuStringSpecial
    \ start="?'"
    \ end="'"
    \ contained
syn region rakuRxP5ModName
    \ matchgroup=rakuStringSpecial
    \ start="?P\?<"
    \ end=">"
    \ contained
syn region rakuRxP5Code
    \ matchgroup=rakuStringSpecial
    \ start="??\?{"
    \ end="})\@="
    \ contained
    \ contains=TOP
syn match rakuRxP5EscMeta    display contained "\\[?*.{}()[\]|\^$]"
syn match rakuRxP5Count      display contained "\%({\d\+\%(,\%(\d\+\)\?\)\?}\)\@=" nextgroup=rakuRxP5CountId
syn region rakuRxP5CountId
    \ matchgroup=rakuRxP5Escape
    \ start="{"
    \ end="}"
    \ contained
syn match rakuRxP5Verb       display contained "(\@1<=\*\%(\%(PRUNE\|SKIP\|THEN\)\%(:[^)]*\)\?\|\%(MARK\|\):[^)]*\|COMMIT\|F\%(AIL\)\?\|ACCEPT\)"
syn region rakuRxP5QuoteMeta
    \ matchgroup=rakuRxP5Escape
    \ start="\\Q"
    \ end="\\E"
    \ contained
    \ contains=@rakuVariables,rakuEscBackSlash
syn region rakuRxP5CharClass
    \ matchgroup=rakuStringSpecial
    \ start="\[\^\?"
    \ skip="\\]"
    \ end="]"
    \ contained
    \ contains=@rakuRegexP5Class
syn region rakuRxP5Posix
    \ matchgroup=rakuRxP5Escape
    \ start="\[:"
    \ end=":]"
    \ contained
syn match rakuRxP5Range      display contained "-"

" m:P5//
syn region rakuMatch
    \ matchgroup=rakuQuote
    \ start="\%(\%(::\|[$@%&][.!^:*?]\?\|\.\)\@2<!\<m\s*:P\%(erl\)\?5\s*\)\@<=/"
    \ skip="\\/"
    \ end="/"
    \ contains=@rakuRegexP5,rakuVariable,rakuVarExclam,rakuVarMatch,rakuVarNum

" m:P5!!
syn region rakuMatch
    \ matchgroup=rakuQuote
    \ start="\%(\%(::\|[$@%&][.!^:*?]\?\|\.\)\@2<!\<m\s*:P\%(erl\)\?5\s*\)\@<=!"
    \ skip="\\!"
    \ end="!"
    \ contains=@rakuRegexP5,rakuVariable,rakuVarSlash,rakuVarMatch,rakuVarNum

" m:P5$$, m:P5||, etc
syn region rakuMatch
    \ matchgroup=rakuQuote
    \ start="\%(\%(::\|[$@%&][.!^:*?]\?\|\.\)\@2<!\<m\s*:P\%(erl\)\?5\s*\)\@<=\z([\"'`|,$]\)"
    \ skip="\\\z1"
    \ end="\z1"
    \ contains=@rakuRegexP5,@rakuVariables

" m:P5 ()
syn region rakuMatch
    \ matchgroup=rakuQuote
    \ start="\%(\%(::\|[$@%&][.!^:*?]\?\|\.\)\@2<!\<m\s*:P\%(erl\)\?5\s\+\)\@<=()\@!"
    \ skip="\\)"
    \ end=")"
    \ contains=@rakuRegexP5,@rakuVariables

" m:P5[]
syn region rakuMatch
    \ matchgroup=rakuQuote
    \ start="\%(\%(::\|[$@%&][.!^:*?]\?\|\.\)\@2<!\<m\s*:P\%(erl\)\?5\s*\)\@<=[]\@!"
    \ skip="\\]"
    \ end="]"
    \ contains=@rakuRegexP5,@rakuVariables

" m:P5{}
syn region rakuMatch
    \ matchgroup=rakuQuote
    \ start="\%(\%(::\|[$@%&][.!^:*?]\?\|\.\)\@2<!\<m\s*:P\%(erl\)\?5\s*\)\@<={}\@!"
    \ skip="\\}"
    \ end="}"
    \ contains=@rakuRegexP5,rakuVariables

" m:P5<>
syn region rakuMatch
    \ matchgroup=rakuQuote
    \ start="\%(\%(::\|[$@%&][.!^:*?]\?\|\.\)\@2<!\<m\s*:P\%(erl\)\?5\s*\)\@<=<>\@!"
    \ skip="\\>"
    \ end=">"
    \ contains=@rakuRegexP5,rakuVariables

" m:P5«»
syn region rakuMatch
    \ matchgroup=rakuQuote
    \ start="\%(\%(::\|[$@%&][.!^:*?]\?\|\.\)\@2<!\<m\s*:P\%(erl\)\?5\s*\)\@<=«»\@!"
    \ skip="\\»"
    \ end="»"
    \ contains=@rakuRegexP5,rakuVariables

endif

" Comments

syn match rakuAttention display "\<\%(ACHTUNG\|ATTN\|ATTENTION\|FIXME\|NB\|TODO\|TBD\|WTF\|XXX\|NOTE\)" contained

" normal end-of-line comment
syn match rakuComment display "#.*" contains=rakuAttention

" Multiline comments. Arbitrary numbers of opening brackets are allowed,
" but we only define regions for 1 to 3
syn region rakuBracketComment
    \ start="#[`|=]("
    \ skip="([^)]*)"
    \ end=")"
    \ contains=rakuAttention,rakuBracketComment
syn region rakuBracketComment
    \ start="#[`|=]\["
    \ skip="\[[^\]]*]"
    \ end="]"
    \ contains=rakuAttention,rakuBracketComment
syn region rakuBracketComment
    \ start="#[`|=]{"
    \ skip="{[^}]*}"
    \ end="}"
    \ contains=rakuAttention,rakuBracketComment
syn region rakuBracketComment
    \ start="#[`|=]<"
    \ skip="<[^>]*>"
    \ end=">"
    \ contains=rakuAttention,rakuBracketComment
syn region rakuBracketComment
    \ start="#[`|=]«"
    \ skip="«[^»]*»"
    \ end="»"
    \ contains=rakuAttention,rakuBracketComment

" Comments with double and triple delimiters
syn region rakuBracketComment
    \ matchgroup=rakuBracketComment
    \ start="#[`|=](("
    \ skip="((\%([^)\|))\@!]\)*))"
    \ end="))"
    \ contains=rakuAttention,rakuBracketComment
syn region rakuBracketComment
    \ matchgroup=rakuBracketComment
    \ start="#[`|=]((("
    \ skip="(((\%([^)]\|)\%())\)\@!\)*)))"
    \ end=")))"
    \ contains=rakuAttention,rakuBracketComment

syn region rakuBracketComment
    \ matchgroup=rakuBracketComment
    \ start="#[`|=]\[\["
    \ skip="\[\[\%([^\]]\|]]\@!\)*]]"
    \ end="]]"
    \ contains=rakuAttention,rakuBracketComment
syn region rakuBracketComment
    \ matchgroup=rakuBracketComment
    \ start="#[`|=]\[\[\["
    \ skip="\[\[\[\%([^\]]\|]\%(]]\)\@!\)*]]]"
    \ end="]]]"
    \ contains=rakuAttention,rakuBracketComment

syn region rakuBracketComment
    \ matchgroup=rakuBracketComment
    \ start="#[`|=]{{"
    \ skip="{{\%([^}]\|}}\@!\)*}}"
    \ end="}}"
    \ contains=rakuAttention,rakuBracketComment
syn region rakuBracketComment
    \ matchgroup=rakuBracketComment
    \ start="#[`|=]{{{"
    \ skip="{{{\%([^}]\|}\%(}}\)\@!\)*}}}"
    \ end="}}}"
    \ contains=rakuAttention,rakuBracketComment

syn region rakuBracketComment
    \ matchgroup=rakuBracketComment
    \ start="#[`|=]<<"
    \ skip="<<\%([^>]\|>>\@!\)*>>"
    \ end=">>"
    \ contains=rakuAttention,rakuBracketComment
syn region rakuBracketComment
    \ matchgroup=rakuBracketComment
    \ start="#[`|=]<<<"
    \ skip="<<<\%([^>]\|>\%(>>\)\@!\)*>>>"
    \ end=">>>"
    \ contains=rakuAttention,rakuBracketComment

syn region rakuBracketComment
    \ matchgroup=rakuBracketComment
    \ start="#[`|=]««"
    \ skip="««\%([^»]\|»»\@!\)*»»"
    \ end="»»"
    \ contains=rakuAttention,rakuBracketComment
syn region rakuBracketComment
    \ matchgroup=rakuBracketComment
    \ start="#[`|=]«««"
    \ skip="«««\%([^»]\|»\%(»»\)\@!\)*»»»"
    \ end="»»»"
    \ contains=rakuAttention,rakuBracketComment

syn match rakuShebang display "\%^#!.*"

" => autoquoting
syn match rakuStringAuto   display "\.\@1<!\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)\ze\%(p5\)\@2<![RSXZ]\@1<!=>"
syn match rakuStringAuto   display "\.\@1<!\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)\ze\s\+=>"
syn match rakuStringAuto   display "\.\@1<!\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)p5\ze=>"

" Pod

" Abbreviated blocks (implicit code forbidden)
syn region rakuPodAbbrRegion
    \ matchgroup=rakuPodPrefix
    \ start="^\s*\zs=\ze\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)"
    \ end="^\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contains=rakuPodAbbrNoCodeType
    \ keepend

syn region rakuPodAbbrNoCodeType
    \ matchgroup=rakuPodType
    \ start="\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)"
    \ end="^\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contained
    \ contains=rakuPodName,rakuPodAbbrNoCode

syn match rakuPodName contained ".\+" contains=@rakuPodFormat
syn match rakuPodComment contained ".\+"

syn region rakuPodAbbrNoCode
    \ start="^"
    \ end="^\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contained
    \ contains=@rakuPodFormat

" Abbreviated blocks (everything is code)
syn region rakuPodAbbrRegion
    \ matchgroup=rakuPodPrefix
    \ start="^\s*\zs=\zecode\>"
    \ end="^\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contains=rakuPodAbbrCodeType
    \ keepend

syn region rakuPodAbbrCodeType
    \ matchgroup=rakuPodType
    \ start="\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)"
    \ end="^\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contained
    \ contains=rakuPodName,rakuPodAbbrCode

syn region rakuPodAbbrCode
    \ start="^"
    \ end="^\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contained

" Abbreviated blocks (everything is a comment)
syn region rakuPodAbbrRegion
    \ matchgroup=rakuPodPrefix
    \ start="^=\zecomment\>"
    \ end="^\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contains=rakuPodAbbrCommentType
    \ keepend

syn region rakuPodAbbrCommentType
    \ matchgroup=rakuPodType
    \ start="\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)"
    \ end="^\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contained
    \ contains=rakuPodComment,rakuPodAbbrNoCode

" Abbreviated blocks (implicit code allowed)
syn region rakuPodAbbrRegion
    \ matchgroup=rakuPodPrefix
    \ start="^=\ze\%(pod\|item\|nested\|\u\+\)\>"
    \ end="^\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contains=rakuPodAbbrType
    \ keepend

syn region rakuPodAbbrType
    \ matchgroup=rakuPodType
    \ start="\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)"
    \ end="^\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contained
    \ contains=rakuPodName,rakuPodAbbr

syn region rakuPodAbbr
    \ start="^"
    \ end="^\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contained
    \ contains=@rakuPodFormat,rakuPodImplicitCode

" Abbreviated block to end-of-file
syn region rakuPodAbbrRegion
    \ matchgroup=rakuPodPrefix
    \ start="^=\zeEND\>"
    \ end="\%$"
    \ contains=rakuPodAbbrEOFType
    \ keepend

syn region rakuPodAbbrEOFType
    \ matchgroup=rakuPodType
    \ start="\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)"
    \ end="\%$"
    \ contained
    \ contains=rakuPodName,rakuPodAbbrEOF

syn region rakuPodAbbrEOF
    \ start="^"
    \ end="\%$"
    \ contained
    \ contains=@rakuPodNestedBlocks,@rakuPodFormat,rakuPodImplicitCode

" Directives
syn region rakuPodDirectRegion
    \ matchgroup=rakuPodPrefix
    \ start="^=\%(config\|use\)\>"
    \ end="^\ze\%([^=]\|=[A-Za-z_\xC0-\xFF]\|\s*$\)"
    \ contains=rakuPodDirectArgRegion
    \ keepend

syn region rakuPodDirectArgRegion
    \ matchgroup=rakuPodType
    \ start="\S\+"
    \ end="^\ze\%([^=]\|=[A-Za-z_\xC0-\xFF]\|\s*$\)"
    \ contained
    \ contains=rakuPodDirectConfigRegion

syn region rakuPodDirectConfigRegion
    \ start=""
    \ end="^\ze\%([^=]\|=[A-Za-z_\xC0-\xFF]\|\s*$\)"
    \ contained
    \ contains=@rakuPodConfig

" =encoding is a special directive
syn region rakuPodDirectRegion
    \ matchgroup=rakuPodPrefix
    \ start="^=encoding\>"
    \ end="^\ze\%([^=]\|=[A-Za-z_\xC0-\xFF]\|\s*$\)"
    \ contains=rakuPodEncodingArgRegion
    \ keepend

syn region rakuPodEncodingArgRegion
    \ matchgroup=rakuPodName
    \ start="\S\+"
    \ end="^\ze\%([^=]\|=[A-Za-z_\xC0-\xFF]\|\s*$\)"
    \ contained

" Paragraph blocks (implicit code forbidden)
syn region rakuPodParaRegion
    \ matchgroup=rakuPodPrefix
    \ start="^\s*\zs=for\>"
    \ end="^\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contains=rakuPodParaNoCodeTypeRegion
    \ keepend extend

syn region rakuPodParaNoCodeTypeRegion
    \ matchgroup=rakuPodType
    \ start="\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)"
    \ end="^\s*\zs\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contained
    \ contains=rakuPodParaNoCode,rakuPodParaConfigRegion

syn region rakuPodParaConfigRegion
    \ start=""
    \ end="^\ze\%([^=]\|=[A-Za-z_\xC0-\xFF]\@1<!\)"
    \ contained
    \ contains=@rakuPodConfig

syn region rakuPodParaNoCode
    \ start="^[^=]"
    \ end="^\s*\zs\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contained
    \ contains=@rakuPodFormat

" Paragraph blocks (everything is code)
syn region rakuPodParaRegion
    \ matchgroup=rakuPodPrefix
    \ start="^\s*\zs=for\>\ze\s*code\>"
    \ end="^\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contains=rakuPodParaCodeTypeRegion
    \ keepend extend

syn region rakuPodParaCodeTypeRegion
    \ matchgroup=rakuPodType
    \ start="\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)"
    \ end="^\s*\zs\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contained
    \ contains=rakuPodParaCode,rakuPodParaConfigRegion

syn region rakuPodParaCode
    \ start="^[^=]"
    \ end="^\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contained

" Paragraph blocks (implicit code allowed)
syn region rakuPodParaRegion
    \ matchgroup=rakuPodPrefix
    \ start="^\s*\zs=for\>\ze\s*\%(pod\|item\|nested\|\u\+\)\>"
    \ end="^\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contains=rakuPodParaTypeRegion
    \ keepend extend

syn region rakuPodParaTypeRegion
    \ matchgroup=rakuPodType
    \ start="\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)"
    \ end="^\s*\zs\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contained
    \ contains=rakuPodPara,rakuPodParaConfigRegion

syn region rakuPodPara
    \ start="^[^=]"
    \ end="^\s*\zs\ze\%(\s*$\|=[A-Za-z_\xC0-\xFF]\)"
    \ contained
    \ contains=@rakuPodFormat,rakuPodImplicitCode

" Paragraph block to end-of-file
syn region rakuPodParaRegion
    \ matchgroup=rakuPodPrefix
    \ start="^=for\>\ze\s\+END\>"
    \ end="\%$"
    \ contains=rakuPodParaEOFTypeRegion
    \ keepend extend

syn region rakuPodParaEOFTypeRegion
    \ matchgroup=rakuPodType
    \ start="\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)"
    \ end="\%$"
    \ contained
    \ contains=rakuPodParaEOF,rakuPodParaConfigRegion

syn region rakuPodParaEOF
    \ start="^[^=]"
    \ end="\%$"
    \ contained
    \ contains=@rakuPodNestedBlocks,@rakuPodFormat,rakuPodImplicitCode

" Delimited blocks (implicit code forbidden)
syn region rakuPodDelimRegion
    \ matchgroup=rakuPodPrefix
    \ start="^\z(\s*\)\zs=begin\>"
    \ end="^\z1\zs=end\>"
    \ contains=rakuPodDelimNoCodeTypeRegion
    \ keepend extend skipwhite
    \ nextgroup=rakuPodType

syn region rakuPodDelimNoCodeTypeRegion
    \ matchgroup=rakuPodType
    \ start="\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)"
    \ end="^\s*\zs\ze=end\>"
    \ contained
    \ contains=rakuPodDelimNoCode,rakuPodDelimConfigRegion

syn region rakuPodDelimConfigRegion
    \ start=""
    \ end="^\s*\zs\ze\%([^=]\|=[A-Za-z_\xC0-\xFF]\|\s*$\)"
    \ contained
    \ contains=@rakuPodConfig

syn region rakuPodDelimNoCode
    \ start="^"
    \ end="^\s*\zs\ze=end\>"
    \ contained
    \ contains=@rakuPodNestedBlocks,@rakuPodFormat

" Delimited blocks (everything is code)
syn region rakuPodDelimRegion
    \ matchgroup=rakuPodPrefix
    \ start="^\z(\s*\)\zs=begin\>\ze\s*code\>"
    \ end="^\z1\zs=end\>"
    \ contains=rakuPodDelimCodeTypeRegion
    \ keepend extend skipwhite
    \ nextgroup=rakuPodType

syn region rakuPodDelimCodeTypeRegion
    \ matchgroup=rakuPodType
    \ start="\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)"
    \ end="^\s*\zs\ze=end\>"
    \ contained
    \ contains=rakuPodDelimCode,rakuPodDelimConfigRegion

syn region rakuPodDelimCode
    \ start="^"
    \ end="^\s*\zs\ze=end\>"
    \ contained
    \ contains=@rakuPodNestedBlocks

" Delimited blocks (implicit code allowed)
syn region rakuPodDelimRegion
    \ matchgroup=rakuPodPrefix
    \ start="^\z(\s*\)\zs=begin\>\ze\s*\%(pod\|item\|nested\|\u\+\)\>"
    \ end="^\z1\zs=end\>"
    \ contains=rakuPodDelimTypeRegion
    \ keepend extend skipwhite
    \ nextgroup=rakuPodType

syn region rakuPodDelimTypeRegion
    \ matchgroup=rakuPodType
    \ start="\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)"
    \ end="^\s*\zs\ze=end\>"
    \ contained
    \ contains=rakuPodDelim,rakuPodDelimConfigRegion

syn region rakuPodDelim
    \ start="^"
    \ end="^\s*\zs\ze=end\>"
    \ contained
    \ contains=@rakuPodNestedBlocks,@rakuPodFormat,rakuPodImplicitCode

" Delimited block to end-of-file
syn region rakuPodDelimRegion
    \ matchgroup=rakuPodPrefix
    \ start="^=begin\>\ze\s\+END\>"
    \ end="\%$"
    \ extend
    \ contains=rakuPodDelimEOFTypeRegion

syn region rakuPodDelimEOFTypeRegion
    \ matchgroup=rakuPodType
    \ start="\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)"
    \ end="\%$"
    \ contained
    \ contains=rakuPodDelimEOF,rakuPodDelimConfigRegion

syn region rakuPodDelimEOF
    \ start="^"
    \ end="\%$"
    \ contained
    \ contains=@rakuPodNestedBlocks,@rakuPodFormat,rakuPodImplicitCode

syn cluster rakuPodConfig
    \ add=rakuPodConfigOperator
    \ add=rakuPodExtraConfig
    \ add=rakuStringAuto
    \ add=rakuPodAutoQuote
    \ add=rakuStringSQ

syn region rakuPodParens
    \ start="("
    \ end=")"
    \ contained
    \ contains=rakuNumber,rakuStringSQ

syn match rakuPodAutoQuote      display contained "=>"
syn match rakuPodConfigOperator display contained ":!\?" nextgroup=rakuPodConfigOption
syn match rakuPodConfigOption   display contained "[^[:space:](<]\+" nextgroup=rakuPodParens,rakuStringAngle
syn match rakuPodExtraConfig    display contained "^="
syn match rakuPodVerticalBar    display contained "|"
syn match rakuPodColon          display contained ":"
syn match rakuPodSemicolon      display contained ";"
syn match rakuPodComma          display contained ","
syn match rakuPodImplicitCode   display contained "^\s.*"
syn match rakuPodType           display contained "\%([A-Za-z_\xC0-\xFF]\%([A-Za-z_\xC0-\xFF0-9]\|[-'][A-Za-z_\xC0-\xFF]\@=\)*\)"

" These may appear inside delimited blocks
syn cluster rakuPodNestedBlocks
    \ add=rakuPodAbbrRegion
    \ add=rakuPodDirectRegion
    \ add=rakuPodParaRegion
    \ add=rakuPodDelimRegion

" Pod formatting codes

syn cluster rakuPodFormat
    \ add=rakuPodFormatOne
    \ add=rakuPodFormatTwo
    \ add=rakuPodFormatThree
    \ add=rakuPodFormatFrench

" Balanced angles found inside formatting codes. Ensures proper nesting.

syn region rakuPodFormatAnglesOne
    \ matchgroup=rakuPodFormat
    \ start="<"
    \ skip="<[^>]*>"
    \ end=">"
    \ transparent contained
    \ contains=rakuPodFormatAnglesFrench,rakuPodFormatAnglesOne

syn region rakuPodFormatAnglesTwo
    \ matchgroup=rakuPodFormat
    \ start="<<"
    \ skip="<<[^>]*>>"
    \ end=">>"
    \ transparent contained
    \ contains=rakuPodFormatAnglesFrench,rakuPodFormatAnglesOne,rakuPodFormatAnglesTwo

syn region rakuPodFormatAnglesThree
    \ matchgroup=rakuPodFormat
    \ start="<<<"
    \ skip="<<<[^>]*>>>"
    \ end=">>>"
    \ transparent contained
    \ contains=rakuPodFormatAnglesFrench,rakuPodFormatAnglesOne,rakuPodFormatAnglesTwo,rakuPodFormatAnglesThree

syn region rakuPodFormatAnglesFrench
    \ matchgroup=rakuPodFormat
    \ start="«"
    \ skip="«[^»]*»"
    \ end="»"
    \ transparent contained
    \ contains=rakuPodFormatAnglesFrench,rakuPodFormatAnglesOne,rakuPodFormatAnglesTwo,rakuPodFormatAnglesThree

" All formatting codes

syn region rakuPodFormatOne
    \ matchgroup=rakuPodFormatCode
    \ start="\u<"
    \ skip="<[^>]*>"
    \ end=">"
    \ contained
    \ contains=rakuPodFormatAnglesOne,rakuPodFormatFrench,rakuPodFormatOne

syn region rakuPodFormatTwo
    \ matchgroup=rakuPodFormatCode
    \ start="\u<<"
    \ skip="<<[^>]*>>"
    \ end=">>"
    \ contained
    \ contains=rakuPodFormatAnglesTwo,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo

syn region rakuPodFormatThree
    \ matchgroup=rakuPodFormatCode
    \ start="\u<<<"
    \ skip="<<<[^>]*>>>"
    \ end=">>>"
    \ contained
    \ contains=rakuPodFormatAnglesThree,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodFormatThree

syn region rakuPodFormatFrench
    \ matchgroup=rakuPodFormatCode
    \ start="\u«"
    \ skip="«[^»]*»"
    \ end="»"
    \ contained
    \ contains=rakuPodFormatAnglesFrench,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodFormatThree

" C<> and V<> don't allow nested formatting formatting codes

syn region rakuPodFormatOne
    \ matchgroup=rakuPodFormatCode
    \ start="[CV]<"
    \ skip="<[^>]*>"
    \ end=">"
    \ contained
    \ contains=rakuPodFormatAnglesOne

syn region rakuPodFormatTwo
    \ matchgroup=rakuPodFormatCode
    \ start="[CV]<<"
    \ skip="<<[^>]*>>"
    \ end=">>"
    \ contained
    \ contains=rakuPodFormatAnglesTwo

syn region rakuPodFormatThree
    \ matchgroup=rakuPodFormatCode
    \ start="[CV]<<<"
    \ skip="<<<[^>]*>>>"
    \ end=">>>"
    \ contained
    \ contains=rakuPodFormatAnglesThree

syn region rakuPodFormatFrench
    \ matchgroup=rakuPodFormatCode
    \ start="[CV]«"
    \ skip="«[^»]*»"
    \ end="»"
    \ contained
    \ contains=rakuPodFormatAnglesFrench

" L<> can have a "|" separator

syn region rakuPodFormatOne
    \ matchgroup=rakuPodFormatCode
    \ start="L<"
    \ skip="<[^>]*>"
    \ end=">"
    \ contained
    \ contains=rakuPodFormatAnglesOne,rakuPodFormatFrench,rakuPodFormatOne,rakuPodVerticalBar

syn region rakuPodFormatTwo
    \ matchgroup=rakuPodFormatCode
    \ start="L<<"
    \ skip="<<[^>]*>>"
    \ end=">>"
    \ contained
    \ contains=rakuPodFormatAnglesTwo,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodVerticalBar

syn region rakuPodFormatThree
    \ matchgroup=rakuPodFormatCode
    \ start="L<<<"
    \ skip="<<<[^>]*>>>"
    \ end=">>>"
    \ contained
    \ contains=rakuPodFormatAnglesThree,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodFormatThree,rakuPodVerticalBar

syn region rakuPodFormatFrench
    \ matchgroup=rakuPodFormatCode
    \ start="L«"
    \ skip="«[^»]*»"
    \ end="»"
    \ contained
    \ contains=rakuPodFormatAnglesFrench,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodFormatThree,rakuPodVerticalBar

" E<> can have a ";" separator

syn region rakuPodFormatOne
    \ matchgroup=rakuPodFormatCode
    \ start="E<"
    \ skip="<[^>]*>"
    \ end=">"
    \ contained
    \ contains=rakuPodFormatAnglesOne,rakuPodFormatFrench,rakuPodFormatOne,rakuPodSemiColon

syn region rakuPodFormatTwo
    \ matchgroup=rakuPodFormatCode
    \ start="E<<"
    \ skip="<<[^>]*>>"
    \ end=">>"
    \ contained
    \ contains=rakuPodFormatAnglesTwo,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodSemiColon

syn region rakuPodFormatThree
    \ matchgroup=rakuPodFormatCode
    \ start="E<<<"
    \ skip="<<<[^>]*>>>"
    \ end=">>>"
    \ contained
    \ contains=rakuPodFormatAnglesThree,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodFormatThree,rakuPodSemiColon

syn region rakuPodFormatFrench
    \ matchgroup=rakuPodFormatCode
    \ start="E«"
    \ skip="«[^»]*»"
    \ end="»"
    \ contained
    \ contains=rakuPodFormatAnglesFrench,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodFormatThree,rakuPodSemiColon

" M<> can have a ":" separator

syn region rakuPodFormatOne
    \ matchgroup=rakuPodFormatCode
    \ start="M<"
    \ skip="<[^>]*>"
    \ end=">"
    \ contained
    \ contains=rakuPodFormatAnglesOne,rakuPodFormatFrench,rakuPodFormatOne,rakuPodColon

syn region rakuPodFormatTwo
    \ matchgroup=rakuPodFormatCode
    \ start="M<<"
    \ skip="<<[^>]*>>"
    \ end=">>"
    \ contained
    \ contains=rakuPodFormatAnglesTwo,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodColon

syn region rakuPodFormatThree
    \ matchgroup=rakuPodFormatCode
    \ start="M<<<"
    \ skip="<<<[^>]*>>>"
    \ end=">>>"
    \ contained
    \ contains=rakuPodFormatAnglesThree,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodFormatThree,rakuPodColon

syn region rakuPodFormatFrench
    \ matchgroup=rakuPodFormatCode
    \ start="M«"
    \ skip="«[^»]*»"
    \ end="»"
    \ contained
    \ contains=rakuPodFormatAnglesFrench,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodFormatThree,rakuPodColon

" D<> can have "|" and ";" separators

syn region rakuPodFormatOne
    \ matchgroup=rakuPodFormatCode
    \ start="D<"
    \ skip="<[^>]*>"
    \ end=">"
    \ contained
    \ contains=rakuPodFormatAnglesOne,rakuPodFormatFrench,rakuPodFormatOne,rakuPodVerticalBar,rakuPodSemiColon

syn region rakuPodFormatTwo
    \ matchgroup=rakuPodFormatCode
    \ start="D<<"
    \ skip="<<[^>]*>>"
    \ end=">>"
    \ contained
    \ contains=rakuPodFormatAngleTwo,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodVerticalBar,rakuPodSemiColon

syn region rakuPodFormatThree
    \ matchgroup=rakuPodFormatCode
    \ start="D<<<"
    \ skip="<<<[^>]*>>>"
    \ end=">>>"
    \ contained
    \ contains=rakuPodFormatAnglesThree,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodFormatThree,rakuPodVerticalBar,rakuPodSemiColon

syn region rakuPodFormatFrench
    \ matchgroup=rakuPodFormatCode
    \ start="D«"
    \ skip="«[^»]*»"
    \ end="»"
    \ contained
    \ contains=rakuPodFormatAnglesFrench,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodFormatThree,rakuPodVerticalBar,rakuPodSemiColon

" X<> can have "|", "," and ";" separators

syn region rakuPodFormatOne
    \ matchgroup=rakuPodFormatCode
    \ start="X<"
    \ skip="<[^>]*>"
    \ end=">"
    \ contained
    \ contains=rakuPodFormatAnglesOne,rakuPodFormatFrench,rakuPodFormatOne,rakuPodVerticalBar,rakuPodSemiColon,rakuPodComma

syn region rakuPodFormatTwo
    \ matchgroup=rakuPodFormatCode
    \ start="X<<"
    \ skip="<<[^>]*>>"
    \ end=">>"
    \ contained
    \ contains=rakuPodFormatAnglesTwo,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodVerticalBar,rakuPodSemiColon,rakuPodComma

syn region rakuPodFormatThree
    \ matchgroup=rakuPodFormatCode
    \ start="X<<<"
    \ skip="<<<[^>]*>>>"
    \ end=">>>"
    \ contained
    \ contains=rakuPodFormatAnglesThree,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodFormatThree,rakuPodVerticalBar,rakuPodSemiColon,rakuPodComma

syn region rakuPodFormatFrench
    \ matchgroup=rakuPodFormatCode
    \ start="X«"
    \ skip="«[^»]*»"
    \ end="»"
    \ contained
    \ contains=rakuPodFormatAnglesFrench,rakuPodFormatFrench,rakuPodFormatOne,rakuPodFormatTwo,rakuPodFormatThree,rakuPodVerticalBar,rakuPodSemiColon,rakuPodComma

" Define the default highlighting.
" For version 5.7 and earlier: only when not done already
" For version 5.8 and later: only when an item doesn't have highlighting yet
if version >= 508 || !exists("did_raku_syntax_inits")
    if version < 508
        let did_raku_syntax_inits = 1
        command -nargs=+ HiLink hi link <args>
    else
        command -nargs=+ HiLink hi def link <args>
    endif

    HiLink rakuEscOctOld        rakuError
    HiLink rakuPackageTwigil    rakuTwigil
    HiLink rakuStringAngle      rakuString
    HiLink rakuStringAngleFixed rakuString
    HiLink rakuStringFrench     rakuString
    HiLink rakuStringAngles     rakuString
    HiLink rakuStringSQ         rakuString
    HiLink rakuStringDQ         rakuString
    HiLink rakuStringQ          rakuString
    HiLink rakuStringQ_q        rakuString
    HiLink rakuStringQ_qww      rakuString
    HiLink rakuStringQ_qq       rakuString
    HiLink rakuStringQ_to       rakuString
    HiLink rakuStringQ_qto      rakuString
    HiLink rakuStringQ_qqto     rakuString
    HiLink rakuRxStringSQ       rakuString
    HiLink rakuRxStringDQ       rakuString
    HiLink rakuReplacement      rakuString
    HiLink rakuReplCurly        rakuString
    HiLink rakuReplAngle        rakuString
    HiLink rakuReplFrench       rakuString
    HiLink rakuReplBracket      rakuString
    HiLink rakuReplParen        rakuString
    HiLink rakuTransliteration  rakuString
    HiLink rakuTransRepl        rakuString
    HiLink rakuTransReplCurly   rakuString
    HiLink rakuTransReplAngle   rakuString
    HiLink rakuTransReplFrench  rakuString
    HiLink rakuTransReplBracket rakuString
    HiLink rakuTransReplParen   rakuString
    HiLink rakuStringAuto       rakuString
    HiLink rakuKey              rakuString
    HiLink rakuMatch            rakuString
    HiLink rakuSubstitution     rakuString
    HiLink rakuMatchBare        rakuString
    HiLink rakuRegexBlock       rakuString
    HiLink rakuRxP5CharClass    rakuString
    HiLink rakuRxP5QuoteMeta    rakuString
    HiLink rakuRxCharClass      rakuString
    HiLink rakuRxQuoteWords     rakuString
    HiLink rakuReduceOp         rakuOperator
    HiLink rakuSetOp            rakuOperator
    HiLink rakuRSXZOp           rakuOperator
    HiLink rakuHyperOp          rakuOperator
    HiLink rakuPostHyperOp      rakuOperator
    HiLink rakuQuoteQ           rakuQuote
    HiLink rakuQuoteQ_q         rakuQuote
    HiLink rakuQuoteQ_qww       rakuQuote
    HiLink rakuQuoteQ_qq        rakuQuote
    HiLink rakuQuoteQ_to        rakuQuote
    HiLink rakuQuoteQ_qto       rakuQuote
    HiLink rakuQuoteQ_qqto      rakuQuote
    HiLink rakuQuoteQ_PIR       rakuQuote
    HiLink rakuMatchStart_m     rakuQuote
    HiLink rakuMatchStart_s     rakuQuote
    HiLink rakuMatchStart_tr    rakuQuote
    HiLink rakuBareSigil        rakuVariable
    HiLink rakuRxRange          rakuStringSpecial
    HiLink rakuRxAnchor         rakuStringSpecial
    HiLink rakuRxBoundary       rakuStringSpecial
    HiLink rakuRxP5Anchor       rakuStringSpecial
    HiLink rakuCodePoint        rakuStringSpecial
    HiLink rakuRxMeta           rakuStringSpecial
    HiLink rakuRxP5Range        rakuStringSpecial
    HiLink rakuRxP5CPId         rakuStringSpecial
    HiLink rakuRxP5Posix        rakuStringSpecial
    HiLink rakuRxP5Mod          rakuStringSpecial
    HiLink rakuRxP5HexSeq       rakuStringSpecial
    HiLink rakuRxP5OctSeq       rakuStringSpecial
    HiLink rakuRxP5WriteRefId   rakuStringSpecial
    HiLink rakuHexSequence      rakuStringSpecial
    HiLink rakuOctSequence      rakuStringSpecial
    HiLink rakuRxP5Named        rakuStringSpecial
    HiLink rakuRxP5PropId       rakuStringSpecial
    HiLink rakuRxP5Quantifier   rakuStringSpecial
    HiLink rakuRxP5CountId      rakuStringSpecial
    HiLink rakuRxP5Verb         rakuStringSpecial
    HiLink rakuRxAssertGroup    rakuStringSpecial2
    HiLink rakuEscape           rakuStringSpecial2
    HiLink rakuEscNull          rakuStringSpecial2
    HiLink rakuEscHash          rakuStringSpecial2
    HiLink rakuEscQQ            rakuStringSpecial2
    HiLink rakuEscQuote         rakuStringSpecial2
    HiLink rakuEscDoubleQuote   rakuStringSpecial2
    HiLink rakuEscBackTick      rakuStringSpecial2
    HiLink rakuEscForwardSlash  rakuStringSpecial2
    HiLink rakuEscVerticalBar   rakuStringSpecial2
    HiLink rakuEscExclamation   rakuStringSpecial2
    HiLink rakuEscDollar        rakuStringSpecial2
    HiLink rakuEscOpenCurly     rakuStringSpecial2
    HiLink rakuEscCloseCurly    rakuStringSpecial2
    HiLink rakuEscCloseBracket  rakuStringSpecial2
    HiLink rakuEscCloseAngle    rakuStringSpecial2
    HiLink rakuEscCloseFrench   rakuStringSpecial2
    HiLink rakuEscBackSlash     rakuStringSpecial2
    HiLink rakuEscCodePoint     rakuStringSpecial2
    HiLink rakuEscOct           rakuStringSpecial2
    HiLink rakuEscHex           rakuStringSpecial2
    HiLink rakuRxEscape         rakuStringSpecial2
    HiLink rakuRxCapture        rakuStringSpecial2
    HiLink rakuRxAlternation    rakuStringSpecial2
    HiLink rakuRxP5             rakuStringSpecial2
    HiLink rakuRxP5ReadRef      rakuStringSpecial2
    HiLink rakuRxP5Oct          rakuStringSpecial2
    HiLink rakuRxP5Hex          rakuStringSpecial2
    HiLink rakuRxP5EscMeta      rakuStringSpecial2
    HiLink rakuRxP5Meta         rakuStringSpecial2
    HiLink rakuRxP5Escape       rakuStringSpecial2
    HiLink rakuRxP5CodePoint    rakuStringSpecial2
    HiLink rakuRxP5WriteRef     rakuStringSpecial2
    HiLink rakuRxP5Prop         rakuStringSpecial2

    HiLink rakuProperty       Tag
    HiLink rakuAttention      Todo
    HiLink rakuType           Type
    HiLink rakuError          Error
    HiLink rakuBlockLabel     Label
    HiLink rakuNormal         Normal
