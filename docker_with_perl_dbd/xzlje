=item ExtUtils::MM_Win95

Method to customize MakeMaker for Win9X

=item ExtUtils::MY

ExtUtils::MakeMaker subclass for customization

=item ExtUtils::MakeMaker

Create a module Makefile

=item ExtUtils::MakeMaker::Config

Wrapper around Config.pm

=item ExtUtils::MakeMaker::FAQ

Frequently Asked Questions About MakeMaker

=item ExtUtils::MakeMaker::Locale

Bundled Encode::Locale

=item ExtUtils::MakeMaker::Tutorial

Writing a module with MakeMaker

=item ExtUtils::Manifest

Utilities to write and check a MANIFEST file

=item ExtUtils::Miniperl

Write the C code for miniperlmain.c and perlmain.c

=item ExtUtils::Mkbootstrap

Make a bootstrap file for use by DynaLoader

=item ExtUtils::Mksymlists

Write linker options files for dynamic extension

=item ExtUtils::PL2Bat

Batch file creation to run perl scripts on Windows

=item ExtUtils::Packlist

Manage .packlist files

=item ExtUtils::ParseXS

Converts Perl XS code into C code

=item ExtUtils::ParseXS::Constants

Initialization values for some globals

=item ExtUtils::ParseXS::Eval

Clean package to evaluate code in

=item ExtUtils::ParseXS::Utilities

Subroutines used with ExtUtils::ParseXS

=item ExtUtils::Typemaps

Read/Write/Modify Perl/XS typemap files

=item ExtUtils::Typemaps::Cmd

Quick commands for handling typemaps

=item ExtUtils::Typemaps::InputMap

Entry in the INPUT section of a typemap

=item ExtUtils::Typemaps::OutputMap

Entry in the OUTPUT section of a typemap

=item ExtUtils::Typemaps::Type

Entry in the TYPEMAP section of a typemap

=item ExtUtils::XSSymSet

Keep sets of symbol names palatable to the VMS linker

=item ExtUtils::testlib

Add blib/* directories to @INC

=item Fatal

Replace functions with equivalents which succeed or die

=item Fcntl

Various flag constants and helper functions from C's fcntl.h

=item File::Basename

Parse file paths into directory, filename and suffix.

=item File::Compare

Compare files or filehandles

=item File::Copy

Copy files or filehandles

=item File::DosGlob

DOS like globbing and then some

=item File::Fetch

A generic file fetching mechanism

=item File::Find

Traverse a directory tree.

=item File::Glob

Perl extension for BSD glob routine

=item File::GlobMapper

Extend File Glob to Allow Input and Output Files

=item File::Path

Create or remove directory trees

=item File::Spec

Portably perform operations on file names

=item File::Spec::AmigaOS

File::Spec for AmigaOS

=item File::Spec::Cygwin

Methods for Cygwin file specs

=item File::Spec::Epoc

Methods for Epoc file specs

=item File::Spec::Functions

Portably perform operations on file names

=item File::Spec::Mac

File::Spec for Mac OS (Classic)

=item File::Spec::OS2

Methods for OS/2 file specs

=item File::Spec::Unix

File::Spec for Unix, base for other File::Spec modules

=item File::Spec::VMS

Methods for VMS file specs

=item File::Spec::Win32

Methods for Win32 file specs

=item File::Temp

Return name and handle of a temporary file safely

=item File::stat

By-name interface to Perl's built-in stat() functions

=item FileCache

Keep more files open than the system permits

=item FileHandle

Supply object methods for filehandles

=item Filter::Simple

Simplified source filtering

=item Filter::Util::Call

Perl Source Filter Utility Module

=item FindBin

Locate directory of original Perl script

=item GDBM_File

Perl5 access to the gdbm library.

=item Getopt::Long

Extended processing of command line options

=item Getopt::Long::Parser

Getopt::Long object oriented interface

=item Getopt::Std

Process single-character switches with switch clustering

=item HTTP::Tiny

A small, simple, correct HTTP/1.1 client

=item Hash::Util

A selection of general-utility hash subroutines

=item Hash::Util::FieldHash

Support for Inside-Out Classes

=item I18N::Collate

Compare 8-bit scalar data according to the current locale

=item I18N::LangTags

Functions for dealing with RFC3066-style language tags

=item I18N::LangTags::Detect

Detect the user's language preferences

=item I18N::LangTags::List

Tags and names for human languages

=item I18N::Langinfo

Query locale information

=item IO

Load various IO modules

=item IO::Compress::Base

Base Class for IO::Compress modules

=item IO::Compress::Bzip2

Write bzip2 files/buffers

=item IO::Compress::Deflate

Write RFC 1950 files/buffers

=item IO::Compress::FAQ

Frequently Asked Questions about IO::Compress

=item IO::Compress::Gzip

Write RFC 1952 files/buffers

=item IO::Compress::RawDeflate

Write RFC 1951 files/buffers

=item IO::Compress::Zip

Write zip files/buffers

=item IO::Dir

Supply object methods for directory handles

=item IO::File

Supply object methods for filehandles

=item IO::Handle

Supply object methods for I/O handles

=item IO::Pipe

Supply object methods for pipes

=item IO::Poll

Object interface to system poll call

=item IO::Seekable

Supply seek based methods for I/O objects

=item IO::Select

OO interface to the C<select> system call

=item IO::Socket

Object interface to socket communications

=item IO::Socket::INET

Object interface for AF_INET domain sockets

=item IO::Socket::UNIX

Object interface for AF_UNIX domain sockets

=item IO::Uncompress::AnyInflate

Uncompress zlib-based (zip, gzip) file/buffer

=item IO::Uncompress::AnyUncompress

Uncompress gzip, zip, bzip2, zstd, xz, lzma, lzip, lzf or lzop file/buffer

=item IO::Uncompress::Base

Base Class for IO::Uncompress modules

=item IO::Uncompress::Bunzip2

Read bzip2 files/buffers

=item IO::Uncompress::Gunzip

Read RFC 1952 files/buffers

=item IO::Uncompress::Inflate

Read RFC 1950 files/buffers

=item IO::Uncompress::RawInflate

Read RFC 1951 files/buffers

=item IO::Uncompress::Unzip

Read zip files/buffers

=item IO::Zlib

IO:: style interface to L<Compress::Zlib>

=item IPC::Cmd

Finding and running system commands made easy

=item IPC::Msg

SysV Msg IPC object class

=item IPC::Open2

Open a process for both reading and writing using open2()

=item IPC::Open3

Open a process for reading, writing, and error handling using open3()

=item IPC::Semaphore

SysV Semaphore IPC object class

=item IPC::SharedMem

SysV Shared Memory IPC object class

=item IPC::SysV

System V IPC constants and system calls

=item Internals

Reserved special namespace for internals related functions

=item JSON::PP

JSON::XS compatible pure-Perl module.

=item JSON::PP::Boolean

Dummy module providing JSON::PP::Boolean

=item List::Util

A selection of general-utility list subroutines

=item List::Util::XS

Indicate if List::Util was compiled with a C compiler

=item Locale::Maketext

Framework for localization

=item Locale::Maketext::Cookbook

Recipes for using Locale::Maketext

=item Locale::Maketext::Guts

Deprecated module to load Locale::Maketext utf8 code

=item Locale::Maketext::GutsLoader

Deprecated module to load Locale::Maketext utf8 code

=item Locale::Maketext::Simple

Simple interface to Locale::Maketext::Lexicon

=item Locale::Maketext::TPJ13

Article about software localization

=item MIME::Base64

Encoding and decoding of base64 strings

=item MIME::QuotedPrint

Encoding and decoding of quoted-printable strings

=item Math::BigFloat

Arbitrary size floating point math package

=item Math::BigInt

Arbitrary size integer math package

=item Math::BigInt::Calc

Pure Perl module to support Math::BigInt

=item Math::BigInt::FastCalc

Math::BigInt::Calc with some XS for more speed

=item Math::BigInt::Lib

Virtual parent class for Math::BigInt libraries

=item Math::BigRat

Arbitrary size rational number math package

=item Math::Complex

Complex numbers and associated mathematical functions

=item Math::Trig

Trigonometric functions

=item Memoize

Make functions faster by trading space for time

=item Memoize::AnyDBM_File

Glue to provide EXISTS for AnyDBM_File for Storable use

=item Memoize::Expire

Plug-in module for automatic expiration of memoized values

=item Memoize::NDBM_File

Glue to provide EXISTS for NDBM_File for Storable use

=item Memoize::SDBM_File

DEPRECATED compability shim

=item Memoize::Storable

Store Memoized data in Storable database

=item Module::CoreList

What modules shipped with versions of perl

=item Module::CoreList::Utils

What utilities shipped with versions of perl

=item Module::Load

Runtime require of both modules and files

=item Module::Load::Conditional

Looking up module information / loading at runtime

=item Module::Loaded

Mark modules as loaded or unloaded

=item Module::Metadata

Gather package and POD information from perl module files

=item NDBM_File

Tied access to ndbm files

=item NEXT

Provide a pseudo-class NEXT (et al) that allows method redispatch

=item Net::Cmd

Network Command class (as used by FTP, SMTP etc)

=item Net::Config

Local configuration data for libnet

=item Net::Domain

Attempt to evaluate the current host's internet name and domain

=item Net::FTP

FTP Client class

=item Net::FTP::dataconn

FTP Client data connection class

=item Net::NNTP

NNTP Client class

=item Net::Netrc

OO interface to users netrc file

=item Net::POP3

Post Office Protocol 3 Client class (RFC1939)

=item Net::Ping

Check a remote host for reachability

=item Net::SMTP

Simple Mail Transfer Protocol Client

=item Net::Time

Time and daytime network client interface

=item Net::hostent

By-name interface to Perl's built-in gethost*() functions

=item Net::libnetFAQ

Libnet Frequently Asked Questions

=item Net::netent

By-name interface to Perl's built-in getnet*() functions

=item Net::protoent

By-name interface to Perl's built-in getproto*() functions

=item Net::servent

By-name interface to Perl's built-in getserv*() functions

=item O

Generic interface to Perl Compiler backends

=item ODBM_File

Tied access to odbm files

=item Opcode

Disable named opcodes when compiling perl code

=item POSIX

Perl interface to IEEE Std 1003.1

=item Params::Check

A generic input parsing/checking mechanism.

=item Parse::CPAN::Meta

Parse META.yml and META.json CPAN metadata files

=item Perl::OSType

Map Perl operating system names to generic types

=item PerlIO

On demand loader for PerlIO layers and root of PerlIO::* name space

=item PerlIO::encoding

Encoding layer

=item PerlIO::mmap

Memory mapped IO

=item PerlIO::scalar

In-memory IO, scalar IO

=item PerlIO::via

Helper class for PerlIO layers implemented in perl

=item PerlIO::via::QuotedPrint

PerlIO layer for quoted-printable strings

=item Pod::Checker

Check pod documents for syntax errors

=item Pod::Escapes

For resolving Pod EE<lt>...E<gt> sequences

=item Pod::Functions

Group Perl's functions a la perlfunc.pod

=item Pod::Html

Module to convert pod files to HTML

=item Pod::Html::Util

Helper functions for Pod-Html

=item Pod::Man

Convert POD data to formatted *roff input

=item Pod::ParseLink

Parse an LE<lt>E<gt> formatting code in POD text

=item Pod::Perldoc

Look up Perl documentation in Pod format.

=item Pod::Perldoc::BaseTo

Base for Pod::Perldoc formatters

=item Pod::Perldoc::GetOptsOO

Customized option parser for Pod::Perldoc

=item Pod::Perldoc::ToANSI

Render Pod with ANSI color escapes 

=item Pod::Perldoc::ToChecker

Let Perldoc check Pod for errors

=item Pod::Perldoc::ToMan

Let Perldoc render Pod as man pages

=item Pod::Perldoc::ToNroff

Let Perldoc convert Pod to nroff

=item Pod::Perldoc::ToPod

Let Perldoc render Pod as ... Pod!

=item Pod::Perldoc::ToRtf

Let Perldoc render Pod as RTF

=item Pod::Perldoc::ToTerm

Render Pod with terminal escapes

=item Pod::Perldoc::ToText

Let Perldoc render Pod as plaintext

=item Pod::Perldoc::ToTk

Let Perldoc use Tk::Pod to render Pod

=item Pod::Perldoc::ToXml

Let Perldoc render Pod as XML

=item Pod::Simple

Framework for parsing Pod

=item Pod::Simple::Checker

Check the Pod syntax of a document

=item Pod::Simple::Debug

Put Pod::Simple into trace/debug mode

=item Pod::Simple::DumpAsText

Dump Pod-parsing events as text

=item Pod::Simple::DumpAsXML

Turn Pod into XML

=item Pod::Simple::HTML

Convert Pod to HTML

=item Pod::Simple::HTMLBatch

Convert several Pod files to several HTML files

=item Pod::Simple::JustPod

Just the Pod, the whole Pod, and nothing but the Pod

=item Pod::Simple::LinkSection

Represent "section" attributes of L codes

=item Pod::Simple::Methody

Turn Pod::Simple events into method calls

=item Pod::Simple::PullParser

A pull-parser interface to parsing Pod

=item Pod::Simple::PullParserEndToken

End-tokens from Pod::Simple::PullParser

=item Pod::Simple::PullParserStartToken

Start-tokens from Pod::Simple::PullParser

=item Pod::Simple::PullParserTextToken

Text-tokens from Pod::Simple::PullParser

=item Pod::Simple::PullParserToken

Tokens from Pod::Simple::PullParser

=item Pod::Simple::RTF

Format Pod as RTF

=item Pod::Simple::Search

Find POD documents in directory trees

=item Pod::Simple::SimpleTree

Parse Pod into a simple parse tree

=item Pod::Simple::Subclassing

Write a formatter as a Pod::Simple subclass

=item Pod::Simple::Text

Format Pod as plaintext

=item Pod::Simple::TextContent

Get the text content of Pod

=item Pod::Simple::XHTML

Format Pod as validating XHTML

=item Pod::Simple::XMLOutStream

Turn Pod into XML

=item Pod::Text

Convert POD data to formatted text

=item Pod::Text::Color

Convert POD data to formatted color ASCII text

=item Pod::Text::Overstrike

Convert POD data to formatted overstrike text

=item Pod::Text::Termcap

Convert POD data to ASCII text with format escapes

=item Pod::Usage

Extracts POD documentation and shows usage information

=item SDBM_File

Tied access to sdbm files

=item Safe

Compile and execute code in restricted compartments

=item Scalar::Util

A selection of general-utility scalar subroutines

=item Search::Dict

Look - search for key in dictionary file

=item SelectSaver

Save and restore selected file handle

=item SelfLoader

Load functions only on demand

=item Storable

Persistence for Perl data structures

=item Sub::Util

A selection of utility subroutines for subs and CODE references

=item Symbol

Manipulate Perl symbols and their names

=item Sys::Hostname

Try every conceivable way to get hostname

=item Sys::Syslog

Perl interface to the UNIX syslog(3) calls

=item Sys::Syslog::Win32

Win32 support for Sys::Syslog

=item TAP::Base

Base class that provides common functionality to L<TAP::Parser>

=item TAP::Formatter::Base

Base class for harness output delegates

=item TAP::Formatter::Color

Run Perl test scripts with color

=item TAP::Formatter::Console

Harness output delegate for default console output

=item TAP::Formatter::Console::ParallelSession

Harness output delegate for parallel console output

=item TAP::Formatter::Console::Session

Harness output delegate for default console output

=item TAP::Formatter::File

Harness output delegate for file output

=item TAP::Formatter::File::Session

Harness output delegate for file output

=item TAP::Formatter::Session

Abstract base class for harness output delegate 

=item TAP::Harness

Run test scripts with statistics

=item TAP::Harness::Env

Parsing harness related environmental variables where appropriate

=item TAP::Object

Base class that provides common functionality to all C<TAP::*> modules

=item TAP::Parser

Parse L<TAP|Test::Harness::TAP> output

=item TAP::Parser::Aggregator

Aggregate TAP::Parser results

=item TAP::Parser::Grammar

A grammar for the Test Anything Protocol.

=item TAP::Parser::Iterator

Base class for TAP source iterators

=item TAP::Parser::Iterator::Array

Iterator for array-based TAP sources

=item TAP::Parser::Iterator::Process

Iterator for process-based TAP sources

=item TAP::Parser::Iterator::Stream

Iterator for filehandle-based TAP sources

=item TAP::Parser::IteratorFactory

Figures out which SourceHandler objects to use for a given Source

=item TAP::Parser::Multiplexer

Multiplex multiple TAP::Parsers

=item TAP::Parser::Result

Base class for TAP::Parser output objects

=item TAP::Parser::Result::Bailout

Bailout result token.

=item TAP::Parser::Result::Comment

Comment result token.

=item TAP::Parser::Result::Plan

Plan result token.

=item TAP::Parser::Result::Pragma

TAP pragma token.

=item TAP::Parser::Result::Test

Test result token.

=item TAP::Parser::Result::Unknown

Unknown result token.

