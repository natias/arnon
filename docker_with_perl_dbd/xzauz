	0x11943,
	0x11944,
	0x11D42,
	0x11D43,
	0x1E94A,
	0x1E94B
};

static const UV UNI_CCC__8_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x3099,
	0x309B
};

static const UV UNI_CCC__84_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xC55,
	0xC56
};

static const UV UNI_CCC__9_invlist[] = {  /* for all charsets */
	111,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x94D,
	0x94E,
	0x9CD,
	0x9CE,
	0xA4D,
	0xA4E,
	0xACD,
	0xACE,
	0xB4D,
	0xB4E,
	0xBCD,
	0xBCE,
	0xC4D,
	0xC4E,
	0xCCD,
	0xCCE,
	0xD3B,
	0xD3D,
	0xD4D,
	0xD4E,
	0xDCA,
	0xDCB,
	0xE3A,
	0xE3B,
	0xEBA,
	0xEBB,
	0xF84,
	0xF85,
	0x1039,
	0x103B,
	0x1714,
	0x1716,
	0x1734,
	0x1735,
	0x17D2,
	0x17D3,
	0x1A60,
	0x1A61,
	0x1B44,
	0x1B45,
	0x1BAA,
	0x1BAC,
	0x1BF2,
	0x1BF4,
	0x2D7F,
	0x2D80,
	0xA806,
	0xA807,
	0xA82C,
	0xA82D,
	0xA8C4,
	0xA8C5,
	0xA953,
	0xA954,
	0xA9C0,
	0xA9C1,
	0xAAF6,
	0xAAF7,
	0xABED,
	0xABEE,
	0x10A3F,
	0x10A40,
	0x11046,
	0x11047,
	0x11070,
	0x11071,
	0x1107F,
	0x11080,
	0x110B9,
	0x110BA,
	0x11133,
	0x11135,
	0x111C0,
	0x111C1,
	0x11235,
	0x11236,
	0x112EA,
	0x112EB,
	0x1134D,
	0x1134E,
	0x11442,
	0x11443,
	0x114C2,
	0x114C3,
	0x115BF,
	0x115C0,
	0x1163F,
	0x11640,
	0x116B6,
	0x116B7,
	0x1172B,
	0x1172C,
	0x11839,
	0x1183A,
	0x1193D,
	0x1193F,
	0x119E0,
	0x119E1,
	0x11A34,
	0x11A35,
	0x11A47,
	0x11A48,
	0x11A99,
	0x11A9A,
	0x11C3F,
	0x11C40,
	0x11D44,
	0x11D46,
	0x11D97,
	0x11D98
};

static const UV UNI_CCC__91_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xC56,
	0xC57
};

static const UV UNI_CCC__A_invlist[] = {  /* for all charsets */
	255,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x300,
	0x315,
	0x33D,
	0x345,
	0x346,
	0x347,
	0x34A,
	0x34D,
	0x350,
	0x353,
	0x357,
	0x358,
	0x35B,
	0x35C,
	0x363,
	0x370,
	0x483,
	0x488,
	0x592,
	0x596,
	0x597,
	0x59A,
	0x59C,
	0x5A2,
	0x5A8,
	0x5AA,
	0x5AB,
	0x5AD,
	0x5AF,
	0x5B0,
	0x5C4,
	0x5C5,
	0x610,
	0x618,
	0x653,
	0x655,
	0x657,
	0x65C,
	0x65D,
	0x65F,
	0x6D6,
	0x6DD,
	0x6DF,
	0x6E3,
	0x6E4,
	0x6E5,
	0x6E7,
	0x6E9,
	0x6EB,
	0x6ED,
	0x730,
	0x731,
	0x732,
	0x734,
	0x735,
	0x737,
	0x73A,
	0x73B,
	0x73D,
	0x73E,
	0x73F,
	0x742,
	0x743,
	0x744,
	0x745,
	0x746,
	0x747,
	0x748,
	0x749,
	0x74B,
	0x7EB,
	0x7F2,
	0x7F3,
	0x7F4,
	0x816,
	0x81A,
	0x81B,
	0x824,
	0x825,
	0x828,
	0x829,
	0x82E,
	0x898,
	0x899,
	0x89C,
	0x8A0,
	0x8CA,
	0x8CF,
	0x8D4,
	0x8E2,
	0x8E4,
	0x8E6,
	0x8E7,
	0x8E9,
	0x8EA,
	0x8ED,
	0x8F3,
	0x8F6,
	0x8F7,
	0x8F9,
	0x8FB,
	0x900,
	0x951,
	0x952,
	0x953,
	0x955,
	0x9FE,
	0x9FF,
	0xF82,
	0xF84,
	0xF86,
	0xF88,
	0x135D,
	0x1360,
	0x17DD,
	0x17DE,
	0x193A,
	0x193B,
	0x1A17,
	0x1A18,
	0x1A75,
	0x1A7D,
	0x1AB0,
	0x1AB5,
	0x1ABB,
	0x1ABD,
	0x1AC1,
	0x1AC3,
	0x1AC5,
	0x1ACA,
	0x1ACB,
	0x1ACF,
	0x1B6B,
	0x1B6C,
	0x1B6D,
	0x1B74,
	0x1CD0,
	0x1CD3,
	0x1CDA,
	0x1CDC,
	0x1CE0,
	0x1CE1,
	0x1CF4,
	0x1CF5,
	0x1CF8,
	0x1CFA,
	0x1DC0,
	0x1DC2,
	0x1DC3,
	0x1DCA,
	0x1DCB,
	0x1DCD,
	0x1DD1,
	0x1DF6,
	0x1DFB,
	0x1DFC,
	0x1DFE,
	0x1DFF,
	0x20D0,
	0x20D2,
	0x20D4,
	0x20D8,
	0x20DB,
	0x20DD,
	0x20E1,
	0x20E2,
	0x20E7,
	0x20E8,
	0x20E9,
	0x20EA,
	0x20F0,
	0x20F1,
	0x2CEF,
	0x2CF2,
	0x2DE0,
	0x2E00,
	0xA66F,
	0xA670,
	0xA674,
	0xA67E,
	0xA69E,
	0xA6A0,
	0xA6F0,
	0xA6F2,
	0xA8E0,
	0xA8F2,
	0xAAB0,
	0xAAB1,
	0xAAB2,
	0xAAB4,
	0xAAB7,
	0xAAB9,
	0xAABE,
	0xAAC0,
	0xAAC1,
	0xAAC2,
	0xFE20,
	0xFE27,
	0xFE2E,
	0xFE30,
	0x10376,
	0x1037B,
	0x10A0F,
	0x10A10,
	0x10A38,
	0x10A39,
	0x10AE5,
	0x10AE6,
	0x10D24,
	0x10D28,
	0x10EAB,
	0x10EAD,
	0x10F48,
	0x10F4B,
	0x10F4C,
	0x10F4D,
	0x10F82,
	0x10F83,
	0x10F84,
	0x10F85,
	0x11100,
	0x11103,
	0x11366,
	0x1136D,
	0x11370,
	0x11375,
	0x1145E,
	0x1145F,
	0x16B30,
	0x16B37,
	0x1D185,
	0x1D18A,
	0x1D1AA,
	0x1D1AE,
	0x1D242,
	0x1D245,
	0x1E000,
	0x1E007,
	0x1E008,
	0x1E019,
	0x1E01B,
	0x1E022,
	0x1E023,
	0x1E025,
	0x1E026,
	0x1E02B,
	0x1E130,
	0x1E137,
	0x1E2AE,
	0x1E2AF,
	0x1E2EC,
	0x1E2F0,
	0x1E944,
	0x1E94A
};

static const UV UNI_CCC__AL_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5AE,
	0x5AF,
	0x18A9,
	0x18AA,
	0x1DF7,
	0x1DF9,
	0x302B,
	0x302C
};

static const UV UNI_CCC__AR_invlist[] = {  /* for all charsets */
	11,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x315,
	0x316,
	0x31A,
	0x31B,
	0x358,
	0x359,
	0x1DF6,
	0x1DF7,
	0x302C,
	0x302D
};

static const UV UNI_CCC__B_invlist[] = {  /* for all charsets */
	167,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x316,
	0x31A,
	0x31C,
	0x321,
	0x323,
	0x327,
	0x329,
	0x334,
	0x339,
	0x33D,
	0x347,
	0x34A,
	0x34D,
	0x34F,
	0x353,
	0x357,
	0x359,
	0x35B,
	0x591,
	0x592,
	0x596,
	0x597,
	0x59B,
	0x59C,
	0x5A2,
	0x5A8,
	0x5AA,
	0x5AB,
	0x5C5,
	0x5C6,
	0x655,
	0x657,
	0x65C,
	0x65D,
	0x65F,
	0x660,
	0x6E3,
	0x6E4,
	0x6EA,
	0x6EB,
	0x6ED,
	0x6EE,
	0x731,
	0x732,
	0x734,
	0x735,
	0x737,
	0x73A,
	0x73B,
	0x73D,
	0x73E,
	0x73F,
	0x742,
	0x743,
	0x744,
	0x745,
	0x746,
	0x747,
	0x748,
	0x749,
	0x7F2,
	0x7F3,
	0x7FD,
	0x7FE,
	0x859,
	0x85C,
	0x899,
	0x89C,
	0x8CF,
	0x8D4,
	0x8E3,
	0x8E4,
	0x8E6,
	0x8E7,
	0x8E9,
	0x8EA,
	0x8ED,
	0x8F0,
	0x8F6,
	0x8F7,
	0x8F9,
	0x8FB,
	0x952,
	0x953,
	0xF18,
	0xF1A,
	0xF35,
	0xF36,
	0xF37,
	0xF38,
	0xFC6,
	0xFC7,
	0x108D,
	0x108E,
	0x193B,
	0x193C,
	0x1A18,
	0x1A19,
	0x1A7F,
	0x1A80,
	0x1AB5,
	0x1ABB,
	0x1ABD,
	0x1ABE,
	0x1ABF,
	0x1AC1,
	0x1AC3,
	0x1AC5,
	0x1ACA,
	0x1ACB,
	0x1B6C,
	0x1B6D,
	0x1CD5,
	0x1CDA,
	0x1CDC,
	0x1CE0,
	0x1CED,
	0x1CEE,
	0x1DC2,
	0x1DC3,
	0x1DCA,
	0x1DCB,
	0x1DCF,
	0x1DD0,
	0x1DF9,
	0x1DFA,
	0x1DFD,
	0x1DFE,
	0x1DFF,
	0x1E00,
	0x20E8,
	0x20E9,
	0x20EC,
	0x20F0,
	0xA92B,
	0xA92E,
	0xAAB4,
	0xAAB5,
	0xFE27,
	0xFE2E,
	0x101FD,
	0x101FE,
	0x102E0,
	0x102E1,
	0x10A0D,
	0x10A0E,
	0x10A3A,
	0x10A3B,
	0x10AE6,
	0x10AE7,
	0x10F46,
	0x10F48,
	0x10F4B,
	0x10F4C,
	0x10F4D,
	0x10F51,
	0x10F83,
	0x10F84,
	0x10F85,
	0x10F86,
	0x1D17B,
	0x1D183,
	0x1D18A,
	0x1D18C,
	0x1E8D0,
	0x1E8D7
};

static const UV UNI_CCC__BL_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1DFA,
	0x1DFB,
	0x302A,
	0x302B
};

static const UV UNI_CCC__BR_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x59A,
	0x59B,
	0x5AD,
	0x5AE,
	0x1939,
	0x193A,
	0x302D,
	0x302E
};

static const UV UNI_CCC__DA_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x35D,
	0x35F,
	0x360,
	0x362,
	0x1DCD,
	0x1DCE
};

static const UV UNI_CCC__DB_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x35C,
	0x35D,
	0x35F,
	0x360,
	0x362,
	0x363,
	0x1DFC,
	0x1DFD
};

static const UV UNI_CCC__IS_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x345,
	0x346
};

static const UV UNI_CCC__L_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x302E,
	0x3030
};

static const UV UNI_CCC__R_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1D16D,
	0x1D16E
};

static const UV UNI_CE_invlist[] = {  /* for all charsets */
	67,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x958,
	0x960,
	0x9DC,
	0x9DE,
	0x9DF,
	0x9E0,
	0xA33,
	0xA34,
	0xA36,
	0xA37,
	0xA59,
	0xA5C,
	0xA5E,
	0xA5F,
	0xB5C,
	0xB5E,
	0xF43,
	0xF44,
	0xF4D,
	0xF4E,
	0xF52,
	0xF53,
	0xF57,
	0xF58,
	0xF5C,
	0xF5D,
	0xF69,
	0xF6A,
	0xF76,
	0xF77,
	0xF78,
	0xF79,
	0xF93,
	0xF94,
	0xF9D,
	0xF9E,
	0xFA2,
	0xFA3,
	0xFA7,
	0xFA8,
	0xFAC,
	0xFAD,
	0xFB9,
	0xFBA,
	0x2ADC,
	0x2ADD,
	0xFB1D,
	0xFB1E,
	0xFB1F,
	0xFB20,
	0xFB2A,
	0xFB37,
	0xFB38,
	0xFB3D,
	0xFB3E,
	0xFB3F,
	0xFB40,
	0xFB42,
	0xFB43,
	0xFB45,
	0xFB46,
	0xFB4F,
	0x1D15E,
	0x1D165,
	0x1D1BB,
	0x1D1C1
};

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_CF_invlist[] = {  /* for ASCII/Latin1 */
	43,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xAD,
	0xAE,
	0x600,
	0x606,
	0x61C,
	0x61D,
	0x6DD,
	0x6DE,
	0x70F,
	0x710,
	0x890,
	0x892,
	0x8E2,
	0x8E3,
	0x180E,
	0x180F,
	0x200B,
	0x2010,
	0x202A,
	0x202F,
	0x2060,
	0x2065,
	0x2066,
	0x2070,
	0xFEFF,
	0xFF00,
	0xFFF9,
	0xFFFC,
	0x110BD,
	0x110BE,
	0x110CD,
	0x110CE,
	0x13430,
	0x13439,
	0x1BCA0,
	0x1BCA4,
	0x1D173,
	0x1D17B,
	0xE0001,
	0xE0002,
	0xE0020,
	0xE0080
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_CF_invlist[] = {  /* for EBCDIC 1047 */
	43,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xCA,
	0xCB,
	0x600,
	0x606,
	0x61C,
	0x61D,
	0x6DD,
	0x6DE,
	0x70F,
	0x710,
	0x890,
	0x892,
	0x8E2,
	0x8E3,
	0x180E,
	0x180F,
	0x200B,
	0x2010,
	0x202A,
	0x202F,
	0x2060,
	0x2065,
	0x2066,
	0x2070,
	0xFEFF,
	0xFF00,
	0xFFF9,
	0xFFFC,
	0x110BD,
	0x110BE,
	0x110CD,
	0x110CE,
	0x13430,
	0x13439,
	0x1BCA0,
	0x1BCA4,
	0x1D173,
	0x1D17B,
	0xE0001,
	0xE0002,
	0xE0020,
	0xE0080
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_CF_invlist[] = {  /* for EBCDIC 037 */
	43,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xCA,
	0xCB,
	0x600,
	0x606,
	0x61C,
	0x61D,
	0x6DD,
	0x6DE,
	0x70F,
	0x710,
	0x890,
	0x892,
	0x8E2,
	0x8E3,
	0x180E,
	0x180F,
	0x200B,
	0x2010,
	0x202A,
	0x202F,
	0x2060,
	0x2065,
	0x2066,
	0x2070,
	0xFEFF,
	0xFF00,
	0xFFF9,
	0xFFFC,
	0x110BD,
	0x110BE,
	0x110CD,
	0x110CE,
	0x13430,
	0x13439,
	0x1BCA0,
	0x1BCA4,
	0x1D173,
	0x1D17B,
	0xE0001,
	0xE0002,
	0xE0020,
	0xE0080
};

#  endif	/* EBCDIC 037 */

static const UV UNI_CHAM_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xAA00,
	0xAA37,
	0xAA40,
	0xAA4E,
	0xAA50,
	0xAA5A,
	0xAA5C,
	0xAA60
};

static const UV UNI_CHER_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x13A0,
	0x13F6,
	0x13F8,
	0x13FE,
	0xAB70,
	0xABC0
};

static const UV UNI_CHEROKEESUP_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xAB70,
	0xABC0
};

static const UV UNI_CHESSSYMBOLS_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
