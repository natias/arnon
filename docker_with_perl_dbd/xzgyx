.el \{\
.nop \)\*[doc-quote-left]\*[doc-quote-right]
.\}\}
.if !\n[doc-arg-limit] \
.return
.nr doc-curr-font \n[.f]
.nr doc-curr-size \n[.ps]
.nr doc-arg-ptr +1
.doc-print-prefixes
.nop \)\*[doc-quote-left]\)\c
.ie (\n[doc-arg-limit] < \n[doc-arg-ptr]) \{\
.nop \)\*[doc-quote-right]\)\c
.doc-print-and-reset
.\}
.el \{\
.ie (\n[doc-type\n[doc-arg-limit]] == 3) \{\
.nr doc-reg-des (\n[doc-arg-limit] - 1)
.while (\n[doc-type\n[doc-reg-des]] == 3) \
.nr doc-reg-des -1
.nr doc-reg-des +1
.ds doc-arg\n[doc-reg-des] "\*[doc-quote-right]\)\*[doc-arg\n[doc-reg-des]]
.\}
.el \{\
.nr doc-reg-des \n[doc-arg-limit]
.while (\n[doc-reg-des] >= \n[doc-arg-ptr]) \{\
.if !\A\*[doc-arg\n[doc-reg-des]] \
.break
.if !d doc-after-\*[doc-arg\n[doc-reg-des]] \
.break
.nr doc-reg-des -1
.\}
.ie (\n[doc-reg-des] == \n[doc-arg-limit]) \
.doc-append-arg "\)\*[doc-quote-right]\)" 3
.el \{\
.ie \n[doc-have-slot] \
.ds doc-arg\n[doc-reg-des] "\*[doc-quote-right]\)\*[doc-arg\n[doc-reg-des]]
.el \{\
.nr doc-reg-des +1
.nr doc-reg-des1 \n[doc-arg-limit]
.nr doc-reg-des2 (\n[doc-arg-limit] + 1)
.while (\n[doc-reg-des1] >= \n[doc-reg-des]) \{\
.rn doc-arg\n[doc-reg-des1] doc-arg\n[doc-reg-des2]
.rnn doc-type\n[doc-reg-des1] doc-type\n[doc-reg-des2]
.rn doc-space\n[doc-reg-des1] doc-space\n[doc-reg-des2]
.nr doc-reg-des1 -1
.nr doc-reg-des2 -1
.\}
.nr doc-arg-limit +1
.ds doc-arg\n[doc-reg-des] "\)\*[doc-quote-right]\)
.nr doc-type\n[doc-reg-des] 3
.nr doc-num-args (\n[doc-arg-limit] - \n[doc-reg-des] + 1)
.nr doc-arg-limit (\n[doc-reg-des] - 1)
.doc-parse-space-vector
.nr doc-have-slot 1
.\}\}\}
.doc-do-\n[doc-type\n[doc-arg-ptr]]
.\}
.if \n[doc-in-synopsis-section] \
.doc-set-soft-space
..
.als En doc-enclose-string
.de Ao
.if !\n[doc-arg-limit] \
.ds doc-macro-name Ao
.ie "\*[doc-macro-name]"An" \
.ds doc-quote-left <
.el \
.ds doc-quote-left \[la]
.doc-enclose-open \$@
..
.de Ac
.if !\n[doc-arg-limit] \
.ds doc-macro-name Ac
.ie "\*[doc-macro-name]"An" \
.ds doc-quote-right >
.el \
.ds doc-quote-right \[ra]
.doc-enclose-close \$@
..
.de Bo
.if !\n[doc-arg-limit] \
.ds doc-macro-name Bo
.ds doc-quote-left "\*[doc-left-bracket]
.doc-enclose-open \$@
..
.de Bc
.if !\n[doc-arg-limit] \
.ds doc-macro-name Bc
.ds doc-quote-right "\*[doc-right-bracket]
.doc-enclose-close \$@
..
.de Bro
.if !\n[doc-arg-limit] \
.ds doc-macro-name Bo
.ds doc-quote-left {
.doc-enclose-open \$@
..
.de Brc
.if !\n[doc-arg-limit] \
.ds doc-macro-name Bc
.ds doc-quote-right }
.doc-enclose-close \$@
..
.de Do
.if !\n[doc-arg-limit] \
.ds doc-macro-name Do
.ds doc-quote-left "\*[Lq]
.doc-enclose-open \$@
..
.de Dc
.if !\n[doc-arg-limit] \
.ds doc-macro-name Dc
.ds doc-quote-right "\*[Rq]
.doc-enclose-close \$@
..
.de Eo
.if !\n[doc-arg-limit] \
.ds doc-macro-name Eo
.ds doc-quote-left "\$1
.shift
.doc-enclose-open \$@
..
.de Ec
.if !\n[doc-arg-limit] \
.ds doc-macro-name Ec
.ds doc-quote-right "\$1
.shift
.doc-enclose-close \$@
..
.de Oo
.if !\n[doc-arg-limit] \
.ds doc-macro-name Oo
.ds doc-quote-left [
.doc-enclose-open \$@
..
.de Oc
.if !\n[doc-arg-limit] \
.ds doc-macro-name Oc
.ds doc-quote-right ]
.doc-enclose-close \$@
..
.de Po
.if !\n[doc-arg-limit] \
.ds doc-macro-name Po
.ds doc-quote-left "\*[doc-left-parenthesis]
.doc-enclose-open \$@
..
.de Pc
.if !\n[doc-arg-limit] \
.ds doc-macro-name Pc
.ds doc-quote-right "\*[doc-right-parenthesis]
.doc-enclose-close \$@
..
.de Qo
.if !\n[doc-arg-limit] \
.ds doc-macro-name Qo
.ds doc-quote-left "\*[q]
.doc-enclose-open \$@
..
.de Qc
.if !\n[doc-arg-limit] \
.ds doc-macro-name Qc
.ds doc-quote-right "\*[q]
.doc-enclose-close \$@
..
.de So
.if !\n[doc-arg-limit] \
.ds doc-macro-name So
.ds doc-quote-left "\*[doc-left-singlequote]
.doc-enclose-open \$@
..
.de Sc
.if !\n[doc-arg-limit] \
.ds doc-macro-name Sc
.ds doc-quote-right "\*[doc-right-singlequote]
.doc-enclose-close \$@
..
.de Xo
.if !\n[doc-arg-limit] \
.ds doc-macro-name Xo
.ds doc-quote-left
.doc-enclose-open \$@
..
.de Xc
.if !\n[doc-arg-limit] \
.ds doc-macro-name Xc
.ds doc-quote-right
.doc-enclose-close \$@
..
.nr doc-nesting-level 0
.nr doc-in-list 0
.de doc-enclose-open
.if !\n[doc-arg-limit] \
.doc-parse-args \$@
.nr doc-arg-ptr +1
.doc-print-prefixes
.nr doc-arg-ptr -1
.nop \)\*[doc-quote-left]\)\c
.box doc-enclosure-box\n[doc-nesting-level]
.ev doc-enclosure-env\n[doc-nesting-level]
.evc 0
.in 0
.nf
.nop \&\c
.nr doc-nesting-level +1
.if \n[doc-arg-limit] \{\
.nr doc-arg-ptr +1
.ie (\n[doc-arg-limit] >= \n[doc-arg-ptr]) \
.doc-print-recursive
.el \
.doc-reset-args
.\}
..
.de doc-enclose-close
.nr doc-nesting-level -1
.br
.ev
.box
.chop doc-enclosure-box\n[doc-nesting-level]
.unformat doc-enclosure-box\n[doc-nesting-level]
.nh
.nop \*[doc-enclosure-box\n[doc-nesting-level]]\c
.nop \)\*[doc-quote-right]\)\c
.if !\n[doc-arg-limit] \{\
.doc-parse-args \$@
.if !\n[.$] \
.doc-print-and-reset
.\}
.if \n[doc-arg-limit] \{\
.ie (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.nop \)\*[doc-space\n[doc-arg-ptr]]\c
.nr doc-arg-ptr +1
.doc-print-recursive
.\}
.el \
.doc-print-and-reset
.\}
.if !"\*[doc-macro-name]"It" \
.if \n[doc-in-list] \
.if !\n[doc-nesting-level] \
.doc-\*[doc-list-type-stack\n[doc-list-depth]]
..
.de Pf
.if !\n[doc-arg-limit] \
.ds doc-macro-name Pf
.ie \n[doc-arg-limit] \{\
.ie ((\n[doc-arg-limit] - \n[doc-arg-ptr]) > 1) \{\
.nr doc-arg-ptr +1
.nop \)\*[doc-arg\n[doc-arg-ptr]]\c
.\}
.el \
.tm mdoc warning: .Pf: trailing prefix (#\n[.c])
.\}
.el \{\
.nop \)\$1\)\c
.shift
.ie \n[.$] \
.doc-parse-args \$@
.el \{\
.tm mdoc warning: .Pf: missing arguments (#\n[.c])
.nop \)
.\}\}
.if \n[doc-arg-limit] \{\
.nr doc-arg-ptr +1
.ie (\n[doc-arg-limit] < \n[doc-arg-ptr]) \
.doc-print-and-reset
.el \
.doc-do-\n[doc-type\n[doc-arg-ptr]]
.\}
..
.de Ns
.if !\n[doc-arg-limit] \{\
.ie \n[.$] \{\
.ds doc-macro-name Ns
.doc-parse-args \$@
.\}
.el \
.tm Usage: .Ns must be called with arguments (#\n[.c])
.\}
.if \n[doc-arg-limit] \{\
.nr doc-arg-ptr +1
.ie (\n[doc-arg-limit] >= \n[doc-arg-ptr]) \
.doc-print-recursive
.el \
.doc-reset-args
.\}
..
.de Ap
.ie !\n[doc-arg-limit] \
.tm Usage: 'Ap' cannot be first macro on a line (no '.Ap') (#\n[.c])
.el \{\
.nop \)'\)\c
.nr doc-arg-ptr +1
.ie (\n[doc-arg-limit] >= \n[doc-arg-ptr]) \
.doc-print-recursive
.el \
.doc-reset-args
.\}
..
.ds doc-space "\*[doc-soft-space]
.de doc-set-hard-space
.ie "\*[doc-space]"" \
.ds doc-saved-space "\*[doc-hard-space]
.el \
.ds doc-space "\*[doc-hard-space]
..
.de doc-set-soft-space
.ie "\*[doc-space]"" \
.ds doc-saved-space "\*[doc-soft-space]
.el \
.ds doc-space "\*[doc-soft-space]
..
.nr doc-space-mode 1
.ds doc-saved-space "\*[doc-space]
.nr doc-have-space 0
.de Sm
.ie \n[doc-have-space] \
.nr doc-reg-Sm 0
.el \
.nr doc-reg-Sm 1
.if !\n[doc-arg-limit] \{\
.ie \n[.$] \{\
.ds doc-macro-name Sm
.doc-parse-args \$@
.\}
.el \{\
.ie \n[doc-space-mode] \{\
.ds doc-saved-space "\*[doc-space]
.ds doc-space
.nr doc-space-mode 0
.\}
.el \{\
.ds doc-space "\*[doc-saved-space]
.nr doc-space-mode 1
.if \n[doc-reg-Sm] \
.if \n[.int] \
.nop \)
.\}
.\}\}
.if !\n[doc-arg-limit] \
.return
.nr doc-arg-ptr +1
.if !d doc-arg\n[doc-arg-ptr] \
.ds doc-arg\n[doc-arg-ptr]
.ie "\*[doc-arg\n[doc-arg-ptr]]"on" \{\
.ds doc-space "\*[doc-saved-space]
.nr doc-space-mode 1
.\}
.el \{\
.ie "\*[doc-arg\n[doc-arg-ptr]]"off" \{\
.ds doc-saved-space "\*[doc-space]
.ds doc-space
.nr doc-space-mode 0
.\}
.el \{\
.nr doc-arg-ptr -1
.ie \n[doc-space-mode] \{\
.ds doc-saved-space "\*[doc-space]
.ds doc-space
.nr doc-space-mode 0
.\}
.el \{\
.ds doc-space "\*[doc-saved-space]
.nr doc-space-mode 1
.\}
.\}\}
.ie \n[doc-space-mode] \{\
.nr doc-num-args (\n[doc-arg-limit] - \n[doc-arg-ptr])
.nr doc-arg-limit \n[doc-arg-ptr]
.if \n[doc-num-args] \
.doc-parse-space-vector
.if \n[doc-reg-Sm] \
.if \n[.int] \
.nop \)
.\}
.el \{\
.nr doc-reg-Sm (\n[doc-arg-ptr] + 1)
.while (\n[doc-reg-Sm] <= \n[doc-arg-limit]) \{\
.ds doc-space\n[doc-reg-Sm]
.nr doc-reg-Sm +1
.\}
.\}
.ie (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.nr doc-arg-ptr +1
.doc-print-recursive
.\}
.el \
.doc-reset-args
..
.nr doc-arg-type 0
.de doc-get-arg-type
.nr doc-arg-type 2
.if ((\n[doc-width] < 4) & \A\$1) \{\
.ie (\n[doc-width] == 1) \{\
.if r doc-punct\$1 \
.nr doc-arg-type \n[doc-punct\$1]
.\}
.el \
.if r \$1 \
.if d \$1 \
.nr doc-arg-type 1
.\}
..
.de doc-get-arg-type*
.nr doc-arg-type 2
.length doc-width "\*[doc-arg\$1]
.if ((\n[doc-width] < 4) & \A\*[doc-arg\$1]) \{\
.ie (\n[doc-width] == 1) \{\
.if r doc-punct\*[doc-arg\$1] \
.nr doc-arg-type \n[doc-punct\*[doc-arg\$1]]
.\}
.el \
.if r \*[doc-arg\$1] \
.if d \*[doc-arg\$1] \
.nr doc-arg-type 1
.\}
..
.de doc-set-spacing-1
.nr doc-reg-dssfm1 \n[\*[doc-arg\n[doc-arg-limit]]]
.ie (\n[doc-reg-dssfm1] == 3) \{\
.if \n[doc-arg-limit] \{\
.nr doc-reg-dssfm (\n[doc-arg-limit] - 1)
.ds doc-space\n[doc-reg-dssfm]
.\}
.ds doc-space\n[doc-arg-limit] "\*[doc-space]
.\}
.el \{\
.ie (\n[doc-reg-dssfm1] == 2) \{\
.if \n[doc-arg-limit] \{\
.nr doc-reg-dssfm (\n[doc-arg-limit] - 1)
.ds doc-space\n[doc-reg-dssfm]
.\}
.ds doc-space\n[doc-arg-limit]
.\}
.el \
.ds doc-space\n[doc-arg-limit]
.\}
..
.de doc-set-spacing-2
.ds doc-space\n[doc-arg-limit] "\*[doc-space]
..
.de doc-set-spacing-3
.if \n[doc-arg-limit] \{\
.nr doc-reg-dssfps (\n[doc-arg-limit] - 1)
.ds doc-space\n[doc-reg-dssfps]
.\}
.ds doc-space\n[doc-arg-limit] "\*[doc-space]
..
.de doc-set-spacing-4
.ds doc-space\n[doc-arg-limit]
..
.de doc-do-1
.\*[doc-arg\n[doc-arg-ptr]]
..
.als doc-do-2 doc-print-recursive
.als doc-do-3 doc-print-recursive
.als doc-do-4 doc-print-recursive
.nr doc-fontmode-depth 0
.nr doc-fontmode-font-stack0 0
.nr doc-fontmode-size-stack0 0
.de Bf
.ds doc-macro-name Bf
.ie \n[.$] \{\
.nr doc-fontmode-depth +1
.nr doc-fontmode-font-stack\n[doc-fontmode-depth] \n[.f]
.nr doc-fontmode-size-stack\n[doc-fontmode-depth] \n[.ps]
.ie        "\$1"Em" \
.nop \*[doc-Em-font]\c
.el \{ .ie "\$1"Li" \
.nop \*[doc-Li-font]\c
.el \{ .ie "\$1"Sy" \
.nop \*[doc-Sy-font]\c
.el \{ .ie "\$1"-emphasis" \
.nop \*[doc-Em-font]\c
.el \{ .ie "\$1"-literal" \
.nop \*[doc-Li-font]\c
.el \{ .ie "\$1"-symbolic" \
.nop \*[doc-Sy-font]\c
.el \{\
.tmc mdoc warning: Unknown keyword '\$1' in .Bf macro
.tm1 " (#\n[.c])
.\}\}\}\}\}\}\}
.el \
.tm Usage: .Bf [Em | -emphasis | Li | -literal | Sy | -symbolic] (#\n[.c])
..
.de Ef
.ds doc-macro-name Ef
.ie \n[doc-fontmode-depth] \{\
.nop \)\f[\n[doc-fontmode-font-stack\n[doc-fontmode-depth]]]\c
.nop \)\s[\n[doc-fontmode-size-stack\n[doc-fontmode-depth]]u]\c
.nr doc-fontmode-font-stack\n[doc-fontmode-depth] 0
.nr doc-curr-font \n[.f]
.nr doc-fontmode-size-stack\n[doc-fontmode-depth] 0
.nr doc-curr-size \n[.ps]
.nr doc-fontmode-depth -1
.\}
.el \
.tm mdoc warning: Extraneous .Ef (#\n[.c])
..
.nr doc-keep-type 0
.de Bk
.ds doc-macro-name Bk
.if \n[doc-keep-type] \
.tm .Bk: nesting keeps not implemented yet. (#\n[.c])
.ie        "\$1"-lines" \{\
.nr doc-keep-type 2
.tm .Bk -lines: Not implemented yet. (#\n[.c])
.\}
.el \{ .ie "\$1"-words" \{\
.nr doc-keep-type 1
.doc-set-hard-space
.\}
.el \{ .ie "\$1"" \{\
.nr doc-keep-type 1
.doc-set-hard-space
.\}
.el \{\
.tm mdoc warning: Unknown keyword '\$1' in .Bk macro (#\n[.c])
.nr doc-keep-type 3
.\}\}\}
..
.de Ek
.ds doc-macro-name Ek
.ie \n[.$] \
.tm Usage: .Ek (does not take arguments) (#\n[.c])
.el \{\
.if !\n[doc-keep-type] \
.tm mdoc warning: .Ek found without .Bk before (#\n[.c])
.ie        (\n[doc-keep-type] == 1) \
.doc-set-soft-space
.el \{ .if (\n[doc-keep-type] == 2) \
.tm .Bk -lines: Not implemented yet. (#\n[.c])
.\}\}
.nr doc-keep-type 0
..
.nr doc-display-depth 0
.nr doc-is-compact 0
.ds doc-display-type-stack0
.nr doc-display-indent-stack0 0
.nr doc-display-ad-stack0 0
.nr doc-display-fi-stack0 0
.nr doc-display-ft-stack0 0
.nr doc-display-ps-stack0 0
.de Bd
.ds doc-macro-name Bd
.if !\n[.$] \{\
.tm1 "Usage: .Bd {-literal | -filled | -ragged | -centered | -unfilled}
.tm1 "           [-offset [string]] [-compact] [-file name] (#\n[.c])
.return
.\}
.nr doc-is-compact 0
.ds doc-display-file
.nr doc-reg-Bd 1
.nr doc-display-depth +1
.nr doc-display-ad-stack\n[doc-display-depth] \n[.j]
.nr doc-display-fi-stack\n[doc-display-depth] \n[.u]
.ie        "\$1"-literal" \{\
.ds doc-display-type-stack\n[doc-display-depth] literal
.nr doc-display-ft-stack\n[doc-display-depth] \n[.f]
.nr doc-display-ps-stack\n[doc-display-depth] \n[.ps]
.ie t \
.ta T 9n
.el \
.ta T 8n
.nf
.\}
.el \{ .ie "\$1"-filled" \{\
.ds doc-display-type-stack\n[doc-display-depth] filled
.ad b
.fi
.\}
.el \{ .ie "\$1"-ragged" \{\
.ds doc-display-type-stack\n[doc-display-depth] ragged
.na
.fi
.\}
.el \{ .ie "\$1"-centered" \{\
.ds doc-display-type-stack\n[doc-display-depth] centered
.ad c
.fi
.\}
.el \{ .ie "\$1"-unfilled" \{\
.ds doc-display-type-stack\n[doc-display-depth] unfilled
.nf
.\}
.el \{\
.tm1 "mdoc warning: Unknown keyword '\$1' (or missing display type)
.tm1 "              in .Bd macro (#\n[.c])
.nr doc-reg-Bd 0
.\}\}\}\}\}
.if \n[doc-reg-Bd] \{\
.shift
.if \n[.$] \
.doc-do-Bd-args \$@
.\}
.if !r doc-display-indent-stack\n[doc-display-depth] \
.nr doc-display-indent-stack\n[doc-display-depth] 0
.if \n[doc-display-indent-stack\n[doc-display-depth]] \
.in +\n[doc-display-indent-stack\n[doc-display-depth]]u
.if !\n[doc-is-compact] \
.sp \n[doc-display-vertical]u
.if "\*[doc-display-type-stack\n[doc-display-depth]]"literal" \
.if t \
.nop \*[doc-Li-font]\c
.if !\n[cR] \
.ne 2v
.if !"\*[doc-display-file]"" \
.so \*[doc-display-file]
.nr doc-is-compact 0
.ds doc-display-file
..
.de doc-do-Bd-args
.nr doc-reg-ddBa 1
.ie        "\$1"-offset" \{\
.nr doc-reg-ddBa 2
.ie        "\$2"left" \
.nr doc-display-indent-stack\n[doc-display-depth] 0
.el \{ .ie "\$2"right" \
.nr doc-display-indent-stack\n[doc-display-depth] (\n[.l]u / 3u)
.el \{ .ie "\$2"center" \
.nr doc-display-indent-stack\n[doc-display-depth] ((\n[.l]u - \n[.i]u) / 4u)
.el \{ .ie "\$2"indent" \
.nr doc-display-indent-stack\n[doc-display-depth] \n[doc-display-indent]u
.el \{ .ie "\$2"indent-two" \
.nr doc-display-indent-stack\n[doc-display-depth] (\n[doc-display-indent]u + \n[doc-display-indent]u)
.el \
.nr doc-reg-ddBa 1
.\}\}\}\}
.if (\n[doc-reg-ddBa] == 1) \{\
.nr doc-reg-ddBa 2
.nr doc-reg-ddBa1 0
.if \B(\$2) \{\
.nr doc-reg-ddBa2 \n[.warn]
.warn (\n[.warn] - (\n[.warn] / 32 % 2 * 32))
.ds doc-str-ddBa "\$2
.substring doc-str-ddBa 0 -2
.if \B(\*[doc-str-ddBa]) \{\
.nr doc-reg-ddBa3 (;(\$2))
.nr doc-reg-ddBa4 (\*[doc-str-ddBa])
.if (\n[doc-reg-ddBa3] == \n[doc-reg-ddBa4]) \
.nr doc-reg-ddBa1 1
.\}
.warn \n[doc-reg-ddBa2]
.\}
.ie \n[doc-reg-ddBa1] \
.nr doc-display-indent-stack\n[doc-display-depth] \$2
.el \{\
.doc-get-width "\$2"
.ie (\n[doc-width] <= 3) \{\
.doc-get-arg-type "\$2"
.ie (\n[doc-arg-type] == 1) \
.nr doc-display-indent-stack\n[doc-display-depth] \n[\$2]
.el \
.nr doc-display-indent-stack\n[doc-display-depth] (\n[doc-width]u * \n[doc-fixed-width]u)
.\}
.el \
.nr doc-display-indent-stack\n[doc-display-depth] (\n[doc-width]u * \n[doc-fixed-width]u)
.\}\}
.\}
.el \{ .ie "\$1"-compact" \
.nr doc-is-compact 1
.el \{ .ie "\$1"-file" \{\
.ie !"\$2"" \{\
.ds doc-display-file "\$2
.nr doc-reg-ddBa 2
.\}
.el \
.tm mdoc warning: .Bd '-file' keyword requires argument (#\n[.c])
.\}
.el \
.tm mdoc warning: Unknown keyword '\$1' in .Bd macro (#\n[.c])
.\}\}
.if (\n[doc-reg-ddBa] < \n[.$]) \{\
.shift \n[doc-reg-ddBa]
.doc-do-Bd-args \$@
.\}
..
.de Ed
.ds doc-macro-name Ed
.br
.if !\n[doc-display-depth] \{\
.tm mdoc warning: Extraneous .Ed (#\n[.c])
.nr doc-display-depth 1
.\}
.if "\*[doc-display-type-stack\n[doc-display-depth]]"literal" \{\
.ft \n[doc-display-ft-stack\n[doc-display-depth]]
.ps \n[doc-display-ps-stack\n[doc-display-depth]]u
.\}
.in -\n[doc-display-indent-stack\n[doc-display-depth]]u
.ie \n[doc-display-fi-stack\n[doc-display-depth]] \
.fi
.el \
.nf
.ad \n[doc-display-ad-stack\n[doc-display-depth]]
.nr doc-display-indent-stack\n[doc-display-depth] 0
.ds doc-display-type-stack\n[doc-display-depth]
.nr doc-display-depth -1
..
.ds doc-list-type-stack1
.nr doc-list-indent-stack1 0
.nr doc-list-have-indent-stack1 0
.de Bl
.if !\n[.$] \{\
.doc-Bl-usage
.return
.\}
.ds doc-macro-name Bl
.nr doc-list-depth +1
.nr doc-arg-ptr 1
.ie        "\$1"-hang" \{\
.ds doc-list-type-stack\n[doc-list-depth] hang-list
.nr doc-list-indent-stack\n[doc-list-depth] 6n
.nr doc-list-have-indent-stack\n[doc-list-depth] 1
.\}
.el \{ .ie "\$1"-tag" \{\
.ds doc-list-type-stack\n[doc-list-depth] tag-list
.nr doc-list-indent-stack\n[doc-list-depth] 6n
.nr doc-list-have-indent-stack\n[doc-list-depth] 1
.\}
.el \{ .ie "\$1"-item" \{\
.ds doc-list-type-stack\n[doc-list-depth] item-list
.nr doc-list-have-indent-stack\n[doc-list-depth] 1
.\}
.el \{ .ie "\$1"-enum" \{\
.ds doc-list-type-stack\n[doc-list-depth] enum-list
.nr doc-list-indent-stack\n[doc-list-depth] 3n
.nr doc-list-have-indent-stack\n[doc-list-depth] 1
.\}
.el \{ .ie "\$1"-bullet" \{\
.ds doc-list-type-stack\n[doc-list-depth] bullet-list
.nr doc-list-indent-stack\n[doc-list-depth] 2n
.nr doc-list-have-indent-stack\n[doc-list-depth] 1
.\}
.el \{ .ie "\$1"-dash" \{\
.ds doc-list-type-stack\n[doc-list-depth] dash-list
.nr doc-list-indent-stack\n[doc-list-depth] 2n
.nr doc-list-have-indent-stack\n[doc-list-depth] 1
.\}
.el \{ .ie "\$1"-hyphen" \{\
.ds doc-list-type-stack\n[doc-list-depth] dash-list
.nr doc-list-indent-stack\n[doc-list-depth] 2n
.nr doc-list-have-indent-stack\n[doc-list-depth] 1
.\}
.el \{ .ie "\$1"-inset" \{\
.ds doc-list-type-stack\n[doc-list-depth] inset-list
.nr doc-list-have-indent-stack\n[doc-list-depth] 1
.\}
.el \{ .ie "\$1"-diag" \{\
.ds doc-list-type-stack\n[doc-list-depth] diag-list
.\}
.el \{ .ie "\$1"-ohang" \{\
.ds doc-list-type-stack\n[doc-list-depth] ohang-list
.nr doc-list-have-indent-stack\n[doc-list-depth] 1
.\}
.el \{ .ie "\$1"-column" \{\
.ds doc-list-type-stack\n[doc-list-depth] column-list
.linetabs 1
.\}
.el \{\
.tm1 "mdoc warning: Unknown list type '\$1' (or missing list type)
.tm1 "              in .Bl macro
.tm
.nr doc-arg-ptr 0
.\}\}\}\}\}\}\}\}\}\}\}
.if !\n[doc-arg-ptr] \{\
.doc-Bl-usage
.doc-reset-args
.nr doc-list-depth -1
.return
.\}
.shift
.nr doc-reg-Bl 1
.while (\n[doc-reg-Bl] <= \n[.$]) \{\
.ds doc-arg\n[doc-reg-Bl] "\$[\n[doc-reg-Bl]]
.nr doc-type\n[doc-reg-Bl] 0
.ds doc-space\n[doc-reg-Bl]
.nr doc-reg-Bl +1
.\}
.doc-increment-list-stack
.if \n[.$] \{\
.nr doc-arg-limit \n[.$]
.nr doc-arg-ptr 0
.doc-do-Bl-args
.in +\n[doc-list-offset-stack\n[doc-list-depth]]u
.if "\*[doc-list-type-stack\n[doc-list-depth]]"column-list" \{\
.doc-set-column-tab \n[doc-num-columns]
'      in -\n[doc-column-indent-width]u
.if !\n[doc-compact-list-stack\n[doc-list-depth]] \
.sp \n[doc-display-vertical]u
.nf
.nr doc-num-columns 0
.\}\}
.doc-reset-args
..
.de doc-Bl-usage
.tm1 "Usage: .Bl {-hang | -ohang | -tag | -diag | -inset}
.tm1 "             [-width <string>]
.tm1 "             [-offset <string>] [-compact]
.tm1 "       .Bl -column [-offset <string>] <string1> <string2> ...
.tm1 "       .Bl {-item | -enum [-nested] | -bullet | -hyphen | -dash}
.tm1 "             [-offset <string>] [-compact] (#\n[.c])
..
.de doc-do-Bl-args
.nr doc-arg-ptr +1
.if (\n[doc-arg-limit] < \n[doc-arg-ptr]) \
.return
.nr doc-reg-dBla (\n[doc-arg-ptr] + 1)
.if (\n[doc-arg-limit] < \n[doc-reg-dBla]) \
.ds doc-arg\n[doc-reg-dBla]
.nr doc-reg-dBla 1
.ie        "\*[doc-arg\n[doc-arg-ptr]]"-compact" \
.nr doc-compact-list-stack\n[doc-list-depth] 1
.el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-nested" \{\
.ie (\n[doc-list-depth] > 1) \{\
.nr doc-reg-dBla1 (\n[doc-list-depth] - 1)
.ds doc-tag-prefix-stack\n[doc-list-depth] "\*[doc-tag-prefix-stack\n[doc-reg-dBla1]]
.as doc-tag-prefix-stack\n[doc-list-depth] \n[doc-enum-list-count-stack\n[doc-reg-dBla1]].
.length doc-reg-dBla1 "\*[doc-tag-prefix-stack\n[doc-list-depth]]
.nr doc-list-indent-stack\n[doc-list-depth] +\n[doc-reg-dBla1]n
.\}
.el \
.tm mdoc warning: '-nested' allowed with nested .Bl macros only (#\n[.c])
.\}
.el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-width" \{\
.nr doc-arg-ptr +1
.ds doc-str-dBla "\*[doc-arg\n[doc-arg-ptr]]
.substring doc-str-dBla 0 0
.ie .\*[doc-str-dBla] \{\
.ds doc-str-dBla "\*[doc-arg\n[doc-arg-ptr]]
.substring doc-str-dBla 1
.doc-first-parameter \*[doc-str-dBla]
.doc-get-width "\*[doc-str-dfp]
.doc-get-arg-type "\*[doc-str-dfp]
.ie (\n[doc-arg-type] == 1) \
.nr doc-reg-dBla1 1
.el \
.nr doc-reg-dBla1 0
.\}
.el \
.nr doc-reg-dBla1 0
.ds doc-str-dBla "\*[doc-arg\n[doc-arg-ptr]]
.ie \n[doc-reg-dBla1] \{\
.ds doc-str-dBla \*[doc-arg\n[doc-arg-ptr]]
.doc-save-global-vars
.doc-reset-args
.box doc-box-dBla
.ev doc-env-dBla
.evc 0
.in 0
.nf
.nop \*[doc-str-dBla]
.br
.ev
.box
.doc-restore-global-vars
.doc-get-width \h'\n[dl]u'
.nr doc-list-indent-stack\n[doc-list-depth] (\n[doc-width]u * \n[doc-fixed-width]u)
.\}
.el \{\
.nr doc-reg-dBla1 0
.if \B(\*[doc-str-dBla]) \{\
.nr doc-reg-dBla2 \n[.warn]
.warn (\n[.warn] - (\n[.warn] / 32 % 2 * 32))
.ds doc-str-dBla1 "\*[doc-str-dBla]
.substring doc-str-dBla1 0 -2
.if \B(\*[doc-str-dBla1]) \{\
.nr doc-reg-dBla3 (;(\*[doc-str-dBla]))
.nr doc-reg-dBla4 (\*[doc-str-dBla1])
.if (\n[doc-reg-dBla3] == \n[doc-reg-dBla4]) \
.nr doc-reg-dBla1 1
.\}
.warn \n[doc-reg-dBla2]
.\}
.ie \n[doc-reg-dBla1] \
.nr doc-list-indent-stack\n[doc-list-depth] (\*[doc-str-dBla])
.el \{\
.doc-get-arg-width \n[doc-arg-ptr]
.ie (\n[doc-width] == 2) \{\
.doc-get-arg-type \*[doc-str-dBla]
.ie (\n[doc-arg-type] == 1) \
.nr doc-list-indent-stack\n[doc-list-depth] \n[\*[doc-str-dBla]]
.el \
.nr doc-list-indent-stack\n[doc-list-depth] (\n[doc-width]u * \n[doc-fixed-width]u)
.\}
.el \
.nr doc-list-indent-stack\n[doc-list-depth] (\n[doc-width]u * \n[doc-fixed-width]u)
.\}\}\}
.el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-offset" \{\
.nr doc-arg-ptr +1
.ie "\*[doc-arg\n[doc-arg-ptr]]"indent" \
.nr doc-list-offset-stack\n[doc-list-depth] \n[doc-display-indent]u
.el \{\
.ds doc-str-dBla "\*[doc-arg\n[doc-arg-ptr]]
.nr doc-reg-dBla1 0
.if \B(\*[doc-str-dBla]) \{\
.nr doc-reg-dBla2 \n[.warn]
.warn (\n[.warn] - (\n[.warn] / 32 % 2 * 32))
.ds doc-str-dBla1 "\*[doc-str-dBla]
.substring doc-str-dBla1 0 -2
.if \B(\*[doc-str-dBla1]) \{\
.nr doc-reg-dBla3 (;(\*[doc-str-dBla]))
.nr doc-reg-dBla4 (\*[doc-str-dBla1])
.if (\n[doc-reg-dBla3] == \n[doc-reg-dBla4]) \
.nr doc-reg-dBla1 1
.\}
.warn \n[doc-reg-dBla2]
.\}
.ie \n[doc-reg-dBla1] \
.nr doc-list-offset-stack\n[doc-list-depth] \*[doc-str-dBla]
.el \{\
.doc-get-arg-width \n[doc-arg-ptr]
.ie (\n[doc-width] <= 3) \{\
.doc-get-arg-type \*[doc-str-dBla]
.ie (\n[doc-arg-type] == 1) \
.nr doc-list-offset-stack\n[doc-list-depth] \n[\*[doc-str-dBla]]
.el \
.nr doc-list-offset-stack\n[doc-list-depth] (\n[doc-width]u * \n[doc-fixed-width]u)
.\}
.el \
.nr doc-list-offset-stack\n[doc-list-depth] (\n[doc-width]u * \n[doc-fixed-width]u)
.\}\}\}
.el \
.nr doc-reg-dBla 0
.\}\}\}
.if !\n[doc-reg-dBla] \{\
.ie "\*[doc-list-type-stack\n[doc-list-depth]]"column-list" \{\
.nr doc-num-columns +1
.ds doc-str-dBla \*[doc-arg\n[doc-arg-ptr]]
.substring doc-str-dBla 0 0
.ie .\*[doc-str-dBla] \{\
.ds doc-str-dBla "\*[doc-arg\n[doc-arg-ptr]]
.substring doc-str-dBla 1
.doc-first-parameter \*[doc-str-dBla]
.doc-get-width "\*[doc-str-dfp]
.doc-get-arg-type "\*[doc-str-dfp]
.ie (\n[doc-arg-type] == 1) \
.nr doc-reg-dBla1 1
.el \
.nr doc-reg-dBla1 0
.\}
.el \
.nr doc-reg-dBla1 0
.ds doc-str-dBla "\*[doc-arg\n[doc-arg-ptr]]
.ie \n[doc-reg-dBla1] \{\
.ds doc-str-dBla \*[doc-arg\n[doc-arg-ptr]]
.doc-save-global-vars
.doc-reset-args
.box doc-box-dBla
.ev doc-env-dBla
.evc 0
.in 0
.nf
.nop \*[doc-str-dBla]
.br
.ev
.box
.doc-restore-global-vars
.ds doc-arg\n[doc-num-columns] "\h'\n[dl]u'
.\}
.el \
.ds doc-arg\n[doc-num-columns] "\*[doc-arg\n[doc-arg-ptr]]
.\}
.el \{\
.tmc mdoc warning: Unknown keyword '\*[doc-arg\n[doc-arg-ptr]]'
.tm1 " in .Bl macro (#\n[.c])
.\}\}
.if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \
.doc-do-Bl-args
..
.de doc-save-global-vars
.ds doc-macro-name-saved "\*[doc-macro-name]
.nr doc-arg-limit-saved \n[doc-arg-limit]
.nr doc-num-args-saved \n[doc-num-args]
.nr doc-arg-ptr-saved \n[doc-arg-ptr]
.nr doc-reg-dsgv 1
.while (\n[doc-reg-dsgv] <= \n[doc-arg-limit]) \{\
.ds doc-arg\n[doc-reg-dsgv]-saved "\*[doc-arg\n[doc-reg-dsgv]]
.nr doc-type\n[doc-reg-dsgv]-saved \n[doc-type\n[doc-reg-dsgv]]
.ds doc-space\n[doc-reg-dsgv]-saved "\*[doc-space\n[doc-reg-dsgv]]
.nr doc-reg-dsgv +1
.\}
.nr doc-curr-font-saved \n[doc-curr-font]
.nr doc-curr-size-saved \n[doc-curr-size]
.nr doc-in-synopsis-section-saved \n[doc-in-synopsis-section]
.nr doc-in-library-section-saved \n[doc-in-library-section]
.nr doc-indent-synopsis-saved \n[doc-indent-synopsis]
.nr doc-indent-synopsis-active-saved \n[doc-indent-synopsis-active]
.nr doc-have-decl-saved \n[doc-have-decl]
.nr doc-have-var-saved \n[doc-have-var]
.ds doc-command-name-saved "\*[doc-command-name]
.ds doc-quote-left-saved "\*[doc-quote-left]
.ds doc-quote-right-saved "\*[doc-quote-right]
.nr doc-nesting-level-saved \n[doc-nesting-level]
.nr doc-in-list-saved \n[doc-in-list]
.ds doc-space-saved "\*[doc-space]
.ds doc-saved-space-saved "\*[doc-saved-space]
.nr doc-space-mode-saved \n[doc-space-mode]
.nr doc-have-space-saved \n[doc-have-space]
.nr doc-have-slot-saved \n[doc-have-slot]
.nr doc-keep-type-saved \n[doc-keep-type]
