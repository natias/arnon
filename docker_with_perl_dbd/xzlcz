
L<ExtUtils::ParseXS> has been upgraded from version 3.31 to 3.34.

=item *

L<ExtUtils::Typemaps> has been upgraded from version 3.31 to 3.34.

=item *

L<feature> has been upgraded from version 1.42 to 1.47.

=item *

L<File::Copy> has been upgraded from version 2.31 to 2.32.

=item *

L<File::Fetch> has been upgraded from version 0.48 to 0.52.

=item *

L<File::Glob> has been upgraded from version 1.26 to 1.28.

It now Issues a deprecation message for C<File::Glob::glob()>.

=item *

L<File::Spec> has been upgraded from version 3.63 to 3.67.

=item *

L<FileHandle> has been upgraded from version 2.02 to 2.03.

=item *

L<Filter::Simple> has been upgraded from version 0.92 to 0.93.

It no longer treats C<no MyFilter> immediately following C<use MyFilter> as
end-of-file.
L<[GH #11853]|https://github.com/Perl/perl5/issues/11853>

=item *

L<Getopt::Long> has been upgraded from version 2.48 to 2.49.

=item *

L<Getopt::Std> has been upgraded from version 1.11 to 1.12.

=item *

L<Hash::Util> has been upgraded from version 0.19 to 0.22.

=item *

L<HTTP::Tiny> has been upgraded from version 0.056 to 0.070.

Internal 599-series errors now include the redirect history.

=item *

L<I18N::LangTags> has been upgraded from version 0.40 to 0.42.

It now uses 3-arg C<open()> instead of 2-arg C<open()>.
L<[GH #15721]|https://github.com/Perl/perl5/issues/15721>

=item *

L<IO> has been upgraded from version 1.36 to 1.38.

=item *

L<IO::Socket::IP> has been upgraded from version 0.37 to 0.38.

=item *

L<IPC::Cmd> has been upgraded from version 0.92 to 0.96.

=item *

L<IPC::SysV> has been upgraded from version 2.06_01 to 2.07.

=item *

L<JSON::PP> has been upgraded from version 2.27300 to 2.27400_02.

=item *

L<lib> has been upgraded from version 0.63 to 0.64.

It now uses 3-arg C<open()> instead of 2-arg C<open()>.
L<[GH #15721]|https://github.com/Perl/perl5/issues/15721>

=item *

L<List::Util> has been upgraded from version 1.42_02 to 1.46_02.

=item *

L<Locale::Codes> has been upgraded from version 3.37 to 3.42.

=item *

L<Locale::Maketext> has been upgraded from version 1.26 to 1.28.

=item *

L<Locale::Maketext::Simple> has been upgraded from version 0.21 to 0.21_01.

=item *

L<Math::BigInt> has been upgraded from version 1.999715 to 1.999806.

=item *

L<Math::BigInt::FastCalc> has been upgraded from version 0.40 to 0.5005.

=item *

L<Math::BigRat> has been upgraded from version 0.260802 to 0.2611.

=item *

L<Math::Complex> has been upgraded from version 1.59 to 1.5901.

=item *

L<Memoize> has been upgraded from version 1.03 to 1.03_01.

=item *

L<Module::CoreList> has been upgraded from version 5.20170420 to 5.20170530.

=item *

L<Module::Load::Conditional> has been upgraded from version 0.64 to 0.68.

=item *

L<Module::Metadata> has been upgraded from version 1.000031 to 1.000033.

=item *

L<mro> has been upgraded from version 1.18 to 1.20.

=item *

L<Net::Ping> has been upgraded from version 2.43 to 2.55.

IPv6 addresses and C<AF_INET6> sockets are now supported, along with several
other enhancements.

=item *

L<NEXT> has been upgraded from version 0.65 to 0.67.

=item *

L<Opcode> has been upgraded from version 1.34 to 1.39.

=item *

L<open> has been upgraded from version 1.10 to 1.11.

=item *

L<OS2::Process> has been upgraded from version 1.11 to 1.12.

It now uses 3-arg C<open()> instead of 2-arg C<open()>.
L<[GH #15721]|https://github.com/Perl/perl5/issues/15721>

=item *

L<overload> has been upgraded from version 1.26 to 1.28.

Its compilation speed has been improved slightly.

=item *

L<parent> has been upgraded from version 0.234 to 0.236.

=item *

L<perl5db.pl> has been upgraded from version 1.50 to 1.51.

It now ignores F</dev/tty> on non-Unix systems.
L<[GH #12244]|https://github.com/Perl/perl5/issues/12244>

=item *

L<Perl::OSType> has been upgraded from version 1.009 to 1.010.

=item *

L<perlfaq> has been upgraded from version 5.021010 to 5.021011.

=item *

L<PerlIO> has been upgraded from version 1.09 to 1.10.

=item *

L<PerlIO::encoding> has been upgraded from version 0.24 to 0.25.

=item *

L<PerlIO::scalar> has been upgraded from version 0.24 to 0.26.

=item *

L<Pod::Checker> has been upgraded from version 1.60 to 1.73.

=item *

L<Pod::Functions> has been upgraded from version 1.10 to 1.11.

=item *

L<Pod::Html> has been upgraded from version 1.22 to 1.2202.

=item *

L<Pod::Perldoc> has been upgraded from version 3.25_02 to 3.28.

=item *

L<Pod::Simple> has been upgraded from version 3.32 to 3.35.

=item *

L<Pod::Usage> has been upgraded from version 1.68 to 1.69.

=item *

L<POSIX> has been upgraded from version 1.65 to 1.76.

This remedies several defects in making its symbols exportable.
L<[GH #15260]|https://github.com/Perl/perl5/issues/15260>

The C<POSIX::tmpnam()> interface has been removed,
see L</"POSIX::tmpnam() has been removed">.

The following deprecated functions have been removed:

    POSIX::isalnum
    POSIX::isalpha
    POSIX::iscntrl
    POSIX::isdigit
    POSIX::isgraph
    POSIX::islower
    POSIX::isprint
    POSIX::ispunct
    POSIX::isspace
    POSIX::isupper
    POSIX::isxdigit
    POSIX::tolower
    POSIX::toupper

Trying to import POSIX subs that have no real implementations
(like C<POSIX::atend()>) now fails at import time, instead of
waiting until runtime.

=item *

L<re> has been upgraded from version 0.32 to 0.34

This adds support for the new L<C<E<47>xx>|perlre/E<sol>x and E<sol>xx>
regular expression pattern modifier, and a change to the L<S<C<use re
'strict'>>|re/'strict' mode> experimental feature.  When S<C<re
'strict'>> is enabled, a warning now will be generated for all
unescaped uses of the two characters C<"}"> and C<"]"> in regular
expression patterns (outside bracketed character classes) that are taken
literally.  This brings them more in line with the C<")"> character which
is always a metacharacter unless escaped.  Being a metacharacter only
sometimes, depending on an action at a distance, can lead to silently
having the pattern mean something quite different than was intended,
which the S<C<re 'strict'>> mode is intended to minimize.

=item *

L<Safe> has been upgraded from version 2.39 to 2.40.

=item *

L<Scalar::Util> has been upgraded from version 1.42_02 to 1.46_02.

=item *

L<Storable> has been upgraded from version 2.56 to 2.62.

Fixes
L<[GH #15714]|https://github.com/Perl/perl5/issues/15714>.

=item *

L<Symbol> has been upgraded from version 1.07 to 1.08.

=item *

L<Sys::Syslog> has been upgraded from version 0.33 to 0.35.

=item *

L<Term::ANSIColor> has been upgraded from version 4.04 to 4.06.

=item *

L<Term::ReadLine> has been upgraded from version 1.15 to 1.16.

It now uses 3-arg C<open()> instead of 2-arg C<open()>.
L<[GH #15721]|https://github.com/Perl/perl5/issues/15721>

=item *

L<Test> has been upgraded from version 1.28 to 1.30.

It now uses 3-arg C<open()> instead of 2-arg C<open()>.
L<[GH #15721]|https://github.com/Perl/perl5/issues/15721>

=item *

L<Test::Harness> has been upgraded from version 3.36 to 3.38.

=item *

L<Test::Simple> has been upgraded from version 1.001014 to 1.302073.

=item *

L<Thread::Queue> has been upgraded from version 3.09 to 3.12.

=item *

L<Thread::Semaphore> has been upgraded from 2.12 to 2.13.

Added the C<down_timed> method.

=item *

L<threads> has been upgraded from version 2.07 to 2.15.

=item *

L<threads::shared> has been upgraded from version 1.51 to 1.56.

=item *

L<Tie::Hash::NamedCapture> has been upgraded from version 0.09 to 0.10.

=item *

L<Time::HiRes> has been upgraded from version 1.9733 to 1.9741.

It now builds on systems with C++11 compilers (such as G++ 6 and Clang++
3.9).

Now uses C<clockid_t>.

=item *

L<Time::Local> has been upgraded from version 1.2300 to 1.25.

=item *

L<Unicode::Collate> has been upgraded from version 1.14 to 1.19.

=item *

L<Unicode::UCD> has been upgraded from version 0.64 to 0.68.

It now uses 3-arg C<open()> instead of 2-arg C<open()>.
L<[GH #15721]|https://github.com/Perl/perl5/issues/15721>

=item *

L<version> has been upgraded from version 0.9916 to 0.9917.

=item *

L<VMS::DCLsym> has been upgraded from version 1.06 to 1.08.

It now uses 3-arg C<open()> instead of 2-arg C<open()>.
L<[GH #15721]|https://github.com/Perl/perl5/issues/15721>

=item *

L<warnings> has been upgraded from version 1.36 to 1.37.

=item *

L<XS::Typemap> has been upgraded from version 0.14 to 0.15.

=item *

L<XSLoader> has been upgraded from version 0.21 to 0.27.

Fixed a security hole in which binary files could be loaded from a path
outside of L<C<@INC>|perlvar/@INC>.

It now uses 3-arg C<open()> instead of 2-arg C<open()>.
L<[GH #15721]|https://github.com/Perl/perl5/issues/15721>

=back

=head1 Documentation

=head2 New Documentation

=head3 L<perldeprecation>

This file documents all upcoming deprecations, and some of the deprecations
which already have been removed.  The purpose of this documentation is
two-fold: document what will disappear, and by which version, and serve
as a guide for people dealing with code which has features that no longer
work after an upgrade of their perl.

=head2 Changes to Existing Documentation

We have attempted to update the documentation to reflect the changes
listed in this document.  If you find any we have missed, send email to
L<perlbug@perl.org|mailto:perlbug@perl.org>.

Additionally, all references to Usenet have been removed, and the
following selected changes have been made:

=head3 L<perlfunc>

=over 4

=item *

Removed obsolete text about L<C<defined()>|perlfunc/defined>
on aggregates that should have been deleted earlier, when the feature
was removed.

=item *

Corrected documentation of L<C<eval()>|perlfunc/eval>,
and L<C<evalbytes()>|perlfunc/evalbytes>.

=item *

Clarified documentation of L<C<seek()>|perlfunc/seek>,
L<C<tell()>|perlfunc/tell> and L<C<sysseek()>|perlfunc/sysseek>
emphasizing that positions are in bytes and not characters.
L<[GH #15438]|https://github.com/Perl/perl5/issues/15438>

=item *

Clarified documentation of L<C<sort()>|perlfunc/sort LIST> concerning
the variables C<$a> and C<$b>.

=item *

In L<C<split()>|perlfunc/split> noted that certain pattern modifiers are
legal, and added a caution about its use in Perls before v5.11.

=item *

Removed obsolete documentation of L<C<study()>|perlfunc/study>, noting
that it is now a no-op.

=item *

Noted that L<C<vec()>|perlfunc/vec> doesn't work well when the string
contains characters whose code points are above 255.

=back

=head3 L<perlguts>

=over 4

=item *

Added advice on
L<formatted printing of operands of C<Size_t> and C<SSize_t>|perlguts/Formatted Printing of Size_t and SSize_t>

=back

=head3 L<perlhack>

=over 4

=item *

Clarify what editor tab stop rules to use, and note that we are
migrating away from using tabs, replacing them with sequences of SPACE
characters.

=back

=head3 L<perlhacktips>

=over 4

=item *

Give another reason to use C<cBOOL> to cast an expression to boolean.

=item *

Note that the macros C<TRUE> and C<FALSE> are available to express
boolean values.

=back

=head3 L<perlinterp>

=over 4

=item *

L<perlinterp> has been expanded to give a more detailed example of how to
hunt around in the parser for how a given operator is handled.

=back

=head3 L<perllocale>

=over 4

=item *

Some locales aren't compatible with Perl.  Note that these can cause
core dumps.

=back

=head3 L<perlmod>

=over 4

=item *

Various clarifications have been added.

=back

=head3 L<perlmodlib>

=over 4

=item *

Updated the site mirror list.

=back

=head3 L<perlobj>

=over 4

=item *

Added a section on calling methods using their fully qualified names.

=item *

Do not discourage manual C<@ISA>.

=back

=head3 L<perlootut>

=over 4

=item *

Mention C<Moo> more.

=back

=head3 L<perlop>

=over 4

=item *

Note that white space must be used for quoting operators if the
delimiter is a word character (I<i.e.>, matches C<\w>).

=item *

Clarify that in regular expression patterns delimited by single quotes,
no variable interpolation is done.

=back

=head3 L<perlre>

=over 4

=item *

The first part was extensively rewritten to incorporate various basic
points, that in earlier versions were mentioned in sort of an appendix
on Version 8 regular expressions.

=item *

Note that it is common to have the C</x> modifier and forget that this
means that C<"#"> has to be escaped.

=back

=head3 L<perlretut>

=over 4

=item *

Add introductory material.

=item *

Note that a metacharacter occurring in a context where it can't mean
that, silently loses its meta-ness and matches literally.
L<C<use re 'strict'>|re/'strict' mode> can catch some of these.

=back

=head3 L<perlunicode>

=over 4

=item *

Corrected the text about Unicode BYTE ORDER MARK handling.

=item *

Updated the text to correspond with changes in Unicode UTS#18, concerning
regular expressions, and Perl compatibility with what it says.

=back

=head3 L<perlvar>

=over 4

=item *

Document C<@ISA>.  It was documented in other places, but not in L<perlvar>.

=back

=head1 Diagnostics

=head2 New Diagnostics

=head3 New Errors

=over 4

=item *

L<A signature parameter must start with C<'$'>, C<'@'> or C<'%'>
|perldiag/A signature parameter must start with C<'$'>, C<'@'> or C<'%'>>

=item *

L<Bareword in require contains "%s"|perldiag/"Bareword in require contains "%s"">

=item *

L<Bareword in require maps to empty filename|perldiag/"Bareword in require maps to empty filename">

=item *

L<Bareword in require maps to disallowed filename "%s"|perldiag/"Bareword in require maps to disallowed filename "%s"">

=item *

L<Bareword in require must not start with a double-colon: "%s"|perldiag/"Bareword in require must not start with a double-colon: "%s"">

=item *

L<%s: command not found|perldiag/"%s: command not found">

(A) You've accidentally run your script through B<bash> or another shell
instead of Perl.  Check the C<#!> line, or manually feed your script into
Perl yourself.  The C<#!> line at the top of your file could look like:

  #!/usr/bin/perl

=item *

L<%s: command not found: %s|perldiag/"%s: command not found: %s">

(A) You've accidentally run your script through B<zsh> or another shell
instead of Perl.  Check the C<#!> line, or manually feed your script into
Perl yourself.  The C<#!> line at the top of your file could look like:

  #!/usr/bin/perl

=item *

L<The experimental declared_refs feature is not enabled|perldiag/"The experimental declared_refs feature is not enabled">

(F) To declare references to variables, as in C<my \%x>, you must first enable
the feature:

    no warnings "experimental::declared_refs";
    use feature "declared_refs";

See L</Declaring a reference to a variable>.

=item *

L<Illegal character following sigil in a subroutine signature
|perldiag/Illegal character following sigil in a subroutine signature>

=item *

L<Indentation on line %d of here-doc doesn't match delimiter
|perldiag/Indentation on line %d of here-doc doesn't match delimiter>

=item *

L<Infinite recursion via empty pattern|perldiag/"Infinite recursion via empty pattern">.

Using the empty pattern (which re-executes the last successfully-matched
pattern) inside a code block in another regex, as in C</(?{ s!!new! })/>, has
always previously yielded a segfault.  It now produces this error.

=item *

L<Malformed UTF-8 string in "%s"
|perldiag/Malformed UTF-8 string in "%s">

=item *

L<Multiple slurpy parameters not allowed
|perldiag/Multiple slurpy parameters not allowed>

=item *

L<C<'#'> not allowed immediately following a sigil in a subroutine signature
|perldiag/C<'#'> not allowed immediately following a sigil in a subroutine signature>

=item *

L<panic: unknown OA_*: %x
|perldiag/panic: unknown OA_*: %x>

=item *

L<Unescaped left brace in regex is illegal here|perldiag/Unescaped left brace in regex is illegal here in regex; marked by S<E<lt>-- HERE> in mE<sol>%sE<sol>>

Unescaped left braces are now illegal in some contexts in regular expression
patterns.  In other contexts, they are still just deprecated; they will
be illegal in Perl 5.30.

=item *

L<Version control conflict marker|perldiag/"Version control conflict marker">

(F) The parser found a line starting with C<E<lt>E<lt>E<lt>E<lt>E<lt>E<lt>E<lt>>,
C<E<gt>E<gt>E<gt>E<gt>E<gt>E<gt>E<gt>>, or C<=======>.  These may be left by a
version control system to mark conflicts after a failed merge operation.

=back

=head3 New Warnings

=over 4

=item *

L<Can't determine class of operator %s, assuming C<BASEOP>
|perldiag/Can't determine class of operator %s, assuming C<BASEOP>>

=item *

L<Declaring references is experimental|perldiag/"Declaring references is experimental">

(S experimental::declared_refs) This warning is emitted if you use a reference
constructor on the right-hand side of C<my()>, C<state()>, C<our()>, or
C<local()>.  Simply suppress the warning if you want to use the feature, but
know that in doing so you are taking the risk of using an experimental feature
which may change or be removed in a future Perl version:

    no warnings "experimental::declared_refs";
    use feature "declared_refs";
    $fooref = my \$foo;

See L</Declaring a reference to a variable>.

=item *

L<do "%s" failed, '.' is no longer in @INC|perldiag/do "%s" failed, '.' is no longer in @INC; did you mean do ".E<sol>%s"?>

Since C<"."> is now removed from C<@INC> by default, C<do> will now trigger a warning recommending to fix the C<do> statement.

=item *

L<C<File::Glob::glob()> will disappear in perl 5.30. Use C<File::Glob::bsd_glob()> instead.
|perldiag/C<File::Glob::glob()> will disappear in perl 5.30. Use C<File::Glob::bsd_glob()> instead.>

=item *

L<Unescaped literal '%c' in regex; marked by E<lt>-- HERE in mE<sol>%sE<sol>
|perldiag/Unescaped literal '%c' in regex; marked by <-- HERE in mE<sol>%sE<sol>>

=item *

L<Use of unassigned code point or non-standalone grapheme for a delimiter will be a fatal error starting in Perl 5.30|perldiag/"Use of unassigned code point or non-standalone grapheme for a delimiter will be a fatal error starting in Perl 5.30">

See L</Deprecations>

=back

=head2 Changes to Existing Diagnostics

=over 4

=item *

When a C<require> fails, we now do not provide C<@INC> when the C<require>
is for a file instead of a module.

=item *

When C<@INC> is not scanned for a C<require> call, we no longer display
C<@INC> to avoid confusion.

=item *

L<Attribute "locked" is deprecated, and will disappear in Perl 5.28
|perldiag/Attribute "locked" is deprecated, and will disappear in Perl 5.28>

This existing warning has had the I<and will disappear> text added in this
release.

=item *

L<Attribute "unique" is deprecated, and will disappear in Perl 5.28
|perldiag/Attribute "unique" is deprecated, and will disappear in Perl 5.28>

This existing warning has had the I<and will disappear> text added in this
release.

=item *

Calling POSIX::%s() is deprecated

This warning has been removed, as the deprecated functions have been
removed from POSIX.

=item *

L<Constants from lexical variables potentially modified elsewhere are deprecated. This will not be allowed in Perl 5.32
|perldiag/Constants from lexical variables potentially modified elsewhere are deprecated. This will not be allowed in Perl 5.32>

This existing warning has had the I<this will not be allowed> text added
in this release.

=item *

L<Deprecated use of C<my()> in false conditional. This will be a fatal error in Perl 5.30
|perldiag/Deprecated use of C<my()> in false conditional. This will be a fatal error in Perl 5.30>

This existing warning has had the I<this will be a fatal error> text added
in this release.

=item *

L<C<dump()> better written as C<CORE::dump()>. C<dump()> will no longer be available in Perl 5.30
|perldiag/C<dump()> better written as C<CORE::dump()>. C<dump()> will no longer be available in Perl 5.30>

This existing warning has had the I<no longer be available> text added in
this release.

=item *

L<Experimental %s on scalar is now forbidden
|perldiag/Experimental %s on scalar is now forbidden>

This message is now followed by more helpful text.
L<[GH #15291]|https://github.com/Perl/perl5/issues/15291>

=item *

Experimental "%s" subs not enabled

This warning was been removed, as lexical subs are no longer experimental.

=item *

Having more than one /%c regexp modifier is deprecated

This deprecation warning has been removed, since C</xx> now has a new
meaning.

=item *

L<%s() is deprecated on C<:utf8> handles. This will be a fatal error in Perl 5.30
|perldiag/%s() is deprecated on C<:utf8> handles. This will be a fatal error in Perl 5.30>.

where "%s" is one of C<sysread>, C<recv>, C<syswrite>, or C<send>.

This existing warning has had the I<this will be a fatal error> text added
in this release.

This warning is now enabled by default, as all C<deprecated> category
warnings should be.

=item *

L<C<$*> is no longer supported. Its use will be fatal in Perl 5.30
|perldiag/C<$*> is no longer supported. Its use will be fatal in Perl 5.30>

This existing warning has had the I<its use will be fatal> text added in
this release.

=item *

L<C<$#> is no longer supported. Its use will be fatal in Perl 5.30
|perldiag/C<$#> is no longer supported. Its use will be fatal in Perl 5.30>

This existing warning has had the I<its use will be fatal> text added in
this release.

=item *

L<Malformed UTF-8 character%s
|perldiag/Malformed UTF-8 character%s>

Details as to the exact problem have been added at the end of this
message

=item *

L<Missing or undefined argument to %s
|perldiag/Missing or undefined argument to %s>

This warning used to warn about C<require>, even if it was actually C<do>
which being executed. It now gets the operation name right.

=item *

NO-BREAK SPACE in a charnames alias definition is deprecated

This warning has been removed as the behavior is now an error.

=item *

L<Odd nameE<sol>value argument for subroutine '%s'
|perldiag/"Odd nameE<sol>value argument for subroutine '%s'">

This warning now includes the name of the offending subroutine.

=item *

L<Opening dirhandle %s also as a file. This will be a fatal error in Perl 5.28
|perldiag/Opening dirhandle %s also as a file. This will be a fatal error in Perl 5.28>

This existing warning has had the I<this will be a fatal error> text added
in this release.

=item *

L<Opening filehandle %s also as a directory. This will be a fatal error in Perl 5.28
|perldiag/Opening filehandle %s also as a directory. This will be a fatal error in Perl 5.28>

This existing warning has had the I<this will be a fatal error> text added
in this release.

=item *

panic: ck_split, type=%u

panic: pp_split, pm=%p, s=%p

These panic errors have been removed.

=item *

Passing malformed UTF-8 to "%s" is deprecated

This warning has been changed to the fatal
L<Malformed UTF-8 string in "%s"
|perldiag/Malformed UTF-8 string in "%s">

=item *

L<Setting C<< $E<sol> >> to a reference to %s as a form of slurp is deprecated, treating as undef. This will be fatal in Perl 5.28
|perldiag/Setting C<< $E<sol> >> to a reference to %s as a form of slurp is deprecated, treating as undef. This will be fatal in Perl 5.28>

This existing warning has had the I<this will be fatal> text added in
this release.

=item *

L<C<${^ENCODING}> is no longer supported. Its use will be fatal in Perl 5.28|perldiag/"${^ENCODING} is no longer supported. Its use will be fatal in Perl 5.28">

This warning used to be: "Setting C<${^ENCODING}> is deprecated".

The special action of the variable C<${^ENCODING}> was formerly used to
