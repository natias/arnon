
From F<Loc.U>:

This variable is used internally by Configure to determine the
full pathname (if any) of the uniq program.  After Configure runs,
the value is reset to a plain C<uniq> and is not useful.

=item C<uquadtype>

From F<quadtype.U>:

This variable defines Uquad_t to be something like unsigned long,
unsigned int, unsigned long long, uint64_t, or whatever type is
used for 64-bit integers.

=item C<use64bitall>

From F<use64bits.U>:

This variable conditionally defines the USE_64_BIT_ALL symbol,
and indicates that 64-bit integer types should be used
when available.  The maximal possible
64-bitness is employed: LP64 or ILP64, meaning that you will
be able to use more than 2 gigabytes of memory.  This mode is
even more binary incompatible than USE_64_BIT_INT. You may not
be able to run the resulting executable in a 32-bit C<CPU> at all or
you may need at least to reboot your C<OS> to 64-bit mode.

=item C<use64bitint>

From F<use64bits.U>:

This variable conditionally defines the USE_64_BIT_INT symbol,
and indicates that 64-bit integer types should be used
when available.  The minimal possible 64-bitness
is employed, just enough to get 64-bit integers into Perl.
This may mean using for example "long longs", while your memory
may still be limited to 2 gigabytes.

=item C<usecbacktrace>

From F<usebacktrace.U>:

This variable indicates whether we are compiling with backtrace
support.

=item C<usecrosscompile>

From F<Cross.U>:

This variable conditionally defines the C<USE_CROSS_COMPILE> symbol,
and indicates that Perl has been cross-compiled.

=item C<usedefaultstrict>

From F<usedefaultstrict.U>:

This setting provides a mechanism for perl developers to enable
strict by default. These defaults do not apply when perl is run
via -e or -E.

=item C<usedevel>

From F<Devel.U>:

This variable indicates that Perl was configured with development
features enabled.  This should not be done for production builds.

=item C<usedl>

From F<dlsrc.U>:

This variable indicates if the system supports dynamic
loading of some sort.  See also dlsrc and dlobj.

=item C<usedtrace>

From F<usedtrace.U>:

This variable indicates whether we are compiling with dtrace
support. See also dtrace.

=item C<usefaststdio>

From F<usefaststdio.U>:

This variable conditionally defines the C<USE_FAST_STDIO> symbol,
and indicates that Perl should be built to use C<fast stdio>.
Defaults to define in Perls 5.8 and earlier, to undef later.

=item C<useithreads>

From F<usethreads.U>:

This variable conditionally defines the C<USE_ITHREADS> symbol,
and indicates that Perl should be built to use the interpreter-based
threading implementation.

=item C<usekernprocpathname>

From F<usekernprocpathname.U>:

This variable, indicates that we can use sysctl with
C<KERN_PROC_PATHNAME> to get a full path for the executable, and hence
convert $^X to an absolute path.

=item C<uselanginfo>

From F<Extensions.U>:

This variable holds either C<true> or C<false> to indicate
whether the I18N::Langinfo extension should be used.  The sole
use for this currently is to allow an easy mechanism for users to skip
this extension from the Configure command line.

=item C<uselargefiles>

From F<uselfs.U>:

This variable conditionally defines the C<USE_LARGE_FILES> symbol,
and indicates that large file interfaces should be used when
available.

=item C<uselongdouble>

From F<uselongdbl.U>:

This variable conditionally defines the C<USE_LONG_DOUBLE> symbol,
and indicates that long doubles should be used when available.

=item C<usemallocwrap>

From F<mallocsrc.U>:

This variable contains y if we are wrapping malloc to prevent
integer overflow during size calculations.

=item C<usemorebits>

From F<usemorebits.U>:

This variable conditionally defines the C<USE_MORE_BITS> symbol,
and indicates that explicit 64-bit interfaces and long doubles
should be used when available.

=item C<usemultiplicity>

From F<usemultiplicity.U>:

This variable conditionally defines the C<MULTIPLICITY> symbol,
and indicates that Perl should be built to use multiplicity.

=item C<usemymalloc>

From F<mallocsrc.U>:

This variable contains y if the malloc that comes with this package
is desired over the system's version of malloc.  People often include
special versions of malloc for efficiency, but such versions are often
less portable.  See also mallocsrc and mallocobj.
If this is C<y>, then -lmalloc is removed from $libs.

=item C<usenm>

From F<usenm.U>:

This variable contains C<true> or C<false> depending whether the
nm extraction is wanted or not.

=item C<usensgetexecutablepath>

From F<usensgetexecutablepath.U>:

This symbol, if defined, indicates that we can use _NSGetExecutablePath
and realpath to get a full path for the executable, and hence convert
$^X to an absolute path.

=item C<useopcode>

From F<Extensions.U>:

This variable holds either C<true> or C<false> to indicate
whether the Opcode extension should be used.  The sole
use for this currently is to allow an easy mechanism
for users to skip the Opcode extension from the Configure
command line.

=item C<useperlio>

From F<useperlio.U>:

This variable conditionally defines the C<USE_PERLIO> symbol,
and indicates that the PerlIO abstraction should be
used throughout.

=item C<useposix>

From F<Extensions.U>:

This variable holds either C<true> or C<false> to indicate
whether the C<POSIX> extension should be used.  The sole
use for this currently is to allow an easy mechanism
for hints files to indicate that C<POSIX> will not compile
on a particular system.

=item C<usequadmath>

From F<usequadmath.U>:

This variable conditionally defines the C<USE_QUADMATH> symbol,
and indicates that the quadmath library __float128 long doubles
should be used when available.

=item C<usereentrant>

From F<usethreads.U>:

This variable conditionally defines the C<USE_REENTRANT_API> symbol,
which indicates that the thread code may try to use the various
_r versions of library functions.  This is only potentially
meaningful if usethreads is set and is very experimental, it is
not even prompted for.

=item C<userelocatableinc>

From F<bin.U>:

This variable is set to true to indicate that perl should relocate
@C<INC> entries at runtime based on the path to the perl binary.
Any @C<INC> paths starting F<.../> are relocated relative to the directory
containing the perl binary, and a logical cleanup of the path is then
made around the join point (removing F<dir/../> pairs)

=item C<useshrplib>

From F<libperl.U>:

This variable is set to C<true> if the user wishes
to build a shared libperl, and C<false> otherwise.

=item C<usesitecustomize>

From F<d_sitecustomize.U>:

This variable is set to true when the user requires a mechanism that
allows the sysadmin to add entries to @C<INC> at runtime.  This variable
being set, makes perl run F<$sitelib/sitecustomize.pl> at startup.

=item C<usesocks>

From F<usesocks.U>:

This variable conditionally defines the C<USE_SOCKS> symbol,
and indicates that Perl should be built to use C<SOCKS>.

=item C<usethreads>

From F<usethreads.U>:

This variable conditionally defines the C<USE_THREADS> symbol,
and indicates that Perl should be built to use threads.

=item C<usevendorprefix>

From F<vendorprefix.U>:

This variable tells whether the vendorprefix
and consequently other vendor* paths are in use.

=item C<useversionedarchname>

From F<archname.U>:

This variable indicates whether to include the $api_versionstring
as a component of the $archname.

=item C<usevfork>

From F<d_vfork.U>:

This variable is set to true when the user accepts to use vfork.
It is set to false when no vfork is available or when the user
explicitly requests not to use vfork.

=item C<usrinc>

From F<usrinc.U>:

This variable holds the path of the include files, which is
usually F</usr/include>. It is mainly used by other Configure units.

=item C<uuname>

From F<Loc.U>:

This variable is defined but not used by Configure.
The value is the empty string and is not useful.

=item C<uvXUformat>

From F<perlxvf.U>:

This variable contains the format string used for printing
a Perl C<UV> as an unsigned hexadecimal integer in uppercase C<ABCDEF>.

=item C<uvoformat>

From F<perlxvf.U>:

This variable contains the format string used for printing
a Perl C<UV> as an unsigned octal integer.

=item C<uvsize>

From F<perlxv.U>:

This variable is the size of a C<UV> in bytes.

=item C<uvtype>

From F<perlxv.U>:

This variable contains the C type used for Perl's C<UV>.

=item C<uvuformat>

From F<perlxvf.U>:

This variable contains the format string used for printing
a Perl C<UV> as an unsigned decimal integer.

=item C<uvxformat>

From F<perlxvf.U>:

This variable contains the format string used for printing
a Perl C<UV> as an unsigned hexadecimal integer in lowercase abcdef.

=back

=head2 v

=over 4

=item C<vendorarch>

From F<vendorarch.U>:

This variable contains the value of the C<PERL_VENDORARCH> symbol.
It may have a F<~> on the front.
The standard distribution will put nothing in this directory.
Vendors who distribute perl may wish to place their own
architecture-dependent modules and extensions in this directory with
MakeMaker F<Makefile.PL> C<INSTALLDIRS>=vendor
or equivalent.  See C<INSTALL> for details.

=item C<vendorarchexp>

From F<vendorarch.U>:

This variable is the F<~name> expanded version of vendorarch, so that you
may use it directly in Makefiles or shell scripts.

=item C<vendorbin>

From F<vendorbin.U>:

This variable contains the eventual value of the C<VENDORBIN> symbol.
It may have a F<~> on the front.
The standard distribution will put nothing in this directory.
Vendors who distribute perl may wish to place additional
binaries in this directory with
MakeMaker F<Makefile.PL> C<INSTALLDIRS>=vendor
or equivalent.  See C<INSTALL> for details.

=item C<vendorbinexp>

From F<vendorbin.U>:

This variable is the F<~name> expanded version of vendorbin, so that you
may use it directly in Makefiles or shell scripts.

=item C<vendorhtml1dir>

From F<vendorhtml1dir.U>:

This variable contains the name of the directory for html
pages.  It may have a F<~> on the front.
The standard distribution will put nothing in this directory.
Vendors who distribute perl may wish to place their own
html pages in this directory with
MakeMaker F<Makefile.PL> C<INSTALLDIRS>=vendor
or equivalent.  See C<INSTALL> for details.

=item C<vendorhtml1direxp>

From F<vendorhtml1dir.U>:

This variable is the F<~name> expanded version of vendorhtml1dir, so that you
may use it directly in Makefiles or shell scripts.

=item C<vendorhtml3dir>

From F<vendorhtml3dir.U>:

This variable contains the name of the directory for html
library pages.  It may have a F<~> on the front.
The standard distribution will put nothing in this directory.
Vendors who distribute perl may wish to place their own
html pages for modules and extensions in this directory with
MakeMaker F<Makefile.PL> C<INSTALLDIRS>=vendor
or equivalent.  See C<INSTALL> for details.

=item C<vendorhtml3direxp>

From F<vendorhtml3dir.U>:

This variable is the F<~name> expanded version of vendorhtml3dir, so that you
may use it directly in Makefiles or shell scripts.

=item C<vendorlib>

From F<vendorlib.U>:

This variable contains the eventual value of the C<VENDORLIB> symbol,
which is the name of the private library for this package.
The standard distribution will put nothing in this directory.
Vendors who distribute perl may wish to place their own
modules in this directory with
MakeMaker F<Makefile.PL> C<INSTALLDIRS>=vendor
or equivalent.  See C<INSTALL> for details.

=item C<vendorlib_stem>

From F<vendorlib.U>:

This variable is $vendorlibexp with any trailing version-specific component
removed.  The elements in inc_version_list (F<inc_version_list.U>) can
be tacked onto this variable to generate a list of directories to search.

=item C<vendorlibexp>

From F<vendorlib.U>:

This variable is the F<~name> expanded version of vendorlib, so that you
may use it directly in Makefiles or shell scripts.

=item C<vendorman1dir>

From F<vendorman1dir.U>:

This variable contains the name of the directory for man1
pages.  It may have a F<~> on the front.
The standard distribution will put nothing in this directory.
Vendors who distribute perl may wish to place their own
man1 pages in this directory with
MakeMaker F<Makefile.PL> C<INSTALLDIRS>=vendor
or equivalent.  See C<INSTALL> for details.

=item C<vendorman1direxp>

From F<vendorman1dir.U>:

This variable is the F<~name> expanded version of vendorman1dir, so that you
may use it directly in Makefiles or shell scripts.

=item C<vendorman3dir>

From F<vendorman3dir.U>:

This variable contains the name of the directory for man3
pages.  It may have a F<~> on the front.
The standard distribution will put nothing in this directory.
Vendors who distribute perl may wish to place their own
man3 pages in this directory with
MakeMaker F<Makefile.PL> C<INSTALLDIRS>=vendor
or equivalent.  See C<INSTALL> for details.

=item C<vendorman3direxp>

From F<vendorman3dir.U>:

This variable is the F<~name> expanded version of vendorman3dir, so that you
may use it directly in Makefiles or shell scripts.

=item C<vendorprefix>

From F<vendorprefix.U>:

This variable holds the full absolute path of the directory below
which the vendor will install add-on packages.
See C<INSTALL> for usage and examples.

=item C<vendorprefixexp>

From F<vendorprefix.U>:

This variable holds the full absolute path of the directory below
which the vendor will install add-on packages.  Derived from vendorprefix.

=item C<vendorscript>

From F<vendorscript.U>:

This variable contains the eventual value of the C<VENDORSCRIPT> symbol.
It may have a F<~> on the front.
The standard distribution will put nothing in this directory.
Vendors who distribute perl may wish to place additional
executable scripts in this directory with
MakeMaker F<Makefile.PL> C<INSTALLDIRS>=vendor
or equivalent.  See C<INSTALL> for details.

=item C<vendorscriptexp>

From F<vendorscript.U>:

This variable is the F<~name> expanded version of vendorscript, so that you
may use it directly in Makefiles or shell scripts.

=item C<version>

From F<patchlevel.U>:

The full version number of this package, such as 5.6.1 (or 5_6_1).
This combines revision, patchlevel, and subversion to get the
full version number, including any possible subversions.
This is suitable for use as a directory name, and hence is
filesystem dependent.

=item C<version_patchlevel_string>

From F<patchlevel.U>:

This is a string combining version, subversion and
perl_patchlevel (if perl_patchlevel is non-zero).
It is typically something like
'version 7 subversion 1'  or
'version 7 subversion 1 patchlevel 11224'
It is computed here to avoid duplication of code in F<myconfig.SH>
and F<lib/Config.pm>.

=item C<versiononly>

From F<versiononly.U>:

If set, this symbol indicates that only the version-specific
components of a perl installation should be installed.
This may be useful for making a test installation of a new
version without disturbing the existing installation.
Setting versiononly is equivalent to setting installperl's -v option.
In particular, the non-versioned scripts and programs such as
a2p, c2ph, h2xs, pod2*, and perldoc are not installed
(see C<INSTALL> for a more complete list).  Nor are the man
pages installed.
Usually, this is undef.

=item C<vi>

From F<Loc.U>:

This variable is defined but not used by Configure.
The value is the empty string and is not useful.

=back

=head2 x

=over 4

=item C<xlibpth>

From F<libpth.U>:

This variable holds extra path (space-separated) used to find
libraries on this platform, for example C<CPU>-specific libraries
(on multi-C<CPU> platforms) may be listed here.

=item C<xlocale_needed>

From F<d_newlocale.U>:

This symbol, if defined, indicates that the C program should
include <xlocale.h> to get newlocale() and its friends.

=back

=head2 y

=over 4

=item C<yacc>

From F<yacc.U>:

This variable holds the name of the compiler compiler we
want to use in the Makefile. It can be yacc, byacc, or bison -y.

=item C<yaccflags>

From F<yacc.U>:

This variable contains any additional yacc flags desired by the
user.  It is up to the Makefile to use this.

=back

=head2 z

=over 4

=item C<zcat>

From F<Loc.U>:

This variable is defined but not used by Configure.
The value is the empty string and is not useful.

=item C<zip>

From F<Loc.U>:

This variable is used internally by Configure to determine the
full pathname (if any) of the zip program.  After Configure runs,
the value is reset to a plain C<zip> and is not useful.

=back


=head1 GIT DATA

Information on the git commit from which the current perl binary was compiled
can be found in the variable C<$Config::Git_Data>.  The variable is a
structured string that looks something like this:

  git_commit_id='ea0c2dbd5f5ac6845ecc7ec6696415bf8e27bd52'
  git_describe='GitLive-blead-1076-gea0c2db'
  git_branch='smartmatch'
  git_uncommitted_changes=''
  git_commit_id_title='Commit id:'
  git_commit_date='2009-05-09 17:47:31 +0200'

Its format is not guaranteed not to change over time.

=head1 NOTE

This module contains a good example of how to use tie to implement a
cache and an example of how to make a tied variable readonly to those
outside of it.

=cut

                                      usr/local/lib/perl5/5.40.0/x86_64-linux-gnu/Config_git.pl                                           0000444 0000000 0000000 00000000631 14714567415 020773  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        ######################################################################
# WARNING: 'lib/Config_git.pl' is generated by make_patchnum.pl
#          DO NOT EDIT DIRECTLY - edit make_patchnum.pl instead
######################################################################
$Config::Git_Data=<<'ENDOFGIT';
git_commit_id=''
git_describe=''
git_branch=''
git_uncommitted_changes=''
git_commit_id_title=''

ENDOFGIT
                                                                                                       usr/local/lib/perl5/5.40.0/x86_64-linux-gnu/Config_heavy.pl                                         0000444 0000000 0000000 00000151512 14714567415 021331  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        # This file was created by configpm when Perl was built. Any changes
# made to this file will be lost the next time perl is built.

package Config;
use strict;
use warnings;
our %Config;

sub bincompat_options {
    return split ' ', (Internals::V())[0];
}

sub non_bincompat_options {
    return split ' ', (Internals::V())[1];
}

sub compile_date {
    return (Internals::V())[2]
}

sub local_patches {
    my (undef, undef, undef, @patches) = Internals::V();
    return @patches;
}

sub _V {
    die "Perl lib was built for 'linux' but is being run on '$^O'"
        unless "linux" eq $^O;

    my ($bincompat, $non_bincompat, $date, @patches) = Internals::V();

    my @opts = sort split ' ', "$bincompat $non_bincompat";

    print Config::myconfig();
    print "\nCharacteristics of this binary (from libperl): \n";

    print "  Compile-time options:\n";
    print "    $_\n" for @opts;

    if (@patches) {
        print "  Locally applied patches:\n";
        print "    $_\n" foreach @patches;
    }

    print "  Built under linux\n";

    print "  $date\n" if defined $date;

    my @env = map { "$_=\"$ENV{$_}\"" } sort grep {/^PERL/} keys %ENV;

    if (@env) {
        print "  \%ENV:\n";
        print "    $_\n" foreach @env;
    }
    print "  \@INC:\n";
    print "    $_\n" foreach @INC;
}

sub header_files {
    return qw(EXTERN.h INTERN.h XSUB.h av.h config.h cop.h cv.h
              dosish.h embed.h embedvar.h form.h gv.h handy.h hv.h hv_func.h
              intrpvar.h iperlsys.h keywords.h mg.h nostdio.h op.h opcode.h
              pad.h parser.h patchlevel.h perl.h perlio.h perliol.h perlsdio.h
              perlvars.h perly.h pp.h pp_proto.h proto.h regcomp.h regexp.h
              regnodes.h scope.h sv.h thread.h time64.h unixish.h utf8.h
              util.h);
}

##
## This file was produced by running the Configure script. It holds all the
## definitions figured out by Configure. Should you modify one of these values,
## do not forget to propagate your changes by running "Configure -der". You may
## instead choose to run each of the .SH files by yourself, or "Configure -S".
##
#
## Package name      : perl5
## Source directory  : .
## Configuration time: Tue Nov 12 05:54:27 UTC 2024
## Configured by     : root
## Target system     : linux buildkitsandbox 6.5.0-1025-azure #26~22.04.1-ubuntu smp thu jul 11 22:33:04 utc 2024 x86_64 gnulinux 
#
#: Configure command line arguments.
#
#: Variables propagated from previous config.sh file.

our $summary = <<'!END!';
Summary of my $package (revision $revision $version_patchlevel_string) configuration:
  $git_commit_id_title $git_commit_id$git_ancestor_line
  Platform:
    osname=$osname
    osvers=$osvers
    archname=$archname
    uname='$myuname'
    config_args='$config_args'
    hint=$hint
    useposix=$useposix
    d_sigaction=$d_sigaction
    useithreads=$useithreads
    usemultiplicity=$usemultiplicity
    use64bitint=$use64bitint
    use64bitall=$use64bitall
    uselongdouble=$uselongdouble
    usemymalloc=$usemymalloc
    default_inc_excludes_dot=$default_inc_excludes_dot
  Compiler:
    cc='$cc'
    ccflags ='$ccflags'
    optimize='$optimize'
    cppflags='$cppflags'
    ccversion='$ccversion'
    gccversion='$gccversion'
    gccosandvers='$gccosandvers'
    intsize=$intsize
    longsize=$longsize
    ptrsize=$ptrsize
    doublesize=$doublesize
    byteorder=$byteorder
    doublekind=$doublekind
    d_longlong=$d_longlong
    longlongsize=$longlongsize
    d_longdbl=$d_longdbl
    longdblsize=$longdblsize
    longdblkind=$longdblkind
    ivtype='$ivtype'
    ivsize=$ivsize
    nvtype='$nvtype'
    nvsize=$nvsize
    Off_t='$lseektype'
    lseeksize=$lseeksize
    alignbytes=$alignbytes
    prototype=$prototype
  Linker and Libraries:
    ld='$ld'
    ldflags ='$ldflags'
    libpth=$libpth
    libs=$libs
    perllibs=$perllibs
    libc=$libc
    so=$so
    useshrplib=$useshrplib
    libperl=$libperl
    gnulibc_version='$gnulibc_version'
  Dynamic Linking:
    dlsrc=$dlsrc
    dlext=$dlext
    d_dlsymun=$d_dlsymun
    ccdlflags='$ccdlflags'
    cccdlflags='$cccdlflags'
    lddlflags='$lddlflags'

!END!
my $summary_expanded;

sub myconfig {
    return $summary_expanded if $summary_expanded;
    ($summary_expanded = $summary) =~ s{\$(\w+)}
                 {
                        my $c;
                        if ($1 eq 'git_ancestor_line') {
                                if ($Config::Config{git_ancestor}) {
                                        $c= "\n  Ancestor: $Config::Config{git_ancestor}";
                                } else {
                                        $c= "";
                                }
                        } else {
                                $c = $Config::Config{$1};
                        }
                        defined($c) ? $c : 'undef'
                }ge;
    $summary_expanded;
}

local *_ = \my $a;
$_ = <<'!END!';
Author=''
CONFIG='true'
Date=''
Header=''
Id=''
Locker=''
Log=''
PATCHLEVEL='40'
PERL_API_REVISION='5'
PERL_API_SUBVERSION='0'
PERL_API_VERSION='40'
PERL_CONFIG_SH='true'
PERL_PATCHLEVEL=''
PERL_REVISION='5'
PERL_SUBVERSION='0'
PERL_VERSION='40'
RCSfile=''
Revision=''
SUBVERSION='0'
Source=''
State=''
_a='.a'
_exe=''
_o='.o'
afs='false'
afsroot='/afs'
alignbytes='8'
aphostname='/usr/bin/hostname'
api_revision='5'
api_subversion='0'
api_version='40'
api_versionstring='5.40.0'
ar='ar'
archlib='/usr/local/lib/perl5/5.40.0/x86_64-linux-gnu'
archlibexp='/usr/local/lib/perl5/5.40.0/x86_64-linux-gnu'
archname='x86_64-linux-gnu'
archname64=''
archobjs=''
asctime_r_proto='0'
awk='awk'
baserev='5.0'
bash=''
bin='/usr/local/bin'
bin_ELF='define'
binexp='/usr/local/bin'
bison='bison'
byacc='byacc'
byteorder='12345678'
c=''
castflags='0'
cat='cat'
cc='cc'
cccdlflags='-fPIC'
ccdlflags='-Wl,-E -Wl,-rpath,/usr/local/lib/perl5/5.40.0/x86_64-linux-gnu/CORE'
ccflags='-fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_FORTIFY_SOURCE=2'
ccflags_uselargefiles='-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64'
ccname='gcc'
ccsymbols=''
ccversion=''
cf_by='root'
cf_email='root@buildkitsandbox.(none)'
cf_time='Tue Nov 12 05:54:27 UTC 2024'
charbits='8'
charsize='1'
chgrp=''
chmod='chmod'
chown=''
clocktype='clock_t'
comm='comm'
compiler_warning='grep -i warning'
compress=''
config_arg0='./Configure'
config_arg1='-Darchname=x86_64-linux-gnu'
config_arg2='-Duse64bitall'
config_arg3='-Duseshrplib'
config_arg4='-Dvendorprefix=/usr/local'
config_arg5='-des'
config_argc='5'
config_args='-Darchname=x86_64-linux-gnu -Duse64bitall -Duseshrplib -Dvendorprefix=/usr/local -des'
contains='grep'
cp='cp'
cpio=''
cpp='cpp'
cpp_stuff='42'
cppccsymbols=''
cppflags='-fwrapv -fno-strict-aliasing -pipe -fstack-protector-strong -I/usr/local/include'
cpplast='-'
cppminus='-'
cpprun='cc  -E'
cppstdin='cc  -E'
cppsymbols='_FILE_OFFSET_BITS=64 _LARGEFILE_SOURCE=1 _LP64=1 _POSIX_C_SOURCE=200809L _POSIX_SOURCE=1 _STDC_PREDEF_H=1 __ATOMIC_ACQUIRE=2 __ATOMIC_ACQ_REL=4 __ATOMIC_CONSUME=1 __ATOMIC_HLE_ACQUIRE=65536 __ATOMIC_HLE_RELEASE=131072 __ATOMIC_RELAXED=0 __ATOMIC_RELEASE=3 __ATOMIC_SEQ_CST=5 __BIGGEST_ALIGNMENT__=16 __BYTE_ORDER__=1234 __CHAR16_TYPE__=short\ unsigned\ int __CHAR32_TYPE__=unsigned\ int __CHAR_BIT__=8 __DBL_DECIMAL_DIG__=17 __DBL_DENORM_MIN__=((double)4.94065645841246544176568792868221372e-324L) __DBL_DIG__=15 __DBL_EPSILON__=((double)2.22044604925031308084726333618164062e-16L) __DBL_HAS_DENORM__=1 __DBL_HAS_INFINITY__=1 __DBL_HAS_QUIET_NAN__=1 __DBL_IS_IEC_60559__=2 __DBL_MANT_DIG__=53 __DBL_MAX_10_EXP__=308 __DBL_MAX_EXP__=1024 __DBL_MAX__=((double)1.79769313486231570814527423731704357e+308L) __DBL_MIN_10_EXP__=(-307) __DBL_MIN_EXP__=(-1021) __DBL_MIN__=((double)2.22507385850720138309023271733240406e-308L) __DBL_NORM_MAX__=((double)1.79769313486231570814527423731704357e+308L) __DEC128_EPSILON__=1E-33DL __DEC128_MANT_DIG__=34 __DEC128_MAX_EXP__=6145 __DEC128_MAX__=9.999999999999999999999999999999999E6144DL __DEC128_MIN_EXP__=(-6142) __DEC128_MIN__=1E-6143DL __DEC128_SUBNORMAL_MIN__=0.000000000000000000000000000000001E-6143DL __DEC32_EPSILON__=1E-6DF __DEC32_MANT_DIG__=7 __DEC32_MAX_EXP__=97 __DEC32_MAX__=9.999999E96DF __DEC32_MIN_EXP__=(-94) __DEC32_MIN__=1E-95DF __DEC32_SUBNORMAL_MIN__=0.000001E-95DF __DEC64_EPSILON__=1E-15DD __DEC64_MANT_DIG__=16 __DEC64_MAX_EXP__=385 __DEC64_MAX__=9.999999999999999E384DD __DEC64_MIN_EXP__=(-382) __DEC64_MIN__=1E-383DD __DEC64_SUBNORMAL_MIN__=0.000000000000001E-383DD __DECIMAL_BID_FORMAT__=1 __DECIMAL_DIG__=21 __DEC_EVAL_METHOD__=2 __ELF__=1 __FINITE_MATH_ONLY__=0 __FLOAT_WORD_ORDER__=1234 __FLT128_DECIMAL_DIG__=36 __FLT128_DENORM_MIN__=6.47517511943802511092443895822764655e-4966F128 __FLT128_DIG__=33 __FLT128_EPSILON__=1.92592994438723585305597794258492732e-34F128 __FLT128_HAS_DENORM__=1 __FLT128_HAS_INFINITY__=1 __FLT128_HAS_QUIET_NAN__=1 __FLT128_IS_IEC_60559__=2 __FLT128_MANT_DIG__=113 __FLT128_MAX_10_EXP__=4932 __FLT128_MAX_EXP__=16384 __FLT128_MAX__=1.18973149535723176508575932662800702e+4932F128 __FLT128_MIN_10_EXP__=(-4931) __FLT128_MIN_EXP__=(-16381) __FLT128_MIN__=3.36210314311209350626267781732175260e-4932F128 __FLT128_NORM_MAX__=1.18973149535723176508575932662800702e+4932F128 __FLT16_DECIMAL_DIG__=5 __FLT16_DENORM_MIN__=5.96046447753906250000000000000000000e-8F16 __FLT16_DIG__=3 __FLT16_EPSILON__=9.76562500000000000000000000000000000e-4F16 __FLT16_HAS_DENORM__=1 __FLT16_HAS_INFINITY__=1 __FLT16_HAS_QUIET_NAN__=1 __FLT16_IS_IEC_60559__=2 __FLT16_MANT_DIG__=11 __FLT16_MAX_10_EXP__=4 __FLT16_MAX_EXP__=16 __FLT16_MAX__=6.55040000000000000000000000000000000e+4F16 __FLT16_MIN_10_EXP__=(-4) __FLT16_MIN_EXP__=(-13) __FLT16_MIN__=6.10351562500000000000000000000000000e-5F16 __FLT16_NORM_MAX__=6.55040000000000000000000000000000000e+4F16 __FLT32X_DECIMAL_DIG__=17 __FLT32X_DENORM_MIN__=4.94065645841246544176568792868221372e-324F32x __FLT32X_DIG__=15 __FLT32X_EPSILON__=2.22044604925031308084726333618164062e-16F32x __FLT32X_HAS_DENORM__=1 __FLT32X_HAS_INFINITY__=1 __FLT32X_HAS_QUIET_NAN__=1 __FLT32X_IS_IEC_60559__=2 __FLT32X_MANT_DIG__=53 __FLT32X_MAX_10_EXP__=308 __FLT32X_MAX_EXP__=1024 __FLT32X_MAX__=1.79769313486231570814527423731704357e+308F32x __FLT32X_MIN_10_EXP__=(-307) __FLT32X_MIN_EXP__=(-1021) __FLT32X_MIN__=2.22507385850720138309023271733240406e-308F32x __FLT32X_NORM_MAX__=1.79769313486231570814527423731704357e+308F32x __FLT32_DECIMAL_DIG__=9 __FLT32_DENORM_MIN__=1.40129846432481707092372958328991613e-45F32 __FLT32_DIG__=6 __FLT32_EPSILON__=1.19209289550781250000000000000000000e-7F32 __FLT32_HAS_DENORM__=1 __FLT32_HAS_INFINITY__=1 __FLT32_HAS_QUIET_NAN__=1 __FLT32_IS_IEC_60559__=2 __FLT32_MANT_DIG__=24 __FLT32_MAX_10_EXP__=38 __FLT32_MAX_EXP__=128 __FLT32_MAX__=3.40282346638528859811704183484516925e+38F32 __FLT32_MIN_10_EXP__=(-37) __FLT32_MIN_EXP__=(-125) __FLT32_MIN__=1.17549435082228750796873653722224568e-38F32 __FLT32_NORM_MAX__=3.40282346638528859811704183484516925e+38F32 __FLT64X_DECIMAL_DIG__=21 __FLT64X_DENORM_MIN__=3.64519953188247460252840593361941982e-4951F64x __FLT64X_DIG__=18 __FLT64X_EPSILON__=1.08420217248550443400745280086994171e-19F64x __FLT64X_HAS_DENORM__=1 __FLT64X_HAS_INFINITY__=1 __FLT64X_HAS_QUIET_NAN__=1 __FLT64X_IS_IEC_60559__=2 __FLT64X_MANT_DIG__=64 __FLT64X_MAX_10_EXP__=4932 __FLT64X_MAX_EXP__=16384 __FLT64X_MAX__=1.18973149535723176502126385303097021e+4932F64x __FLT64X_MIN_10_EXP__=(-4931) __FLT64X_MIN_EXP__=(-16381) __FLT64X_MIN__=3.36210314311209350626267781732175260e-4932F64x __FLT64X_NORM_MAX__=1.18973149535723176502126385303097021e+4932F64x __FLT64_DECIMAL_DIG__=17 __FLT64_DENORM_MIN__=4.94065645841246544176568792868221372e-324F64 __FLT64_DIG__=15 __FLT64_EPSILON__=2.22044604925031308084726333618164062e-16F64 __FLT64_HAS_DENORM__=1 __FLT64_HAS_INFINITY__=1 __FLT64_HAS_QUIET_NAN__=1 __FLT64_IS_IEC_60559__=2 __FLT64_MANT_DIG__=53 __FLT64_MAX_10_EXP__=308 __FLT64_MAX_EXP__=1024 __FLT64_MAX__=1.79769313486231570814527423731704357e+308F64 __FLT64_MIN_10_EXP__=(-307) __FLT64_MIN_EXP__=(-1021) __FLT64_MIN__=2.22507385850720138309023271733240406e-308F64 __FLT64_NORM_MAX__=1.79769313486231570814527423731704357e+308F64 __FLT_DECIMAL_DIG__=9 __FLT_DENORM_MIN__=1.40129846432481707092372958328991613e-45F __FLT_DIG__=6 __FLT_EPSILON__=1.19209289550781250000000000000000000e-7F __FLT_EVAL_METHOD_TS_18661_3__=0 __FLT_EVAL_METHOD__=0 __FLT_HAS_DENORM__=1 __FLT_HAS_INFINITY__=1 __FLT_HAS_QUIET_NAN__=1 __FLT_IS_IEC_60559__=2 __FLT_MANT_DIG__=24 __FLT_MAX_10_EXP__=38 __FLT_MAX_EXP__=128 __FLT_MAX__=3.40282346638528859811704183484516925e+38F __FLT_MIN_10_EXP__=(-37) __FLT_MIN_EXP__=(-125) __FLT_MIN__=1.17549435082228750796873653722224568e-38F __FLT_NORM_MAX__=3.40282346638528859811704183484516925e+38F __FLT_RADIX__=2 __FXSR__=1 __GCC_ASM_FLAG_OUTPUTS__=1 __GCC_ATOMIC_BOOL_LOCK_FREE=2 __GCC_ATOMIC_CHAR16_T_LOCK_FREE=2 __GCC_ATOMIC_CHAR32_T_LOCK_FREE=2 __GCC_ATOMIC_CHAR_LOCK_FREE=2 __GCC_ATOMIC_INT_LOCK_FREE=2 __GCC_ATOMIC_LLONG_LOCK_FREE=2 __GCC_ATOMIC_LONG_LOCK_FREE=2 __GCC_ATOMIC_POINTER_LOCK_FREE=2 __GCC_ATOMIC_SHORT_LOCK_FREE=2 __GCC_ATOMIC_TEST_AND_SET_TRUEVAL=1 __GCC_ATOMIC_WCHAR_T_LOCK_FREE=2 __GCC_CONSTRUCTIVE_SIZE=64 __GCC_DESTRUCTIVE_SIZE=64 __GCC_HAVE_DWARF2_CFI_ASM=1 __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1=1 __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2=1 __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4=1 __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8=1 __GCC_IEC_559=2 __GCC_IEC_559_COMPLEX=2 __GLIBC_MINOR__=36 __GLIBC__=2 __GNUC_EXECUTION_CHARSET_NAME="UTF-8" __GNUC_MINOR__=2 __GNUC_PATCHLEVEL__=0 __GNUC_STDC_INLINE__=1 __GNUC_WIDE_EXECUTION_CHARSET_NAME="UTF-32LE" __GNUC__=12 __GNU_LIBRARY__=6 __GXX_ABI_VERSION=1017 __HAVE_SPECULATION_SAFE_VALUE=1 __INT16_C=__INT16_C __INT16_MAX__=0x7fff __INT16_TYPE__=short\ int __INT32_C=__INT32_C __INT32_MAX__=0x7fffffff __INT32_TYPE__=int __INT64_C=__INT64_C __INT64_MAX__=0x7fffffffffffffffL __INT64_TYPE__=long\ int __INT8_C=__INT8_C __INT8_MAX__=0x7f __INT8_TYPE__=signed\ char __INTMAX_C=__INTMAX_C __INTMAX_MAX__=0x7fffffffffffffffL __INTMAX_TYPE__=long\ int __INTMAX_WIDTH__=64 __INTPTR_MAX__=0x7fffffffffffffffL __INTPTR_TYPE__=long\ int __INTPTR_WIDTH__=64 __INT_FAST16_MAX__=0x7fffffffffffffffL __INT_FAST16_TYPE__=long\ int __INT_FAST16_WIDTH__=64 __INT_FAST32_MAX__=0x7fffffffffffffffL __INT_FAST32_TYPE__=long\ int __INT_FAST32_WIDTH__=64 __INT_FAST64_MAX__=0x7fffffffffffffffL __INT_FAST64_TYPE__=long\ int __INT_FAST64_WIDTH__=64 __INT_FAST8_MAX__=0x7f __INT_FAST8_TYPE__=signed\ char __INT_FAST8_WIDTH__=8 __INT_LEAST16_MAX__=0x7fff __INT_LEAST16_TYPE__=short\ int __INT_LEAST16_WIDTH__=16 __INT_LEAST32_MAX__=0x7fffffff __INT_LEAST32_TYPE__=int __INT_LEAST32_WIDTH__=32 __INT_LEAST64_MAX__=0x7fffffffffffffffL __INT_LEAST64_TYPE__=long\ int __INT_LEAST64_WIDTH__=64 __INT_LEAST8_MAX__=0x7f __INT_LEAST8_TYPE__=signed\ char __INT_LEAST8_WIDTH__=8 __INT_MAX__=0x7fffffff __INT_WIDTH__=32 __LDBL_DECIMAL_DIG__=21 __LDBL_DENORM_MIN__=3.64519953188247460252840593361941982e-4951L __LDBL_DIG__=18 __LDBL_EPSILON__=1.08420217248550443400745280086994171e-19L __LDBL_HAS_DENORM__=1 __LDBL_HAS_INFINITY__=1 __LDBL_HAS_QUIET_NAN__=1 __LDBL_IS_IEC_60559__=2 __LDBL_MANT_DIG__=64 __LDBL_MAX_10_EXP__=4932 __LDBL_MAX_EXP__=16384 __LDBL_MAX__=1.18973149535723176502126385303097021e+4932L __LDBL_MIN_10_EXP__=(-4931) __LDBL_MIN_EXP__=(-16381) __LDBL_MIN__=3.36210314311209350626267781732175260e-4932L __LDBL_NORM_MAX__=1.18973149535723176502126385303097021e+4932L __LONG_LONG_MAX__=0x7fffffffffffffffLL __LONG_LONG_WIDTH__=64 __LONG_MAX__=0x7fffffffffffffffL __LONG_WIDTH__=64 __LP64__=1 __MMX_WITH_SSE__=1 __MMX__=1 __ORDER_BIG_ENDIAN__=4321 __ORDER_LITTLE_ENDIAN__=1234 __ORDER_PDP_ENDIAN__=3412 __PIC__=2 __PIE__=2 __PRAGMA_REDEFINE_EXTNAME=1 __PTRDIFF_MAX__=0x7fffffffffffffffL __PTRDIFF_TYPE__=long\ int __PTRDIFF_WIDTH__=64 __REGISTER_PREFIX__= __SCHAR_MAX__=0x7f __SCHAR_WIDTH__=8 __SEG_FS=1 __SEG_GS=1 __SHRT_MAX__=0x7fff __SHRT_WIDTH__=16 __SIG_ATOMIC_MAX__=0x7fffffff __SIG_ATOMIC_MIN__=(-0x7fffffff\ -\ 1) __SIG_ATOMIC_TYPE__=int __SIG_ATOMIC_WIDTH__=32 __SIZEOF_DOUBLE__=8 __SIZEOF_FLOAT128__=16 __SIZEOF_FLOAT80__=16 __SIZEOF_FLOAT__=4 __SIZEOF_INT128__=16 __SIZEOF_INT__=4 __SIZEOF_LONG_DOUBLE__=16 __SIZEOF_LONG_LONG__=8 __SIZEOF_LONG__=8 __SIZEOF_POINTER__=8 __SIZEOF_PTRDIFF_T__=8 __SIZEOF_SHORT__=2 __SIZEOF_SIZE_T__=8 __SIZEOF_WCHAR_T__=4 __SIZEOF_WINT_T__=4 __SIZE_MAX__=0xffffffffffffffffUL __SIZE_TYPE__=long\ unsigned\ int __SIZE_WIDTH__=64 __SSE2_MATH__=1 __SSE2__=1 __SSE_MATH__=1 __SSE__=1 __STDC_HOSTED__=1 __STDC_IEC_559_COMPLEX__=1 __STDC_IEC_559__=1 __STDC_IEC_60559_BFP__=201404L __STDC_IEC_60559_COMPLEX__=201404L __STDC_ISO_10646__=201706L __STDC_UTF_16__=1 __STDC_UTF_32__=1 __STDC_VERSION__=201710L __STDC__=1 __UINT16_C=__UINT16_C __UINT16_MAX__=0xffff __UINT16_TYPE__=short\ unsigned\ int __UINT32_C=__UINT32_C __UINT32_MAX__=0xffffffffU __UINT32_TYPE__=unsigned\ int __UINT64_C=__UINT64_C __UINT64_MAX__=0xffffffffffffffffUL __UINT64_TYPE__=long\ unsigned\ int __UINT8_C=__UINT8_C __UINT8_MAX__=0xff __UINT8_TYPE__=unsigned\ char __UINTMAX_C=__UINTMAX_C __UINTMAX_MAX__=0xffffffffffffffffUL __UINTMAX_TYPE__=long\ unsigned\ int __UINTPTR_MAX__=0xffffffffffffffffUL __UINTPTR_TYPE__=long\ unsigned\ int __UINT_FAST16_MAX__=0xffffffffffffffffUL __UINT_FAST16_TYPE__=long\ unsigned\ int __UINT_FAST32_MAX__=0xffffffffffffffffUL __UINT_FAST32_TYPE__=long\ unsigned\ int __UINT_FAST64_MAX__=0xffffffffffffffffUL __UINT_FAST64_TYPE__=long\ unsigned\ int __UINT_FAST8_MAX__=0xff __UINT_FAST8_TYPE__=unsigned\ char __UINT_LEAST16_MAX__=0xffff __UINT_LEAST16_TYPE__=short\ unsigned\ int __UINT_LEAST32_MAX__=0xffffffffU __UINT_LEAST32_TYPE__=unsigned\ int __UINT_LEAST64_MAX__=0xffffffffffffffffUL __UINT_LEAST64_TYPE__=long\ unsigned\ int __UINT_LEAST8_MAX__=0xff __UINT_LEAST8_TYPE__=unsigned\ char __USER_LABEL_PREFIX__= __USE_FILE_OFFSET64=1 __USE_LARGEFILE=1 __USE_MISC=1 __USE_POSIX199309=1 __USE_POSIX199506=1 __USE_POSIX2=1 __USE_POSIX=1 __VERSION__="12.2.0" __WCHAR_MAX__=0x7fffffff __WCHAR_MIN__=(-0x7fffffff\ -\ 1) __WCHAR_TYPE__=int __WCHAR_WIDTH__=32 __WINT_MAX__=0xffffffffU __WINT_MIN__=0U __WINT_TYPE__=unsigned\ int __WINT_WIDTH__=32 __amd64=1 __amd64__=1 __code_model_small__=1 __gnu_linux__=1 __k8=1 __k8__=1 __linux=1 __linux__=1 __pic__=2 __pie__=2 __unix=1 __unix__=1 __x86_64=1 __x86_64__=1 linux=1 unix=1'
crypt_r_proto='0'
cryptlib=''
csh='csh'
ctermid_r_proto='0'
ctime_r_proto='0'
d_Gconvert='sprintf((b),"%.*g",(n),(x))'
d_PRIEUldbl='define'
d_PRIFUldbl='define'
d_PRIGUldbl='define'
d_PRIXU64='define'
d_PRId64='define'
d_PRIeldbl='define'
d_PRIfldbl='define'
d_PRIgldbl='define'
d_PRIi64='define'
d_PRIo64='define'
d_PRIu64='define'
d_PRIx64='define'
d_SCNfldbl='define'
d__fwalk='undef'
d_accept4='define'
d_access='define'
d_accessx='undef'
d_acosh='define'
d_aintl='undef'
d_alarm='define'
d_archlib='define'
d_asctime64='undef'
d_asctime_r='undef'
d_asinh='define'
d_atanh='define'
d_atolf='undef'
d_atoll='define'
d_attribute_always_inline='define'
d_attribute_deprecated='define'
d_attribute_format='define'
d_attribute_malloc='define'
d_attribute_nonnull='define'
d_attribute_noreturn='define'
d_attribute_pure='define'
d_attribute_unused='define'
d_attribute_visibility='define'
d_attribute_warn_unused_result='define'
d_backtrace='define'
d_bsd='undef'
d_bsdgetpgrp='undef'
d_bsdsetpgrp='undef'
d_builtin_add_overflow='define'
d_builtin_choose_expr='define'
d_builtin_expect='define'
d_builtin_mul_overflow='define'
d_builtin_sub_overflow='define'
d_c99_variadic_macros='define'
d_casti32='undef'
d_castneg='define'
d_cbrt='define'
d_chown='define'
d_chroot='define'
d_chsize='undef'
d_class='undef'
d_clearenv='define'
d_closedir='define'
d_cmsghdr_s='define'
d_copysign='define'
d_copysignl='define'
d_cplusplus='undef'
d_crypt='define'
d_crypt_r='undef'
d_csh='undef'
d_ctermid='define'
d_ctermid_r='undef'
d_ctime64='undef'
