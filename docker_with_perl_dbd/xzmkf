	0x2081,
	0x2085,
	0x20AC,
	0x20AD,
	0x2103,
	0x2104,
	0x2105,
	0x2106,
	0x2109,
	0x210A,
	0x2113,
	0x2114,
	0x2116,
	0x2117,
	0x2121,
	0x2123,
	0x2126,
	0x2127,
	0x212B,
	0x212C,
	0x2153,
	0x2155,
	0x215B,
	0x215F,
	0x2160,
	0x216C,
	0x2170,
	0x217A,
	0x2189,
	0x218A,
	0x2190,
	0x219A,
	0x21B8,
	0x21BA,
	0x21D2,
	0x21D3,
	0x21D4,
	0x21D5,
	0x21E7,
	0x21E8,
	0x2200,
	0x2201,
	0x2202,
	0x2204,
	0x2207,
	0x2209,
	0x220B,
	0x220C,
	0x220F,
	0x2210,
	0x2211,
	0x2212,
	0x2215,
	0x2216,
	0x221A,
	0x221B,
	0x221D,
	0x2221,
	0x2223,
	0x2224,
	0x2225,
	0x2226,
	0x2227,
	0x222D,
	0x222E,
	0x222F,
	0x2234,
	0x2238,
	0x223C,
	0x223E,
	0x2248,
	0x2249,
	0x224C,
	0x224D,
	0x2252,
	0x2253,
	0x2260,
	0x2262,
	0x2264,
	0x2268,
	0x226A,
	0x226C,
	0x226E,
	0x2270,
	0x2282,
	0x2284,
	0x2286,
	0x2288,
	0x2295,
	0x2296,
	0x2299,
	0x229A,
	0x22A5,
	0x22A6,
	0x22BF,
	0x22C0,
	0x2312,
	0x2313,
	0x2460,
	0x24EA,
	0x24EB,
	0x254C,
	0x2550,
	0x2574,
	0x2580,
	0x2590,
	0x2592,
	0x2596,
	0x25A0,
	0x25A2,
	0x25A3,
	0x25AA,
	0x25B2,
	0x25B4,
	0x25B6,
	0x25B8,
	0x25BC,
	0x25BE,
	0x25C0,
	0x25C2,
	0x25C6,
	0x25C9,
	0x25CB,
	0x25CC,
	0x25CE,
	0x25D2,
	0x25E2,
	0x25E6,
	0x25EF,
	0x25F0,
	0x2605,
	0x2607,
	0x2609,
	0x260A,
	0x260E,
	0x2610,
	0x261C,
	0x261D,
	0x261E,
	0x261F,
	0x2640,
	0x2641,
	0x2642,
	0x2643,
	0x2660,
	0x2662,
	0x2663,
	0x2666,
	0x2667,
	0x266B,
	0x266C,
	0x266E,
	0x266F,
	0x2670,
	0x269E,
	0x26A0,
	0x26BF,
	0x26C0,
	0x26C6,
	0x26CE,
	0x26CF,
	0x26D4,
	0x26D5,
	0x26E2,
	0x26E3,
	0x26E4,
	0x26E8,
	0x26EA,
	0x26EB,
	0x26F2,
	0x26F4,
	0x26F5,
	0x26F6,
	0x26FA,
	0x26FB,
	0x26FD,
	0x26FE,
	0x2700,
	0x273D,
	0x273E,
	0x2776,
	0x2780,
	0x2B56,
	0x2B5A,
	0x3248,
	0x3250,
	0xE000,
	0xF900,
	0xFE00,
	0xFE10,
	0xFFFD,
	0xFFFE,
	0x1F100,
	0x1F10B,
	0x1F110,
	0x1F12E,
	0x1F130,
	0x1F16A,
	0x1F170,
	0x1F18E,
	0x1F18F,
	0x1F191,
	0x1F19B,
	0x1F1AD,
	0xE0100,
	0xE01F0,
	0xF0000,
	0xFFFFE,
	0x100000,
	0x10FFFE
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_EA__A_invlist[] = {  /* for EBCDIC 1047 */
	363,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x44,
	0x46,
	0x51,
	0x53,
	0x54,
	0x56,
	0x58,
	0x5A,
	0x70,
	0x71,
	0x80,
	0x81,
	0x8C,
	0x8D,
	0x8E,
	0x91,
	0x9A,
	0xA0,
	0xAA,
	0xAD,
	0xAE,
	0xB0,
	0xB3,
	0xB4,
	0xB5,
	0xBA,
	0xBB,
	0xBC,
	0xBE,
	0xC0,
	0xCA,
	0xCB,
	0xCD,
	0xCF,
	0xDA,
	0xDB,
	0xDC,
	0xDF,
	0xE1,
	0xE2,
	0xEA,
	0xEB,
	0xFA,
	0xFB,
	0x101,
	0x102,
	0x111,
	0x112,
	0x113,
	0x114,
	0x11B,
	0x11C,
	0x126,
	0x128,
	0x12B,
	0x12C,
	0x131,
	0x134,
	0x138,
	0x139,
	0x13F,
	0x143,
	0x144,
	0x145,
	0x148,
	0x14C,
	0x14D,
	0x14E,
	0x152,
	0x154,
	0x166,
	0x168,
	0x16B,
	0x16C,
	0x1CE,
	0x1CF,
	0x1D0,
	0x1D1,
	0x1D2,
	0x1D3,
	0x1D4,
	0x1D5,
	0x1D6,
	0x1D7,
	0x1D8,
	0x1D9,
	0x1DA,
	0x1DB,
	0x1DC,
	0x1DD,
	0x251,
	0x252,
	0x261,
	0x262,
	0x2C4,
	0x2C5,
	0x2C7,
	0x2C8,
	0x2C9,
	0x2CC,
	0x2CD,
	0x2CE,
	0x2D0,
	0x2D1,
	0x2D8,
	0x2DC,
	0x2DD,
	0x2DE,
	0x2DF,
	0x2E0,
	0x300,
	0x370,
	0x391,
	0x3A2,
	0x3A3,
	0x3AA,
	0x3B1,
	0x3C2,
	0x3C3,
	0x3CA,
	0x401,
	0x402,
	0x410,
	0x450,
	0x451,
	0x452,
	0x2010,
	0x2011,
	0x2013,
	0x2017,
	0x2018,
	0x201A,
	0x201C,
	0x201E,
	0x2020,
	0x2023,
	0x2024,
	0x2028,
	0x2030,
	0x2031,
	0x2032,
	0x2034,
	0x2035,
	0x2036,
	0x203B,
	0x203C,
	0x203E,
	0x203F,
	0x2074,
	0x2075,
	0x207F,
	0x2080,
	0x2081,
	0x2085,
	0x20AC,
	0x20AD,
	0x2103,
	0x2104,
	0x2105,
	0x2106,
	0x2109,
	0x210A,
	0x2113,
	0x2114,
	0x2116,
	0x2117,
	0x2121,
	0x2123,
	0x2126,
	0x2127,
	0x212B,
	0x212C,
	0x2153,
	0x2155,
	0x215B,
	0x215F,
	0x2160,
	0x216C,
	0x2170,
	0x217A,
	0x2189,
	0x218A,
	0x2190,
	0x219A,
	0x21B8,
	0x21BA,
	0x21D2,
	0x21D3,
	0x21D4,
	0x21D5,
	0x21E7,
	0x21E8,
	0x2200,
	0x2201,
	0x2202,
	0x2204,
	0x2207,
	0x2209,
	0x220B,
	0x220C,
	0x220F,
	0x2210,
	0x2211,
	0x2212,
	0x2215,
	0x2216,
	0x221A,
	0x221B,
	0x221D,
	0x2221,
	0x2223,
	0x2224,
	0x2225,
	0x2226,
	0x2227,
	0x222D,
	0x222E,
	0x222F,
	0x2234,
	0x2238,
	0x223C,
	0x223E,
	0x2248,
	0x2249,
	0x224C,
	0x224D,
	0x2252,
	0x2253,
	0x2260,
	0x2262,
	0x2264,
	0x2268,
	0x226A,
	0x226C,
	0x226E,
	0x2270,
	0x2282,
	0x2284,
	0x2286,
	0x2288,
	0x2295,
	0x2296,
	0x2299,
	0x229A,
	0x22A5,
	0x22A6,
	0x22BF,
	0x22C0,
	0x2312,
	0x2313,
	0x2460,
	0x24EA,
	0x24EB,
	0x254C,
	0x2550,
	0x2574,
	0x2580,
	0x2590,
	0x2592,
	0x2596,
	0x25A0,
	0x25A2,
	0x25A3,
	0x25AA,
	0x25B2,
	0x25B4,
	0x25B6,
	0x25B8,
	0x25BC,
	0x25BE,
	0x25C0,
	0x25C2,
	0x25C6,
	0x25C9,
	0x25CB,
	0x25CC,
	0x25CE,
	0x25D2,
	0x25E2,
	0x25E6,
	0x25EF,
	0x25F0,
	0x2605,
	0x2607,
	0x2609,
	0x260A,
	0x260E,
	0x2610,
	0x261C,
	0x261D,
	0x261E,
	0x261F,
	0x2640,
	0x2641,
	0x2642,
	0x2643,
	0x2660,
	0x2662,
	0x2663,
	0x2666,
	0x2667,
	0x266B,
	0x266C,
	0x266E,
	0x266F,
	0x2670,
	0x269E,
	0x26A0,
	0x26BF,
	0x26C0,
	0x26C6,
	0x26CE,
	0x26CF,
	0x26D4,
	0x26D5,
	0x26E2,
	0x26E3,
	0x26E4,
	0x26E8,
	0x26EA,
	0x26EB,
	0x26F2,
	0x26F4,
	0x26F5,
	0x26F6,
	0x26FA,
	0x26FB,
	0x26FD,
	0x26FE,
	0x2700,
	0x273D,
	0x273E,
	0x2776,
	0x2780,
	0x2B56,
	0x2B5A,
	0x3248,
	0x3250,
	0xE000,
	0xF900,
	0xFE00,
	0xFE10,
	0xFFFD,
	0xFFFE,
	0x1F100,
	0x1F10B,
	0x1F110,
	0x1F12E,
	0x1F130,
	0x1F16A,
	0x1F170,
	0x1F18E,
	0x1F18F,
	0x1F191,
	0x1F19B,
	0x1F1AD,
	0xE0100,
	0xE01F0,
	0xF0000,
	0xFFFFE,
	0x100000,
	0x10FFFE
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_EA__A_invlist[] = {  /* for EBCDIC 037 */
	361,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x44,
	0x46,
	0x51,
	0x53,
	0x54,
	0x56,
	0x58,
	0x5A,
	0x70,
	0x71,
	0x80,
	0x81,
	0x8C,
	0x8D,
	0x8E,
	0x91,
	0x9A,
	0xA0,
	0xAA,
	0xAD,
	0xAE,
	0xB0,
	0xB3,
	0xB4,
	0xB5,
	0xBA,
	0xBD,
	0xC0,
	0xCA,
	0xCB,
	0xCD,
	0xCF,
	0xDA,
	0xDB,
	0xDC,
	0xDF,
	0xE1,
	0xE2,
	0xEA,
	0xEB,
	0xFA,
	0xFB,
	0x101,
	0x102,
	0x111,
	0x112,
	0x113,
	0x114,
	0x11B,
	0x11C,
	0x126,
	0x128,
	0x12B,
	0x12C,
	0x131,
	0x134,
	0x138,
	0x139,
	0x13F,
	0x143,
	0x144,
	0x145,
	0x148,
	0x14C,
	0x14D,
	0x14E,
	0x152,
	0x154,
	0x166,
	0x168,
	0x16B,
	0x16C,
	0x1CE,
	0x1CF,
	0x1D0,
	0x1D1,
	0x1D2,
	0x1D3,
	0x1D4,
	0x1D5,
	0x1D6,
	0x1D7,
	0x1D8,
	0x1D9,
	0x1DA,
	0x1DB,
	0x1DC,
	0x1DD,
	0x251,
	0x252,
	0x261,
	0x262,
	0x2C4,
	0x2C5,
	0x2C7,
	0x2C8,
	0x2C9,
	0x2CC,
	0x2CD,
	0x2CE,
	0x2D0,
	0x2D1,
	0x2D8,
	0x2DC,
	0x2DD,
	0x2DE,
	0x2DF,
	0x2E0,
	0x300,
	0x370,
	0x391,
	0x3A2,
	0x3A3,
	0x3AA,
	0x3B1,
	0x3C2,
	0x3C3,
	0x3CA,
	0x401,
	0x402,
	0x410,
	0x450,
	0x451,
	0x452,
	0x2010,
	0x2011,
	0x2013,
	0x2017,
	0x2018,
	0x201A,
	0x201C,
	0x201E,
	0x2020,
	0x2023,
	0x2024,
	0x2028,
	0x2030,
	0x2031,
	0x2032,
	0x2034,
	0x2035,
	0x2036,
	0x203B,
	0x203C,
	0x203E,
	0x203F,
	0x2074,
	0x2075,
	0x207F,
	0x2080,
	0x2081,
	0x2085,
	0x20AC,
	0x20AD,
	0x2103,
	0x2104,
	0x2105,
	0x2106,
	0x2109,
	0x210A,
	0x2113,
	0x2114,
	0x2116,
	0x2117,
	0x2121,
	0x2123,
	0x2126,
	0x2127,
	0x212B,
	0x212C,
	0x2153,
	0x2155,
	0x215B,
	0x215F,
	0x2160,
	0x216C,
	0x2170,
	0x217A,
	0x2189,
	0x218A,
	0x2190,
	0x219A,
	0x21B8,
	0x21BA,
	0x21D2,
	0x21D3,
	0x21D4,
	0x21D5,
	0x21E7,
	0x21E8,
	0x2200,
	0x2201,
	0x2202,
	0x2204,
	0x2207,
	0x2209,
	0x220B,
	0x220C,
	0x220F,
	0x2210,
	0x2211,
	0x2212,
	0x2215,
	0x2216,
	0x221A,
	0x221B,
	0x221D,
	0x2221,
	0x2223,
	0x2224,
	0x2225,
	0x2226,
	0x2227,
	0x222D,
	0x222E,
	0x222F,
	0x2234,
	0x2238,
	0x223C,
	0x223E,
	0x2248,
	0x2249,
	0x224C,
	0x224D,
	0x2252,
	0x2253,
	0x2260,
	0x2262,
	0x2264,
	0x2268,
	0x226A,
	0x226C,
	0x226E,
	0x2270,
	0x2282,
	0x2284,
	0x2286,
	0x2288,
	0x2295,
	0x2296,
	0x2299,
	0x229A,
	0x22A5,
	0x22A6,
	0x22BF,
	0x22C0,
	0x2312,
	0x2313,
	0x2460,
	0x24EA,
	0x24EB,
	0x254C,
	0x2550,
	0x2574,
	0x2580,
	0x2590,
	0x2592,
	0x2596,
	0x25A0,
	0x25A2,
	0x25A3,
	0x25AA,
	0x25B2,
	0x25B4,
	0x25B6,
	0x25B8,
	0x25BC,
	0x25BE,
	0x25C0,
	0x25C2,
	0x25C6,
	0x25C9,
	0x25CB,
	0x25CC,
	0x25CE,
	0x25D2,
	0x25E2,
	0x25E6,
	0x25EF,
	0x25F0,
	0x2605,
	0x2607,
	0x2609,
	0x260A,
	0x260E,
	0x2610,
	0x261C,
	0x261D,
	0x261E,
	0x261F,
	0x2640,
	0x2641,
	0x2642,
	0x2643,
	0x2660,
	0x2662,
	0x2663,
	0x2666,
	0x2667,
	0x266B,
	0x266C,
	0x266E,
	0x266F,
	0x2670,
	0x269E,
	0x26A0,
	0x26BF,
	0x26C0,
	0x26C6,
	0x26CE,
	0x26CF,
	0x26D4,
	0x26D5,
	0x26E2,
	0x26E3,
	0x26E4,
	0x26E8,
	0x26EA,
	0x26EB,
	0x26F2,
	0x26F4,
	0x26F5,
	0x26F6,
	0x26FA,
	0x26FB,
	0x26FD,
	0x26FE,
	0x2700,
	0x273D,
	0x273E,
	0x2776,
	0x2780,
	0x2B56,
	0x2B5A,
	0x3248,
	0x3250,
	0xE000,
	0xF900,
	0xFE00,
	0xFE10,
	0xFFFD,
	0xFFFE,
	0x1F100,
	0x1F10B,
	0x1F110,
	0x1F12E,
	0x1F130,
	0x1F16A,
	0x1F170,
	0x1F18E,
	0x1F18F,
	0x1F191,
	0x1F19B,
	0x1F1AD,
	0xE0100,
	0xE01F0,
	0xF0000,
	0xFFFFE,
	0x100000,
	0x10FFFE
};

#  endif	/* EBCDIC 037 */

static const UV UNI_EA__F_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x3000,
	0x3001,
	0xFF01,
	0xFF61,
	0xFFE0,
	0xFFE7
};

static const UV UNI_EA__H_invlist[] = {  /* for all charsets */
	15,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x20A9,
	0x20AA,
	0xFF61,
	0xFFBF,
	0xFFC2,
	0xFFC8,
	0xFFCA,
	0xFFD0,
	0xFFD2,
	0xFFD8,
	0xFFDA,
	0xFFDD,
	0xFFE8,
	0xFFEF
