		   1 if it starts at the element beyond 0 */
	0x0,
	0x10AC9,
	0x10ACB
};

static const UV UNI_JG__MEEM_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x645,
	0x646,
	0x765,
	0x767,
	0x8A7,
	0x8A8
};

static const UV UNI_JG__MIM_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x721,
	0x722
};

static const UV UNI_JG__NOJOININGGROUP_invlist[] = {  /* for all charsets */
	65,	/* Number of elements */
	148565664, /* Version and data structure type */
	0,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x620,
	0x621,
	0x622,
	0x640,
	0x641,
	0x64B,
	0x66E,
	0x670,
	0x671,
	0x674,
	0x675,
	0x6D4,
	0x6D5,
	0x6D6,
	0x6EE,
	0x6F0,
	0x6FA,
	0x6FD,
	0x6FF,
	0x700,
	0x710,
	0x711,
	0x712,
	0x730,
	0x74D,
	0x780,
	0x860,
	0x86B,
	0x870,
	0x883,
	0x886,
	0x887,
	0x889,
	0x88F,
	0x8A0,
	0x8AD,
	0x8AE,
	0x8C9,
	0x10AC0,
	0x10AC6,
	0x10AC7,
	0x10AC8,
	0x10AC9,
	0x10ACB,
	0x10ACD,
	0x10AE2,
	0x10AE4,
	0x10AE5,
	0x10AEB,
	0x10AF0,
	0x10D02,
	0x10D03,
	0x10D09,
	0x10D0A,
	0x10D19,
	0x10D1A,
	0x10D1C,
	0x10D1D,
	0x10D1E,
	0x10D1F,
	0x10D20,
	0x10D21,
	0x10D23,
	0x10D24
};

static const UV UNI_JG__NOON_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x646,
	0x647,
	0x6B9,
	0x6BD,
	0x767,
	0x76A,
	0x889,
	0x88A
};

static const UV UNI_JG__NUN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x722,
	0x723
};

static const UV UNI_JG__NYA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x6BD,
	0x6BE
};

static const UV UNI_JG__PE_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x726,
	0x727
};

static const UV UNI_JG__QAF_invlist[] = {  /* for all charsets */
	11,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x642,
	0x643,
	0x66F,
	0x670,
	0x6A7,
	0x6A9,
	0x8A5,
	0x8A6,
	0x8B5,
	0x8B6
};

static const UV UNI_JG__QAPH_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x729,
	0x72A
};

static const UV UNI_JG__REH_invlist[] = {  /* for all charsets */
	19,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x631,
	0x633,
	0x691,
	0x69A,
	0x6EF,
	0x6F0,
	0x75B,
	0x75C,
	0x76B,
	0x76D,
	0x771,
	0x772,
	0x8AA,
	0x8AB,
	0x8B2,
	0x8B3,
	0x8B9,
	0x8BA
};

static const UV UNI_JG__REVERSEDPE_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x727,
	0x728
};

static const UV UNI_JG__ROHINGYAYEH_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x8AC,
	0x8AD
};

static const UV UNI_JG__SAD_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x635,
	0x637,
	0x69D,
	0x69F,
	0x6FB,
	0x6FC,
	0x8AF,
	0x8B0
};

static const UV UNI_JG__SADHE_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x728,
	0x729
};

static const UV UNI_JG__SEEN_invlist[] = {  /* for all charsets */
	15,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x633,
	0x635,
	0x69A,
	0x69D,
	0x6FA,
	0x6FB,
	0x75C,
	0x75D,
	0x76D,
	0x76E,
	0x770,
	0x771,
	0x77D,
	0x77F
};

static const UV UNI_JG__SEMKATH_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x723,
	0x724
};

static const UV UNI_JG__SHIN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x72B,
	0x72C
};

static const UV UNI_JG__STRAIGHTWAW_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x8B1,
	0x8B2
};

static const UV UNI_JG__SWASHKAF_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x6AA,
	0x6AB
};

static const UV UNI_JG__SYRIACWAW_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x718,
	0x719
};

static const UV UNI_JG__TAH_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x637,
	0x639,
	0x69F,
	0x6A0,
	0x88B,
	0x88D,
	0x8A3,
	0x8A4
};

static const UV UNI_JG__TAW_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x72C,
	0x72D
};

static const UV UNI_JG__TEHMARBUTA_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x629,
	0x62A,
	0x6C0,
	0x6C1,
	0x6D5,
	0x6D6
};

static const UV UNI_JG__TETH_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x71B,
	0x71D
};

static const UV UNI_JG__THINYEH_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x886,
	0x887
};

static const UV UNI_JG__VERTICALTAIL_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x88E,
	0x88F
};

static const UV UNI_JG__WAW_invlist[] = {  /* for all charsets */
	15,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x624,
	0x625,
	0x648,
	0x649,
	0x676,
	0x678,
	0x6C4,
	0x6CC,
	0x6CF,
	0x6D0,
	0x778,
	0x77A,
	0x8AB,
	0x8AC
};

static const UV UNI_JG__YEH_invlist[] = {  /* for all charsets */
	17,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x620,
	0x621,
	0x626,
	0x627,
	0x649,
	0x64B,
	0x678,
	0x679,
	0x6D0,
	0x6D2,
	0x777,
	0x778,
	0x8A8,
	0x8AA,
	0x8BA,
	0x8BB
};

static const UV UNI_JG__YEHBARREE_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x6D2,
	0x6D4
};

static const UV UNI_JG__YEHWITHTAIL_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x6CD,
	0x6CE
};

static const UV UNI_JG__YUDH_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x71D,
	0x71E
};

static const UV UNI_JG__YUDHHE_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x71E,
	0x71F
};

static const UV UNI_JG__ZAIN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x719,
	0x71A
};

static const UV UNI_JG__ZHAIN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x74D,
	0x74E
};

static const UV UNI_JOINC_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x200C,
	0x200E
};

static const UV UNI_JT__C_invlist[] = {  /* for all charsets */
	11,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x640,
	0x641,
	0x7FA,
	0x7FB,
	0x883,
	0x886,
	0x180A,
	0x180B,
	0x200D,
	0x200E
};

static const UV UNI_JT__D_invlist[] = {  /* for all charsets */
	151,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x620,
	0x621,
	0x626,
	0x627,
	0x628,
	0x629,
	0x62A,
	0x62F,
	0x633,
	0x640,
	0x641,
	0x648,
	0x649,
	0x64B,
	0x66E,
	0x670,
	0x678,
	0x688,
	0x69A,
	0x6C0,
	0x6C1,
	0x6C3,
	0x6CC,
	0x6CD,
	0x6CE,
	0x6CF,
	0x6D0,
	0x6D2,
	0x6FA,
	0x6FD,
	0x6FF,
	0x700,
	0x712,
	0x715,
	0x71A,
	0x71E,
	0x71F,
	0x728,
	0x729,
	0x72A,
	0x72B,
	0x72C,
	0x72D,
	0x72F,
	0x74E,
	0x759,
	0x75C,
	0x76B,
	0x76D,
	0x771,
	0x772,
	0x773,
	0x775,
	0x778,
	0x77A,
	0x780,
	0x7CA,
	0x7EB,
	0x841,
	0x846,
	0x848,
	0x849,
	0x84A,
	0x854,
	0x855,
	0x856,
	0x860,
	0x861,
	0x862,
	0x866,
	0x868,
	0x869,
	0x886,
	0x887,
	0x889,
	0x88E,
	0x8A0,
	0x8AA,
	0x8AF,
	0x8B1,
	0x8B3,
	0x8B9,
	0x8BA,
	0x8C9,
	0x1807,
	0x1808,
	0x1820,
	0x1879,
	0x1887,
	0x18A9,
	0x18AA,
	0x18AB,
	0xA840,
	0xA872,
	0x10AC0,
	0x10AC5,
	0x10AD3,
	0x10AD7,
	0x10AD8,
	0x10ADD,
	0x10ADE,
	0x10AE1,
	0x10AEB,
	0x10AEF,
	0x10B80,
	0x10B81,
	0x10B82,
	0x10B83,
	0x10B86,
	0x10B89,
	0x10B8A,
	0x10B8C,
	0x10B8D,
	0x10B8E,
	0x10B90,
	0x10B91,
	0x10BAD,
	0x10BAF,
	0x10D01,
	0x10D22,
	0x10D23,
	0x10D24,
	0x10F30,
	0x10F33,
	0x10F34,
	0x10F45,
	0x10F51,
	0x10F54,
	0x10F70,
	0x10F74,
	0x10F76,
	0x10F82,
	0x10FB0,
	0x10FB1,
	0x10FB2,
	0x10FB4,
	0x10FB8,
	0x10FB9,
	0x10FBB,
	0x10FBD,
	0x10FBE,
	0x10FC0,
	0x10FC1,
	0x10FC2,
	0x10FC4,
	0x10FC5,
	0x10FCA,
	0x10FCB,
	0x1E900,
	0x1E944
};

static const UV UNI_JT__L_invlist[] = {  /* for all charsets */
	11,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA872,
	0xA873,
	0x10ACD,
	0x10ACE,
	0x10AD7,
	0x10AD8,
	0x10D00,
	0x10D01,
	0x10FCB,
	0x10FCC
};

static const UV UNI_JT__R_invlist[] = {  /* for all charsets */
	131,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x622,
	0x626,
	0x627,
	0x628,
	0x629,
	0x62A,
	0x62F,
	0x633,
	0x648,
	0x649,
	0x671,
	0x674,
	0x675,
	0x678,
	0x688,
	0x69A,
	0x6C0,
	0x6C1,
	0x6C3,
	0x6CC,
	0x6CD,
	0x6CE,
	0x6CF,
	0x6D0,
	0x6D2,
	0x6D4,
	0x6D5,
	0x6D6,
	0x6EE,
	0x6F0,
	0x710,
	0x711,
	0x715,
	0x71A,
	0x71E,
	0x71F,
	0x728,
	0x729,
	0x72A,
	0x72B,
	0x72C,
	0x72D,
	0x72F,
	0x730,
	0x74D,
	0x74E,
	0x759,
	0x75C,
	0x76B,
	0x76D,
	0x771,
	0x772,
	0x773,
	0x775,
	0x778,
	0x77A,
	0x840,
	0x841,
	0x846,
	0x848,
	0x849,
	0x84A,
	0x854,
	0x855,
	0x856,
	0x859,
	0x867,
	0x868,
	0x869,
	0x86B,
	0x870,
	0x883,
	0x88E,
	0x88F,
	0x8AA,
	0x8AD,
	0x8AE,
	0x8AF,
	0x8B1,
	0x8B3,
	0x8B9,
	0x8BA,
	0x10AC5,
	0x10AC6,
	0x10AC7,
	0x10AC8,
	0x10AC9,
	0x10ACB,
	0x10ACE,
	0x10AD3,
	0x10ADD,
	0x10ADE,
	0x10AE1,
	0x10AE2,
	0x10AE4,
	0x10AE5,
	0x10AEF,
	0x10AF0,
	0x10B81,
	0x10B82,
	0x10B83,
	0x10B86,
	0x10B89,
	0x10B8A,
	0x10B8C,
	0x10B8D,
	0x10B8E,
	0x10B90,
	0x10B91,
	0x10B92,
	0x10BA9,
	0x10BAD,
	0x10D22,
	0x10D23,
	0x10F33,
	0x10F34,
	0x10F54,
	0x10F55,
	0x10F74,
	0x10F76,
	0x10FB4,
	0x10FB7,
	0x10FB9,
	0x10FBB,
	0x10FBD,
	0x10FBE,
	0x10FC2,
	0x10FC4,
	0x10FC9,
	0x10FCA
};

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_JT__T_invlist[] = {  /* for ASCII/Latin1 */
	695,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xAD,
	0xAE,
	0x300,
	0x370,
	0x483,
	0x48A,
	0x591,
	0x5BE,
	0x5BF,
	0x5C0,
	0x5C1,
	0x5C3,
	0x5C4,
	0x5C6,
	0x5C7,
	0x5C8,
	0x610,
	0x61B,
	0x61C,
	0x61D,
	0x64B,
	0x660,
	0x670,
	0x671,
	0x6D6,
	0x6DD,
	0x6DF,
	0x6E5,
	0x6E7,
	0x6E9,
	0x6EA,
	0x6EE,
	0x70F,
	0x710,
	0x711,
	0x712,
	0x730,
	0x74B,
	0x7A6,
	0x7B1,
	0x7EB,
	0x7F4,
	0x7FD,
	0x7FE,
	0x816,
	0x81A,
	0x81B,
	0x824,
	0x825,
	0x828,
	0x829,
	0x82E,
	0x859,
	0x85C,
	0x898,
	0x8A0,
	0x8CA,
	0x8E2,
	0x8E3,
	0x903,
	0x93A,
	0x93B,
	0x93C,
	0x93D,
	0x941,
	0x949,
	0x94D,
	0x94E,
	0x951,
	0x958,
	0x962,
	0x964,
	0x981,
	0x982,
	0x9BC,
	0x9BD,
	0x9C1,
	0x9C5,
	0x9CD,
	0x9CE,
	0x9E2,
	0x9E4,
	0x9FE,
	0x9FF,
	0xA01,
	0xA03,
	0xA3C,
	0xA3D,
	0xA41,
	0xA43,
	0xA47,
	0xA49,
	0xA4B,
	0xA4E,
	0xA51,
	0xA52,
	0xA70,
	0xA72,
	0xA75,
	0xA76,
	0xA81,
	0xA83,
	0xABC,
	0xABD,
	0xAC1,
	0xAC6,
	0xAC7,
	0xAC9,
	0xACD,
	0xACE,
	0xAE2,
	0xAE4,
	0xAFA,
	0xB00,
	0xB01,
	0xB02,
	0xB3C,
	0xB3D,
	0xB3F,
	0xB40,
	0xB41,
	0xB45,
	0xB4D,
	0xB4E,
	0xB55,
	0xB57,
	0xB62,
	0xB64,
	0xB82,
	0xB83,
	0xBC0,
	0xBC1,
	0xBCD,
	0xBCE,
	0xC00,
	0xC01,
	0xC04,
	0xC05,
	0xC3C,
	0xC3D,
	0xC3E,
	0xC41,
	0xC46,
	0xC49,
	0xC4A,
	0xC4E,
	0xC55,
	0xC57,
	0xC62,
	0xC64,
	0xC81,
	0xC82,
	0xCBC,
	0xCBD,
