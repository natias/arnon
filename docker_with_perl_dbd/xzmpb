	0x1240A,
	0x1240B,
	0x12410,
	0x12411,
	0x12419,
	0x1241A,
	0x12422,
	0x12423,
	0x12427,
	0x12428,
	0x12431,
	0x12432,
	0x12439,
	0x1243A,
	0x1244D,
	0x1244E,
	0x12454,
	0x12456,
	0x1246A,
	0x1246B,
	0x16A65,
	0x16A66,
	0x16AC5,
	0x16AC6,
	0x16B55,
	0x16B56,
	0x16E85,
	0x16E86,
	0x1D2C5,
	0x1D2C6,
	0x1D2E5,
	0x1D2E6,
	0x1D364,
	0x1D365,
	0x1D376,
	0x1D377,
	0x1D378,
	0x1D379,
	0x1D7D3,
	0x1D7D4,
	0x1D7DD,
	0x1D7DE,
	0x1D7E7,
	0x1D7E8,
	0x1D7F1,
	0x1D7F2,
	0x1D7FB,
	0x1D7FC,
	0x1E145,
	0x1E146,
	0x1E2F5,
	0x1E2F6,
	0x1E4F5,
	0x1E4F6,
	0x1E8CB,
	0x1E8CC,
	0x1E955,
	0x1E956,
	0x1EC75,
	0x1EC76,
	0x1ECA7,
	0x1ECA8,
	0x1ED05,
	0x1ED06,
	0x1ED32,
	0x1ED33,
	0x1F106,
	0x1F107,
	0x1FBF5,
	0x1FBF6,
	0x20121,
	0x20122
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_NV__5_invlist[] = {  /* for EBCDIC 037 */
	265,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF5,
	0xF6,
	0x665,
	0x666,
	0x6F5,
	0x6F6,
	0x7C5,
	0x7C6,
	0x96B,
	0x96C,
	0x9EB,
	0x9EC,
	0xA6B,
	0xA6C,
	0xAEB,
	0xAEC,
	0xB6B,
	0xB6C,
	0xBEB,
	0xBEC,
	0xC6B,
	0xC6C,
	0xCEB,
	0xCEC,
	0xD6B,
	0xD6C,
	0xDEB,
	0xDEC,
	0xE55,
	0xE56,
	0xED5,
	0xED6,
	0xF25,
	0xF26,
	0x1045,
	0x1046,
	0x1095,
	0x1096,
	0x136D,
	0x136E,
	0x17E5,
	0x17E6,
	0x17F5,
	0x17F6,
	0x1815,
	0x1816,
	0x194B,
	0x194C,
	0x19D5,
	0x19D6,
	0x1A85,
	0x1A86,
	0x1A95,
	0x1A96,
	0x1B55,
	0x1B56,
	0x1BB5,
	0x1BB6,
	0x1C45,
	0x1C46,
	0x1C55,
	0x1C56,
	0x2075,
	0x2076,
	0x2085,
	0x2086,
	0x2164,
	0x2165,
	0x2174,
	0x2175,
	0x2464,
	0x2465,
	0x2478,
	0x2479,
	0x248C,
	0x248D,
	0x24F9,
	0x24FA,
	0x277A,
	0x277B,
	0x2784,
	0x2785,
	0x278E,
	0x278F,
	0x3025,
	0x3026,
	0x3224,
	0x3225,
	0x3284,
	0x3285,
	0x3405,
	0x3406,
	0x382A,
	0x382B,
	0x4E94,
	0x4E95,
	0x4F0D,
	0x4F0E,
	0xA625,
	0xA626,
	0xA6EA,
	0xA6EB,
	0xA8D5,
	0xA8D6,
	0xA905,
	0xA906,
	0xA9D5,
	0xA9D6,
	0xA9F5,
	0xA9F6,
	0xAA55,
	0xAA56,
	0xABF5,
	0xABF6,
	0xFF15,
	0xFF16,
	0x1010B,
	0x1010C,
	0x10143,
	0x10144,
	0x10148,
	0x10149,
	0x1014F,
	0x10150,
	0x1015F,
	0x10160,
	0x10173,
	0x10174,
	0x102E5,
	0x102E6,
	0x10321,
	0x10322,
	0x104A5,
	0x104A6,
	0x1087D,
	0x1087E,
	0x108AC,
	0x108AD,
	0x108FC,
	0x108FD,
	0x109C4,
	0x109C5,
	0x10AEC,
	0x10AED,
	0x10CFB,
	0x10CFC,
	0x10D35,
	0x10D36,
	0x10E64,
	0x10E65,
	0x10F21,
	0x10F22,
	0x11056,
	0x11057,
	0x1106B,
	0x1106C,
	0x110F5,
	0x110F6,
	0x1113B,
	0x1113C,
	0x111D5,
	0x111D6,
	0x111E5,
	0x111E6,
	0x112F5,
	0x112F6,
	0x11455,
	0x11456,
	0x114D5,
	0x114D6,
	0x11655,
	0x11656,
	0x116C5,
	0x116C6,
	0x11735,
	0x11736,
	0x118E5,
	0x118E6,
	0x11955,
	0x11956,
	0x11C55,
	0x11C56,
	0x11C5E,
	0x11C5F,
	0x11D55,
	0x11D56,
	0x11DA5,
	0x11DA6,
	0x11F55,
	0x11F56,
	0x12403,
	0x12404,
	0x1240A,
	0x1240B,
	0x12410,
	0x12411,
	0x12419,
	0x1241A,
	0x12422,
	0x12423,
	0x12427,
	0x12428,
	0x12431,
	0x12432,
	0x12439,
	0x1243A,
	0x1244D,
	0x1244E,
	0x12454,
	0x12456,
	0x1246A,
	0x1246B,
	0x16A65,
	0x16A66,
	0x16AC5,
	0x16AC6,
	0x16B55,
	0x16B56,
	0x16E85,
	0x16E86,
	0x1D2C5,
	0x1D2C6,
	0x1D2E5,
	0x1D2E6,
	0x1D364,
	0x1D365,
	0x1D376,
	0x1D377,
	0x1D378,
	0x1D379,
	0x1D7D3,
	0x1D7D4,
	0x1D7DD,
	0x1D7DE,
	0x1D7E7,
	0x1D7E8,
	0x1D7F1,
	0x1D7F2,
	0x1D7FB,
	0x1D7FC,
	0x1E145,
	0x1E146,
	0x1E2F5,
	0x1E2F6,
	0x1E4F5,
	0x1E4F6,
	0x1E8CB,
	0x1E8CC,
	0x1E955,
	0x1E956,
	0x1EC75,
	0x1EC76,
	0x1ECA7,
	0x1ECA8,
	0x1ED05,
	0x1ED06,
	0x1ED32,
	0x1ED33,
	0x1F106,
	0x1F107,
	0x1FBF5,
	0x1FBF6,
	0x20121,
	0x20122
};

#  endif	/* EBCDIC 037 */

static const UV UNI_NV__5_SLASH_12_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x109FA,
	0x109FB
};

static const UV UNI_NV__5_SLASH_2_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF2C,
	0xF2D
};

static const UV UNI_NV__5_SLASH_6_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x215A,
	0x215B,
	0x109FF,
	0x10A00,
	0x1245C,
	0x1245D
};

static const UV UNI_NV__5_SLASH_8_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x215D,
	0x215E
};

static const UV UNI_NV__50_invlist[] = {  /* for all charsets */
	53,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1376,
	0x1377,
	0x216C,
	0x216D,
	0x217C,
	0x217D,
	0x2186,
	0x2187,
	0x324C,
	0x324D,
	0x32BF,
	0x32C0,
	0x10114,
	0x10115,
	0x10144,
	0x10145,
	0x1014A,
	0x1014B,
	0x10151,
	0x10152,
	0x10166,
	0x1016A,
	0x10174,
	0x10175,
	0x102EE,
	0x102EF,
	0x10323,
	0x10324,
	0x109CD,
	0x109CE,
	0x10A7E,
	0x10A7F,
	0x10CFD,
	0x10CFE,
	0x10E6D,
	0x10E6E,
	0x1105F,
	0x11060,
	0x111EE,
	0x111EF,
	0x118EE,
	0x118EF,
	0x11C67,
	0x11C68,
	0x12468,
	0x12469,
	0x1D36D,
	0x1D36E,
	0x1EC7E,
	0x1EC7F,
	0x1ED0E,
	0x1ED0F
};

static const UV UNI_NV__500_invlist[] = {  /* for all charsets */
	25,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x216E,
	0x216F,
	0x217E,
	0x217F,
	0x1011D,
	0x1011E,
	0x10145,
	0x10146,
	0x1014C,
	0x1014D,
	0x10153,
	0x10154,
	0x1016C,
	0x10171,
	0x102F7,
	0x102F8,
	0x109D6,
	0x109D7,
	0x10E76,
	0x10E77,
	0x1EC87,
	0x1EC88,
	0x1ED17,
	0x1ED18
};

static const UV UNI_NV__5000_invlist[] = {  /* for all charsets */
	17,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2181,
	0x2182,
	0x10126,
	0x10127,
	0x10146,
	0x10147,
	0x1014E,
	0x1014F,
	0x10172,
	0x10173,
	0x109DF,
	0x109E0,
	0x1EC90,
	0x1EC91,
	0x1ED20,
	0x1ED21
};

static const UV UNI_NV__50000_invlist[] = {  /* for all charsets */
	15,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2187,
	0x2188,
	0x1012F,
	0x10130,
	0x10147,
	0x10148,
	0x10156,
	0x10157,
	0x109E8,
	0x109E9,
	0x1EC99,
	0x1EC9A,
	0x1ED29,
	0x1ED2A
};

static const UV UNI_NV__500000_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x109F1,
	0x109F2
};

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_NV__6_invlist[] = {  /* for ASCII/Latin1 */
	235,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x36,
	0x37,
	0x666,
	0x667,
	0x6F6,
	0x6F7,
	0x7C6,
	0x7C7,
	0x96C,
	0x96D,
	0x9EC,
	0x9ED,
	0xA6C,
	0xA6D,
	0xAEC,
	0xAED,
	0xB6C,
	0xB6D,
	0xBEC,
	0xBED,
	0xC6C,
	0xC6D,
	0xCEC,
	0xCED,
	0xD6C,
	0xD6D,
	0xDEC,
	0xDED,
	0xE56,
	0xE57,
	0xED6,
	0xED7,
	0xF26,
	0xF27,
	0x1046,
	0x1047,
	0x1096,
	0x1097,
	0x136E,
	0x136F,
	0x17E6,
	0x17E7,
	0x17F6,
	0x17F7,
	0x1816,
	0x1817,
	0x194C,
	0x194D,
	0x19D6,
	0x19D7,
	0x1A86,
	0x1A87,
	0x1A96,
	0x1A97,
	0x1B56,
	0x1B57,
	0x1BB6,
	0x1BB7,
	0x1C46,
	0x1C47,
	0x1C56,
	0x1C57,
	0x2076,
	0x2077,
	0x2086,
	0x2087,
	0x2165,
	0x2166,
	0x2175,
	0x2176,
	0x2185,
	0x2186,
	0x2465,
	0x2466,
	0x2479,
	0x247A,
	0x248D,
	0x248E,
	0x24FA,
	0x24FB,
	0x277B,
	0x277C,
	0x2785,
	0x2786,
	0x278F,
	0x2790,
	0x3026,
	0x3027,
	0x3225,
	0x3226,
	0x3285,
	0x3286,
	0x516D,
	0x516E,
	0x9646,
	0x9647,
	0x9678,
	0x9679,
	0xA626,
	0xA627,
	0xA6EB,
	0xA6EC,
	0xA8D6,
	0xA8D7,
	0xA906,
	0xA907,
	0xA9D6,
	0xA9D7,
	0xA9F6,
	0xA9F7,
	0xAA56,
	0xAA57,
	0xABF6,
	0xABF7,
	0xF9D1,
	0xF9D2,
	0xF9D3,
	0xF9D4,
	0xFF16,
	0xFF17,
	0x1010C,
	0x1010D,
	0x102E6,
	0x102E7,
	0x104A6,
	0x104A7,
	0x109C5,
	0x109C6,
	0x10D36,
	0x10D37,
	0x10E65,
	0x10E66,
	0x11057,
	0x11058,
	0x1106C,
	0x1106D,
	0x110F6,
	0x110F7,
	0x1113C,
	0x1113D,
	0x111D6,
	0x111D7,
	0x111E6,
	0x111E7,
	0x112F6,
	0x112F7,
	0x11456,
	0x11457,
	0x114D6,
	0x114D7,
	0x11656,
	0x11657,
	0x116C6,
	0x116C7,
	0x11736,
	0x11737,
	0x118E6,
	0x118E7,
	0x11956,
	0x11957,
	0x11C56,
	0x11C57,
	0x11C5F,
	0x11C60,
	0x11D56,
	0x11D57,
	0x11DA6,
	0x11DA7,
	0x11F56,
	0x11F57,
	0x12404,
	0x12405,
	0x1240B,
	0x1240C,
	0x12411,
	0x12412,
	0x1241A,
	0x1241B,
	0x12428,
	0x12429,
	0x12440,
	0x12441,
	0x1244E,
	0x1244F,
	0x1246B,
	0x1246C,
	0x16A66,
	0x16A67,
	0x16AC6,
	0x16AC7,
	0x16B56,
	0x16B57,
	0x16E86,
	0x16E87,
	0x1D2C6,
	0x1D2C7,
	0x1D2E6,
	0x1D2E7,
	0x1D365,
	0x1D366,
	0x1D7D4,
	0x1D7D5,
	0x1D7DE,
	0x1D7DF,
	0x1D7E8,
	0x1D7E9,
	0x1D7F2,
	0x1D7F3,
	0x1D7FC,
	0x1D7FD,
	0x1E146,
	0x1E147,
	0x1E2F6,
	0x1E2F7,
	0x1E4F6,
	0x1E4F7,
	0x1E8CC,
	0x1E8CD,
	0x1E956,
	0x1E957,
	0x1EC76,
	0x1EC77,
	0x1ECA8,
	0x1ECA9,
	0x1ED06,
	0x1ED07,
	0x1ED33,
	0x1ED34,
	0x1F107,
	0x1F108,
	0x1FBF6,
	0x1FBF7,
	0x20AEA,
	0x20AEB
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_NV__6_invlist[] = {  /* for EBCDIC 1047 */
	235,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF6,
	0xF7,
	0x666,
	0x667,
	0x6F6,
	0x6F7,
	0x7C6,
	0x7C7,
	0x96C,
	0x96D,
	0x9EC,
	0x9ED,
	0xA6C,
	0xA6D,
	0xAEC,
	0xAED,
	0xB6C,
	0xB6D,
	0xBEC,
	0xBED,
	0xC6C,
	0xC6D,
	0xCEC,
	0xCED,
	0xD6C,
	0xD6D,
	0xDEC,
	0xDED,
	0xE56,
	0xE57,
	0xED6,
	0xED7,
	0xF26,
	0xF27,
	0x1046,
	0x1047,
	0x1096,
	0x1097,
	0x136E,
	0x136F,
	0x17E6,
	0x17E7,
	0x17F6,
	0x17F7,
	0x1816,
	0x1817,
	0x194C,
	0x194D,
	0x19D6,
	0x19D7,
	0x1A86,
	0x1A87,
	0x1A96,
	0x1A97,
	0x1B56,
	0x1B57,
	0x1BB6,
	0x1BB7,
	0x1C46,
	0x1C47,
	0x1C56,
	0x1C57,
	0x2076,
	0x2077,
	0x2086,
	0x2087,
	0x2165,
	0x2166,
	0x2175,
	0x2176,
	0x2185,
	0x2186,
	0x2465,
	0x2466,
	0x2479,
	0x247A,
	0x248D,
	0x248E,
	0x24FA,
	0x24FB,
	0x277B,
	0x277C,
	0x2785,
	0x2786,
	0x278F,
	0x2790,
	0x3026,
	0x3027,
	0x3225,
	0x3226,
	0x3285,
	0x3286,
	0x516D,
	0x516E,
	0x9646,
	0x9647,
	0x9678,
	0x9679,
	0xA626,
	0xA627,
	0xA6EB,
	0xA6EC,
	0xA8D6,
	0xA8D7,
	0xA906,
	0xA907,
	0xA9D6,
	0xA9D7,
	0xA9F6,
	0xA9F7,
	0xAA56,
	0xAA57,
	0xABF6,
	0xABF7,
	0xF9D1,
	0xF9D2,
	0xF9D3,
	0xF9D4,
	0xFF16,
	0xFF17,
	0x1010C,
	0x1010D,
	0x102E6,
	0x102E7,
	0x104A6,
	0x104A7,
	0x109C5,
	0x109C6,
	0x10D36,
	0x10D37,
	0x10E65,
	0x10E66,
	0x11057,
	0x11058,
	0x1106C,
	0x1106D,
	0x110F6,
	0x110F7,
	0x1113C,
	0x1113D,
	0x111D6,
	0x111D7,
	0x111E6,
	0x111E7,
	0x112F6,
	0x112F7,
	0x11456,
	0x11457,
	0x114D6,
	0x114D7,
	0x11656,
	0x11657,
	0x116C6,
	0x116C7,
	0x11736,
	0x11737,
	0x118E6,
	0x118E7,
	0x11956,
	0x11957,
	0x11C56,
	0x11C57,
	0x11C5F,
	0x11C60,
	0x11D56,
	0x11D57,
	0x11DA6,
	0x11DA7,
	0x11F56,
	0x11F57,
	0x12404,
	0x12405,
	0x1240B,
	0x1240C,
	0x12411,
	0x12412,
	0x1241A,
	0x1241B,
	0x12428,
	0x12429,
	0x12440,
	0x12441,
	0x1244E,
	0x1244F,
	0x1246B,
	0x1246C,
	0x16A66,
	0x16A67,
	0x16AC6,
	0x16AC7,
	0x16B56,
	0x16B57,
	0x16E86,
	0x16E87,
	0x1D2C6,
	0x1D2C7,
