
=head2 Changes in DBI 1.609 (svn rev 12816) - 08 Jun 2009

  Fixes to DBD::File (H.Merijn Brand)
    added f_schema attribute
    table names case sensitive when quoted, insensitive when unquoted
    workaround a bug in SQL::Statement (temporary fix) related
      to the "You passed x parameters where y required" error

  Added ImplementorClass and Name info to the "Issuing rollback() due to
    DESTROY without explicit disconnect" warning to identify the handle.
    Applies to compiled drivers when they are recompiled.
  Added DBI->visit_handles($coderef) method.
  Added $h->visit_child_handles($coderef) method.
  Added docs for column_info()'s COLUMN_DEF value.
  Clarified docs on stickyness of data type via bind_param().
  Clarified docs on stickyness of data type via bind_col().

=head2 Changes in DBI 1.608 (svn rev 12742) - 05 May 2009

  Fixes to DBD::File (H.Merijn Brand)
    bind_param () now honors the attribute argument
    added f_ext attribute
    File::Spec is always required. (CORE since 5.00405)
    Fail and set errstr on parameter count mismatch in execute ()
  Fixed two small memory leaks when running in mod_perl
    one in DBI->connect and one in DBI::Gofer::Execute.
    Both due to "local $ENV{...};" leaking memory.
  Fixed DBD_ATTRIB_DELETE macro for driver authors
    and updated DBI::DBD docs thanks to Martin J. Evans.
  Fixed 64bit issues in trace messages thanks to Charles Jardine.
  Fixed FETCH_many() method to work with drivers that incorrectly return
    an empty list from $h->FETCH. Affected gofer.

  Added 'sqlite_' as registered prefix for DBD::SQLite.
  Corrected many typos in DBI docs thanks to Martin J. Evans.
  Improved DBI::DBD docs thanks to H.Merijn Brand.

=head2 Changes in DBI 1.607 (svn rev 11571) - 22 Jul 2008

  NOTE: Perl 5.8.1 is now the minimum supported version.
  If you need support for earlier versions send me a patch.

  Fixed missing import of carp in DBI::Gofer::Execute.

  Added note to docs about effect of execute(@empty_array).
  Clarified docs for ReadOnly thanks to Martin Evans.

=head2 Changes in DBI 1.605 (svn rev 11434) - 16 Jun 2008

  Fixed broken DBIS macro with threads on big-endian machines
    with 64bit ints but 32bit pointers. Ticket #32309.
  Fixed the selectall_arrayref, selectrow_arrayref, and selectrow_array
    methods that get embedded into compiled drivers to use the
    inner sth handle when passed a $sth instead of an sql string.
    Drivers will need to be recompiled to pick up this change.
  Fixed leak in neat() for some kinds of values thanks to Rudolf Lippan.
  Fixed DBI::PurePerl neat() to behave more like XS neat().

  Increased default $DBI::neat_maxlen from 400 to 1000.
  Increased timeout on tests to accommodate very slow systems.
  Changed behaviour of trace levels 1..4 to show less information
    at lower levels.
  Changed the format of the key used for $h->{CachedKids}
    (which is undocumented so you shouldn't depend on it anyway)
  Changed gofer error handling to avoid duplicate error text in errstr.
  Clarified docs re ":N" style placeholders.
  Improved gofer retry-on-error logic and refactored to aid subclassing.
  Improved gofer trace output in assorted ways.

  Removed the beeps "\a" from Makefile.PL warnings.
  Removed check for PlRPC-modules from Makefile.PL

  Added sorting of ParamValues reported by ShowErrorStatement
    thanks to to Rudolf Lippan.
  Added cache miss trace message to DBD::Gofer transport class.
  Added $drh->dbixs_revision method.
  Added explicit LICENSE specification (perl) to META.yaml

=head2 Changes in DBI 1.604 (svn rev 10994) - 24 Mar 2008

  Fixed fetchall_arrayref with $max_rows argument broken in 1.603,
    thanks to Greg Sabino Mullane.
  Fixed a few harmless compiler warnings on cygwin.

1.603, 2008-03-22, Tim Bunce

  Fixed pure-perl fetchall_arrayref with $max_rows argument
    to not error when fetching after all rows already fetched.
    (Was fixed for compiled drivers back in DBI 1.31.)
    Thanks to Mark Overmeer.
  Fixed C sprintf formats and casts, fixing compiler warnings.

  Changed dbi_profile() to accept a hash of profiles and apply to all.
  Changed gofer stream transport to improve error reporting.
  Changed gofer test timeout to avoid spurious failures on slow systems.

  Added options to t/85gofer.t so it's more useful for manual testing.

=head2 Changes in DBI 1.602 (svn rev 10706) - 08 Feb 2008

  Fixed potential coredump if stack reallocated while calling back
    into perl from XS code. Thanks to John Gardiner Myers.
  Fixed DBI::Util::CacheMemory->new to not clear the cache.
  Fixed avg in DBI::Profile as_text() thanks to Abe Ingersoll.
  Fixed DBD::DBM bug in push_names thanks to J M Davitt.
  Fixed take_imp_data for some platforms thanks to Jeffrey Klein.
  Fixed docs tie'ing CacheKids (ie LRU cache) thanks to Peter John Edwards.

  Expanded DBI::DBD docs for driver authors thanks to Martin Evans.
  Enhanced t/80proxy.t test script.
  Enhanced t/85gofer.t test script thanks to Stig.
  Enhanced t/10examp.t test script thanks to David Cantrell.
  Documented $DBI::stderr as the default value of err for internal errors.

  Gofer changes:
    track_recent now also keeps track of N most recent errors.
    The connect method is now also counted in stats.

=head2 Changes in DBI 1.601 (svn rev 10103) - 21 Oct 2007

  Fixed t/05thrclone.t to work with Test::More >= 0.71
    thanks to Jerry D. Hedden and Michael G Schwern.
  Fixed DBI for VMS thanks to Peter (Stig) Edwards.

  Added client-side caching to DBD::Gofer. Can use any cache with
    get($k)/set($k,$v) methods, including all the Cache and Cache::Cache
    distribution modules plus Cache::Memcached, Cache::FastMmap etc.
    Works for all transports. Overridable per handle.

  Added DBI::Util::CacheMemory for use with DBD::Gofer caching.
    It's a very fast and small strict subset of Cache::Memory.

=head2 Changes in DBI 1.59 (svn rev 9874) - 23 Aug 2007

  Fixed DBI::ProfileData to unescape headers lines read from data file.
  Fixed DBI::ProfileData to not clobber $_, thanks to Alexey Tourbin.
  Fixed DBI::SQL::Nano to not clobber $_, thanks to Alexey Tourbin.
  Fixed DBI::PurePerl to return undef for ChildHandles if weaken not available.
  Fixed DBD::Proxy disconnect error thanks to Philip Dye.
  Fixed DBD::Gofer::Transport::Base bug (typo) in timeout code.
  Fixed DBD::Proxy rows method thanks to Philip Dye.
  Fixed dbiprof compile errors, thanks to Alexey Tourbin.
  Fixed t/03handle.t to skip some tests if ChildHandles not available.

  Added check_response_sub to DBI::Gofer::Execute

=head2 Changes in DBI 1.58 (svn rev 9678) - 25 Jun 2007

  Fixed code triggering fatal error in bleadperl, thanks to Steve Hay.
  Fixed compiler warning thanks to Jerry D. Hedden.
  Fixed t/40profile.t to use int(dbi_time()) for systems like Cygwin where
    time() seems to be rounded not truncated from the high resolution time.
  Removed dump_results() test from t/80proxy.t.

=head2 Changes in DBI 1.57 (svn rev 9639) - 13 Jun 2007

  Note: this release includes a change to the DBI::hash() function which will
  now produce different values than before *if* your perl was built with 64-bit
  'int' type (i.e. "perl -V:intsize" says intsize='8').  It's relatively rare
  for perl to be configured that way, even on 64-bit systems.

  Fixed XS versions of select*_*() methods to call execute()
    fetch() etc., with inner handle instead of outer.
  Fixed execute_for_fetch() to not cache errstr values
    thanks to Bart Degryse.
  Fixed unused var compiler warning thanks to JDHEDDEN.
  Fixed t/86gofer_fail tests to be less likely to fail falsely.

  Changed DBI::hash to return 'I32' type instead of 'int' so results are
    portable/consistent regardless of size of the int type.
  Corrected timeout example in docs thanks to Egmont Koblinger.
  Changed t/01basic.t to warn instead of failing when it detects
    a problem with Math::BigInt (some recent versions had problems).

  Added support for !Time and !Time~N to DBI::Profile Path. See docs.
  Added extra trace info to connect_cached thanks to Walery Studennikov.
  Added non-random (deterministic) mode to DBI_GOFER_RANDOM mechanism.
  Added DBIXS_REVISION macro that drivers can use.
  Added more docs for private_attribute_info() method.

  DBI::Profile changes:
    dbi_profile() now returns ref to relevant leaf node.
    Don't profile DESTROY during global destruction.
    Added as_node_path_list() and as_text() methods.
  DBI::ProfileDumper changes:
    Don't write file if there's no profile data.
    Uses full natural precision when saving data (was using %.6f)
    Optimized flush_to_disk().
    Locks the data file while writing.
    Enabled filename to be a code ref for dynamic names.
  DBI::ProfileDumper::Apache changes:
    Added Quiet=>1 to avoid write to STDERR in flush_to_disk().
    Added Dir=>... to specify a writable destination directory.
    Enabled DBI_PROFILE_APACHE_LOG_DIR for mod_perl 1 as well as 2.
    Added parent pid to default data file name.
  DBI::ProfileData changes:
    Added DeleteFiles option to rename & delete files once read.
    Locks the data files while reading.
    Added ability to sort by Path elements.
  dbiprof changes:
    Added --dumpnodes and --delete options.
  Added/updated docs for both DBI::ProfileDumper && ::Apache.

=head2 Changes in DBI 1.56 (svn rev 9660) - 18 Jun 2007

  Fixed printf arg warnings thanks to JDHEDDEN.
  Fixed returning driver-private sth attributes via gofer.

  Changed pod docs docs to use =head3 instead of =item
    so now in html you get links to individual methods etc.
  Changed default gofer retry_limit from 2 to 0.
  Changed tests to workaround Math::BigInt broken versions.
  Changed dbi_profile_merge() to dbi_profile_merge_nodes()
    old name still works as an alias for the new one.
  Removed old DBI internal sanity check that's no longer valid
    causing "panic: DESTROY (dbih_clearcom)" when tracing enabled

  Added DBI_GOFER_RANDOM env var that can be use to trigger random
    failures and delays when executing gofer requests. Designed to help
    test automatic retry on failures and timeout handling.
  Added lots more docs to all the DBD::Gofer and DBI::Gofer classes.

=head2 Changes in DBI 1.55 (svn rev 9504) - 04 May 2007

  Fixed set_err() so HandleSetErr hook is executed reliably, if set.
  Fixed accuracy of profiling when perl configured to use long doubles.
  Fixed 42prof_data.t on fast systems with poor timers thanks to Malcolm Nooning.
  Fixed potential corruption in selectall_arrayref and selectrow_arrayref
    for compiled drivers, thanks to Rob Davies.
    Rebuild your compiled drivers after installing DBI.

  Changed some handle creation code from perl to C code,
    to reduce handle creation cost by ~20%.
  Changed internal implementation of the CachedKids attribute
    so it's a normal handle attribute (and initially undef).
  Changed connect_cached and prepare_cached to avoid a FETCH method call,
    and thereby reduced cost by ~5% and ~30% respectively.
  Changed _set_fbav to not croak when given a wrongly sized array,
    it now warns and adjusts the row buffer to match.
  Changed some internals to improve performance with threaded perls.
  Changed DBD::NullP to be slightly more useful for testing.
  Changed File::Spec prerequisite to not require a minimum version.
  Changed tests to work with other DBMs thanks to ZMAN.
  Changed ex/perl_dbi_nulls_test.pl to be more descriptive.

  Added more functionality to the (undocumented) Callback mechanism.
    Callbacks can now elect to provide a value to be returned, in which case
    the method won't be called. A callback for "*" is applied to all methods
    that don't have their own callback.
  Added $h->{ReadOnly} attribute.
  Added support for DBI Profile Path to contain refs to scalars
    which will be de-ref'd for each profile sample.
  Added dbilogstrip utility to edit DBI logs for diff'ing (gets installed)
  Added details for SQLite 3.3 to NULL handling docs thanks to Alex Teslik.
  Added take_imp_data() to DBI::PurePerl.

  Gofer related changes:
    Fixed gofer pipeone & stream transports to avoid risk of hanging.
    Improved error handling and tracing significantly.
    Added way to generate random 1-in-N failures for methods.
    Added automatic retry-on-error mechanism to gofer transport base class.
    Added tests to show automatic retry mechanism works a treat!
    Added go_retry_hook callback hook so apps can fine-tune retry behaviour.
    Added header to request and response packets for sanity checking
      and to enable version skew between client and server.
    Added forced_single_resultset, max_cached_sth_per_dbh and max_cached_dbh_per_drh
      to gofer executor config.
    Driver-private methods installed with install_method are now proxied.
    No longer does a round-trip to the server for methods it knows
      have not been overridden by the remote driver.
    Most significant aspects of gofer behaviour are controlled by policy mechanism.
    Added policy-controlled caching of results for some methods, such as schema metadata.
    The connect_cached and prepare_cached methods cache on client and server.
    The bind_param_array and execute_array methods are now supported.
    Worked around a DBD::Sybase bind_param bug (which is fixed in DBD::Sybase 1.07)
    Added goferperf.pl utility (doesn't get installed).
    Many other assorted Gofer related bug fixes, enhancements and docs.
    The http and mod_perl transports have been remove to their own distribution.
    Client and server will need upgrading together for this release.

=head2 Changes in DBI 1.54 (svn rev 9157) - 23 Feb 2007

  NOTE: This release includes the 'next big thing': DBD::Gofer.
  Take a look!

  WARNING: This version has some subtle changes in DBI internals.
  It's possible, though doubtful, that some may affect your code.
  I recommend some extra testing before using this release.
  Or perhaps I'm just being over cautious...

  Fixed type_info when called for multiple dbh thanks to Cosimo Streppone.
  Fixed compile warnings in bleadperl on freebsd-6.1-release
    and solaris 10g thanks to Philip M. Gollucci.
  Fixed to compile for perl built with -DNO_MATHOMS thanks to Jerry D. Hedden.
  Fixed to work for bleadperl (r29544) thanks to Nicholas Clark.
    Users of Perl >= 5.9.5 will require DBI >= 1.54.
  Fixed rare error when profiling access to $DBI::err etc tied variables.
  Fixed DBI::ProfileDumper to not be affected by changes to $/ and $,
    thanks to Michael Schwern.

  Changed t/40profile.t to skip tests for perl < 5.8.0.
  Changed setting trace file to no longer write "Trace file set" to new file.
  Changed 'handle cleared whilst still active' warning for dbh
    to only be given for dbh that have active sth or are not AutoCommit.
  Changed take_imp_data to call finish on all Active child sth.
  Changed DBI::PurePerl trace() method to be more consistent.
  Changed set_err method to effectively not append to errstr if the new errstr
    is the same as the current one.
  Changed handle factory methods, like connect, prepare, and table_info,
    to copy any error/warn/info state of the handle being returned
    up into the handle the method was called on.
  Changed row buffer handling to not alter NUM_OF_FIELDS if it's
    inconsistent with number of elements in row buffer array.
  Updated DBI::DBD docs re handling multiple result sets.
  Updated DBI::DBD docs for driver authors thanks to Ammon Riley
    and Dean Arnold.
  Updated column_info docs to note that if a table doesn't exist
    you get an sth for an empty result set and not an error.

  Added new DBD::Gofer 'stateless proxy' driver and framework,
    and the DBI test suite is now also executed via DBD::Gofer,
    and DBD::Gofer+DBI::PurePerl, in addition to DBI::PurePerl.
  Added ability for trace() to support filehandle argument,
    including tracing into a string, thanks to Dean Arnold.
  Added ability for drivers to implement func() method
    so proxy drivers can proxy the func method itself.
  Added SQL_BIGINT type code (resolved to the ODBC/JDBC value (-5))
  Added $h->private_attribute_info method.

=head2 Changes in DBI 1.53 (svn rev 7995) - 31 Oct 2006

  Fixed checks for weaken to work with early 5.8.x versions
  Fixed DBD::Proxy handling of some methods, including commit and rollback.
  Fixed t/40profile.t to be more insensitive to long double precision.
  Fixed t/40profile.t to be insensitive to small negative shifts in time
    thanks to Jamie McCarthy.
  Fixed t/40profile.t to skip tests for perl < 5.8.0.
  Fixed to work with current 'bleadperl' (~5.9.5) thanks to Steve Peters.
    Users of Perl >= 5.9.5 will require DBI >= 1.53.
  Fixed to be more robust against drivers not handling multiple result
    sets properly, thanks to Gisle Aas.

  Added array context support to execute_array and execute_for_fetch
    methods which returns executed tuples and rows affected.
  Added Tie::Cache::LRU example to docs thanks to Brandon Black.

=head2 Changes in DBI 1.52 (svn rev 6840) - 30 Jul 2006

  Fixed memory leak (per handle) thanks to Nicholas Clark and Ephraim Dan.
  Fixed memory leak (16 bytes per sth) thanks to Doru Theodor Petrescu.
  Fixed execute_for_fetch/execute_array to RaiseError thanks to Martin J. Evans.
  Fixed for perl 5.9.4. Users of Perl >= 5.9.4 will require DBI >= 1.52.

  Updated DBD::File to 0.35 to match the latest release on CPAN.

  Added $dbh->statistics_info specification thanks to Brandon Black.

  Many changes and additions to profiling:
    Profile Path can now uses sane strings instead of obscure numbers,
    can refer to attributes, assorted magical values, and even code refs!
    Parsing of non-numeric DBI_PROFILE env var values has changed.
    Changed DBI::Profile docs extensively - many new features.
    See DBI::Profile docs for more information.

=head2 Changes in DBI 1.51 (svn rev 6475) - 06 Jun 2006

  Fixed $dbh->clone method 'signature' thanks to Jeffrey Klein.
  Fixed default ping() method to return false if !$dbh->{Active}.
  Fixed t/40profile.t to be insensitive to long double precision.
  Fixed for perl 5.8.0's more limited weaken() function.
  Fixed DBD::Proxy to not alter $@ in disconnect or AUTOLOADd methods.
  Fixed bind_columns() to use return set_err(...) instead of die()
    to report incorrect number of parameters, thanks to Ben Thul.
  Fixed bind_col() to ignore undef as bind location, thanks to David Wheeler.
  Fixed for perl 5.9.x for non-threaded builds thanks to Nicholas Clark.
    Users of Perl >= 5.9.x will require DBI >= 1.51.
  Fixed fetching of rows as hash refs to preserve utf8 on field names
    from $sth->{NAME} thanks to Alexey Gaidukov.
  Fixed build on Win32 (dbd_postamble) thanks to David Golden.

  Improved performance for thread-enabled perls thanks to Gisle Aas.
  Drivers can now use PERL_NO_GET_CONTEXT thanks to Gisle Aas.
    Driver authors please read the notes in the DBI::DBD docs.
  Changed DBI::Profile format to always include a percentage,
    if not exiting then uses time between the first and last DBI call.
  Changed DBI::ProfileData to be more forgiving of systems with
    unstable clocks (where time may go backwards occasionally).
  Clarified the 'Subclassing the DBI' docs.
  Assorted minor changes to docs from comments on annocpan.org.
  Changed Makefile.PL to avoid incompatible options for old gcc.

  Added 'fetch array of hash refs' example to selectall_arrayref
    docs thanks to Tom Schindl.
  Added docs for $sth->{ParamArrays} thanks to Martin J. Evans.
  Added reference to $DBI::neat_maxlen in TRACING section of docs.
  Added ability for DBI::Profile Path to include attributes
    and a summary of where the code was called from.

=head2 Changes in DBI 1.50 (svn rev 2307) - 13 Dec 2005

  Fixed Makefile.PL options for gcc bug introduced in 1.49.
  Fixed handle magic order to keep DBD::Oracle happy.
  Fixed selectrow_array to return empty list on error.

  Changed dbi_profile_merge() to be able to recurse and merge
    sub-trees of profile data.

  Added documentation for dbi_profile_merge(), including how to
    measure the time spent inside the DBI for an http request.

=head2 Changes in DBI 1.49 (svn rev 2287) - 29 Nov 2005

  Fixed assorted attribute handling bugs in DBD::Proxy.
  Fixed croak() in DBD::NullP thanks to Sergey Skvortsov.
  Fixed handling of take_imp_data() and dbi_imp_data attribute.
  Fixed bugs in DBD::DBM thanks to Jeff Zucker.
  Fixed bug in DBI::ProfileDumper thanks to Sam Tregar.
  Fixed ping in DBD::Proxy thanks to George Campbell.
  Fixed dangling ref in $sth after parent $dbh destroyed
    with thanks to il@rol.ru for the bug report #13151
  Fixed prerequisites to include Storable thanks to Michael Schwern.
  Fixed take_imp_data to be more practical.

  Change to require perl 5.6.1 (as advertised in 2003) not 5.6.0.
  Changed internals to be more strictly coded thanks to Andy Lester.
  Changed warning about multiple copies of Driver.xst found in @INC
    to ignore duplicated directories thanks to Ed Avis.
  Changed Driver.xst to enable drivers to define an dbd_st_prepare_sv
    function where the statement parameter is an SV. That enables
    compiled drivers to support SQL strings that are UTF-8.
  Changed "use DBI" to only set $DBI::connect_via if not already set.
  Changed docs to clarify pre-method clearing of err values.

  Added ability for DBI::ProfileData to edit profile path on loading.
    This enables aggregation of different SQL statements into the same
    profile node - very handy when not using placeholders or when working
    multiple separate tables for the same thing (ie logtable_2005_11_28)
  Added $sth->{ParamTypes} specification thanks to Dean Arnold.
  Added $h->{Callbacks} attribute to enable code hooks to be invoked
    when certain methods are called. For example:
    $dbh->{Callbacks}->{prepare} = sub { ... };
    With thanks to David Wheeler for the kick start.
  Added $h->{ChildHandles} (using weakrefs) thanks to Sam Tregar
    I've recoded it in C so there's no significant performance impact.
  Added $h->{Type} docs (returns 'dr', 'db', or 'st')
  Adding trace message in DESTROY if InactiveDestroy enabled.
  Added %drhs = DBI->installed_drivers();

  Ported DBI::ProfileDumper::Apache to mod_perl2 RC5+
    thanks to Philip M. Golluci

=head2 Changes in DBI 1.48 (svn rev 928) - 14 Mar 2005

  Fixed DBI::DBD::Metadata generation of type_info_all thanks to Steffen Goeldner
    (driver authors who have used it should rerun it).

  Updated docs for NULL Value placeholders thanks to Brian Campbell.

  Added multi-keyfield nested hash fetching to fetchall_hashref()
    thanks to Zhuang (John) Li for polishing up my draft.
  Added registered driver prefixes: amzn_ for DBD::Amazon and yaswi_ for DBD::Yaswi.

=head2 Changes in DBI 1.47 (svn rev 854) - 02 Feb 2005

  Fixed DBI::ProxyServer to not create pid files by default.
    References: Ubuntu Security Notice USN-70-1, CAN-2005-0077
    Thanks to Javier Fernández-Sanguino Peña from the
    Debian Security Audit Project, and Jonathan Leffler.
  Fixed some tests to work with older Test::More versions.
  Fixed setting $DBI::err/errstr in DBI::PurePerl.
  Fixed potential undef warning from connect_cached().
  Fixed $DBI::lasth handling for DESTROY so lasth points to
    parent even if DESTROY called other methods.
  Fixed DBD::Proxy method calls to not alter $@.
  Fixed DBD::File problem with encoding pragma thanks to Erik Rijkers.

  Changed error handling so undef errstr doesn't cause warning.
  Changed DBI::DBD docs to use =head3/=head4 pod thanks to
    Jonathan Leffler. This may generate warnings for perl 5.6.
  Changed DBI::PurePerl to set autoflush on trace filehandle.
  Changed DBD::Proxy to treat Username as a local attribute
    so recent DBI version can be used with old DBI::ProxyServer.
  Changed driver handle caching in DBD::File.
  Added $GetInfoType{SQL_DATABASE_NAME} thanks to Steffen Goeldner.

  Updated docs to recommend some common DSN string attributes.
  Updated connect_cached() docs with issues and suggestions.
  Updated docs for NULL Value placeholders thanks to Brian Campbell.
  Updated docs for primary_key_info and primary_keys.
  Updated docs to clarify that the default fetchrow_hashref behaviour,
    of returning a ref to a new hash for each row, will not change.
  Updated err/errstr/state docs for DBD authors thanks to Steffen Goeldner.
  Updated handle/attribute docs for DBD authors thanks to Steffen Goeldner.
  Corrected and updated LongReadLen docs thanks to Bart Lateur.
  Added DBD::JDBC as a registered driver.

=head2 Changes in DBI 1.46 (svn rev 584) - 16 Nov 2004

  Fixed parsing bugs in DBI::SQL::Nano thanks to Jeff Zucker.
  Fixed a couple of bad links in docs thanks to Graham Barr.
  Fixed test.pl Win32 undef warning thanks to H.Merijn Brand & David Repko.
  Fixed minor issues in DBI::DBD::Metadata thanks to Steffen Goeldner.
  Fixed DBI::PurePerl neat() to use double quotes for utf8.

  Changed execute_array() definition, and default implementation,
    to not consider scalar values for execute tuple count. See docs.
  Changed DBD::File to enable ShowErrorStatement by default,
    which affects DBD::File subclasses such as DBD::CSV and DBD::DBM.
  Changed use DBI qw(:utils) tag to include $neat_maxlen.
  Updated Roadmap and ToDo.

  Added data_string_diff() data_string_desc() and data_diff()
    utility functions to help diagnose Unicode issues.
    All can be imported via the use DBI qw(:utils) tag.

=head2 Changes in DBI 1.45 (svn rev 480) - 06 Oct 2004

  Fixed DBI::DBD code for drivers broken in 1.44.
  Fixed "Free to wrong pool"/"Attempt to free unreferenced scalar" in FETCH.

=head2 Changes in DBI 1.44 (svn rev 478) - 05 Oct 2004

  Fixed build issues on VMS thanks to Jakob Snoer.
  Fixed DBD::File finish() method to return 1 thanks to Jan Dubois.
  Fixed rare core dump during global destruction thanks to Mark Jason Dominus.
  Fixed risk of utf8 flag persisting from one row to the next.

  Changed bind_param_array() so it doesn't require all bind arrays
    to have the same number of elements.
  Changed bind_param_array() to error if placeholder number <= 0.
  Changed execute_array() definition, and default implementation,
    to effectively NULL-pad shorter bind arrays.
  Changed execute_array() to return "0E0" for 0 as per the docs.
  Changed execute_for_fetch() definition, and default implementation,
    to return "0E0" for 0 like execute() and execute_array().
  Changed Test::More prerequisite to Test::Simple (which is also the name
    of the distribution both are packaged in) to work around ppm behaviour.

  Corrected docs to say that get/set of unknown attribute generates
    a warning and is no longer fatal. Thanks to Vadim.
  Corrected fetchall_arrayref() docs example thanks to Drew Broadley.

  Added $h1->swap_inner_handle($h2) sponsored by BizRate.com

=head2 Changes in DBI 1.43 (svn rev 377) - 02 Jul 2004

  Fixed connect() and connect_cached() RaiseError/PrintError
    which would sometimes show "(no error string)" as the error.
  Fixed compiler warning thanks to Paul Marquess.
  Fixed "trace level set to" trace message thanks to H.Merijn Brand.
  Fixed DBD::DBM $dbh->{dbm_tables}->{...} to be keyed by the
    table name not the file name thanks to Jeff Zucker.
  Fixed last_insert_id(...) thanks to Rudy Lippan.
  Fixed propagation of scalar/list context into proxied methods.
  Fixed DBI::Profile::DESTROY to not alter $@.
  Fixed DBI::ProfileDumper new() docs thanks to Michael Schwern.
  Fixed _load_class to propagate $@ thanks to Drew Taylor.
  Fixed compile warnings on Win32 thanks to Robert Baron.
  Fixed problem building with recent versions of MakeMaker.
  Fixed DBD::Sponge not to generate warning with threads.
  Fixed DBI_AUTOPROXY to work more than once thanks to Steven Hirsch.

  Changed TraceLevel 1 to not show recursive/nested calls.
  Changed getting or setting an invalid attribute to no longer be
    a fatal error but generate a warning instead.
  Changed selectall_arrayref() to call finish() if
    $attr->{MaxRows} is defined.
  Changed all tests to use Test::More and enhanced the tests thanks
    to Stevan Little and Andy Lester. See http://qa.perl.org/phalanx/
  Changed Test::More minimum prerequisite version to 0.40 (2001).
  Changed DBI::Profile header to include the date and time.

  Added DBI->parse_dsn($dsn) method.
  Added warning if build directory path contains white space.
  Added docs for parse_trace_flags() and parse_trace_flag().
  Removed "may change" warnings from the docs for table_info(),
    primary_key_info(), and foreign_key_info() methods.

=head2 Changes in DBI 1.42 (svn rev 222) - 12 Mar 2004

  Fixed $sth->{NUM_OF_FIELDS} of non-executed statement handle
    to be undef as per the docs (it was 0).
  Fixed t/41prof_dump.t to work with perl5.9.1.
  Fixed DBD_ATTRIB_DELETE macro thanks to Marco Paskamp.
  Fixed DBI::PurePerl looks_like_number() and $DBI::rows.
  Fixed ref($h)->can("foo") to not croak.

  Changed attributes (NAME, TYPE etc) of non-executed statement
    handle to be undef instead of triggering an error.
  Changed ShowErrorStatement to apply to more $dbh methods.
  Changed DBI_TRACE env var so just does this at load time:
    DBI->trace(split '=', $ENV{DBI_TRACE}, 2);
  Improved "invalid number of parameters" error message.
  Added DBI::common as base class for DBI::db, DBD::st etc.
  Moved methods common to all handles into DBI::common.

  Major tracing enhancement:

  Added $h->parse_trace_flags("foo|SQL|7") to map a group of
    trace flags into the corresponding trace flag bits.
  Added automatic calling of parse_trace_flags() if
    setting the trace level to a non-numeric value:
    $h->{TraceLevel}="foo|SQL|7"; $h->trace("foo|SQL|7");
    DBI->connect("dbi:Driver(TraceLevel=SQL|foo):...", ...);
    Currently no trace flags have been defined.
  Added to, and reworked, the trace documentation.
  Added dbivport.h for driver authors to use.

  Major driver additions that Jeff Zucker and I have been working on:

  Added DBI::SQL::Nano a 'smaller than micro' SQL parser
    with an SQL::Statement compatible API. If SQL::Statement
    is installed then DBI::SQL::Nano becomes an empty subclass
    of SQL::Statement, unless the DBI_SQL_NANO env var is true.
  Added DBD::File, modified to use DBI::SQL::Nano.
  Added DBD::DBM, an SQL interface to DBM files using DBD::File.

  Documentation changes:

  Corrected typos in docs thanks to Steffen Goeldner.
  Corrected execute_for_fetch example thanks to Dean Arnold.

=head2 Changes in DBI 1.41 (svn rev 130) - 22 Feb 2004

  Fixed execute_for_array() so tuple_status parameter is optional
    as per docs, thanks to Ed Avis.
  Fixed execute_for_array() docs to say that it returns undef if
    any of the execute() calls fail.
  Fixed take_imp_data() test on m68k reported by Christian Hammers.
  Fixed write_typeinfo_pm inconsistencies in DBI::DBD::Metadata
    thanks to Andy Hassall.
  Fixed $h->{TraceLevel} to not return DBI->trace trace level
    which it used to if DBI->trace trace level was higher.

  Changed set_err() to append to errstr, with a leading "\n" if it's
    not empty, so that multiple error/warning messages are recorded.
  Changed trace to limit elements dumped when an array reference is
    returned from a method to the max(40, $DBI::neat_maxlen/10)
    so that fetchall_arrayref(), for example, doesn't flood the trace.
  Changed trace level to be a four bit integer (levels 0 thru 15)
    and a set of topic flags (no topics have been assigned yet).
  Changed column_info() to check argument count.
  Extended bind_param() TYPE attribute specification to imply
    standard formating of value, eg SQL_DATE implies 'YYYY-MM-DD'.

  Added way for drivers to indicate 'success with info' or 'warning'
    by setting err to "0" for warning and "" for information.
    Both values are false and so don't trigger RaiseError etc.
    Thanks to Steffen Goeldner for the original idea.
  Added $h->{HandleSetErr} = sub { ... } to be called at the
    point that an error, warn, or info state is recorded.
    The code can alter the err, errstr, and state values
    (e.g., to promote an error to a warning, or the reverse).
  Added $h->{PrintWarn} attribute to enable printing of warnings
    recorded by the driver. Defaults to same value as $^W (perl -w).
  Added $h->{ErrCount} attribute, incremented whenever an error is
    recorded by the driver via set_err().
  Added $h->{Executed} attribute, set if do()/execute() called.
  Added \%attr parameter to foreign_key_info() method.
  Added ref count of inner handle to "DESTROY ignored for outer" msg.
  Added Win32 build config checks to DBI::DBD thanks to Andy Hassall.
  Added bind_col to Driver.xst so drivers can define their own.
  Added TYPE attribute to bind_col and specified the expected
    driver behaviour.

  Major update to signal handling docs thanks to Lincoln Baxter.
  Corrected dbiproxy usage doc thanks to Christian Hammers.
  Corrected type_info_all index hash docs thanks to Steffen Goeldner.
  Corrected type_info COLUMN_SIZE to chars not bytes thanks to Dean Arnold.
  Corrected get_info() docs to include details of DBI::Const::GetInfoType.
  Clarified that $sth->{PRECISION} is OCTET_LENGTH for char types.

=head2 Changes in DBI 1.40 - 07 Jan 2004

  Fixed handling of CachedKids when DESTROYing threaded handles.
  Fixed sql_user_name() in DBI::DBD::Metadata (used by write_getinfo_pm)
    to use $dbh->{Username}. Driver authors please update your code.

  Changed connect_cached() when running under Apache::DBI
    to route calls to Apache::DBI::connect().

  Added CLONE() to DBD::Sponge and DBD::ExampleP.
  Added warning when starting a new thread about any loaded driver
    which does not have a CLONE() function.
  Added new prepare_cache($sql, \%attr, 3) option to manage Active handles.
  Added SCALE and NULLABLE support to DBD::Sponge.
  Added missing execute() in fetchall_hashref docs thanks to Iain Truskett.
  Added a CONTRIBUTING section to the docs with notes on creating patches.

=head2 Changes in DBI 1.39 - 27 Nov 2003

  Fixed STORE to not clear error during nested DBI call, again/better,
    thanks to Tony Bowden for the report and helpful test case.
  Fixed DBI dispatch to not try to use AUTOLOAD for driver methods unless
    the method has been declared (as methods should be when using AUTOLOAD).
    This fixes a problem when the Attribute::Handlers module is loaded.
  Fixed cwd check code to use $Config{path_sep} thanks to Steve Hay.
  Fixed unqualified croak() calls thanks to Steffen Goeldner.
  Fixed DBD::ExampleP TYPE and PRECISION attributes thanks to Tom Lowery.
  Fixed tracing of methods that only get traced at high trace levels.

  The level 1 trace no longer includes nested method calls so it generally
    just shows the methods the application explicitly calls.
  Added line to trace log (level>=4) when err/errstr is cleared.
  Updated docs for InactiveDestroy and point out where and when the
    trace includes the process id.
  Update DBI::DBD docs thanks to Steffen Goeldner.
  Removed docs saying that the DBI->data_sources method could be
    passed a $dbh. The $dbh->data_sources method should be used instead.
  Added link to 'DBI recipes' thanks to Giuseppe Maxia:
    http://gmax.oltrelinux.com/dbirecipes.html (note that this
    is not an endorsement that the recipies are 'optimal')

  Note: There is a bug in perl 5.8.2 when configured with threads
  and debugging enabled (bug #24463) which causes a DBI test to fail.

=head2 Changes in DBI 1.38 - 21 Aug 2003

  NOTE: The DBI now requires perl version 5.6.0 or later.
  (As per notice in DBI 1.33 released 27th February 2003)

  Fixed spurious t/03handles failure on 64bit perls reported by H.Merijn Brand.
  Fixed spurious t/15array failure on some perl versions thanks to Ed Avis.
  Fixed build using dmake on windows thanks to Steffen Goeldner.
  Fixed build on using some shells thanks to Gurusamy Sarathy.
  Fixed ParamValues to only be appended to ShowErrorStatement if not empty.
  Fixed $dbh->{Statement} not being writable by drivers in some cases.
  Fixed occasional undef warnings on connect failures thanks to Ed Avis.
  Fixed small memory leak when using $sth->{NAME..._hash}.
  Fixed 64bit warnings thanks to Marian Jancar.
  Fixed DBD::Proxy::db::DESTROY to not alter $@ thanks to Keith Chapman.
  Fixed Makefile.PL status from WriteMakefile() thanks to Leon Brocard.

  Changed "Can't set ...->{Foo}: unrecognised attribute" from an error to a
    warning when running with DBI::ProxyServer to simplify upgrades.
  Changed execute_array() to no longer require ArrayTupleStatus attribute.
  Changed DBI->available_drivers to not hide DBD::Sponge.
  Updated/moved placeholder docs to a better place thanks to Johan Vromans.
  Changed dbd_db_do4 api in Driver.xst to match dbd_st_execute (return int,
    not bool), relevant only to driver authors.
  Changed neat(), and thus trace(), so strings marked as utf8 are presented
    in double quotes instead of single quotes and are not sanitized.

  Added $dbh->data_sources method.
  Added $dbh->last_insert_id method.
  Added $sth->execute_for_fetch($fetch_tuple_sub, \@tuple_status) method.
  Added DBI->installed_versions thanks to Jeff Zucker.
  Added $DBI::Profile::ON_DESTROY_DUMP variable.
  Added docs for DBD::Sponge thanks to Mark Stosberg.

=head2 Changes in DBI 1.37 - 15 May 2003

  Fixed "Can't get dbh->{Statement}: unrecognised attribute" error in test
    caused by change to perl internals in 5.8.0
  Fixed to build with latest development perl (5.8.1@19525).
  Fixed C code to use all ANSI declarations thanks to Steven Lembark.

=head2 Changes in DBI 1.36 - 11 May 2003

  Fixed DBI->connect to carp instead of croak on 'old-style' usage.
  Fixed connect(,,, { RootClass => $foo }) to not croak if module not found.
  Fixed code generated by DBI::DBD::Metadata thanks to DARREN@cpan.org (#2270)
  Fixed DBI::PurePerl to not reset $@ during method dispatch.
  Fixed VMS build thanks to Michael Schwern.
  Fixed Proxy disconnect thanks to Steven Hirsch.
  Fixed error in DBI::DBD docs thanks to Andy Hassall.

  Changed t/40profile.t to not require Time::HiRes.
  Changed DBI::ProxyServer to load DBI only on first request, which
    helps threaded server mode, thanks to Bob Showalter.
  Changed execute_array() return value from row count to executed
    tuple count, and now the ArrayTupleStatus attribute is mandatory.
    NOTE: That is an API definition change that may affect your code.
  Changed CompatMode attribute to also disable attribute 'quick FETCH'.
  Changed attribute FETCH to be slightly faster thanks to Stas Bekman.

  Added workaround for perl bug #17575 tied hash nested FETCH
    thanks to Silvio Wanka.
  Added Username and Password attributes to connect(..., \%attr) and so
    also embedded in DSN like "dbi:Driver(Username=user,Password=pass):..."
    Username and Password can't contain ")", ",", or "=" characters.
    The predence is DSN first, then \%attr, then $user & $pass parameters,
    and finally the DBI_USER & DBI_PASS environment variables.
    The Username attribute is stored in the $dbh but the Password is not.
  Added ProxyServer HOWTO configure restrictions docs thanks to Jochen Wiedmann.
  Added MaxRows attribute to selectcol_arrayref prompted by Wojciech Pietron.
  Added dump_handle as a method not just a DBI:: utility function.
  Added on-demand by-row data feed into execute_array() using code ref,
    or statement handle. For example, to insert from a select:
    $insert_sth->execute_array( { ArrayTupleFetch => $select_sth, ... } )
  Added warning to trace log when $h->{foo}=... is ignored due to
    invalid prefix (e.g., not 'private_').

=head2 Changes in DBI 1.35 - 07 Mar 2003

  Fixed memory leak in fetchrow_hashref introduced in DBI 1.33.
  Fixed various DBD::Proxy errors introduced in DBI 1.33.
  Fixed to ANSI C in dbd_dr_data_sources thanks to Jonathan Leffler.
  Fixed $h->can($method_name) to return correct code ref.
  Removed DBI::Format from distribution as it's now part of the
    separate DBI::Shell distribution by Tom Lowery.
  Updated DBI::DBD docs with a note about the CLONE method.
  Updated DBI::DBD docs thanks to Jonathan Leffler.
  Updated DBI::DBD::Metadata for perl 5.5.3 thanks to Jonathan Leffler.
  Added note to install_method docs about setup_driver() method.

=head2 Changes in DBI 1.34 - 28 Feb 2003

  Fixed DBI::DBD docs to refer to DBI::DBD::Metadata thanks to Jonathan Leffler.
  Fixed dbi_time() compile using BorlandC on Windows thanks to Steffen Goeldner.
  Fixed profile tests to do enough work to measure on Windows.
  Fixed disconnect_all() to not be required by drivers.

  Added $okay = $h->can($method_name) to check if a method exists.
  Added DBD::*::*->install_method($method_name, \%attr) so driver private
    methods can be 'installed' into the DBI dispatcher and no longer
    need to be called using $h->func(..., $method_name).

  Enhanced $dbh->clone() and documentation.
  Enhanced docs to note that dbi_time(), and thus profiling, is limited
    to only millisecond (seconds/1000) resolution on Windows.
  Removed old DBI::Shell from distribution and added Tom Lowery's improved
    version to the Bundle::DBI file.
  Updated minimum version numbers for modules in Bundle::DBI.

=head2 Changes in DBI 1.33 - 27 Feb 2003

  NOTE: Future versions of the DBI *will not* support perl 5.6.0 or earlier.
  : Perl 5.6.1 will be the minimum supported version.

  NOTE: The "old-style" connect: DBI->connect($database, $user, $pass, $driver);
  : has been deprecated for several years and will now generate a warning.
  : It will be removed in a later release. Please change any old connect() calls.

  Added $dbh2 = $dbh1->clone to make a new connection to the database
    that is identical to the original one. clone() can be called even after
    the original handle has been disconnected. See the docs for more details.

  Fixed merging of profile data to not sum DBIprof_FIRST_TIME values.
  Fixed unescaping of newlines in DBI::ProfileData thanks to Sam Tregar.
  Fixed Taint bug with fetchrow_hashref with help from Bradley Baetz.
  Fixed $dbh->{Active} for DBD::Proxy, reported by Bob Showalter.
  Fixed STORE to not clear error during nested DBI call,
    thanks to Tony Bowden for the report and helpful test case.
  Fixed DBI::PurePerl error clearing behaviour.
  Fixed dbi_time() and thus DBI::Profile on Windows thanks to Smejkal Petr.
  Fixed problem that meant ShowErrorStatement could show wrong statement,
   thanks to Ron Savage for the report and test case.
  Changed Apache::DBI hook to check for $ENV{MOD_PERL} instead of
    $ENV{GATEWAY_INTERFACE} thanks to Ask Bjoern Hansen.
  No longer tries to dup trace logfp when an interpreter is being cloned.
  Database handles no longer inherit shared $h->err/errstr/state storage
    from their drivers, so each $dbh has it's own $h->err etc. values
    and is no longer affected by calls made on other dbh's.
    Now when a dbh is destroyed it's err/errstr/state values are copied
    up to the driver so checking $DBI::errstr still works as expected.

  Build / portability fixes:
    Fixed t/40profile.t to not use Time::HiRes.
    Fixed t/06attrs.t to not be locale sensitive, reported by Christian Hammers.
    Fixed sgi compiler warnings, reported by Paul Blake.
    Fixed build using make -j4, reported by Jonathan Leffler.
    Fixed build and tests under VMS thanks to Craig A. Berry.

  Documentation changes:
    Documented $high_resolution_time = dbi_time() function.
    Documented that bind_col() can take an attribute hash.
    Clarified documentation for ParamValues attribute hash keys.
    Many good DBI documentation tweaks from Jonathan Leffler,
      including a major update to the DBI::DBD driver author guide.
    Clarified that execute() should itself call finish() if it's
      called on a statement handle that's still active.
    Clarified $sth->{ParamValues}. Driver authors please note.
    Removed "NEW" markers on some methods and attributes and
      added text to each giving the DBI version it was added in,
      if it was added after DBI 1.21 (Feb 2002).

  Changes of note for authors of all drivers:
    Added SQL_DATA_TYPE, SQL_DATETIME_SUB, NUM_PREC_RADIX, and
      INTERVAL_PRECISION fields to docs for type_info_all. There were
      already in type_info(), but type_info_all() didn't specify the
      index values.  Please check and update your type_info_all() code.
    Added DBI::DBD::Metadata module that auto-generates your drivers
      get_info and type_info_all data and code, thanks mainly to
      Jonathan Leffler and Steffen Goeldner. If you've not implemented
      get_info and type_info_all methods and your database has an ODBC
      driver available then this will do all the hard work for you!
    Drivers should no longer pass Err, Errstr, or State to _new_drh
      or _new_dbh functions.
    Please check that you support the slightly modified behaviour of
      $sth->{ParamValues}, e.g., always return hash with keys if possible.

  Changes of note for authors of compiled drivers:
    Added dbd_db_login6 & dbd_st_finish3 prototypes thanks to Jonathan Leffler.
    All dbd_*_*() functions implemented by drivers must have a
      corresponding #define dbd_*_* <driver_prefix>_*_* otherwise
      the driver may not work with a future release of the DBI.

  Changes of note for authors of drivers which use Driver.xst:
    Some new method hooks have been added are are enabled by
      defining corresponding macros:
          $drh->data_sources()      - dbd_dr_data_sources
          $dbh->do()                - dbd_db_do4
    The following methods won't be compiled into the driver unless
      the corresponding macro has been #defined:
          $drh->disconnect_all()    - dbd_discon_all

=head2 Changes in DBI 1.32 - 01 Dec 2002

  Fixed to work with 5.005_03 thanks to Tatsuhiko Miyagawa (I've not tested it).
  Reenabled taint tests (accidentally left disabled) spotted by Bradley Baetz.
  Improved docs for FetchHashKeyName attribute thanks to Ian Barwick.
  Fixed core dump if fetchrow_hashref given bad argument (name of attribute
    with a value that wasn't an array reference), spotted by Ian Barwick.
  Fixed some compiler warnings thanks to David Wheeler.
  Updated Steven Hirsch's enhanced proxy work (seems I left out a bit).
  Made t/40profile.t tests more reliable, reported by Randy, who is part of
    the excellent CPAN testers team: http://testers.cpan.org/
    (Please visit, see the valuable work they do and, ideally, join in!)

=head2 Changes in DBI 1.31 - 29 Nov 2002

  The fetchall_arrayref method, when called with a $maxrows parameter,
    no longer gives an error if called again after all rows have been
    fetched. This simplifies application logic when fetching in batches.
    Also added batch-fetch while() loop example to the docs.
  The proxy now supports non-lazy (synchronous) prepare, positioned
    updates (for selects containing 'for update'), PlRPC config set
    via attributes, and accurate propagation of errors, all thanks
    to Steven Hirsch (plus a minor fix from Sean McMurray and doc
    tweaks from Michael A Chase).
  The DBI_AUTOPROXY env var can now hold the full dsn of the proxy driver
    plus attributes, like "dbi:Proxy(proxy_foo=>1):host=...".
  Added TaintIn & TaintOut attributes to give finer control over
    tainting thanks to Bradley Baetz.
  The RootClass attribute no longer ignores failure to load a module,
    but also doesn't try to load a module if the class already exists,
    with thanks to James FitzGibbon.
  HandleError attribute works for connect failures thanks to David Wheeler.
  The connect() RaiseError/PrintError message now includes the username.
  Changed "last handle unknown or destroyed" warning to be a trace message.
  Removed undocumented $h->event() method.
  Further enhancements to DBD::PurePerl accuracy.
  The CursorName attribute now defaults to undef and not an error.

  DBI::Profile changes:
    New DBI::ProfileDumper, DBI::ProfileDumper::Apache, and
    DBI::ProfileData modules (to manage the storage and processing
    of profile data), plus dbiprof program for analyzing profile
    data - with many thanks to Sam Tregar.
    Added $DBI::err (etc) tied variable lookup time to profile.
    Added time for DESTROY method into parent handles profile (used to be ignored).

  Documentation changes:
    Documented $dbh = $sth->{Database} attribute.
    Documented $dbh->connected(...) post-connection call when subclassing.
    Updated some minor doc issues thanks to H.Merijn Brand.
    Updated Makefile.PL example in DBI::DBD thanks to KAWAI,Takanori.
    Fixed execute_array() example thanks to Peter van Hardenberg.

  Changes for driver authors, not required but strongly recommended:
    Change DBIS to DBIc_DBISTATE(imp_xxh)   [or imp_dbh, imp_sth etc]
    Change DBILOGFP to DBIc_LOGPIO(imp_xxh) [or imp_dbh, imp_sth etc]
    Any function from which all instances of DBIS and DBILOGFP are
    removed can also have dPERLINTERP removed (a good thing).
    All use of the DBIh_EVENT* macros should be removed.
    Major update to DBI::DBD docs thanks largely to Jonathan Leffler.
    Add these key values: 'Err' => \my $err, 'Errstr' => \my $errstr,
    to the hash passed to DBI::_new_dbh() in your driver source code.
    That will make each $dbh have it's own $h->err and $h->errstr
    values separate from other $dbh belonging to the same driver.
    If you have a ::db or ::st DESTROY methods that do nothing
    you can now remove them - which speeds up handle destruction.

=head2 Changes in DBI 1.30 - 18 Jul 2002

  Fixed problems with selectrow_array, selectrow_arrayref, and
    selectall_arrayref introduced in DBI 1.29.
  Fixed FETCHing a handle attribute to not clear $DBI::err etc (broken in 1.29).
  Fixed core dump at trace level 9 or above.
  Fixed compilation with perl 5.6.1 + ithreads (i.e. Windows).
  Changed definition of behaviour of selectrow_array when called in a scalar
    context to match fetchrow_array.
  Corrected selectrow_arrayref docs which showed selectrow_array thanks to Paul DuBois.

=head2 Changes in DBI 1.29 - 15 Jul 2002

  NOTE: This release changes the specified behaviour for the
  : fetchrow_array method when called in a scalar context:
  : The DBI spec used to say that it would return the FIRST field.
  : Which field it returns (i.e., the first or the last) is now undefined.
  : This does not affect statements that only select one column, which is
  : usually the case when fetchrow_array is called in a scalar context.
  : FYI, this change was triggered by discovering that the fetchrow_array
  : implementation in Driver.xst (used by most compiled drivers)
  : didn't match the DBI specification. Rather than change the code
  : to match, and risk breaking existing applications, I've changed the
  : specification (that part was always of dubious value anyway).

