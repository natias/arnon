	0xC55,
	0xC57,
	0xC62,
	0xC64,
	0xCBE,
	0xCC5,
	0xCC6,
	0xCC9,
	0xCCA,
	0xCCD,
	0xCD5,
	0xCD7,
	0xCE2,
	0xCE4,
	0xD3E,
	0xD45,
	0xD46,
	0xD49,
	0xD4A,
	0xD4D,
	0xD57,
	0xD58,
	0xD62,
	0xD64,
	0xDCF,
	0xDD5,
	0xDD6,
	0xDD7,
	0xDD8,
	0xDE0,
	0xDF2,
	0xDF4,
	0xE30,
	0xE3A,
	0xE40,
	0xE46,
	0xE47,
	0xE48,
	0xEB0,
	0xEBA,
	0xEBB,
	0xEBC,
	0xEC0,
	0xEC5,
	0xF71,
	0xF7E,
	0xF80,
	0xF82,
	0x102B,
	0x1036,
	0x1056,
	0x105A,
	0x1062,
	0x1063,
	0x1067,
	0x1069,
	0x1071,
	0x1075,
	0x1083,
	0x1087,
	0x109C,
	0x109E,
	0x1712,
	0x1714,
	0x1732,
	0x1734,
	0x1752,
	0x1754,
	0x1772,
	0x1774,
	0x17B6,
	0x17C6,
	0x17C8,
	0x17C9,
	0x1920,
	0x1929,
	0x193A,
	0x193B,
	0x19B0,
	0x19C1,
	0x1A17,
	0x1A1C,
	0x1A61,
	0x1A74,
	0x1B35,
	0x1B44,
	0x1BA4,
	0x1BAA,
	0x1BE7,
	0x1BF0,
	0x1C26,
	0x1C2D,
	0xA802,
	0xA803,
	0xA823,
	0xA828,
	0xA8B5,
	0xA8C4,
	0xA8FF,
	0xA900,
	0xA947,
	0xA94F,
	0xA9B4,
	0xA9BD,
	0xA9E5,
	0xA9E6,
	0xAA29,
	0xAA33,
	0xAAB0,
	0xAABF,
	0xAAEB,
	0xAAF0,
	0xABE3,
	0xABEB,
	0x10A01,
	0x10A04,
	0x10A05,
	0x10A07,
	0x10A0C,
	0x10A0E,
	0x11038,
	0x11046,
	0x11073,
	0x11075,
	0x110B0,
	0x110B9,
	0x110C2,
	0x110C3,
	0x11127,
	0x11133,
	0x11145,
	0x11147,
	0x111B3,
	0x111C0,
	0x111CB,
	0x111CD,
	0x111CE,
	0x111CF,
	0x1122C,
	0x11234,
	0x11241,
	0x11242,
	0x112E0,
	0x112E9,
	0x1133E,
	0x11345,
	0x11347,
	0x11349,
	0x1134B,
	0x1134D,
	0x11357,
	0x11358,
	0x11362,
	0x11364,
	0x11435,
	0x11442,
	0x114B0,
	0x114BF,
	0x115AF,
	0x115B6,
	0x115B8,
	0x115BC,
	0x115DC,
	0x115DE,
	0x11630,
	0x1163D,
	0x11640,
	0x11641,
	0x116AD,
	0x116B6,
	0x11720,
	0x1172B,
	0x1182C,
	0x11837,
	0x11930,
	0x11936,
	0x11937,
	0x11939,
	0x119D1,
	0x119D8,
	0x119DA,
	0x119DE,
	0x119E4,
	0x119E5,
	0x11A01,
	0x11A0B,
	0x11A51,
	0x11A5C,
	0x11C2F,
	0x11C37,
	0x11C38,
	0x11C3C,
	0x11CB0,
	0x11CB5,
	0x11D31,
	0x11D37,
	0x11D3A,
	0x11D3B,
	0x11D3C,
	0x11D3E,
	0x11D3F,
	0x11D40,
	0x11D43,
	0x11D44,
	0x11D8A,
	0x11D8F,
	0x11D90,
	0x11D92,
	0x11D93,
	0x11D95,
	0x11EF3,
	0x11EF7,
	0x11F34,
	0x11F3B,
	0x11F3E,
	0x11F41
};

static const UV UNI_INSC__VOWELINDEPENDENT_invlist[] = {  /* for all charsets */
	181,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x904,
	0x915,
	0x960,
	0x962,
	0x972,
	0x978,
	0x985,
	0x98D,
	0x98F,
	0x991,
	0x993,
	0x995,
	0x9E0,
	0x9E2,
	0xA05,
	0xA0B,
	0xA0F,
	0xA11,
	0xA13,
	0xA15,
	0xA85,
	0xA8E,
	0xA8F,
	0xA92,
	0xA93,
	0xA95,
	0xAE0,
	0xAE2,
	0xB05,
	0xB0D,
	0xB0F,
	0xB11,
	0xB13,
	0xB15,
	0xB60,
	0xB62,
	0xB85,
	0xB8B,
	0xB8E,
	0xB91,
	0xB92,
	0xB95,
	0xC05,
	0xC0D,
	0xC0E,
	0xC11,
	0xC12,
	0xC15,
	0xC60,
	0xC62,
	0xC85,
	0xC8D,
	0xC8E,
	0xC91,
	0xC92,
	0xC95,
	0xCE0,
	0xCE2,
	0xD05,
	0xD0D,
	0xD0E,
	0xD11,
	0xD12,
	0xD15,
	0xD5F,
	0xD62,
	0xD85,
	0xD97,
	0x1021,
	0x102B,
	0x1052,
	0x1056,
	0x1700,
	0x1703,
	0x1720,
	0x1723,
	0x1740,
	0x1743,
	0x1760,
	0x1763,
	0x17A3,
	0x17B4,
	0x1A4D,
	0x1A53,
	0x1B05,
	0x1B13,
	0x1B83,
	0x1B8A,
	0x1BE4,
	0x1BE6,
	0xA800,
	0xA802,
	0xA803,
	0xA806,
	0xA882,
	0xA892,
	0xA8FE,
	0xA8FF,
	0xA984,
	0xA989,
	0xA98C,
	0xA98F,
	0xAA00,
	0xAA06,
	0xAAE0,
	0xAAE2,
	0xABCE,
	0xABD0,
	0xABD1,
	0xABD2,
	0x11005,
	0x11013,
	0x11071,
	0x11073,
	0x11083,
	0x1108D,
	0x11103,
	0x11107,
	0x11183,
	0x11191,
	0x11200,
	0x11208,
	0x11240,
	0x11241,
	0x11280,
	0x11284,
	0x112B0,
	0x112BA,
	0x11305,
	0x1130D,
	0x1130F,
	0x11311,
	0x11313,
	0x11315,
	0x11360,
	0x11362,
	0x11400,
	0x1140E,
	0x11481,
	0x1148F,
	0x11580,
	0x1158E,
	0x115D8,
	0x115DC,
	0x11600,
	0x1160E,
	0x11680,
	0x1168A,
	0x11800,
	0x1180A,
	0x11900,
	0x11907,
	0x11909,
	0x1190A,
	0x119A0,
	0x119A8,
	0x119AA,
	0x119AE,
	0x11A00,
	0x11A01,
	0x11A50,
	0x11A51,
	0x11C00,
	0x11C09,
	0x11C0A,
	0x11C0E,
	0x11D00,
	0x11D07,
	0x11D08,
	0x11D0A,
	0x11D0B,
	0x11D0C,
	0x11D60,
	0x11D66,
	0x11D67,
	0x11D69,
	0x11D6A,
	0x11D6C,
	0x11F04,
	0x11F11
};

static const UV UNI_INSIDDHAM_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11580,
	0x11600
};

static const UV UNI_INSINHALA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xD80,
	0xE00
};

static const UV UNI_INSOGDIAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10F30,
	0x10F70
};

static const UV UNI_INSORASOMPENG_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x110D0,
	0x11100
};

static const UV UNI_INSOYOMBO_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11A50,
	0x11AB0
};

static const UV UNI_INSUNDANESE_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1B80,
	0x1BC0
};

static const UV UNI_INSYLOTINAGRI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA800,
	0xA830
};

static const UV UNI_INSYRIAC_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x700,
	0x750
};

static const UV UNI_INTAGALOG_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1700,
	0x1720
};

static const UV UNI_INTAGBANWA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1760,
	0x1780
};

static const UV UNI_INTAILE_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1950,
	0x1980
};

static const UV UNI_INTAITHAM_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1A20,
	0x1AB0
};

static const UV UNI_INTAIVIET_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xAA80,
	0xAAE0
};

static const UV UNI_INTAKRI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11680,
	0x116D0
};

static const UV UNI_INTAMIL_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xB80,
	0xC00
};

static const UV UNI_INTANGSA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16A70,
	0x16AD0
};

static const UV UNI_INTANGUT_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x17000,
	0x18800
};

static const UV UNI_INTELUGU_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xC00,
	0xC80
};

static const UV UNI_INTHAANA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x780,
	0x7C0
};

static const UV UNI_INTHAI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xE00,
	0xE80
};

static const UV UNI_INTIBETAN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xF00,
	0x1000
};

static const UV UNI_INTIFINAGH_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2D30,
	0x2D80
};

static const UV UNI_INTIRHUTA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11480,
	0x114E0
};

static const UV UNI_INTOTO_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1E290,
	0x1E2C0
};

static const UV UNI_INUGARITIC_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10380,
	0x103A0
};

static const UV UNI_INVAI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA500,
	0xA640
};

static const UV UNI_INVITHKUQI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10570,
	0x105C0
};

static const UV UNI_INVS_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xFE00,
	0xFE10
};

static const UV UNI_INWANCHO_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1E2C0,
	0x1E300
};

static const UV UNI_INWARANGCITI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x118A0,
	0x11900
};

static const UV UNI_INYEZIDI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10E80,
	0x10EC0
};

static const UV UNI_INZANABAZARSQUARE_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11A00,
	0x11A50
};

static const UV UNI_IPAEXT_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x250,
	0x2B0
};

static const UV UNI_ITAL_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10300,
	0x10324,
	0x1032D,
	0x10330
};

static const UV UNI_JAMO_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1100,
	0x1200
};

static const UV UNI_JAMOEXTA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA960,
	0xA980
};

static const UV UNI_JAMOEXTB_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xD7B0,
	0xD800
};

static const UV UNI_JAVA_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA980,
	0xA9CE,
	0xA9CF,
	0xA9DA,
	0xA9DE,
	0xA9E0
};

static const UV UNI_JG__AFRICANFEH_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x8BB,
	0x8BC
};

static const UV UNI_JG__AFRICANNOON_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x8BD,
	0x8BE
};

static const UV UNI_JG__AFRICANQAF_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x8BC,
	0x8BD,
	0x8C4,
	0x8C5
};

static const UV UNI_JG__AIN_invlist[] = {  /* for all charsets */
	13,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x639,
	0x63B,
	0x6A0,
	0x6A1,
	0x6FC,
	0x6FD,
	0x75D,
	0x760,
	0x8B3,
	0x8B4,
	0x8C3,
	0x8C4
};

static const UV UNI_JG__ALAPH_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x710,
	0x711
};

static const UV UNI_JG__ALEF_invlist[] = {  /* for all charsets */
	15,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x622,
	0x624,
	0x625,
	0x626,
	0x627,
	0x628,
	0x671,
	0x674,
	0x675,
	0x676,
	0x773,
	0x775,
	0x870,
	0x883
};

static const UV UNI_JG__BEH_invlist[] = {  /* for all charsets */
	17,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x628,
	0x629,
	0x62A,
	0x62C,
	0x66E,
	0x66F,
	0x679,
	0x681,
	0x750,
	0x757,
	0x8A0,
	0x8A2,
	0x8B6,
	0x8B9,
	0x8BE,
	0x8C1
};

static const UV UNI_JG__BETH_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x712,
	0x713,
	0x72D,
	0x72E
};

static const UV UNI_JG__BURUSHASKIYEHBARREE_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x77A,
	0x77C
};

static const UV UNI_JG__DAL_invlist[] = {  /* for all charsets */
	11,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x62F,
	0x631,
	0x688,
	0x691,
	0x6EE,
	0x6EF,
	0x759,
	0x75B,
	0x8AE,
	0x8AF
};

static const UV UNI_JG__DALATHRISH_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x715,
	0x717,
	0x72A,
	0x72B,
	0x72F,
	0x730
};

static const UV UNI_JG__E_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x725,
	0x726
};

static const UV UNI_JG__FARSIYEH_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x63D,
	0x640,
	0x6CC,
	0x6CD,
	0x6CE,
	0x6CF,
	0x775,
	0x777
};

static const UV UNI_JG__FE_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x74F,
	0x750
};

static const UV UNI_JG__FEH_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x641,
	0x642,
	0x6A1,
	0x6A7,
