
=item Intended audience

=item Status of this document

=back

=item FUNDAMENTALS

=over 4

=item Choice of markup: Pod

=item Choice of language: American English

=item Choice of encoding: UTF-8

=item Choice of underlying style guide: CMOS

=item Contributing to Perl's documentation

=back

=item FORMATTING AND STRUCTURE

=over 4

=item Document structure

=item Formatting rules

=item Adding comments

=item Perlfunc has special rules

=back

=item TONE AND STYLE

=over 4

=item Apply one of the four documentation modes

=item Assume readers' intelligence, but not their knowledge

=item Use meaningful variable and symbol names in examples

=item Write in English, but not just for English-speakers

=item Omit placeholder text or commentary

=item Apply section-breaks and examples generously

=item Lead with common cases and best practices

=item Document Perl's present

=item The documentation speaks with one voice

=back

=item INDEX OF PREFERRED TERMS

built-in function, Darwin, macOS, man page, Perl; perl, Perl 5, Perl 6,
Perl 5 Porters, the; porters, the; p5p, program, Raku, script, semicolon,
Unix

=item SEE ALSO

=item AUTHOR

=back

=head2 perlpodstyle - Perl POD style guide

=over 4

=item DESCRIPTION

NAME, SYNOPSIS, DESCRIPTION, OPTIONS, RETURN VALUE, ERRORS, DIAGNOSTICS,
EXAMPLES, ENVIRONMENT, FILES, CAVEATS, BUGS, RESTRICTIONS, NOTES, AUTHOR,
HISTORY, COPYRIGHT AND LICENSE, SEE ALSO

=item AUTHOR

=item COPYRIGHT AND LICENSE

=item SEE ALSO

=back

=head2 perldiag - various Perl diagnostics

=over 4

=item DESCRIPTION

=item SEE ALSO

=back

=head2 perldeprecation - list Perl deprecations

=over 4

=item DESCRIPTION

=over 4

=item Unscheduled Deprecations

=item Perl 5.44

=item Perl 5.42

=item Perl 5.40

=item Perl 5.38

=item Perl 5.34

=item Perl 5.32

=item Perl 5.30

=item Perl 5.28

=item Perl 5.26

=item Perl 5.24

=item Perl 5.16

=back

=item SEE ALSO

=back

=head2 perllexwarn - Perl Lexical Warnings

=over 4

=item DESCRIPTION

=back

=head2 perldebug - Perl debugging

=over 4

=item DESCRIPTION

=item The Perl Debugger

=over 4

=item Calling the Debugger

perl -d program_name, perl -d -e 0, perl -d:ptkdb program_name, perl -dt
threaded_program_name

=item Debugger Commands

h X<debugger command, h>, h [command], h h, p expr X<debugger command, p>,
x [maxdepth] expr X<debugger command, x>, V [pkg [vars]] X<debugger
command, V>, X [vars] X<debugger command, X>, y [level [vars]] X<debugger
command, y>, T X<debugger command, T> X<backtrace> X<stack, backtrace>, s
[expr] X<debugger command, s> X<step>, n [expr] X<debugger command, n>, r
X<debugger command, r>, <CR>, c [line|sub] X<debugger command, c>, l
X<debugger command, l>, l min+incr, l min-max, l line, l subname, -
X<debugger command, ->, v [line] X<debugger command, v>, . X<debugger
command, .>, f filename X<debugger command, f>, /pattern/, ?pattern?, L
[abw] X<debugger command, L>, S [[!]regex] X<debugger command, S>, t [n]
X<debugger command, t>, t [n] expr X<debugger command, t>, b X<breakpoint>
X<debugger command, b>, b [line] [condition] X<breakpoint> X<debugger
command, b>, b [file]:[line] [condition] X<breakpoint> X<debugger command,
b>, b subname [condition] X<breakpoint> X<debugger command, b>, b postpone
subname [condition] X<breakpoint> X<debugger command, b>, b load filename
X<breakpoint> X<debugger command, b>, b compile subname X<breakpoint>
X<debugger command, b>, B line X<breakpoint> X<debugger command, B>, B *
X<breakpoint> X<debugger command, B>, disable [file]:[line] X<breakpoint>
X<debugger command, disable> X<disable>, disable [line] X<breakpoint>
X<debugger command, disable> X<disable>, enable [file]:[line] X<breakpoint>
X<debugger command, disable> X<disable>, enable [line] X<breakpoint>
X<debugger command, disable> X<disable>, a [line] command X<debugger
command, a>, A line X<debugger command, A>, A * X<debugger command, A>, w
expr X<debugger command, w>, W expr X<debugger command, W>, W * X<debugger
command, W>, o X<debugger command, o>, o booloption ... X<debugger command,
o>, o anyoption? ... X<debugger command, o>, o option=value ... X<debugger
command, o>, < ? X<< debugger command, < >>, < [ command ] X<< debugger
command, < >>, < * X<< debugger command, < >>, << command X<< debugger
command, << >>, > ? X<< debugger command, > >>, > command X<< debugger
command, > >>, > * X<< debugger command, > >>, >> command X<<< debugger
command, >> >>>, { ? X<debugger command, {>, { [ command ], { * X<debugger
command, {>, {{ command X<debugger command, {{>, ! number X<debugger
command, !>, ! -number X<debugger command, !>, ! pattern X<debugger
command, !>, !! cmd X<debugger command, !!>, source file X<debugger
command, source>, H -number X<debugger command, H>, q or ^D X<debugger
command, q> X<debugger command, ^D>, R X<debugger command, R>, |dbcmd
X<debugger command, |>, ||dbcmd X<debugger command, ||>, command, m expr
X<debugger command, m>, M X<debugger command, M>, man [manpage] X<debugger
command, man>

=item Configurable Options

C<recallCommand>, C<ShellBang> X<debugger option, recallCommand> X<debugger
option, ShellBang>, C<pager> X<debugger option, pager>, C<tkRunning>
X<debugger option, tkRunning>, C<signalLevel>, C<warnLevel>, C<dieLevel>
X<debugger option, signalLevel> X<debugger option, warnLevel> X<debugger
option, dieLevel>, C<AutoTrace> X<debugger option, AutoTrace>, C<LineInfo>
X<debugger option, LineInfo>, C<inhibit_exit> X<debugger option,
inhibit_exit>, C<PrintRet> X<debugger option, PrintRet>, C<ornaments>
X<debugger option, ornaments>, C<frame> X<debugger option, frame>,
C<maxTraceLen> X<debugger option, maxTraceLen>, C<windowSize> X<debugger
option, windowSize>, C<arrayDepth>, C<hashDepth> X<debugger option,
arrayDepth> X<debugger option, hashDepth>, C<dumpDepth> X<debugger option,
dumpDepth>, C<compactDump>, C<veryCompact> X<debugger option, compactDump>
X<debugger option, veryCompact>, C<globPrint> X<debugger option,
globPrint>, C<DumpDBFiles> X<debugger option, DumpDBFiles>, C<DumpPackages>
X<debugger option, DumpPackages>, C<DumpReused> X<debugger option,
DumpReused>, C<quote>, C<HighBit>, C<undefPrint> X<debugger option, quote>
X<debugger option, HighBit> X<debugger option, undefPrint>, C<UsageOnly>
X<debugger option, UsageOnly>, C<HistFile> X<debugger option, history,
HistFile>, C<HistSize> X<debugger option, history, HistSize>, C<TTY>
X<debugger option, TTY>, C<noTTY> X<debugger option, noTTY>, C<ReadLine>
X<debugger option, ReadLine>, C<NonStop> X<debugger option, NonStop>

=item Debugger Input/Output

Prompt, Multiline commands, Stack backtrace X<backtrace> X<stack,
backtrace>, Line Listing Format, Frame listing

=item Debugging Compile-Time Statements

=item Debugger Customization

=item Readline Support / History in the Debugger

=item Editor Support for Debugging

=item The Perl Profiler
X<profile> X<profiling> X<profiler>

=back

=item Debugging Regular Expressions
X<regular expression, debugging>
X<regex, debugging> X<regexp, debugging>

=item Debugging Memory Usage
X<memory usage>

=item SEE ALSO

=item BUGS

=back

=head2 perlvar - Perl predefined variables

=over 4

=item DESCRIPTION

=over 4

=item The Syntax of Variable Names

=back

=item SPECIAL VARIABLES

=over 4

=item General Variables

$ARG, $_ X<$_> X<$ARG>, @ARG, @_ X<@_> X<@ARG>, $LIST_SEPARATOR, $" X<$">
X<$LIST_SEPARATOR>, $PROCESS_ID, $PID, $$ X<$$> X<$PID> X<$PROCESS_ID>,
$PROGRAM_NAME, $0 X<$0> X<$PROGRAM_NAME>, $REAL_GROUP_ID, $GID, $( X<$(>
X<$GID> X<$REAL_GROUP_ID>, $EFFECTIVE_GROUP_ID, $EGID, $) X<$)> X<$EGID>
X<$EFFECTIVE_GROUP_ID>, $REAL_USER_ID, $UID, $< X<< $< >> X<$UID>
X<$REAL_USER_ID>, $EFFECTIVE_USER_ID, $EUID, $> X<< $> >> X<$EUID>
X<$EFFECTIVE_USER_ID>, $SUBSCRIPT_SEPARATOR, $SUBSEP, $; X<$;> X<$SUBSEP>
X<SUBSCRIPT_SEPARATOR>, $a, $b X<$a> X<$b>, %ENV X<%ENV>,
$OLD_PERL_VERSION, $] X<$]> X<$OLD_PERL_VERSION>, $SYSTEM_FD_MAX, $^F
X<$^F> X<$SYSTEM_FD_MAX>, @F X<@F>, @INC X<@INC>, %INC X<%INC>, $INC
X<$INC>, $INPLACE_EDIT, $^I X<$^I> X<$INPLACE_EDIT>, @ISA X<@ISA>, $^M
X<$^M>, ${^MAX_NESTED_EVAL_BEGIN_BLOCKS}, $OSNAME, $^O X<$^O> X<$OSNAME>,
%SIG X<%SIG>, %{^HOOK} X<%{^HOOK}>, require__before, require__after,
$BASETIME, $^T X<$^T> X<$BASETIME>, $PERL_VERSION, $^V X<$^V>
X<$PERL_VERSION>, $EXECUTABLE_NAME, $^X X<$^X> X<$EXECUTABLE_NAME>

=item Variables related to regular expressions

$<I<digits>> ($1, $2, ...) X<$1> X<$2> X<$3> X<$I<digits>>, @{^CAPTURE}
X<@{^CAPTURE}> X<@^CAPTURE>, $MATCH, $& X<$&> X<$MATCH>, ${^MATCH}
X<${^MATCH}>, $PREMATCH, $` X<$`> X<$PREMATCH>, ${^PREMATCH}
X<${^PREMATCH}>, $POSTMATCH, $' X<$'> X<$POSTMATCH> X<@->, ${^POSTMATCH}
X<${^POSTMATCH}>, $LAST_PAREN_MATCH, $+ X<$+> X<$LAST_PAREN_MATCH>,
$LAST_SUBMATCH_RESULT, $^N X<$^N> X<$LAST_SUBMATCH_RESULT>,
@LAST_MATCH_END, @+ X<@+> X<@LAST_MATCH_END>, %{^CAPTURE},
%LAST_PAREN_MATCH, %+ X<%+> X<%LAST_PAREN_MATCH> X<%{^CAPTURE}>,
@LAST_MATCH_START, @- X<@-> X<@LAST_MATCH_START>, C<$`> is the same as
C<substr($var, 0, $-[0])>, C<$&> is the same as C<substr($var, $-[0], $+[0]
- $-[0])>, C<$'> is the same as C<substr($var, $+[0])>, C<$1> is the same
as C<substr($var, $-[1], $+[1] - $-[1])>, C<$2> is the same as
C<substr($var, $-[2], $+[2] - $-[2])>, C<$3> is the same as C<substr($var,
$-[3], $+[3] - $-[3])>, %{^CAPTURE_ALL} X<%{^CAPTURE_ALL}>, %- X<%->,
${^LAST_SUCCESSFUL_PATTERN}, $LAST_REGEXP_CODE_RESULT, $^R X<$^R>
X<$LAST_REGEXP_CODE_RESULT>, ${^RE_COMPILE_RECURSION_LIMIT}
X<${^RE_COMPILE_RECURSION_LIMIT}>, ${^RE_DEBUG_FLAGS}
X<${^RE_DEBUG_FLAGS}>, ${^RE_TRIE_MAXBUF} X<${^RE_TRIE_MAXBUF}>

=item Variables related to filehandles

$ARGV X<$ARGV>, @ARGV X<@ARGV>, ARGV X<ARGV>, ARGVOUT X<ARGVOUT>,
IO::Handle->output_field_separator( EXPR ), $OUTPUT_FIELD_SEPARATOR, $OFS,
$, X<$,> X<$OFS> X<$OUTPUT_FIELD_SEPARATOR>, HANDLE->input_line_number(
EXPR ), $INPUT_LINE_NUMBER, $NR, $. X<$.> X<$NR> X<$INPUT_LINE_NUMBER>
X<line number>, IO::Handle->input_record_separator( EXPR ),
$INPUT_RECORD_SEPARATOR, $RS, $/ X<$/> X<$RS> X<$INPUT_RECORD_SEPARATOR>,
IO::Handle->output_record_separator( EXPR ), $OUTPUT_RECORD_SEPARATOR,
$ORS, $\ X<$\> X<$ORS> X<$OUTPUT_RECORD_SEPARATOR>, HANDLE->autoflush( EXPR
), $OUTPUT_AUTOFLUSH, $| X<$|> X<autoflush> X<flush> X<$OUTPUT_AUTOFLUSH>,
${^LAST_FH} X<${^LAST_FH}>, $ACCUMULATOR, $^A X<$^A> X<$ACCUMULATOR>,
IO::Handle->format_formfeed(EXPR), $FORMAT_FORMFEED, $^L X<$^L>
X<$FORMAT_FORMFEED>, HANDLE->format_page_number(EXPR), $FORMAT_PAGE_NUMBER,
$% X<$%> X<$FORMAT_PAGE_NUMBER>, HANDLE->format_lines_left(EXPR),
$FORMAT_LINES_LEFT, $- X<$-> X<$FORMAT_LINES_LEFT>,
IO::Handle->format_line_break_characters EXPR,
$FORMAT_LINE_BREAK_CHARACTERS, $: X<$:> X<FORMAT_LINE_BREAK_CHARACTERS>,
HANDLE->format_lines_per_page(EXPR), $FORMAT_LINES_PER_PAGE, $= X<$=>
X<$FORMAT_LINES_PER_PAGE>, HANDLE->format_top_name(EXPR), $FORMAT_TOP_NAME,
$^ X<$^> X<$FORMAT_TOP_NAME>, HANDLE->format_name(EXPR), $FORMAT_NAME, $~
X<$~> X<$FORMAT_NAME>

=item Error Variables
X<error> X<exception>

${^CHILD_ERROR_NATIVE} X<$^CHILD_ERROR_NATIVE>, $EXTENDED_OS_ERROR, $^E
X<$^E> X<$EXTENDED_OS_ERROR>, $EXCEPTIONS_BEING_CAUGHT, $^S X<$^S>
X<$EXCEPTIONS_BEING_CAUGHT>, $WARNING, $^W X<$^W> X<$WARNING>,
${^WARNING_BITS} X<${^WARNING_BITS}>, $OS_ERROR, $ERRNO, $! X<$!> X<$ERRNO>
X<$OS_ERROR>, %OS_ERROR, %ERRNO, %! X<%!> X<%OS_ERROR> X<%ERRNO>,
$CHILD_ERROR, $? X<$?> X<$CHILD_ERROR>, $EVAL_ERROR, $@ X<$@>
X<$EVAL_ERROR>

=item Variables related to the interpreter state

$COMPILING, $^C X<$^C> X<$COMPILING>, $DEBUGGING, $^D X<$^D> X<$DEBUGGING>,
${^GLOBAL_PHASE} X<${^GLOBAL_PHASE}>, CONSTRUCT, START, CHECK, INIT, RUN,
END, DESTRUCT, $^H X<$^H>, %^H X<%^H>, ${^OPEN} X<${^OPEN}>, $PERLDB, $^P
X<$^P> X<$PERLDB>, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x100,
0x200, 0x400, 0x800, 0x1000, ${^TAINT} X<${^TAINT}>, ${^SAFE_LOCALES}
X<${^SAFE_LOCALES}>, ${^UNICODE} X<${^UNICODE}>, ${^UTF8CACHE}
X<${^UTF8CACHE}>, ${^UTF8LOCALE} X<${^UTF8LOCALE}>

=item Deprecated and removed variables

$# X<$#>, $* X<$*>, $[ X<$[>, ${^ENCODING} X<${^ENCODING}>,
${^WIN32_SLOPPY_STAT} X<${^WIN32_SLOPPY_STAT}> X<sitecustomize>
X<sitecustomize.pl>

=back

=back

=head2 perlre - Perl regular expressions

=over 4

=item DESCRIPTION

=over 4

=item The Basics
X<regular expression, version 8> X<regex, version 8> X<regexp, version 8>

=item Modifiers

B<C<m>> X</m> X<regex, multiline> X<regexp, multiline> X<regular
expression, multiline>, B<C<s>> X</s> X<regex, single-line> X<regexp,
single-line> X<regular expression, single-line>, B<C<i>> X</i> X<regex,
case-insensitive> X<regexp, case-insensitive> X<regular expression,
case-insensitive>, B<C<x>> and B<C<xx>> X</x>, B<C<p>> X</p> X<regex,
preserve> X<regexp, preserve>, B<C<a>>, B<C<d>>, B<C<l>>, and B<C<u>> X</a>
X</d> X</l> X</u>, B<C<n>> X</n> X<regex, non-capture> X<regexp,
non-capture> X<regular expression, non-capture>, Other Modifiers

=item Regular Expressions

[1], [2], [3], [4], [5], [6], [7], [8]

=item Quoting metacharacters

=item Extended Patterns

C<(?#I<text>)> X<(?#)>, C<(?adlupimnsx-imnsx)>, C<(?^alupimnsx)> X<(?)>
X<(?^)>, C<(?:I<pattern>)> X<(?:)>, C<(?adluimnsx-imnsx:I<pattern>)>,
C<(?^aluimnsx:I<pattern>)> X<(?^:)>, C<(?|I<pattern>)> X<(?|)> X<Branch
reset>, Lookaround Assertions X<look-around assertion> X<lookaround
assertion> X<look-around> X<lookaround>, C<(?=I<pattern>)>,
C<(*pla:I<pattern>)>, C<(*positive_lookahead:I<pattern>)> X<(?=)> X<(*pla>
X<(*positive_lookahead> X<look-ahead, positive> X<lookahead, positive>,
C<(?!I<pattern>)>, C<(*nla:I<pattern>)>,
C<(*negative_lookahead:I<pattern>)> X<(?!)> X<(*nla>
X<(*negative_lookahead> X<look-ahead, negative> X<lookahead, negative>,
C<(?<=I<pattern>)>, C<\K>, C<(*plb:I<pattern>)>,
C<(*positive_lookbehind:I<pattern>)> X<(?<=)> X<(*plb>
X<(*positive_lookbehind> X<look-behind, positive> X<lookbehind, positive>
X<\K>, C<(?<!I<pattern>)>, C<(*nlb:I<pattern>)>,
C<(*negative_lookbehind:I<pattern>)> X<(?<!)> X<(*nlb>
X<(*negative_lookbehind> X<look-behind, negative> X<lookbehind, negative>,
C<< (?<I<NAME>>I<pattern>) >>, C<(?'I<NAME>'I<pattern>)> X<< (?<NAME>) >>
X<(?'NAME')> X<named capture> X<capture>, C<< \k<I<NAME>> >>, C<<
\k'I<NAME>' >>, C<< \k{I<NAME>} >>, C<(?{ I<code> })> X<(?{})> X<regex,
code in> X<regexp, code in> X<regular expression, code in>, C<(*{ I<code>
})> X<(*{})> X<regex, optimistic code>, C<(??{ I<code> })> X<(??{})>
X<regex, postponed> X<regexp, postponed> X<regular expression, postponed>,
C<(?I<PARNO>)> C<(?-I<PARNO>)> C<(?+I<PARNO>)> C<(?R)> C<(?0)> X<(?PARNO)>
X<(?1)> X<(?R)> X<(?0)> X<(?-1)> X<(?+1)> X<(?-PARNO)> X<(?+PARNO)>
X<regex, recursive> X<regexp, recursive> X<regular expression, recursive>
X<regex, relative recursion> X<GOSUB> X<GOSTART>, C<(?&I<NAME>)>
X<(?&NAME)>, C<(?(I<condition>)I<yes-pattern>|I<no-pattern>)> X<(?()>,
C<(?(I<condition>)I<yes-pattern>)>, an integer in parentheses, a
lookahead/lookbehind/evaluate zero-width assertion;, a name in angle
brackets or single quotes, the special symbol C<(R)>, C<(1)> C<(2)> ..,
C<(E<lt>I<NAME>E<gt>)> C<('I<NAME>')>, C<(?=...)> C<(?!...)> C<(?<=...)>
C<(?<!...)>, C<(?{ I<CODE> })>, C<(*{ I<CODE> })>, C<(R)>, C<(R1)> C<(R2)>
.., C<(R&I<NAME>)>, C<(DEFINE)>, C<< (?>I<pattern>) >>, C<<
(*atomic:I<pattern>) >> X<(?E<gt>pattern)> X<(*atomic> X<backtrack>
X<backtracking> X<atomic> X<possessive>, C<(?[ ])>

=item Backtracking
X<backtrack> X<backtracking>

=item Script Runs
X<(*script_run:...)> X<(sr:...)>
X<(*atomic_script_run:...)> X<(asr:...)>

=item Special Backtracking Control Verbs

Verbs, C<(*PRUNE)> C<(*PRUNE:I<NAME>)> X<(*PRUNE)> X<(*PRUNE:NAME)>,
C<(*SKIP)> C<(*SKIP:I<NAME>)> X<(*SKIP)>, C<(*MARK:I<NAME>)> C<(*:I<NAME>)>
X<(*MARK)> X<(*MARK:NAME)> X<(*:NAME)>, C<(*THEN)> C<(*THEN:I<NAME>)>,
C<(*COMMIT)> C<(*COMMIT:I<arg>)> X<(*COMMIT)>, C<(*FAIL)> C<(*F)>
C<(*FAIL:I<arg>)> X<(*FAIL)> X<(*F)>, C<(*ACCEPT)> C<(*ACCEPT:I<arg>)>
X<(*ACCEPT)>

=item Warning on C<\1> Instead of C<$1>

=item Repeated Patterns Matching a Zero-length Substring

=item Combining RE Pieces

C<ST>, C<S|T>, C<S{REPEAT_COUNT}>, C<S{min,max}>, C<S{min,max}?>, C<S?>,
C<S*>, C<S+>, C<S??>, C<S*?>, C<S+?>, C<< (?>S) >>, C<(?=S)>, C<(?<=S)>,
C<(?!S)>, C<(?<!S)>, C<(??{ I<EXPR> })>, C<(?I<PARNO>)>,
C<(?(I<condition>)I<yes-pattern>|I<no-pattern>)>

=item Creating Custom RE Engines

=item Embedded Code Execution Frequency

=item PCRE/Python Support

C<< (?PE<lt>I<NAME>E<gt>I<pattern>) >>, C<< (?P=I<NAME>) >>, C<<
(?P>I<NAME>) >>

=back

=item BUGS

=item SEE ALSO

=back

=head2 perlrebackslash - Perl Regular Expression Backslash Sequences and
Escapes

=over 4

=item DESCRIPTION

=over 4

=item The backslash

[1]

=item All the sequences and escapes

=item Character Escapes

[1], [2]

=item Modifiers

=item Character classes

=item Referencing

=item Assertions

\A, \z, \Z, \G, \b{}, \b, \B{}, \B, C<\b{gcb}> or C<\b{g}>, C<\b{lb}>,
C<\b{sb}>, C<\b{wb}>

=item Misc

\K, \N, \R X<\R>, \X X<\X>

=back

=back

=head2 perlrecharclass - Perl Regular Expression Character Classes

=over 4

=item DESCRIPTION

=over 4

=item The dot

=item Backslash sequences
X<\w> X<\W> X<\s> X<\S> X<\d> X<\D> X<\p> X<\P>
X<\N> X<\v> X<\V> X<\h> X<\H>
X<word> X<whitespace>

If the C</a> modifier is in effect .., otherwise .., For code points above
255 .., For code points below 256 .., if locale rules are in effect .., if,
instead, Unicode rules are in effect .., otherwise .., If the C</a>
modifier is in effect .., otherwise .., For code points above 255 .., For
code points below 256 .., if locale rules are in effect .., if, instead,
Unicode rules are in effect .., otherwise .., [1], [2]

=item Bracketed Character Classes

[1], [2], [3], [4], [5], [6], [7], If the C</a> modifier, is in effect ..,
otherwise .., For code points above 255 .., For code points below 256 ..,
if locale rules are in effect .., C<word>, C<ascii>, C<blank>, if, instead,
Unicode rules are in effect .., otherwise ..

=back

=back

=head2 perlreref - Perl Regular Expressions Reference

=over 4

=item DESCRIPTION

=over 4

=item OPERATORS

=item SYNTAX

=item ESCAPE SEQUENCES

=item CHARACTER CLASSES

=item ANCHORS

=item QUANTIFIERS

=item EXTENDED CONSTRUCTS

=item VARIABLES

=item FUNCTIONS

=item TERMINOLOGY

=back

=item AUTHOR

=item SEE ALSO

=item THANKS

=back

=head2 perlref - Perl references and nested data structures

=over 4

=item NOTE

=item DESCRIPTION

=over 4

=item Making References
X<reference, creation> X<referencing>

=item Using References
X<reference, use> X<dereferencing> X<dereference>

=item Circular References
X<circular reference> X<reference, circular>

=item Symbolic references
X<reference, symbolic> X<reference, soft>
X<symbolic reference> X<soft reference>

=item Not-so-symbolic references

=item Pseudo-hashes: Using an array as a hash
X<pseudo-hash> X<pseudo hash> X<pseudohash>

=item Function Templates
X<scope, lexical> X<closure> X<lexical> X<lexical scope>
X<subroutine, nested> X<sub, nested> X<subroutine, local> X<sub, local>

=item Postfix Dereference Syntax

=item Postfix Reference Slicing

=item Assigning to References

=item Declaring a Reference to a Variable

=back

=item WARNING: Don't use references as hash keys
X<reference, string context> X<reference, use as hash key>

=item SEE ALSO

=back

=head2 perlform - Perl formats

=over 4

=item DESCRIPTION

=over 4

=item Text Fields
X<format, text field>

=item Numeric Fields
X<#> X<format, numeric field>

=item The Field @* for Variable-Width Multi-Line Text
X<@*>

=item The Field ^* for Variable-Width One-line-at-a-time Text
X<^*>

=item Specifying Values
X<format, specifying values>

=item Using Fill Mode
X<format, fill mode>

=item Suppressing Lines Where All Fields Are Void
X<format, suppressing lines>

=item Repeating Format Lines
X<format, repeating lines>

=item Top of Form Processing
X<format, top of form> X<top> X<header>

=item Format Variables
X<format variables>
X<format, variables>

=back

=item NOTES

=over 4

=item Footers
X<format, footer> X<footer>

=item Accessing Formatting Internals
X<format, internals>

=back

=item WARNINGS

=back

=head2 perlobj - Perl object reference

=over 4

=item DESCRIPTION

=over 4

=item An Object is Simply a Data Structure
X<object> X<bless> X<constructor> X<new>

=item A Class is Simply a Package
X<class> X<package> X<@ISA> X<inheritance>

=item A Method is Simply a Subroutine
X<method>

=item Method Invocation
X<invocation> X<method> X<arrow> X<< -> >>

=item Inheritance
X<inheritance>

=item Writing Constructors
X<constructor>

=item Attributes
X<attribute>

=item An Aside About Smarter and Safer Code

=item Method Call Variations
X<method>

=item Invoking Class Methods
X<invocation>

=item C<bless>, C<blessed>, and C<ref>

=item The UNIVERSAL Class
X<UNIVERSAL>

isa($class) X<isa>, DOES($role) X<DOES>, can($method) X<can>,
VERSION($need) X<VERSION>

=item AUTOLOAD
X<AUTOLOAD>

=item Destructors
X<destructor> X<DESTROY>

=item Non-Hash Objects

=item Inside-Out objects

=item Pseudo-hashes

=back

=item SEE ALSO

=back

=head2 perltie - how to hide an object class in a simple variable

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item Tying Scalars
X<scalar, tying>

TIESCALAR classname, LIST X<TIESCALAR>, FETCH this X<FETCH>, STORE this,
value X<STORE>, UNTIE this X<UNTIE>, DESTROY this X<DESTROY>

=item Tying Arrays
X<array, tying>

TIEARRAY classname, LIST X<TIEARRAY>, FETCH this, index X<FETCH>, STORE
this, index, value X<STORE>, FETCHSIZE this X<FETCHSIZE>, STORESIZE this,
count X<STORESIZE>, EXTEND this, count X<EXTEND>, EXISTS this, key
X<EXISTS>, DELETE this, key X<DELETE>, CLEAR this X<CLEAR>, PUSH this, LIST
 X<PUSH>, POP this X<POP>, SHIFT this X<SHIFT>, UNSHIFT this, LIST 
X<UNSHIFT>, SPLICE this, offset, length, LIST X<SPLICE>, UNTIE this
X<UNTIE>, DESTROY this X<DESTROY>

=item Tying Hashes
X<hash, tying>

USER, HOME, CLOBBER, LIST, TIEHASH classname, LIST X<TIEHASH>, FETCH this,
key X<FETCH>, STORE this, key, value X<STORE>, DELETE this, key X<DELETE>,
CLEAR this X<CLEAR>, EXISTS this, key X<EXISTS>, FIRSTKEY this X<FIRSTKEY>,
NEXTKEY this, lastkey X<NEXTKEY>, SCALAR this X<SCALAR>, UNTIE this
X<UNTIE>, DESTROY this X<DESTROY>

=item Tying FileHandles
X<filehandle, tying>

TIEHANDLE classname, LIST X<TIEHANDLE>, WRITE this, LIST X<WRITE>, PRINT
this, LIST X<PRINT>, PRINTF this, LIST X<PRINTF>, READ this, LIST X<READ>,
READLINE this X<READLINE>, GETC this X<GETC>, EOF this X<EOF>, CLOSE this
X<CLOSE>, UNTIE this X<UNTIE>, DESTROY this X<DESTROY>

=item UNTIE this
X<UNTIE>

=item The C<untie> Gotcha
X<untie>

=back

=item SEE ALSO

=item BUGS

=item AUTHOR

=back

=head2 perldbmfilter - Perl DBM Filters

=over 4

=item SYNOPSIS

=item DESCRIPTION

B<filter_store_key>, B<filter_store_value>, B<filter_fetch_key>,
B<filter_fetch_value>

=over 4

=item The Filter

=item An Example: the NULL termination problem

=item Another Example: Key is a C int

=back

=item SEE ALSO

=item AUTHOR

=back

=head2 perlclass - Perl class syntax reference

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item History

=back

=item KEYWORDS

=over 4

=item class

=item field

=item method

=back

=item ATTRIBUTES

=over 4

=item Class attributes

=item Field attributes

=item Method attributes

=back

=item OBJECT LIFECYCLE

=over 4

=item Construction

=item Adjustment

=item Lifetime

=item Destruction

=back

=item TODO

Roles, Parameters to ADJUST blocks, ADJUST blocks as true blocks, More
accessor generator attributes, Metaprogramming, Extension Customisation

=item KNOWN BUGS

=item AUTHORS

=back

=head2 perlipc - Perl interprocess communication (signals, fifos, pipes,
safe subprocesses, sockets, and semaphores)

=over 4

=item DESCRIPTION

=item Signals

=over 4

=item Handling the SIGHUP Signal in Daemons

=item Deferred Signals (Safe Signals)

Long-running opcodes, Interrupting IO, Restartable system calls, Signals as
"faults", Signals triggered by operating system state

=back

=item Named Pipes

=item Using open() for IPC

=over 4

=item Filehandles

=item Background Processes

=item Complete Dissociation of Child from Parent

=item Safe Pipe Opens

=item Avoiding Pipe Deadlocks

=item Bidirectional Communication with Another Process

=item Bidirectional Communication with Yourself

=back

=item Sockets: Client/Server Communication

=over 4

=item Internet Line Terminators

=item Internet TCP Clients and Servers

=item Unix-Domain TCP Clients and Servers

=back

=item TCP Clients with IO::Socket

=over 4

=item A Simple Client

C<Proto>, C<PeerAddr>, C<PeerPort>

=item A Webget Client

=item Interactive Client with IO::Socket

=back

=item TCP Servers with IO::Socket

Proto, LocalPort, Listen, Reuse

=item UDP: Message Passing

=item SysV IPC

=item NOTES

=item BUGS

=item AUTHOR

=item SEE ALSO

=back

=head2 perlfork - Perl's fork() emulation

=over 4

=item SYNOPSIS

=item DESCRIPTION

