Patch 7.4.1136
Problem:    Wrong argument to assert_exception() causes a crash. (reported by
            Coverity)
Solution:   Check for NULL pointer.  Add a test.
Files:      src/eval.c, src/testdir/test_assert.vim

Patch 7.4.1137
Problem:    Illegal memory access when using :copen and :cclose.
Solution:   Avoid that curbuf is invalid. (suggestion by Justin M. Keyes)
            Add a test.
Files:      src/window.c, src/testdir/test_quickfix.vim

Patch 7.4.1138
Problem:    When running gvim in the foreground some icons are missing.
            (Taylor Venable)
Solution:   Move the call to gui_gtk_register_resource(). (Kazunobu Kuriyama)
Files:      src/gui_gtk_x11.c

Patch 7.4.1139
Problem:    MS-Windows: getftype() returns "file" for symlink to directory.
Solution:   Make it return "dir". (Ken Takata)
Files:      src/os_mswin.c

Patch 7.4.1140
Problem:    Recognizing <sid> does not work when the language is Turkish.
            (Christian Brabandt)
Solution:   Use MB_STNICMP() instead of STNICMP().
Files:      src/eval.c

Patch 7.4.1141
Problem:    Using searchpair() with a skip expression that uses syntax
            highlighting sometimes doesn't work. (David Fishburn)
Solution:   Reset next_match_idx. (Christian Brabandt)
Files:      src/syntax.c

Patch 7.4.1142
Problem:    Cannot define keyword characters for a syntax file.
Solution:   Add the ":syn iskeyword" command. (Christian Brabandt)
Files:      runtime/doc/options.txt, runtime/doc/syntax.txt, src/buffer.c,
            src/option.c, src/structs.h, src/syntax.c,
            src/testdir/Make_all.mak, src/testdir/test_syntax.vim

Patch 7.4.1143
Problem:    Can't sort on floating point numbers.
Solution:   Add the "f" flag to ":sort".  (Alex Jakushev)  Also add the "f"
            flag to sort().
Files:      runtime/doc/change.txt, src/ex_cmds.c, src/testdir/test_sort.vim,
            src/testdir/test57.in, src/testdir/test57.ok, src/eval.c

Patch 7.4.1144 (after 7.4.1143)
Problem:    Can't build on several systems.
Solution:   Include float.h. (Christian Robinson, closes #570 #571)
Files:      src/ex_cmds.c

Patch 7.4.1145
Problem:    Default features are conservative.
Solution:   Make the default feature set for most of today's systems "huge".
Files:      src/feature.h, src/configure.in, src/auto/configure

Patch 7.4.1146
Problem:    Can't build with Python 3 interface using MingW.
Solution:   Update the Makefile. (Yasuhiro Matsumoto, Ken Takata)
Files:      src/Make_cyg_ming.mak

Patch 7.4.1147
Problem:    Conflict for "chartab". (Kazunobu Kuriyama)
Solution:   Rename the global one to something less obvious.  Move it into
            src/chartab.c.
Files:      src/macros.h, src/globals.h, src/charset.c, src/main.c,
            src/option.c, src/screen.c, src/vim.h

Patch 7.4.1148
Problem:    Default for MingW and Cygwin is still "normal".
Solution:   Use "huge" as default. (Ken Takata)
Files:      src/Make_cyg_ming.mak, src/Make_mvc.mak

Patch 7.4.1149 (after 7.4.1013)
Problem:    Using the local value of 'errorformat' causes more problems than
            it solves.
Solution:   Revert 7.4.1013.
Files:      runtime/doc/quickfix.txt, src/quickfix.c

Patch 7.4.1150
Problem:    'langmap' applies to the first character typed in Select mode.
            (David Watson)
Solution:   Check for SELECTMODE. (Christian Brabandt, closes #572)
            Add the 'x' flag to feedkeys().
Files:      src/getchar.c, src/normal.c, src/testdir/test_langmap.vim,
            src/ex_docmd.c, src/proto/ex_docmd.pro, src/testdir/Make_all.mak,
            runtime/doc/eval.txt

Patch 7.4.1151 (after 7.4.1150)
Problem:    Missing change to eval.c
Solution:   Also change feedkeys().
Files:      src/eval.c

Patch 7.4.1152
Problem:    Langmap test fails with normal build.
Solution:   Check for +langmap feature.
Files:      src/testdir/test_langmap.vim

Patch 7.4.1153
Problem:    Autocommands triggered by quickfix cannot always get the current
            title value.
Solution:   Call qf_fill_buffer() later. (Christian Brabandt)
Files:      src/quickfix.c, src/testdir/test_quickfix.vim

Patch 7.4.1154
Problem:    No support for JSON.
Solution:   Add jsonencode() and jsondecode().  Also add v:false, v:true,
            v:null and v:none.
Files:      src/json.c, src/eval.c, src/proto.h, src/structs.h, src/vim.h,
            src/if_lua.c, src/if_mzsch.c, src/if_ruby.c, src/if_py_both.h,
            src/globals.h, src/Makefile, src/Make_bc3.mak, src/Make_bc5.mak,
            src/Make_cyg_ming.mak, src/Make_dice.mak, src/Make_ivc.mak,
            src/Make_manx.mak, src/Make_morph.mak, src/Make_mvc.mak,
            src/Make_sas.mak, src/Make_vms.mms, src/proto/json.pro,
            src/proto/eval.pro, src/testdir/test_json.vim,
            src/testdir/test_alot.vim, Filelist, runtime/doc/eval.txt

Patch 7.4.1155
Problem:    Build with normal features fails.
Solution:   Always define dict_lookup().
Files:      src/eval.c

Patch 7.4.1156
Problem:    Coverity warns for NULL pointer and ignoring return value.
Solution:   Check for NULL pointer. When dict_add() returns FAIL free the item.
Files:      src/json.c

Patch 7.4.1157
Problem:    type() does not work for v:true, v:none, etc.
Solution:   Add new type numbers.
Files:      src/eval.c, src/testdir/test_json.vim, src/testdir/test_viml.vim

Patch 7.4.1158
Problem:    Still using __ARGS().
Solution:   Remove __ARGS() from eval.c
Files:      src/eval.c

Patch 7.4.1159
Problem:    Automatically generated function prototypes use __ARGS.
Solution:   Remove __ARGS from osdef.sh.
Files:      src/osdef.sh, src/osdef1.h.in, src/osdef2.h.in

Patch 7.4.1160
Problem:    No error for jsondecode('"').
Solution:   Give an error message for missing double quote.
Files:      src/json.c

Patch 7.4.1161
Problem:    ":argadd" without argument is supposed to add the current buffer
            name to the arglist.
Solution:   Make it work as documented. (Coot, closes #577)
Files:      src/ex_cmds.h, src/ex_cmds2.c, src/testdir/test_arglist.vim

Patch 7.4.1162
Problem:    Missing error number in MzScheme. (Dominique Pelle)
Solution:   Add a proper error number.
Files:      src/if_mzsch.c

Patch 7.4.1163
Problem:    Expressions "0 + v:true" and "'' . v:true" cause an error.
Solution:   Return something sensible when using a special variable as a
            number or as a string. (suggested by Damien)
Files:      src/eval.c, src/testdir/test_viml.vim

Patch 7.4.1164
Problem:    No tests for comparing special variables.  Error in jsondecode()
            not reported.  test_json does not work with Japanese system.
Solution:   Set scriptencoding. (Ken Takata) Add a few more tests. Add error.
Files:      src/json.c, src/testdir/test_viml.vim, src/testdir/test_json.vim

Patch 7.4.1165
Problem:    When defining DYNAMIC_ICONV_DLL in the makefile, the build fails.
Solution:   Add #ifdef's. (Taro Muraoka)  Try the newer version first.
Files:      src/mbyte.c, src/os_win32.c

Patch 7.4.1166
Problem:    Can't encode a Funcref into JSON.  jsonencode() doesn't handle the
            same list or dict twice properly.  (Nikolai Pavlov)
Solution:   Give an error.  Reset copyID when the list or dict is finished.
Files:      src/json.c, src/proto/json.pro, src/testdir/test_json.vim

Patch 7.4.1167
Problem:    No tests for "is" and "isnot" with the new variables.
Solution:   Add tests.
Files:      src/testdir/test_viml.vim

Patch 7.4.1168
Problem:    This doesn't give the right result: eval(string(v:true)). (Nikolai
            Pavlov)
Solution:   Make the string "v:true" instead of "true".
Files:      src/eval.c, src/testdir/test_viml.vim

Patch 7.4.1169
Problem:    The socket I/O is intertwined with the netbeans code.
Solution:   Start refactoring the netbeans communication to split off the
            socket I/O.  Add the +channel feature.
Files:      src/channel.c, src/netbeans.c, src/proto/channel.pro,
            src/proto/netbeans.pro, src/proto/gui_w32.pro, src/gui_w32.c,
            src/eval.c, src/os_mswin.c, src/ui.c, src/macros.h, Makefile,
            src/proto.h, src/feature.h, src/os_unix.c, src/vim.h,
            src/configure.in, src/auto/configure, src/config.mk.in,
            src/config.aap.in, src/config.h.in, src/Make_bc5.mak,
            src/Make_cyg_ming.mak, src/Make_mvc.mak

Patch 7.4.1170 (after 7.4.1169)
Problem:    Missing changes in src/Makefile, Filelist.
Solution:   Add the missing changes.
Files:      Filelist, src/Makefile

Patch 7.4.1171
Problem:    Makefile dependencies are outdated.
Solution:   Run "make depend". Add GTK resource dependencies.
Files:      src/Makefile

Patch 7.4.1172 (after 7.4.1169)
Problem:    Configure is overly positive.
Solution:   Insert "test".
Files:      src/configure.in, src/auto/configure

Patch 7.4.1173 (after 7.4.1168)
Problem:    No test for new behavior of v:true et al.
Solution:   Add a test.
Files:      src/testdir/test_viml.vim

Patch 7.4.1174
Problem:    Netbeans contains dead code inside #ifndef INIT_SOCKETS.
Solution:   Remove the dead code.
Files:      src/netbeans.c

Patch 7.4.1175 (after 7.4.1169)
Problem:    Can't build with Mingw and Cygwin.
Solution:   Remove extra "endif". (Christian J. Robinson)
Files:      src/Make_cyg_ming.mak

Patch 7.4.1176
Problem:    Missing change to proto file.
Solution:   Update the proto file. (Charles Cooper)
Files:      src/proto/gui_w32.pro

Patch 7.4.1177
Problem:    The +channel feature is not in :version output. (Tony Mechelynck)
Solution:   Add the feature string.
Files:      src/version.c

Patch 7.4.1178
Problem:    empty() doesn't work for the new special variables.
Solution:   Make empty() work. (Damien)
Files:      src/eval.c, src/testdir/test_viml.vim

Patch 7.4.1179
Problem:    test_writefile and test_viml do not delete the tempfile.
Solution:   Delete the tempfile. (Charles Cooper)  Add DeleteTheScript().
Files:      src/testdir/test_writefile.in, src/testdir/test_viml.vim

Patch 7.4.1180
Problem:    Crash with invalid argument to glob2regpat().
Solution:   Check for NULL. (Justin M. Keyes, closes #596)  Add a test.
Files:      src/eval.c, src/testdir/test_glob2regpat.vim,
            src/testdir/test_alot.vim

Patch 7.4.1181
Problem:    free_tv() can't handle special variables. (Damien)
Solution:   Add the variable type.
Files:      src/eval.c, src/testdir/test_viml.vim

Patch 7.4.1182
Problem:    Still socket code intertwined with netbeans.
Solution:   Move code from netbeans.c to channel.c
Files:      src/channel.c, src/netbeans.c, src/proto/channel.pro,
            src/proto/netbeans.pro, src/gui.c, src/gui_w48.c

Patch 7.4.1183 (after 7.4.1182)
Problem:    MS-Windows build is broken.
Solution:   Remove init in wrong place.
Files:      src/channel.c

Patch 7.4.1184 (after 7.4.1182)
Problem:    MS-Windows build is still broken.
Solution:   Change nbsock to ch_fd.
Files:      src/channel.c

Patch 7.4.1185
Problem:    Can't build with TCL on some systems.
Solution:   Rename the channel_ functions.
Files:      src/if_tcl.c

Patch 7.4.1186
Problem:    Error messages for security context are hard to translate.
Solution:   Use one string with %s. (Ken Takata)
Files:      src/os_unix.c

Patch 7.4.1187
Problem:    MS-Windows channel code only supports one channel.  Doesn't build
            without netbeans support.
Solution:   Get the channel index from the socket in the message. Closes #600.
Files:      src/channel.c, src/netbeans.c, src/gui_w48.c,
            src/proto/channel.pro, src/proto/netbeans.pro

Patch 7.4.1188
Problem:    Using older JSON standard.
Solution:   Update the link.  Adjust the text a bit.
Files:      src/json.c, runtime/doc/eval.txt

Patch 7.4.1189 (after 7.4.1165)
Problem:    Using another language on MS-Windows does not work. (Yongwei Wu)
Solution:   Undo the change to try loading libintl-8.dll first.
Files:      src/os_win32.c

Patch 7.4.1190
Problem:    On OSX the default flag for dlopen() is different.
Solution:   Add RTLD_LOCAL in the configure check. (sv99, closes #604)
Files:      src/configure.in, src/auto/configure

Patch 7.4.1191
Problem:    The channel feature isn't working yet.
Solution:   Add the connect(), disconnect(), sendexpr() and sendraw()
            functions.  Add initial documentation.  Add a demo server.
Files:      src/channel.c, src/eval.c, src/proto/channel.pro,
            src/proto/eval.pro, runtime/doc/channel.txt, runtime/doc/eval.txt,
            runtime/doc/Makefile, runtime/tools/demoserver.py

Patch 7.4.1192
Problem:    Can't build with FEAT_EVAL but without FEAT_MBYTE. (John
            Marriott)
Solution:   Add #ifdef for FEAT_MBYTE.
Files:      src/json.c

Patch 7.4.1193
Problem:    Can't build the channel feature on MS-Windows.
Solution:   Add #ifdef HAVE_POLL.
Files:      src/channel.c

Patch 7.4.1194
Problem:    Compiler warning for not using return value of fwrite().
Solution:   Return OK/FAIL. (Charles Campbell)
Files:      src/channel.c, src/proto/channel.pro

Patch 7.4.1195
Problem:    The channel feature does not work in the MS-Windows console.
Solution:   Add win32 console support. (Yasuhiro Matsumoto)
Files:      src/channel.c, src/gui_w32.c, src/os_mswin.c, src/os_win32.c,
            src/proto/gui_w32.pro, src/proto/os_mswin.pro, src/vim.h

Patch 7.4.1196
Problem:    Still using __ARGS.
Solution:   Remove __ARGS in several files. (script by Hirohito Higashi)
Files:      src/arabic.c, src/buffer.c, src/charset.c, src/crypt_zip.c,
            src/diff.c, src/digraph.c, src/edit.c, src/ex_cmds.c,
            src/ex_cmds2.c, src/ex_docmd.c

Patch 7.4.1197
Problem:    Still using __ARGS.
Solution:   Remove __ARGS in several files. (script by Hirohito Higashi)
Files:      src/ex_eval.c, src/ex_getln.c, src/farsi.c, src/fileio.c,
            src/fold.c, src/getchar.c, src/gui.c, src/gui_at_fs.c,
            src/gui_at_sb.c, src/gui_athena.c, src/gui_beval.c,
            src/gui_motif.c, src/gui_w32.c, src/gui_w48.c

Patch 7.4.1198
Problem:    Still using __ARGS.
Solution:   Remove __ARGS in several files. (script by Hirohito Higashi)
            Also remove use of HAVE_STDARG_H.
Files:      src/gui_x11.c, src/hangulin.c, src/hardcopy.c, src/hashtab.c,
            src/if_cscope.c, src/if_python3.c, src/if_sniff.c,
            src/if_xcmdsrv.c, src/main.c, src/mark.c, src/mbyte.c,
            src/memfile.c, src/memfile_test.c, src/memline.c, src/menu.c,
            src/message.c, src/misc1.c, src/misc2.c, src/move.c,
            src/netbeans.c, src/normal.c

Patch 7.4.1199
Problem:    Still using __ARGS.
Solution:   Remove __ARGS in several files. (script by Hirohito Higashi)
Files:      src/ops.c, src/option.c, src/os_amiga.c, src/os_mac_conv.c,
            src/os_unix.c, src/os_vms.c, src/os_w32exe.c, src/popupmnu.c,
            src/pty.c, src/quickfix.c, src/regexp.c, src/regexp_nfa.c,
            src/screen.c, src/search.c, src/sha256.c, src/spell.c,
            src/syntax.c, src/tag.c, src/term.c, src/termlib.c, src/ui.c,
            src/undo.c, src/version.c, src/window.c

Patch 7.4.1200
Problem:    Still using __ARGS.
Solution:   Remove __ARGS in several files. (script by Hirohito Higashi)
Files:      src/blowfish.c, src/ex_cmds2.c, src/ex_getln.c, src/fold.c,
            src/gui_beval.c, src/gui_w32.c, src/os_unix.c, src/os_win16.c,
            src/pty.c, src/regexp.c, src/syntax.c, src/xpm_w32.c,
            src/ex_cmds.h, src/globals.h, src/gui_at_sb.h, src/gui_beval.h,
            src/if_cscope.h, src/if_sniff.h, src/nbdebug.h, src/os_unix.h,
            src/proto.h, src/structs.h, src/vim.h, src/xpm_w32.h,
            src/if_perl.xs, src/proto/if_lua.pro, src/proto/pty.pro,
            runtime/tools/xcmdsrv_client.c,
            src/Makefile

Patch 7.4.1201
Problem:    One more file still using __ARGS.
Solution:   Remove __ARGS in the last file. (script by Hirohito Higashi)
Files:      src/gui_at_sb.c

Patch 7.4.1202
Problem:    Still one more file still using __ARGS.
Solution:   Remove __ARGS in the last file. (script by Hirohito Higashi)
            (closes #612)
Files:      src/proto/os_mac_conv.pro, src/os_mac_conv.c, src/Makefile

Patch 7.4.1203
Problem:    Still more files still using __ARGS.
Solution:   Remove __ARGS in really the last files.
Files:      src/proto/if_mzsch.pro, src/if_mzsch.c, src/vim.h,
            src/proto/gui_gtk_gresources.pro, src/proto/gui_mac.pro,
            src/proto/if_ole.pro, src/proto/os_qnx.pro, src/Makefile

Patch 7.4.1204
Problem:    Latin1 characters cause encoding conversion.
Solution:   Remove the characters.
Files:      src/gui_motif.c

Patch 7.4.1205
Problem:    Using old style function declarations.
Solution:   Change to new style function declarations. (script by Hirohito
            Higashi)
Files:      src/arabic.c, src/blowfish.c, src/buffer.c, src/channel.c,
            src/charset.c, src/crypt.c, src/crypt_zip.c, src/diff.c,
            src/digraph.c, src/edit.c, src/eval.c

Patch 7.4.1206
Problem:    Using old style function declarations.
Solution:   Change to new style function declarations. (script by Hirohito
            Higashi)
Files:      src/ex_cmds.c, src/ex_cmds2.c, src/ex_docmd.c, src/ex_eval.c,
            src/ex_getln.c, src/farsi.c, src/fileio.c

Patch 7.4.1207
Problem:    Using old style function declarations.
Solution:   Change to new style function declarations. (script by Hirohito
            Higashi)
Files:      src/fold.c, src/getchar.c, src/gui_at_fs.c, src/gui_athena.c,
            src/gui_at_sb.c, src/gui_beval.c, src/gui.c, src/gui_gtk.c,
            src/gui_gtk_x11.c, src/gui_mac.c, src/gui_motif.c

Patch 7.4.1208
Problem:    Using old style function declarations.
Solution:   Change to new style function declarations. (script by Hirohito
            Higashi)
Files:      src/gui_photon.c, src/gui_w32.c, src/gui_w48.c, src/gui_x11.c,
            src/hangulin.c, src/hardcopy.c, src/hashtab.c, src/if_cscope.c,
            src/if_mzsch.c, src/if_perlsfio.c, src/if_python.c,
            src/if_python3.c, src/if_ruby.c, src/if_sniff.c, src/if_tcl.c,
            src/if_xcmdsrv.c, src/integration.c

Patch 7.4.1209 (after 7.4.1207)
Problem:    Can't build with Athena. (Elimar Riesebieter)
Solution:   Fix function declarations.
Files:      src/gui_athena.c, src/gui_x11.c, src/gui_at_sb.c, src/gui_at_fs.c

Patch 7.4.1210
Problem:    Using old style function declarations.
Solution:   Change to new style function declarations. (script by Hirohito
            Higashi)
Files:      src/main.c, src/mark.c, src/mbyte.c, src/memfile.c,
            src/memfile_test.c, src/memline.c, src/menu.c, src/message.c

Patch 7.4.1211
Problem:    Using old style function declarations.
Solution:   Change to new style function declarations. (script by Hirohito
            Higashi)
Files:      src/misc1.c, src/misc2.c, src/move.c, src/netbeans.c,
            src/normal.c, src/ops.c, src/option.c

Patch 7.4.1212 (after 7.4.1207)
Problem:    Can't build with Motif.
Solution:   Fix function declaration.(Dominique Pelle)
Files:      src/gui_motif.c

Patch 7.4.1213
Problem:    Using old style function declarations.
Solution:   Change to new style function declarations. (script by Hirohito
            Higashi)
Files:      src/os_amiga.c, src/os_mac_conv.c, src/os_msdos.d, src/os_mswin.c,
            src/os_qnx.c, src/os_unix.c, src/os_vms.c, src/os_win16.c,
            src/os_win32.c, src/popupmnu.c, src/pty.c, src/quickfix.c,
            src/regexp.c, src/regexp_nfa.c, src/screen.c

Patch 7.4.1214
Problem:    Using old style function declarations.
Solution:   Change to new style function declarations. (script by Hirohito
            Higashi)
Files:      src/search.c, src/sha256.c, src/spell.c, src/syntax.c, src/tag.c,
            src/term.c, src/termlib.c, src/ui.c, src/undo.c

Patch 7.4.1215
Problem:    Using old style function declarations.
Solution:   Change to new style function declarations. (script by Hirohito
            Higashi)
Files:      src/version.c, src/winclip.c, src/window.c, src/workshop.c,
            src/xpm_w32.c, runtime/doc/doctags.c,
            runtime/tools/xcmdsrv_client.c, src/po/sjiscorr.c, src/xxd/xxd.c

Patch 7.4.1216
Problem:    Still using HAVE_STDARG_H.
Solution:   Assume it's always defined.
Files:      src/eval.c, src/misc2.c, src/vim.h, src/proto.h, src/configure.in,
            src/auto/configure, config.h.in, src/os_amiga.h, src/os_msdos.h,
            src/os_vms_conf.h, src/os_win32.h

Patch 7.4.1217
Problem:    Execution of command on channel doesn't work yet.
Solution:   Implement the "ex" and "normal" commands.
Files:      src/channel.c, src/proto/channel.pro, src/misc2.c, src/eval.c,
            src/ex_docmd.c, src/proto/ex_docmd.pro, src/feature.h

Patch 7.4.1218
Problem:    Missing change in configure.  More changes for function style.
Solution:   Avoid the typos.
Files:      src/configure.in, src/config.h.in, runtime/tools/ccfilter.c,
            src/os_msdos.c

Patch 7.4.1219
Problem:    Build fails with +channel but without +float.
Solution:   Add #ifdef.
Files:      src/ex_cmds.c

Patch 7.4.1220
Problem:    Warnings for unused variables in tiny build. (Tony Mechelynck)
Solution:   Move declarations inside #ifdef. (Hirohito Higashi)
Files:      src/ex_cmds.c

Patch 7.4.1221
Problem:    Including netbeans and channel support in small and tiny builds.
            Build fails with some interfaces.
Solution:   Only include these features in small build and above.  Let
            configure fail if trying to enable an interface that won't build.
Files:      src/configure.in, src/auto/configure

Patch 7.4.1222
Problem:    ":normal" command and others missing in tiny build.
Solution:   Graduate FEAT_EX_EXTRA.
Files:      src/feature.h, src/charset.c, src/eval.c, src/ex_cmds.c,
            src/ex_cmds2.c, src/ex_docmd.c, src/ex_getln.c, src/getchar.c,
            src/normal.c, src/ui.c, src/version.c, src/globals.h

Patch 7.4.1223
Problem:    Crash when setting v:errors to a number.
Solution:   Free the typval without assuming its type. (Yasuhiro Matsumoto)
Files:      src/eval.c, src/testdir/test_assert.vim

Patch 7.4.1224
Problem:    Build problems with GTK on BSD. (Mike Williams)
Solution:   Don't use "$<". Skip building gui_gtk_gresources.h when it doesn't
            work. (Kazunobu Kuriyama)
Files:      src/Makefile

Patch 7.4.1225
Problem:    Still a few old style function declarations.
Solution:   Make them new style. (Hirohito Higashi)
Files:      runtime/tools/blink.c, src/eval.c, src/ex_cmds2.c, src/ex_getln.c,
            src/fileio.c, src/gui_w32.c, src/gui_x11.c, src/if_perl.xs,
            src/os_unix.c, src/po/sjiscorr.c, src/pty.c

Patch 7.4.1226
Problem:    GRESOURCE_HDR is unused.
Solution:   Remove it. (Kazunobu Kuriyama)
Files:      src/configure.in, src/auto/configure, src/config.mk.in

Patch 7.4.1227
Problem:    Compiler warnings.
Solution:   Add UNUSED.  Add type cast. (Yegappan Lakshmanan)
Files:      src/getchar.c, src/os_macosx.m

Patch 7.4.1228
Problem:    copy() and deepcopy() fail with special variables. (Nikolai
            Pavlov)
Solution:   Make it work.  Add a test.  Closes #614.
Files:      src/eval.c, src/testdir/test_viml.vim

Patch 7.4.1229
Problem:    "eval" and "expr" channel commands don't work yet.
Solution:   Implement them.  Update the error numbers.  Also add "redraw".
Files:      src/channel.c, src/eval.c, src/json.c, src/ex_docmd.c,
            src/proto/channel.pro, src/proto/json.pro, src/proto/ex_docmd.pro,
            runtime/doc/channel.txt

Patch 7.4.1230
Problem:    Win32: opening a channel may hang.  Not checking for messages
            while waiting for characters.
Solution:   Add a zero timeout.  Call parse_queued_messages(). (Yasuhiro
            Matsumoto)
Files:      src/os_win32.c

Patch 7.4.1231
Problem:    JSON messages are not parsed properly.
Solution:   Queue received messages.
Files:      src/eval.c src/channel.c, src/json.c, src/proto/eval.pro,
            src/proto/channel.pro, src/proto/json.pro, src/structs.h

Patch 7.4.1232
Problem:    Compiler warnings when the Sniff feature is enabled.
Solution:   Add UNUSED.
Files:      src/gui_gtk_x11.c

Patch 7.4.1233
Problem:    Channel command may cause a crash.
Solution:   Check for NULL argument. (Damien)
Files:      src/channel.c

Patch 7.4.1234
Problem:    Demo server only runs with Python 2.
Solution:   Make it run with Python 3 as well. (Ken Takata)
Files:      runtime/tools/demoserver.py

Patch 7.4.1235 (after 7.4.1231)
Problem:    Missing change to eval.c.
Solution:   Include that change.
Files:      src/eval.c

Patch 7.4.1236
Problem:    When "syntax manual" was used switching between buffers removes
            the highlighting.
Solution:   Set the syntax option without changing the value. (Anton
            Lindqvist)
Files:      runtime/syntax/manual.vim

Patch 7.4.1237
Problem:    Can't translate message without adding a line break.
Solution:   Join the two parts of the message.
Files:      src/memline.c

Patch 7.4.1238
Problem:    Can't handle two messages right after each other.
Solution:   Find the end of the JSON.  Read more when incomplete.  Add a C
            test for the JSON decoding.
Files:      src/channel.c, src/json.c, src/proto/json.pro, src/eval.c,
            src/Makefile, src/json_test.c, src/memfile_test.c, src/structs.h

Patch 7.4.1239
Problem:    JSON message after the first one is dropped.
Solution:   Put remainder of message back in the queue.
Files:      src/channel.c

Patch 7.4.1240
Problem:    Visual Studio tools are noisy.
Solution:   Suppress startup info. (Mike Williams)
Files:      src/GvimExt/Makefile, src/Make_mvc.mak, src/tee/Make_mvc.mak

Patch 7.4.1241 (after 7.4.1238)
Problem:    Missing change in Makefile due to diff mismatch
Solution:   Update the list of object files.
Files:      src/Makefile

Patch 7.4.1242 (after 7.4.1238)
Problem:    json_test fails without the eval feature.
Solution:   Add #ifdef.
Files:      src/json_test.c

Patch 7.4.1243
Problem:    Compiler warning for uninitialized variable.
Solution:   Initialize it. (Elias Diem)
Files:      src/json.c

Patch 7.4.1244
Problem:    The channel functions don't sort together.
Solution:   Use a common "ch_" prefix.
Files:      src/eval.c, runtime/doc/eval.txt, runtime/tools/demoserver.py

Patch 7.4.1245
Problem:    File missing from distribution.
Solution:   Add json_test.c.
Files:      Filelist

Patch 7.4.1246
Problem:    The channel functionality isn't tested.
Solution:   Add a test using a Python test server.
Files:      src/channel.c, src/proto/channel.pro,
            src/testdir/test_channel.vim, src/testdir/test_channel.py,
            src/testdir/Make_all.mak

Patch 7.4.1247
Problem:    The channel test doesn't run on MS-Windows.
Solution:   Make it work on the MS-Windows console. (Ken Takata)
Files:      src/testdir/test_channel.py, src/testdir/test_channel.vim

Patch 7.4.1248
Problem:    Can't reliably stop the channel test server.  Can't start the
            server if the python file is not executable.
Solution:   Use "pkill" instead of "killall".  Run the python file as an
            argument instead of as an executable.
Files:      src/testdir/test_channel.vim

Patch 7.4.1249
Problem:    Crash when the process a channel is connected to exits.
Solution:   Use the file descriptor properly.  Add a test. (Damien)
            Also add a test for eval().
Files:      src/channel.c, src/testdir/test_channel.py,
            src/testdir/test_channel.vim

Patch 7.4.1250
Problem:    Running tests in shadow directory fails.
Solution:   Also link testdir/*.py
Files:      src/Makefile

Patch 7.4.1251
Problem:    New test file missing from distribution.
Solution:   Add src/testdir/*.py.
Files:      Filelist

Patch 7.4.1252
Problem:    The channel test server may receive two messages concatenated.
Solution:   Split the messages.
Files:      src/testdir/test_channel.py

Patch 7.4.1253
Problem:    Python test server not displaying second of two commands.
            Solaris doesn't have "pkill --full".
Solution:   Also echo the second command. Use "pkill -f".
Files:      src/testdir/test_channel.py, src/testdir/test_channel.vim

Patch 7.4.1254
Problem:    Opening a second channel causes a crash. (Ken Takata)
Solution:   Don't re-allocate the array with channels.
Files:      src/channel.c, src/testdir/test_channel.vim,
            src/testdir/test_channel.py

Patch 7.4.1255
Problem:    Crash for channel "eval" command without third argument.
Solution:   Check for missing argument.
Files:      src/channel.c, src/testdir/test_channel.vim,
            src/testdir/test_channel.py

Patch 7.4.1256
Problem:    On Mac sys.exit(0) doesn't kill the test server.
Solution:   Use self.server.shutdown(). (Jun Takimoto)
Files:      src/testdir/test_channel.py

Patch 7.4.1257
Problem:    Channel test fails in some configurations.
Solution:   Add check for the +channel feature.
Files:      src/testdir/test_channel.vim

Patch 7.4.1258
Problem:    The channel test can fail if messages arrive later.
Solution:   Add a short sleep. (Jun Takimoto)
Files:      src/testdir/test_channel.vim

Patch 7.4.1259
Problem:    No test for what patch 7.3.414 fixed.
Solution:   Add a test. (Elias Diem)
Files:      src/testdir/test_increment.vim

Patch 7.4.1260
Problem:    The channel feature doesn't work on Win32 GUI.
Solution:   Use WSAGetLastError(). (Ken Takata)
Files:      src/channel.c, src/testdir/test_channel.vim, src/vim.h

Patch 7.4.1261
Problem:    Pending channel messages are garbage collected. Leaking memory in
            ch_sendexpr().  Leaking memory for a decoded JSON string.
Solution:   Mark the message list as used. Free the encoded JSON.  Don't save
            the JSON string.
Files:      src/eval.c, src/channel.c, src/json.c, src/proto/channel.pro

Patch 7.4.1262
Problem:    The channel callback is not invoked.
Solution:   Make a list of pending callbacks.
Files:      src/eval.c, src/channel.c, src/proto/channel.pro,
            src/testdir/test_channel.vim

Patch 7.4.1263
Problem:    ch_open() hangs when the server isn't running.
Solution:   Add a timeout. Use a dict to pass arguments. (Yasuhiro Matsumoto)
Files:      runtime/doc/eval.txt, runtime/doc/channel.txt, src/channel.c,
            src/eval.c, src/netbeans.c, src/os_win32.c, src/proto/channel.pro,
            src/testdir/test_channel.vim

Patch 7.4.1264
Problem:    Crash when receiving an empty array.
Solution:   Check for array with wrong number of arguments. (Damien)
Files:      src/channel.c, src/eval.c, src/testdir/test_channel.py,
            src/testdir/test_channel.vim

Patch 7.4.1265
Problem:    Not all channel commands are tested.
Solution:   Add a test for "normal", "expr" and "redraw".
Files:      src/testdir/test_channel.py, src/testdir/test_channel.vim

Patch 7.4.1266
Problem:    A BufAdd autocommand may cause an ml_get error (Christian
            Brabandt)
Solution:   Increment RedrawingDisabled earlier.
Files:      src/ex_cmds.c

Patch 7.4.1267
Problem:    Easy to miss handling all types of variables.
Solution:   Change the variable type into an enum.
Files:      src/structs.h, src/eval.c

Patch 7.4.1268
Problem:    Waittime is used as seconds instead of milliseconds. (Hirohito
            Higashi)
Solution:   Divide by 1000.
Files:      src/channel.c

Patch 7.4.1269
Problem:    Encoding {'key':v:none} to JSON doesn't give an error (Tyru)
Solution:   Give an error.
Files:      src/json.c, src/testdir/test_json.vim

Patch 7.4.1270
Problem:    Warnings for missing values in switch.
Solution:   Change switch to if-else or add values.
Files:      src/if_py_both.h, src/if_python.c, src/if_python3.c

Patch 7.4.1271
Problem:    assert_false(v:false) reports an error. (Nikolai Pavlov)
Solution:   Recognize v:true and v:false. (Closes #625)
Files:      src/eval.c, src/testdir/test_assert.vim

Patch 7.4.1272 (after 7.4.1270)
Problem:    Using future enum value.
Solution:   Remove it.
Files:      src/if_python.c, src/if_python3.c

Patch 7.4.1273 (after 7.4.1271)
Problem:    assert_false(v:false) still fails.
Solution:   Fix the typo.
Files:      src/eval.c

Patch 7.4.1274
Problem:    Cannot run a job.
Solution:   Add job_start(), job_status() and job_stop(). Currently only works
            for Unix.
Files:      src/eval.c, src/structs.h, runtime/doc/eval.txt, src/os_unix.c,
            src/proto/os_unix.pro, src/feature.h, src/version.c,
            src/testdir/test_channel.vim

Patch 7.4.1275 (after 7.4.1274)
Problem:    Build fails on MS-Windows.
Solution:   Fix wrong #ifdef.
Files:      src/eval.c

Patch 7.4.1276
Problem:    Warning for not using return value of fcntl().
Solution:   Explicitly ignore the return value.
Files:      src/fileio.c, src/channel.c, src/memfile.c, src/memline.c

Patch 7.4.1277
Problem:    Compiler can complain about missing enum value in switch with some
            combination of features.
Solution:   Remove #ifdefs around case statements.
Files:      src/eval.c

Patch 7.4.1278
Problem:    When jsonencode() fails it still returns something.
Solution:   Return an empty string on failure.
Files:      src/json.c, src/channel.c, src/testdir/test_json.vim,
            src/testdir/test_channel.vim, src/testdir/test_channel.py

Patch 7.4.1279
Problem:    jsonencode() is not producing strict JSON.
Solution:   Add jsencode() and jsdecode().  Make jsonencode() and jsondecode()
            strict.
Files:      src/json.c, src/json_test.c, src/proto/json.pro, src/channel.c,
            src/proto/channel.pro, src/eval.c, src/vim.h, src/structs.h,
            runtime/doc/eval.txt, runtime/doc/channel.txt,
            src/testdir/test_json.vim

Patch 7.4.1280
Problem:    Missing case value.
Solution:   Add VAR_JOB.
Files:      src/if_python.c, src/if_python3.c

Patch 7.4.1281
Problem:    No test for skipping over code that isn't evaluated.
Solution:   Add a test with code that would fail when not skipped.
Files:      src/testdir/test_viml.vim

Patch 7.4.1282
Problem:    Crash when evaluating the pattern of ":catch" causes an error.
            (Dominique Pelle)
Solution:   Block error messages at this point.
Files:      src/ex_eval.c

Patch 7.4.1283
Problem:    The job feature isn't available on MS-Windows.
Solution:   Add the job feature.  Fix argument of job_stop(). (Yasuhiro
            Matsumoto)
Files:      src/eval.c, src/feature.h, src/os_win32.c, src/proto/os_win32.pro

Patch 7.4.1284 (after 7.4.1282)
Problem:    Test 49 fails.
Solution:   Check for a different error message.
Files:      src/testdir/test49.vim

Patch 7.4.1285
Problem:    Cannot measure elapsed time.
Solution:   Add reltimefloat().
Files:      src/ex_cmds2.c, src/eval.c, src/proto/ex_cmds2.pro,
            src/testdir/test_reltime.vim, src/testdir/test_alot.vim

Patch 7.4.1286
Problem:    ch_open() with a timeout doesn't work correctly.
Solution:   Change how select() is used.  Don't give an error on timeout.
            Add a test for ch_open() failing.
Files:      src/channel.c, src/testdir/test_channel.vim

Patch 7.4.1287 (after 7.4.1286)
Problem:    Channel test fails.
Solution:   Use reltimefloat().
Files:      src/testdir/test_channel.vim

Patch 7.4.1288
Problem:    ch_sendexpr() does not use JS encoding.
Solution:   Use the encoding that fits the channel mode.  Refuse using
            ch_sendexpr() on a raw channel.
Files:      src/channel.c, src/proto/channel.pro, src/eval.c

Patch 7.4.1289
Problem:    Channel test fails on MS-Windows, connect() takes too long.
Solution:   Adjust the test for MS-Windows using "waittime".
Files:      src/channel.c, src/testdir/test_channel.vim

Patch 7.4.1290
Problem:    Coverity complains about unnecessary check for NULL.
Solution:   Remove the check.
Files:      src/eval.c

Patch 7.4.1291
Problem:    On MS-Windows the channel test server doesn't quit.
Solution:   Use return instead of break. (Ken Takata)
Files:      src/testdir/test_channel.py

Patch 7.4.1292
Problem:    Some compilers complain about uninitialized variable, even though
            all possible cases are handled. (Dominique Pelle)
Solution:   Add a default initialization.
Files:      src/eval.c

Patch 7.4.1293
Problem:    Sometimes a channel may hang waiting for a message that was
            already discarded. (Ken Takata)
Solution:   Store the ID of the message blocking on in the channel.
Files:      src/channel.c

Patch 7.4.1294
Problem:    job_stop() only kills the started process.
Solution:   Send the signal to the process group. (Olaf Dabrunz)
Files:      src/os_unix.c

Patch 7.4.1295
Problem:    string(job) doesn't work well on MS-Windows.
Solution:   Use the process ID. (Yasuhiro Matsumoto)
Files:      src/eval.c

Patch 7.4.1296
Problem:    Cursor changes column with up motion when the matchparen plugin
            saves and restores the cursor position. (Martin Kunev)
Solution:   Make sure curswant is updated before invoking the autocommand.
Files:      src/edit.c

Patch 7.4.1297
Problem:    On Mac test_channel leaves python instances running.
Solution:   Use a small waittime to make ch_open() work. (Ozaki Kiichi)
Files:      src/testdir/test_channel.vim

Patch 7.4.1298
Problem:    When the channel test fails in an unexpected way the server keeps
            running.
Solution:   Use try/catch. (Ozaki Kiichi)
Files:      src/testdir/test_channel.vim

Patch 7.4.1299
Problem:    When the server sends a message with ID zero the channel handler
            is not invoked. (Christian J. Robinson)
Solution:   Recognize zero value for the request ID.  Add a test for invoking
            the channel handler.
Files:      src/channel.c, src/testdir/test_channel.vim,
            src/testdir/test_channel.py

Patch 7.4.1300
Problem:    Cannot test CursorMovedI because there is typeahead.
Solution:   Add disable_char_avail_for_testing().
Files:      src/eval.c, src/getchar.c, src/globals.h,
            src/testdir/test_cursor_func.vim, src/testdir/README.txt

Patch 7.4.1301
Problem:    Missing options in ch_open().
Solution:   Add s:chopt like in the other calls. (Ozaki Kiichi)
Files:      src/testdir/test_channel.vim

Patch 7.4.1302
Problem:    Typo in struct field name. (Ken Takata)
Solution:   Rename jf_pi to jv_pi.
Files:      src/eval.c, src/os_win32.c, src/structs.h

Patch 7.4.1303
Problem:    A Funcref is not accepted as a callback.
Solution:   Make a Funcref work. (Damien)
Files:      src/eval.c, src/testdir/test_channel.vim

Patch 7.4.1304
