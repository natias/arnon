$ReturnValues{SQL_ATTR_SCROLL_CONCURRENCY} =
{
  SQL_CA2_READ_ONLY_CONCURRENCY             => 0x00000001
, SQL_CA2_LOCK_CONCURRENCY                  => 0x00000002
, SQL_CA2_OPT_ROWVER_CONCURRENCY            => 0x00000004
, SQL_CA2_OPT_VALUES_CONCURRENCY            => 0x00000008
, SQL_CA2_SENSITIVITY_ADDITIONS             => 0x00000010
, SQL_CA2_SENSITIVITY_DELETIONS             => 0x00000020
, SQL_CA2_SENSITIVITY_UPDATES               => 0x00000040
};
$ReturnValues{SQL_BATCH_ROW_COUNT} =
{
  SQL_BRC_PROCEDURES                        => 0x0000001
, SQL_BRC_EXPLICIT                          => 0x0000002
, SQL_BRC_ROLLED_UP                         => 0x0000004
};
$ReturnValues{SQL_BATCH_SUPPORT} =
{
  SQL_BS_SELECT_EXPLICIT                    => 0x00000001
, SQL_BS_ROW_COUNT_EXPLICIT                 => 0x00000002
, SQL_BS_SELECT_PROC                        => 0x00000004
, SQL_BS_ROW_COUNT_PROC                     => 0x00000008
};
$ReturnValues{SQL_BOOKMARK_PERSISTENCE} =
{
  SQL_BP_CLOSE                              => 0x00000001
, SQL_BP_DELETE                             => 0x00000002
, SQL_BP_DROP                               => 0x00000004
, SQL_BP_TRANSACTION                        => 0x00000008
, SQL_BP_UPDATE                             => 0x00000010
, SQL_BP_OTHER_HSTMT                        => 0x00000020
, SQL_BP_SCROLL                             => 0x00000040
};
$ReturnValues{SQL_CATALOG_LOCATION} =
{
  SQL_CL_START                              => 0x0001  # SQL_QL_START
, SQL_CL_END                                => 0x0002  # SQL_QL_END
};
$ReturnValues{SQL_CATALOG_USAGE} =
{
  SQL_CU_DML_STATEMENTS                     => 0x00000001  # SQL_QU_DML_STATEMENTS
, SQL_CU_PROCEDURE_INVOCATION               => 0x00000002  # SQL_QU_PROCEDURE_INVOCATION
, SQL_CU_TABLE_DEFINITION                   => 0x00000004  # SQL_QU_TABLE_DEFINITION
, SQL_CU_INDEX_DEFINITION                   => 0x00000008  # SQL_QU_INDEX_DEFINITION
, SQL_CU_PRIVILEGE_DEFINITION               => 0x00000010  # SQL_QU_PRIVILEGE_DEFINITION
};
$ReturnValues{SQL_CONCAT_NULL_BEHAVIOR} =
{
  SQL_CB_NULL                               => 0x0000
, SQL_CB_NON_NULL                           => 0x0001
};
$ReturnValues{SQL_CONVERT_} =
{
  SQL_CVT_CHAR                              => 0x00000001
, SQL_CVT_NUMERIC                           => 0x00000002
, SQL_CVT_DECIMAL                           => 0x00000004
, SQL_CVT_INTEGER                           => 0x00000008
, SQL_CVT_SMALLINT                          => 0x00000010
, SQL_CVT_FLOAT                             => 0x00000020
, SQL_CVT_REAL                              => 0x00000040
, SQL_CVT_DOUBLE                            => 0x00000080
, SQL_CVT_VARCHAR                           => 0x00000100
, SQL_CVT_LONGVARCHAR                       => 0x00000200
, SQL_CVT_BINARY                            => 0x00000400
, SQL_CVT_VARBINARY                         => 0x00000800
, SQL_CVT_BIT                               => 0x00001000
, SQL_CVT_TINYINT                           => 0x00002000
, SQL_CVT_BIGINT                            => 0x00004000
, SQL_CVT_DATE                              => 0x00008000
, SQL_CVT_TIME                              => 0x00010000
, SQL_CVT_TIMESTAMP                         => 0x00020000
, SQL_CVT_LONGVARBINARY                     => 0x00040000
, SQL_CVT_INTERVAL_YEAR_MONTH               => 0x00080000
, SQL_CVT_INTERVAL_DAY_TIME                 => 0x00100000
, SQL_CVT_WCHAR                             => 0x00200000
, SQL_CVT_WLONGVARCHAR                      => 0x00400000
, SQL_CVT_WVARCHAR                          => 0x00800000
, SQL_CVT_GUID                              => 0x01000000
};
$ReturnValues{SQL_CONVERT_BIGINT             } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_BINARY             } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_BIT                } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_CHAR               } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_DATE               } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_DECIMAL            } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_DOUBLE             } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_FLOAT              } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_GUID               } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_INTEGER            } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_INTERVAL_DAY_TIME  } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_INTERVAL_YEAR_MONTH} = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_LONGVARBINARY      } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_LONGVARCHAR        } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_NUMERIC            } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_REAL               } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_SMALLINT           } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_TIME               } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_TIMESTAMP          } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_TINYINT            } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_VARBINARY          } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_VARCHAR            } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_WCHAR              } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_WLONGVARCHAR       } = $ReturnValues{SQL_CONVERT_};
$ReturnValues{SQL_CONVERT_WVARCHAR           } = $ReturnValues{SQL_CONVERT_};

$ReturnValues{SQL_CONVERT_FUNCTIONS} =
{
  SQL_FN_CVT_CONVERT                        => 0x00000001
, SQL_FN_CVT_CAST                           => 0x00000002
};
$ReturnValues{SQL_CORRELATION_NAME} =
{
  SQL_CN_NONE                               => 0x0000
, SQL_CN_DIFFERENT                          => 0x0001
, SQL_CN_ANY                                => 0x0002
};
$ReturnValues{SQL_CREATE_ASSERTION} =
{
  SQL_CA_CREATE_ASSERTION                   => 0x00000001
, SQL_CA_CONSTRAINT_INITIALLY_DEFERRED      => 0x00000010
, SQL_CA_CONSTRAINT_INITIALLY_IMMEDIATE     => 0x00000020
, SQL_CA_CONSTRAINT_DEFERRABLE              => 0x00000040
, SQL_CA_CONSTRAINT_NON_DEFERRABLE          => 0x00000080
};
$ReturnValues{SQL_CREATE_CHARACTER_SET} =
{
  SQL_CCS_CREATE_CHARACTER_SET              => 0x00000001
, SQL_CCS_COLLATE_CLAUSE                    => 0x00000002
, SQL_CCS_LIMITED_COLLATION                 => 0x00000004
};
$ReturnValues{SQL_CREATE_COLLATION} =
{
  SQL_CCOL_CREATE_COLLATION                 => 0x00000001
};
$ReturnValues{SQL_CREATE_DOMAIN} =
{
  SQL_CDO_CREATE_DOMAIN                     => 0x00000001
, SQL_CDO_DEFAULT                           => 0x00000002
, SQL_CDO_CONSTRAINT                        => 0x00000004
, SQL_CDO_COLLATION                         => 0x00000008
, SQL_CDO_CONSTRAINT_NAME_DEFINITION        => 0x00000010
, SQL_CDO_CONSTRAINT_INITIALLY_DEFERRED     => 0x00000020
, SQL_CDO_CONSTRAINT_INITIALLY_IMMEDIATE    => 0x00000040
, SQL_CDO_CONSTRAINT_DEFERRABLE             => 0x00000080
, SQL_CDO_CONSTRAINT_NON_DEFERRABLE         => 0x00000100
};
$ReturnValues{SQL_CREATE_SCHEMA} =
{
  SQL_CS_CREATE_SCHEMA                      => 0x00000001
, SQL_CS_AUTHORIZATION                      => 0x00000002
, SQL_CS_DEFAULT_CHARACTER_SET              => 0x00000004
};
$ReturnValues{SQL_CREATE_TABLE} =
{
  SQL_CT_CREATE_TABLE                       => 0x00000001
, SQL_CT_COMMIT_PRESERVE                    => 0x00000002
, SQL_CT_COMMIT_DELETE                      => 0x00000004
, SQL_CT_GLOBAL_TEMPORARY                   => 0x00000008
, SQL_CT_LOCAL_TEMPORARY                    => 0x00000010
, SQL_CT_CONSTRAINT_INITIALLY_DEFERRED      => 0x00000020
, SQL_CT_CONSTRAINT_INITIALLY_IMMEDIATE     => 0x00000040
, SQL_CT_CONSTRAINT_DEFERRABLE              => 0x00000080
, SQL_CT_CONSTRAINT_NON_DEFERRABLE          => 0x00000100
, SQL_CT_COLUMN_CONSTRAINT                  => 0x00000200
, SQL_CT_COLUMN_DEFAULT                     => 0x00000400
, SQL_CT_COLUMN_COLLATION                   => 0x00000800
, SQL_CT_TABLE_CONSTRAINT                   => 0x00001000
, SQL_CT_CONSTRAINT_NAME_DEFINITION         => 0x00002000
};
$ReturnValues{SQL_CREATE_TRANSLATION} =
{
  SQL_CTR_CREATE_TRANSLATION                => 0x00000001
};
$ReturnValues{SQL_CREATE_VIEW} =
{
  SQL_CV_CREATE_VIEW                        => 0x00000001
, SQL_CV_CHECK_OPTION                       => 0x00000002
, SQL_CV_CASCADED                           => 0x00000004
, SQL_CV_LOCAL                              => 0x00000008
};
$ReturnValues{SQL_CURSOR_COMMIT_BEHAVIOR} =
{
  SQL_CB_DELETE                             => 0
, SQL_CB_CLOSE                              => 1
, SQL_CB_PRESERVE                           => 2
};
$ReturnValues{SQL_CURSOR_ROLLBACK_BEHAVIOR} = $ReturnValues{SQL_CURSOR_COMMIT_BEHAVIOR};

$ReturnValues{SQL_CURSOR_SENSITIVITY} =
{
  SQL_UNSPECIFIED                           => 0
, SQL_INSENSITIVE                           => 1
, SQL_SENSITIVE                             => 2
};
$ReturnValues{SQL_DATETIME_LITERALS} =
{
  SQL_DL_SQL92_DATE                         => 0x00000001
, SQL_DL_SQL92_TIME                         => 0x00000002
, SQL_DL_SQL92_TIMESTAMP                    => 0x00000004
, SQL_DL_SQL92_INTERVAL_YEAR                => 0x00000008
, SQL_DL_SQL92_INTERVAL_MONTH               => 0x00000010
, SQL_DL_SQL92_INTERVAL_DAY                 => 0x00000020
, SQL_DL_SQL92_INTERVAL_HOUR                => 0x00000040
, SQL_DL_SQL92_INTERVAL_MINUTE              => 0x00000080
, SQL_DL_SQL92_INTERVAL_SECOND              => 0x00000100
, SQL_DL_SQL92_INTERVAL_YEAR_TO_MONTH       => 0x00000200
, SQL_DL_SQL92_INTERVAL_DAY_TO_HOUR         => 0x00000400
, SQL_DL_SQL92_INTERVAL_DAY_TO_MINUTE       => 0x00000800
, SQL_DL_SQL92_INTERVAL_DAY_TO_SECOND       => 0x00001000
, SQL_DL_SQL92_INTERVAL_HOUR_TO_MINUTE      => 0x00002000
, SQL_DL_SQL92_INTERVAL_HOUR_TO_SECOND      => 0x00004000
, SQL_DL_SQL92_INTERVAL_MINUTE_TO_SECOND    => 0x00008000
};
$ReturnValues{SQL_DDL_INDEX} =
{
  SQL_DI_CREATE_INDEX                       => 0x00000001
, SQL_DI_DROP_INDEX                         => 0x00000002
};
$ReturnValues{SQL_DIAG_CURSOR_ROW_COUNT} =
{
  SQL_CA2_CRC_EXACT                         => 0x00001000
, SQL_CA2_CRC_APPROXIMATE                   => 0x00002000
, SQL_CA2_SIMULATE_NON_UNIQUE               => 0x00004000
, SQL_CA2_SIMULATE_TRY_UNIQUE               => 0x00008000
, SQL_CA2_SIMULATE_UNIQUE                   => 0x00010000
};
$ReturnValues{SQL_DROP_ASSERTION} =
{
  SQL_DA_DROP_ASSERTION                     => 0x00000001
};
$ReturnValues{SQL_DROP_CHARACTER_SET} =
{
  SQL_DCS_DROP_CHARACTER_SET                => 0x00000001
};
$ReturnValues{SQL_DROP_COLLATION} =
{
  SQL_DC_DROP_COLLATION                     => 0x00000001
};
$ReturnValues{SQL_DROP_DOMAIN} =
{
  SQL_DD_DROP_DOMAIN                        => 0x00000001
, SQL_DD_RESTRICT                           => 0x00000002
, SQL_DD_CASCADE                            => 0x00000004
};
$ReturnValues{SQL_DROP_SCHEMA} =
{
  SQL_DS_DROP_SCHEMA                        => 0x00000001
, SQL_DS_RESTRICT                           => 0x00000002
, SQL_DS_CASCADE                            => 0x00000004
};
$ReturnValues{SQL_DROP_TABLE} =
{
  SQL_DT_DROP_TABLE                         => 0x00000001
, SQL_DT_RESTRICT                           => 0x00000002
, SQL_DT_CASCADE                            => 0x00000004
};
$ReturnValues{SQL_DROP_TRANSLATION} =
{
  SQL_DTR_DROP_TRANSLATION                  => 0x00000001
};
$ReturnValues{SQL_DROP_VIEW} =
{
  SQL_DV_DROP_VIEW                          => 0x00000001
, SQL_DV_RESTRICT                           => 0x00000002
, SQL_DV_CASCADE                            => 0x00000004
};
$ReturnValues{SQL_CURSOR_ATTRIBUTES1} =
{
  SQL_CA1_NEXT                              => 0x00000001
, SQL_CA1_ABSOLUTE                          => 0x00000002
, SQL_CA1_RELATIVE                          => 0x00000004
, SQL_CA1_BOOKMARK                          => 0x00000008
, SQL_CA1_LOCK_NO_CHANGE                    => 0x00000040
, SQL_CA1_LOCK_EXCLUSIVE                    => 0x00000080
, SQL_CA1_LOCK_UNLOCK                       => 0x00000100
, SQL_CA1_POS_POSITION                      => 0x00000200
, SQL_CA1_POS_UPDATE                        => 0x00000400
, SQL_CA1_POS_DELETE                        => 0x00000800
, SQL_CA1_POS_REFRESH                       => 0x00001000
, SQL_CA1_POSITIONED_UPDATE                 => 0x00002000
, SQL_CA1_POSITIONED_DELETE                 => 0x00004000
, SQL_CA1_SELECT_FOR_UPDATE                 => 0x00008000
, SQL_CA1_BULK_ADD                          => 0x00010000
, SQL_CA1_BULK_UPDATE_BY_BOOKMARK           => 0x00020000
, SQL_CA1_BULK_DELETE_BY_BOOKMARK           => 0x00040000
, SQL_CA1_BULK_FETCH_BY_BOOKMARK            => 0x00080000
};
$ReturnValues{     SQL_DYNAMIC_CURSOR_ATTRIBUTES1} = $ReturnValues{SQL_CURSOR_ATTRIBUTES1};
$ReturnValues{SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES1} = $ReturnValues{SQL_CURSOR_ATTRIBUTES1};
$ReturnValues{      SQL_KEYSET_CURSOR_ATTRIBUTES1} = $ReturnValues{SQL_CURSOR_ATTRIBUTES1};
$ReturnValues{      SQL_STATIC_CURSOR_ATTRIBUTES1} = $ReturnValues{SQL_CURSOR_ATTRIBUTES1};

$ReturnValues{SQL_CURSOR_ATTRIBUTES2} =
{
  SQL_CA2_READ_ONLY_CONCURRENCY             => 0x00000001
, SQL_CA2_LOCK_CONCURRENCY                  => 0x00000002
, SQL_CA2_OPT_ROWVER_CONCURRENCY            => 0x00000004
, SQL_CA2_OPT_VALUES_CONCURRENCY            => 0x00000008
, SQL_CA2_SENSITIVITY_ADDITIONS             => 0x00000010
, SQL_CA2_SENSITIVITY_DELETIONS             => 0x00000020
, SQL_CA2_SENSITIVITY_UPDATES               => 0x00000040
, SQL_CA2_MAX_ROWS_SELECT                   => 0x00000080
, SQL_CA2_MAX_ROWS_INSERT                   => 0x00000100
, SQL_CA2_MAX_ROWS_DELETE                   => 0x00000200
, SQL_CA2_MAX_ROWS_UPDATE                   => 0x00000400
, SQL_CA2_MAX_ROWS_CATALOG                  => 0x00000800
, SQL_CA2_CRC_EXACT                         => 0x00001000
, SQL_CA2_CRC_APPROXIMATE                   => 0x00002000
, SQL_CA2_SIMULATE_NON_UNIQUE               => 0x00004000
, SQL_CA2_SIMULATE_TRY_UNIQUE               => 0x00008000
, SQL_CA2_SIMULATE_UNIQUE                   => 0x00010000
};
$ReturnValues{     SQL_DYNAMIC_CURSOR_ATTRIBUTES2} = $ReturnValues{SQL_CURSOR_ATTRIBUTES2};
$ReturnValues{SQL_FORWARD_ONLY_CURSOR_ATTRIBUTES2} = $ReturnValues{SQL_CURSOR_ATTRIBUTES2};
$ReturnValues{      SQL_KEYSET_CURSOR_ATTRIBUTES2} = $ReturnValues{SQL_CURSOR_ATTRIBUTES2};
$ReturnValues{      SQL_STATIC_CURSOR_ATTRIBUTES2} = $ReturnValues{SQL_CURSOR_ATTRIBUTES2};

$ReturnValues{SQL_FETCH_DIRECTION} =
{
  SQL_FD_FETCH_NEXT                         => 0x00000001
, SQL_FD_FETCH_FIRST                        => 0x00000002
, SQL_FD_FETCH_LAST                         => 0x00000004
, SQL_FD_FETCH_PRIOR                        => 0x00000008
, SQL_FD_FETCH_ABSOLUTE                     => 0x00000010
, SQL_FD_FETCH_RELATIVE                     => 0x00000020
, SQL_FD_FETCH_RESUME                       => 0x00000040
, SQL_FD_FETCH_BOOKMARK                     => 0x00000080
};
$ReturnValues{SQL_FILE_USAGE} =
{
  SQL_FILE_NOT_SUPPORTED                    => 0x0000
, SQL_FILE_TABLE                            => 0x0001
, SQL_FILE_QUALIFIER                        => 0x0002
, SQL_FILE_CATALOG                          => 0x0002  # SQL_FILE_QUALIFIER
};
$ReturnValues{SQL_GETDATA_EXTENSIONS} =
{
  SQL_GD_ANY_COLUMN                         => 0x00000001
, SQL_GD_ANY_ORDER                          => 0x00000002
, SQL_GD_BLOCK                              => 0x00000004
, SQL_GD_BOUND                              => 0x00000008
};
$ReturnValues{SQL_GROUP_BY} =
{
  SQL_GB_NOT_SUPPORTED                      => 0x0000
, SQL_GB_GROUP_BY_EQUALS_SELECT             => 0x0001
, SQL_GB_GROUP_BY_CONTAINS_SELECT           => 0x0002
, SQL_GB_NO_RELATION                        => 0x0003
, SQL_GB_COLLATE                            => 0x0004
};
$ReturnValues{SQL_IDENTIFIER_CASE} =
{
  SQL_IC_UPPER                              => 1
, SQL_IC_LOWER                              => 2
, SQL_IC_SENSITIVE                          => 3
, SQL_IC_MIXED                              => 4
};
$ReturnValues{SQL_INDEX_KEYWORDS} =
{
  SQL_IK_NONE                               => 0x00000000
, SQL_IK_ASC                                => 0x00000001
, SQL_IK_DESC                               => 0x00000002
# SQL_IK_ALL                                =>
};
$ReturnValues{SQL_INFO_SCHEMA_VIEWS} =
{
  SQL_ISV_ASSERTIONS                        => 0x00000001
, SQL_ISV_CHARACTER_SETS                    => 0x00000002
, SQL_ISV_CHECK_CONSTRAINTS                 => 0x00000004
, SQL_ISV_COLLATIONS                        => 0x00000008
, SQL_ISV_COLUMN_DOMAIN_USAGE               => 0x00000010
, SQL_ISV_COLUMN_PRIVILEGES                 => 0x00000020
, SQL_ISV_COLUMNS                           => 0x00000040
, SQL_ISV_CONSTRAINT_COLUMN_USAGE           => 0x00000080
, SQL_ISV_CONSTRAINT_TABLE_USAGE            => 0x00000100
, SQL_ISV_DOMAIN_CONSTRAINTS                => 0x00000200
, SQL_ISV_DOMAINS                           => 0x00000400
, SQL_ISV_KEY_COLUMN_USAGE                  => 0x00000800
, SQL_ISV_REFERENTIAL_CONSTRAINTS           => 0x00001000
, SQL_ISV_SCHEMATA                          => 0x00002000
, SQL_ISV_SQL_LANGUAGES                     => 0x00004000
, SQL_ISV_TABLE_CONSTRAINTS                 => 0x00008000
, SQL_ISV_TABLE_PRIVILEGES                  => 0x00010000
, SQL_ISV_TABLES                            => 0x00020000
, SQL_ISV_TRANSLATIONS                      => 0x00040000
, SQL_ISV_USAGE_PRIVILEGES                  => 0x00080000
, SQL_ISV_VIEW_COLUMN_USAGE                 => 0x00100000
, SQL_ISV_VIEW_TABLE_USAGE                  => 0x00200000
, SQL_ISV_VIEWS                             => 0x00400000
};
$ReturnValues{SQL_INSERT_STATEMENT} =
{
  SQL_IS_INSERT_LITERALS                    => 0x00000001
, SQL_IS_INSERT_SEARCHED                    => 0x00000002
, SQL_IS_SELECT_INTO                        => 0x00000004
};
$ReturnValues{SQL_LOCK_TYPES} =
{
  SQL_LCK_NO_CHANGE                         => 0x00000001
, SQL_LCK_EXCLUSIVE                         => 0x00000002
, SQL_LCK_UNLOCK                            => 0x00000004
};
$ReturnValues{SQL_NON_NULLABLE_COLUMNS} =
{
  SQL_NNC_NULL                              => 0x0000
, SQL_NNC_NON_NULL                          => 0x0001
};
$ReturnValues{SQL_NULL_COLLATION} =
{
  SQL_NC_HIGH                               => 0
, SQL_NC_LOW                                => 1
, SQL_NC_START                              => 0x0002
, SQL_NC_END                                => 0x0004
};
$ReturnValues{SQL_NUMERIC_FUNCTIONS} =
{
  SQL_FN_NUM_ABS                            => 0x00000001
, SQL_FN_NUM_ACOS                           => 0x00000002
, SQL_FN_NUM_ASIN                           => 0x00000004
, SQL_FN_NUM_ATAN                           => 0x00000008
, SQL_FN_NUM_ATAN2                          => 0x00000010
, SQL_FN_NUM_CEILING                        => 0x00000020
, SQL_FN_NUM_COS                            => 0x00000040
, SQL_FN_NUM_COT                            => 0x00000080
, SQL_FN_NUM_EXP                            => 0x00000100
, SQL_FN_NUM_FLOOR                          => 0x00000200
, SQL_FN_NUM_LOG                            => 0x00000400
, SQL_FN_NUM_MOD                            => 0x00000800
, SQL_FN_NUM_SIGN                           => 0x00001000
, SQL_FN_NUM_SIN                            => 0x00002000
, SQL_FN_NUM_SQRT                           => 0x00004000
, SQL_FN_NUM_TAN                            => 0x00008000
, SQL_FN_NUM_PI                             => 0x00010000
, SQL_FN_NUM_RAND                           => 0x00020000
, SQL_FN_NUM_DEGREES                        => 0x00040000
, SQL_FN_NUM_LOG10                          => 0x00080000
, SQL_FN_NUM_POWER                          => 0x00100000
, SQL_FN_NUM_RADIANS                        => 0x00200000
, SQL_FN_NUM_ROUND                          => 0x00400000
, SQL_FN_NUM_TRUNCATE                       => 0x00800000
};
$ReturnValues{SQL_ODBC_API_CONFORMANCE} =
{
  SQL_OAC_NONE                              => 0x0000
, SQL_OAC_LEVEL1                            => 0x0001
, SQL_OAC_LEVEL2                            => 0x0002
};
$ReturnValues{SQL_ODBC_INTERFACE_CONFORMANCE} =
{
  SQL_OIC_CORE                              => 1
, SQL_OIC_LEVEL1                            => 2
, SQL_OIC_LEVEL2                            => 3
};
$ReturnValues{SQL_ODBC_SAG_CLI_CONFORMANCE} =
{
  SQL_OSCC_NOT_COMPLIANT                    => 0x0000
, SQL_OSCC_COMPLIANT                        => 0x0001
};
$ReturnValues{SQL_ODBC_SQL_CONFORMANCE} =
{
  SQL_OSC_MINIMUM                           => 0x0000
, SQL_OSC_CORE                              => 0x0001
, SQL_OSC_EXTENDED                          => 0x0002
};
$ReturnValues{SQL_OJ_CAPABILITIES} =
{
  SQL_OJ_LEFT                               => 0x00000001
, SQL_OJ_RIGHT                              => 0x00000002
, SQL_OJ_FULL                               => 0x00000004
, SQL_OJ_NESTED                             => 0x00000008
, SQL_OJ_NOT_ORDERED                        => 0x00000010
, SQL_OJ_INNER                              => 0x00000020
, SQL_OJ_ALL_COMPARISON_OPS                 => 0x00000040
};
$ReturnValues{SQL_OWNER_USAGE} =
{
  SQL_OU_DML_STATEMENTS                     => 0x00000001
, SQL_OU_PROCEDURE_INVOCATION               => 0x00000002
, SQL_OU_TABLE_DEFINITION                   => 0x00000004
, SQL_OU_INDEX_DEFINITION                   => 0x00000008
, SQL_OU_PRIVILEGE_DEFINITION               => 0x00000010
};
$ReturnValues{SQL_PARAM_ARRAY_ROW_COUNTS} =
{
  SQL_PARC_BATCH                            => 1
, SQL_PARC_NO_BATCH                         => 2
};
$ReturnValues{SQL_PARAM_ARRAY_SELECTS} =
{
  SQL_PAS_BATCH                             => 1
, SQL_PAS_NO_BATCH                          => 2
, SQL_PAS_NO_SELECT                         => 3
};
$ReturnValues{SQL_POSITIONED_STATEMENTS} =
{
  SQL_PS_POSITIONED_DELETE                  => 0x00000001
, SQL_PS_POSITIONED_UPDATE                  => 0x00000002
, SQL_PS_SELECT_FOR_UPDATE                  => 0x00000004
};
$ReturnValues{SQL_POS_OPERATIONS} =
{
  SQL_POS_POSITION                          => 0x00000001
, SQL_POS_REFRESH                           => 0x00000002
, SQL_POS_UPDATE                            => 0x00000004
, SQL_POS_DELETE                            => 0x00000008
, SQL_POS_ADD                               => 0x00000010
};
$ReturnValues{SQL_QUALIFIER_LOCATION} =
{
  SQL_QL_START                              => 0x0001
, SQL_QL_END                                => 0x0002
};
$ReturnValues{SQL_QUALIFIER_USAGE} =
{
  SQL_QU_DML_STATEMENTS                     => 0x00000001
, SQL_QU_PROCEDURE_INVOCATION               => 0x00000002
, SQL_QU_TABLE_DEFINITION                   => 0x00000004
, SQL_QU_INDEX_DEFINITION                   => 0x00000008
, SQL_QU_PRIVILEGE_DEFINITION               => 0x00000010
};
$ReturnValues{SQL_QUOTED_IDENTIFIER_CASE}   = $ReturnValues{SQL_IDENTIFIER_CASE};

$ReturnValues{SQL_SCHEMA_USAGE} =
{
  SQL_SU_DML_STATEMENTS                     => 0x00000001  # SQL_OU_DML_STATEMENTS
, SQL_SU_PROCEDURE_INVOCATION               => 0x00000002  # SQL_OU_PROCEDURE_INVOCATION
, SQL_SU_TABLE_DEFINITION                   => 0x00000004  # SQL_OU_TABLE_DEFINITION
, SQL_SU_INDEX_DEFINITION                   => 0x00000008  # SQL_OU_INDEX_DEFINITION
, SQL_SU_PRIVILEGE_DEFINITION               => 0x00000010  # SQL_OU_PRIVILEGE_DEFINITION
};
$ReturnValues{SQL_SCROLL_CONCURRENCY} =
{
  SQL_SCCO_READ_ONLY                        => 0x00000001
, SQL_SCCO_LOCK                             => 0x00000002
, SQL_SCCO_OPT_ROWVER                       => 0x00000004
, SQL_SCCO_OPT_VALUES                       => 0x00000008
};
$ReturnValues{SQL_SCROLL_OPTIONS} =
{
  SQL_SO_FORWARD_ONLY                       => 0x00000001
, SQL_SO_KEYSET_DRIVEN                      => 0x00000002
, SQL_SO_DYNAMIC                            => 0x00000004
, SQL_SO_MIXED                              => 0x00000008
, SQL_SO_STATIC                             => 0x00000010
};
$ReturnValues{SQL_SQL92_DATETIME_FUNCTIONS} =
{
  SQL_SDF_CURRENT_DATE                      => 0x00000001
, SQL_SDF_CURRENT_TIME                      => 0x00000002
, SQL_SDF_CURRENT_TIMESTAMP                 => 0x00000004
};
$ReturnValues{SQL_SQL92_FOREIGN_KEY_DELETE_RULE} =
{
  SQL_SFKD_CASCADE                          => 0x00000001
, SQL_SFKD_NO_ACTION                        => 0x00000002
, SQL_SFKD_SET_DEFAULT                      => 0x00000004
, SQL_SFKD_SET_NULL                         => 0x00000008
};
$ReturnValues{SQL_SQL92_FOREIGN_KEY_UPDATE_RULE} =
{
  SQL_SFKU_CASCADE                          => 0x00000001
, SQL_SFKU_NO_ACTION                        => 0x00000002
, SQL_SFKU_SET_DEFAULT                      => 0x00000004
, SQL_SFKU_SET_NULL                         => 0x00000008
};
$ReturnValues{SQL_SQL92_GRANT} =
{
  SQL_SG_USAGE_ON_DOMAIN                    => 0x00000001
, SQL_SG_USAGE_ON_CHARACTER_SET             => 0x00000002
, SQL_SG_USAGE_ON_COLLATION                 => 0x00000004
, SQL_SG_USAGE_ON_TRANSLATION               => 0x00000008
, SQL_SG_WITH_GRANT_OPTION                  => 0x00000010
, SQL_SG_DELETE_TABLE                       => 0x00000020
, SQL_SG_INSERT_TABLE                       => 0x00000040
, SQL_SG_INSERT_COLUMN                      => 0x00000080
, SQL_SG_REFERENCES_TABLE                   => 0x00000100
, SQL_SG_REFERENCES_COLUMN                  => 0x00000200
, SQL_SG_SELECT_TABLE                       => 0x00000400
, SQL_SG_UPDATE_TABLE                       => 0x00000800
, SQL_SG_UPDATE_COLUMN                      => 0x00001000
};
$ReturnValues{SQL_SQL92_NUMERIC_VALUE_FUNCTIONS} =
{
  SQL_SNVF_BIT_LENGTH                       => 0x00000001
, SQL_SNVF_CHAR_LENGTH                      => 0x00000002
, SQL_SNVF_CHARACTER_LENGTH                 => 0x00000004
, SQL_SNVF_EXTRACT                          => 0x00000008
, SQL_SNVF_OCTET_LENGTH                     => 0x00000010
, SQL_SNVF_POSITION                         => 0x00000020
};
$ReturnValues{SQL_SQL92_PREDICATES} =
{
  SQL_SP_EXISTS                             => 0x00000001
, SQL_SP_ISNOTNULL                          => 0x00000002
, SQL_SP_ISNULL                             => 0x00000004
, SQL_SP_MATCH_FULL                         => 0x00000008
, SQL_SP_MATCH_PARTIAL                      => 0x00000010
, SQL_SP_MATCH_UNIQUE_FULL                  => 0x00000020
, SQL_SP_MATCH_UNIQUE_PARTIAL               => 0x00000040
, SQL_SP_OVERLAPS                           => 0x00000080
, SQL_SP_UNIQUE                             => 0x00000100
, SQL_SP_LIKE                               => 0x00000200
, SQL_SP_IN                                 => 0x00000400
, SQL_SP_BETWEEN                            => 0x00000800
, SQL_SP_COMPARISON                         => 0x00001000
, SQL_SP_QUANTIFIED_COMPARISON              => 0x00002000
};
$ReturnValues{SQL_SQL92_RELATIONAL_JOIN_OPERATORS} =
{
  SQL_SRJO_CORRESPONDING_CLAUSE             => 0x00000001
, SQL_SRJO_CROSS_JOIN                       => 0x00000002
, SQL_SRJO_EXCEPT_JOIN                      => 0x00000004
, SQL_SRJO_FULL_OUTER_JOIN                  => 0x00000008
, SQL_SRJO_INNER_JOIN                       => 0x00000010
, SQL_SRJO_INTERSECT_JOIN                   => 0x00000020
, SQL_SRJO_LEFT_OUTER_JOIN                  => 0x00000040
, SQL_SRJO_NATURAL_JOIN                     => 0x00000080
, SQL_SRJO_RIGHT_OUTER_JOIN                 => 0x00000100
, SQL_SRJO_UNION_JOIN                       => 0x00000200
};
$ReturnValues{SQL_SQL92_REVOKE} =
{
  SQL_SR_USAGE_ON_DOMAIN                    => 0x00000001
, SQL_SR_USAGE_ON_CHARACTER_SET             => 0x00000002
, SQL_SR_USAGE_ON_COLLATION                 => 0x00000004
, SQL_SR_USAGE_ON_TRANSLATION               => 0x00000008
, SQL_SR_GRANT_OPTION_FOR                   => 0x00000010
, SQL_SR_CASCADE                            => 0x00000020
, SQL_SR_RESTRICT                           => 0x00000040
, SQL_SR_DELETE_TABLE                       => 0x00000080
, SQL_SR_INSERT_TABLE                       => 0x00000100
, SQL_SR_INSERT_COLUMN                      => 0x00000200
, SQL_SR_REFERENCES_TABLE                   => 0x00000400
, SQL_SR_REFERENCES_COLUMN                  => 0x00000800
, SQL_SR_SELECT_TABLE                       => 0x00001000
, SQL_SR_UPDATE_TABLE                       => 0x00002000
, SQL_SR_UPDATE_COLUMN                      => 0x00004000
};
$ReturnValues{SQL_SQL92_ROW_VALUE_CONSTRUCTOR} =
{
  SQL_SRVC_VALUE_EXPRESSION                 => 0x00000001
, SQL_SRVC_NULL                             => 0x00000002
, SQL_SRVC_DEFAULT                          => 0x00000004
, SQL_SRVC_ROW_SUBQUERY                     => 0x00000008
};
$ReturnValues{SQL_SQL92_STRING_FUNCTIONS} =
{
  SQL_SSF_CONVERT                           => 0x00000001
, SQL_SSF_LOWER                             => 0x00000002
, SQL_SSF_UPPER                             => 0x00000004
, SQL_SSF_SUBSTRING                         => 0x00000008
, SQL_SSF_TRANSLATE                         => 0x00000010
, SQL_SSF_TRIM_BOTH                         => 0x00000020
, SQL_SSF_TRIM_LEADING                      => 0x00000040
, SQL_SSF_TRIM_TRAILING                     => 0x00000080
};
$ReturnValues{SQL_SQL92_VALUE_EXPRESSIONS} =
{
  SQL_SVE_CASE                              => 0x00000001
, SQL_SVE_CAST                              => 0x00000002
, SQL_SVE_COALESCE                          => 0x00000004
, SQL_SVE_NULLIF                            => 0x00000008
};
$ReturnValues{SQL_SQL_CONFORMANCE} =
{
  SQL_SC_SQL92_ENTRY                        => 0x00000001
, SQL_SC_FIPS127_2_TRANSITIONAL             => 0x00000002
, SQL_SC_SQL92_INTERMEDIATE                 => 0x00000004
, SQL_SC_SQL92_FULL                         => 0x00000008
};
$ReturnValues{SQL_STANDARD_CLI_CONFORMANCE} =
{
  SQL_SCC_XOPEN_CLI_VERSION1                => 0x00000001
, SQL_SCC_ISO92_CLI                         => 0x00000002
};
$ReturnValues{SQL_STATIC_SENSITIVITY} =
{
  SQL_SS_ADDITIONS                          => 0x00000001
, SQL_SS_DELETIONS                          => 0x00000002
, SQL_SS_UPDATES                            => 0x00000004
};
$ReturnValues{SQL_STRING_FUNCTIONS} =
{
  SQL_FN_STR_CONCAT                         => 0x00000001
, SQL_FN_STR_INSERT                         => 0x00000002
, SQL_FN_STR_LEFT                           => 0x00000004
, SQL_FN_STR_LTRIM                          => 0x00000008
, SQL_FN_STR_LENGTH                         => 0x00000010
, SQL_FN_STR_LOCATE                         => 0x00000020
, SQL_FN_STR_LCASE                          => 0x00000040
, SQL_FN_STR_REPEAT                         => 0x00000080
, SQL_FN_STR_REPLACE                        => 0x00000100
, SQL_FN_STR_RIGHT                          => 0x00000200
, SQL_FN_STR_RTRIM                          => 0x00000400
, SQL_FN_STR_SUBSTRING                      => 0x00000800
, SQL_FN_STR_UCASE                          => 0x00001000
, SQL_FN_STR_ASCII                          => 0x00002000
, SQL_FN_STR_CHAR                           => 0x00004000
, SQL_FN_STR_DIFFERENCE                     => 0x00008000
, SQL_FN_STR_LOCATE_2                       => 0x00010000
, SQL_FN_STR_SOUNDEX                        => 0x00020000
, SQL_FN_STR_SPACE                          => 0x00040000
, SQL_FN_STR_BIT_LENGTH                     => 0x00080000
, SQL_FN_STR_CHAR_LENGTH                    => 0x00100000
, SQL_FN_STR_CHARACTER_LENGTH               => 0x00200000
, SQL_FN_STR_OCTET_LENGTH                   => 0x00400000
, SQL_FN_STR_POSITION                       => 0x00800000
};
$ReturnValues{SQL_SUBQUERIES} =
{
  SQL_SQ_COMPARISON                         => 0x00000001
, SQL_SQ_EXISTS                             => 0x00000002
, SQL_SQ_IN                                 => 0x00000004
, SQL_SQ_QUANTIFIED                         => 0x00000008
, SQL_SQ_CORRELATED_SUBQUERIES              => 0x00000010
};
$ReturnValues{SQL_SYSTEM_FUNCTIONS} =
{
  SQL_FN_SYS_USERNAME                       => 0x00000001
, SQL_FN_SYS_DBNAME                         => 0x00000002
, SQL_FN_SYS_IFNULL                         => 0x00000004
};
$ReturnValues{SQL_TIMEDATE_ADD_INTERVALS} =
{
  SQL_FN_TSI_FRAC_SECOND                    => 0x00000001
, SQL_FN_TSI_SECOND                         => 0x00000002
, SQL_FN_TSI_MINUTE                         => 0x00000004
, SQL_FN_TSI_HOUR                           => 0x00000008
, SQL_FN_TSI_DAY                            => 0x00000010
, SQL_FN_TSI_WEEK                           => 0x00000020
, SQL_FN_TSI_MONTH                          => 0x00000040
, SQL_FN_TSI_QUARTER                        => 0x00000080
, SQL_FN_TSI_YEAR                           => 0x00000100
};
$ReturnValues{SQL_TIMEDATE_FUNCTIONS} =
{
  SQL_FN_TD_NOW                             => 0x00000001
, SQL_FN_TD_CURDATE                         => 0x00000002
, SQL_FN_TD_DAYOFMONTH                      => 0x00000004
, SQL_FN_TD_DAYOFWEEK                       => 0x00000008
, SQL_FN_TD_DAYOFYEAR                       => 0x00000010
, SQL_FN_TD_MONTH                           => 0x00000020
, SQL_FN_TD_QUARTER                         => 0x00000040
, SQL_FN_TD_WEEK                            => 0x00000080
, SQL_FN_TD_YEAR                            => 0x00000100
, SQL_FN_TD_CURTIME                         => 0x00000200
, SQL_FN_TD_HOUR                            => 0x00000400
, SQL_FN_TD_MINUTE                          => 0x00000800
, SQL_FN_TD_SECOND                          => 0x00001000
, SQL_FN_TD_TIMESTAMPADD                    => 0x00002000
, SQL_FN_TD_TIMESTAMPDIFF                   => 0x00004000
, SQL_FN_TD_DAYNAME                         => 0x00008000
, SQL_FN_TD_MONTHNAME                       => 0x00010000
, SQL_FN_TD_CURRENT_DATE                    => 0x00020000
, SQL_FN_TD_CURRENT_TIME                    => 0x00040000
, SQL_FN_TD_CURRENT_TIMESTAMP               => 0x00080000
, SQL_FN_TD_EXTRACT                         => 0x00100000
};
$ReturnValues{SQL_TXN_CAPABLE} =
{
  SQL_TC_NONE                               => 0
, SQL_TC_DML                                => 1
, SQL_TC_ALL                                => 2
, SQL_TC_DDL_COMMIT                         => 3
, SQL_TC_DDL_IGNORE                         => 4
};
$ReturnValues{SQL_TRANSACTION_ISOLATION_OPTION} =
{
  SQL_TRANSACTION_READ_UNCOMMITTED          => 0x00000001  # SQL_TXN_READ_UNCOMMITTED
, SQL_TRANSACTION_READ_COMMITTED            => 0x00000002  # SQL_TXN_READ_COMMITTED
, SQL_TRANSACTION_REPEATABLE_READ           => 0x00000004  # SQL_TXN_REPEATABLE_READ
, SQL_TRANSACTION_SERIALIZABLE              => 0x00000008  # SQL_TXN_SERIALIZABLE
};
$ReturnValues{SQL_DEFAULT_TRANSACTION_ISOLATION} = $ReturnValues{SQL_TRANSACTION_ISOLATION_OPTION};

$ReturnValues{SQL_TXN_ISOLATION_OPTION} =
{
  SQL_TXN_READ_UNCOMMITTED                  => 0x00000001
, SQL_TXN_READ_COMMITTED                    => 0x00000002
, SQL_TXN_REPEATABLE_READ                   => 0x00000004
, SQL_TXN_SERIALIZABLE                      => 0x00000008
};
$ReturnValues{SQL_DEFAULT_TXN_ISOLATION} = $ReturnValues{SQL_TXN_ISOLATION_OPTION};

$ReturnValues{SQL_TXN_VERSIONING} =
{
  SQL_TXN_VERSIONING                        => 0x00000010
};
$ReturnValues{SQL_UNION} =
{
  SQL_U_UNION                               => 0x00000001
, SQL_U_UNION_ALL                           => 0x00000002
};
$ReturnValues{SQL_UNION_STATEMENT} =
{
  SQL_US_UNION                              => 0x00000001  # SQL_U_UNION
, SQL_US_UNION_ALL                          => 0x00000002  # SQL_U_UNION_ALL
};

1;

=head1 TODO

  Corrections?
  SQL_NULL_COLLATION: ODBC vs ANSI
  Unique values for $ReturnValues{...}?, e.g. SQL_FILE_USAGE

=cut
                                                                                                                                                                                                                                                                                                                                                                                                                                         root/.cpan/build/DBI-1.645-0/blib/lib/DBI/Const/GetInfoReturn.pm                                    0000444 0000000 0000000 00000004571 14660570432 022002  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        # $Id: GetInfoReturn.pm 8696 2007-01-24 23:12:38Z Tim $
#
# Copyright (c) 2002  Tim Bunce  Ireland
#
# Constant data describing return values from the DBI getinfo function.
#
# You may distribute under the terms of either the GNU General Public
# License or the Artistic License, as specified in the Perl README file.

package DBI::Const::GetInfoReturn;

use strict;
use warnings;

use Exporter ();

our @ISA = qw(Exporter);
our @EXPORT = qw(%GetInfoReturnTypes %GetInfoReturnValues);

my
$VERSION = "2.008697";

=head1 NAME

DBI::Const::GetInfoReturn - Data and functions for describing GetInfo results

=head1 SYNOPSIS

The interface to this module is undocumented and liable to change.

=head1 DESCRIPTION

Data and functions for describing GetInfo results

=cut

use DBI::Const::GetInfoType;

use DBI::Const::GetInfo::ANSI ();
use DBI::Const::GetInfo::ODBC ();

our %GetInfoReturnTypes =
(
  %DBI::Const::GetInfo::ANSI::ReturnTypes
, %DBI::Const::GetInfo::ODBC::ReturnTypes
);

our %GetInfoReturnValues = ();
{
  my $A = \%DBI::Const::GetInfo::ANSI::ReturnValues;
  my $O = \%DBI::Const::GetInfo::ODBC::ReturnValues;
  while ( my ($k, $v) = each %$A ) {
    my %h = ( exists $O->{$k} ) ? ( %$v, %{$O->{$k}} ) : %$v;
    $GetInfoReturnValues{$k} = \%h;
  }
  while ( my ($k, $v) = each %$O ) {
    next if exists $A->{$k};
    my %h = %$v;
    $GetInfoReturnValues{$k} = \%h;
  }
}

# -----------------------------------------------------------------------------

sub Format {
  my $InfoType = shift;
  my $Value    = shift;

  return '' unless defined $Value;

  my $ReturnType = $GetInfoReturnTypes{$InfoType};

  return sprintf '0x%08X', $Value if $ReturnType eq 'SQLUINTEGER bitmask';
  return sprintf '0x%08X', $Value if $ReturnType eq 'SQLINTEGER bitmask';
# return '"' . $Value . '"'       if $ReturnType eq 'SQLCHAR';
  return $Value;
}


sub Explain {
  my $InfoType = shift;
  my $Value    = shift;

  return '' unless defined $Value;
  return '' unless exists $GetInfoReturnValues{$InfoType};

  $Value = int $Value;
  my $ReturnType = $GetInfoReturnTypes{$InfoType};
  my %h = reverse %{$GetInfoReturnValues{$InfoType}};

  if ( $ReturnType eq 'SQLUINTEGER bitmask'|| $ReturnType eq 'SQLINTEGER bitmask') {
    my @a = ();
    for my $k ( sort { $a <=> $b } keys %h ) {
      push @a, $h{$k} if $Value & $k;
    }
    return wantarray ? @a : join(' ', @a );
  }
  else {
    return $h{$Value} ||'?';
  }
}

1;
                                                                                                                                       root/.cpan/build/DBI-1.645-0/blib/lib/DBI/Const/GetInfoType.pm                                      0000444 0000000 0000000 00000002221 14660570432 021432  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        # $Id: GetInfoType.pm 8696 2007-01-24 23:12:38Z Tim $
#
# Copyright (c) 2002  Tim Bunce  Ireland
#
# Constant data describing info type codes for the DBI getinfo function.
#
# You may distribute under the terms of either the GNU General Public
# License or the Artistic License, as specified in the Perl README file.

package DBI::Const::GetInfoType;

use strict;
use warnings;

use Exporter ();

our @ISA = qw(Exporter);
our @EXPORT = qw(%GetInfoType);

my
$VERSION = "2.008697";

=head1 NAME

DBI::Const::GetInfoType - Data describing GetInfo type codes

=head1 SYNOPSIS

  use DBI::Const::GetInfoType;

=head1 DESCRIPTION

Imports a %GetInfoType hash which maps names for GetInfo Type Codes
into their corresponding numeric values. For example:

  $database_version = $dbh->get_info( $GetInfoType{SQL_DBMS_VER} );

The interface to this module is new and nothing beyond what is
written here is guaranteed.

=cut

use DBI::Const::GetInfo::ANSI ();	# liable to change
use DBI::Const::GetInfo::ODBC ();	# liable to change

our %GetInfoType =
(
  %DBI::Const::GetInfo::ANSI::InfoTypes	# liable to change
, %DBI::Const::GetInfo::ODBC::InfoTypes	# liable to change
);

1;
                                                                                                                                                                                                                                                                                                                                                                               root/.cpan/build/DBI-1.645-0/blib/lib/DBI/DBD/                                                      0000755 0000000 0000000 00000000000 14723046262 016206  5                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        root/.cpan/build/DBI-1.645-0/blib/lib/DBI/DBD/Metadata.pm                                           0000444 0000000 0000000 00000035323 14656646601 020300  0                                                                                                    ustar 00                                                                0000000 0000000                                                                                                                                                                        package DBI::DBD::Metadata;

# $Id: Metadata.pm 14213 2010-06-30 19:29:18Z Martin $
#
# Copyright (c) 1997-2003 Jonathan Leffler, Jochen Wiedmann,
# Steffen Goeldner and Tim Bunce
#
# You may distribute under the terms of either the GNU General Public
# License or the Artistic License, as specified in the Perl README file.

use strict;
use warnings;

use Exporter ();
use Carp;

use DBI;
use DBI::Const::GetInfoType qw(%GetInfoType);

our @ISA = qw(Exporter);
our @EXPORT = qw(write_getinfo_pm write_typeinfo_pm);

our $VERSION = "2.014214";


=head1 NAME

DBI::DBD::Metadata - Generate the code and data for some DBI metadata methods

=head1 SYNOPSIS

The idea is to extract metadata information from a good quality
ODBC driver and use it to generate code and data to use in your own
DBI driver for the same database.

To generate code to support the get_info method:

