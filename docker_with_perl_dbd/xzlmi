
=head2 TAP::Base - Base class that provides common functionality to
L<TAP::Parser>
and L<TAP::Harness>

=over 4

=item VERSION

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item Class Methods

=back

=back

=head2 TAP::Formatter::Base - Base class for harness output delegates

=over 4

=item VERSION

=back

=over 4

=item DESCRIPTION

=item SYNOPSIS

=back

=over 4

=item METHODS

=over 4

=item Class Methods

C<verbosity>, C<verbose>, C<timer>, C<failures>, C<comments>, C<quiet>,
C<really_quiet>, C<silent>, C<errors>, C<directives>, C<stdout>, C<color>,
C<jobs>, C<show_count>

=back

=back

=head2 TAP::Formatter::Color - Run Perl test scripts with color

=over 4

=item VERSION

=back

=over 4

=item DESCRIPTION

=item SYNOPSIS

=item METHODS

=over 4

=item Class Methods

=back

=back

=head2 TAP::Formatter::Console - Harness output delegate for default
console output

=over 4

=item VERSION

=back

=over 4

=item DESCRIPTION

=item SYNOPSIS

=over 4

=item C<< open_test >>

=back

=back

=head2 TAP::Formatter::Console::ParallelSession - Harness output delegate
for parallel console output

=over 4

=item VERSION

=back

=over 4

=item DESCRIPTION

=item SYNOPSIS

=back

=over 4

=item METHODS

=over 4

=item Class Methods

=back

=back

=head2 TAP::Formatter::Console::Session - Harness output delegate for
default console output

=over 4

=item VERSION

=back

=over 4

=item DESCRIPTION

=back

=over 4

=item C<<	clear_for_close >>

=item C<<	close_test >>

=item C<<	header >>

=item C<<	result >>

=back

=head2 TAP::Formatter::File - Harness output delegate for file output

=over 4

=item VERSION

=back

=over 4

=item DESCRIPTION

=item SYNOPSIS

=over 4

=item C<< open_test >>

=back

=back

=head2 TAP::Formatter::File::Session - Harness output delegate for file
output

=over 4

=item VERSION

=back

=over 4

=item DESCRIPTION

=back

=over 4

=item METHODS

=over 4

=item result

=back

=back

=over 4

=item close_test

=back

=head2 TAP::Formatter::Session - Abstract base class for harness output
delegate 

=over 4

=item VERSION

=back

=over 4

=item METHODS

=over 4

=item Class Methods

C<formatter>, C<parser>, C<name>, C<show_count>

=back

=back

=head2 TAP::Harness - Run test scripts with statistics

=over 4

=item VERSION

=back

=over 4

=item DESCRIPTION

=item SYNOPSIS

=back

=over 4

=item METHODS

=over 4

=item Class Methods

C<verbosity>, C<timer>, C<failures>, C<comments>, C<show_count>,
C<normalize>, C<lib>, C<switches>, C<test_args>, C<color>, C<exec>,
C<merge>, C<sources>, C<aggregator_class>, C<version>, C<formatter_class>,
C<multiplexer_class>, C<parser_class>, C<scheduler_class>, C<formatter>,
C<errors>, C<directives>, C<ignore_exit>, C<jobs>, C<rules>, C<rulesfiles>,
C<stdout>, C<trap>

=back

=back

=over 4

=item Instance Methods

=back

the source name of a test to run, a reference to a [ source name, display
name ] array

=over 4

=item CONFIGURING

=over 4

=item Plugins

=item C<Module::Build>

=item C<ExtUtils::MakeMaker>

=item C<prove>

=back

=item WRITING PLUGINS

Customize how TAP gets into the parser, Customize how TAP results are
output from the parser

=item SUBCLASSING

=over 4

=item Methods

L<TAP::Harness/new>, L<TAP::Harness/runtests>, L<TAP::Harness/summary>

=back

=back

=over 4

=item REPLACING

=item SEE ALSO

=back

=head2 TAP::Harness::Beyond, Test::Harness::Beyond - Beyond make test

=over 4

=item Beyond make test

=over 4

=item Saved State

=item Parallel Testing

=item Non-Perl Tests

=item Mixing it up

=item Rolling My Own

=item Deeper Customisation

=item Callbacks

=item Parsing TAP

=item Getting Support

=back

=back

=head2 TAP::Harness::Env - Parsing harness related environmental variables
where appropriate

=over 4

=item VERSION

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

create( \%args )

=item ENVIRONMENTAL VARIABLES

C<HARNESS_PERL_SWITCHES>, C<HARNESS_VERBOSE>, C<HARNESS_SUBCLASS>,
C<HARNESS_OPTIONS>, C<< j<n> >>, C<< c >>, C<< a<file.tgz> >>, C<<
fPackage-With-Dashes >>, C<HARNESS_TIMER>, C<HARNESS_COLOR>,
C<HARNESS_IGNORE_EXIT>

=back

=head2 TAP::Object - Base class that provides common functionality to all
C<TAP::*> modules

=over 4

=item VERSION

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item Class Methods

=back

=back

=over 4

=item Instance Methods

=back

=head2 TAP::Parser - Parse L<TAP|Test::Harness::TAP> output

=over 4

=item VERSION

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item Class Methods

C<source>, C<tap>, C<exec>, C<sources>, C<callback>, C<switches>,
C<test_args>, C<spool>, C<merge>, C<grammar_class>,
C<result_factory_class>, C<iterator_factory_class>

=back

=back

=over 4

=item Instance Methods

=back

=over 4

=item INDIVIDUAL RESULTS

=over 4

=item Result types

Version, Plan, Pragma, Test, Comment, Bailout, Unknown

=item Common type methods

=item C<plan> methods

=item C<pragma> methods

=item C<comment> methods

=item C<bailout> methods

=item C<unknown> methods

=item C<test> methods

=back

=item TOTAL RESULTS

=over 4

=item Individual Results

=back

=back

=over 4

=item Pragmas

=back

=over 4

=item Summary Results

=back

=over 4

=item C<ignore_exit>

=back

Misplaced plan, No plan, More than one plan, Test numbers out of sequence

=over 4

=item CALLBACKS

C<test>, C<version>, C<plan>, C<comment>, C<bailout>, C<yaml>, C<unknown>,
C<ELSE>, C<ALL>, C<EOF>

=item TAP GRAMMAR

=item BACKWARDS COMPATIBILITY

=over 4

=item Differences

TODO plans, 'Missing' tests

=back

=item SUBCLASSING

=over 4

=item Parser Components

option 1, option 2

=back

=item ACKNOWLEDGMENTS

Michael Schwern, Andy Lester, chromatic, GEOFFR, Shlomi Fish, Torsten
Schoenfeld, Jerry Gay, Aristotle, Adam Kennedy, Yves Orton, Adrian Howard,
Sean & Lil, Andreas J. Koenig, Florian Ragwitz, Corion, Mark Stosberg, Matt
Kraai, David Wheeler, Alex Vandiver, Cosimo Streppone, Ville Skytt√§

=item AUTHORS

=item BUGS

=item COPYRIGHT & LICENSE

=back

=head2 TAP::Parser::Aggregator - Aggregate TAP::Parser results

=over 4

=item VERSION

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item Class Methods

=back

=back

=over 4

=item Instance Methods

=back

=over 4

=item Summary methods

failed, parse_errors, passed, planned, skipped, todo, todo_passed, wait,
exit

=back

Failed tests, Parse errors, Bad exit or wait status

=over 4

=item See Also

=back

=head2 TAP::Parser::Grammar - A grammar for the Test Anything Protocol.

=over 4

=item VERSION

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item Class Methods

=back

=back

=over 4

=item Instance Methods

=back

=over 4

=item TAP GRAMMAR

=item SUBCLASSING

=item SEE ALSO

=back

=head2 TAP::Parser::Iterator - Base class for TAP source iterators

=over 4

=item VERSION

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item Class Methods

=item Instance Methods

=back

=back

=over 4

=item SUBCLASSING

=over 4

=item Example

=back

=item SEE ALSO

=back

=head2 TAP::Parser::Iterator::Array - Iterator for array-based TAP sources

=over 4

=item VERSION

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item Class Methods

=item Instance Methods

=back

=back

=over 4

=item ATTRIBUTION

=item SEE ALSO

=back

=head2 TAP::Parser::Iterator::Process - Iterator for process-based TAP
sources

=over 4

=item VERSION

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item Class Methods

=item Instance Methods

=back

=back

=over 4

=item ATTRIBUTION

=item SEE ALSO

=back

=head2 TAP::Parser::Iterator::Stream - Iterator for filehandle-based TAP
sources

=over 4

=item VERSION

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item Class Methods

=back

=back

=over 4

=item Instance Methods

=back

=over 4

=item ATTRIBUTION

=item SEE ALSO

=back

=head2 TAP::Parser::IteratorFactory - Figures out which SourceHandler
objects to use for a given Source

=over 4

=item VERSION

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item Class Methods

=back

=back

=over 4

=item Instance Methods

=back

=over 4

=item SUBCLASSING

=over 4

=item Example

=back

=item AUTHORS

=item ATTRIBUTION

=item SEE ALSO

=back

=head2 TAP::Parser::Multiplexer - Multiplex multiple TAP::Parsers

=over 4

=item VERSION

=back

=over 4

=item SYNOPSIS

=item DESCRIPTION

=item METHODS

=over 4

=item Class Methods

=back

=back

=over 4

=item Instance Methods

=back

=over 4

=item See Also

=back

=head2 TAP::Parser::Result - Base class for TAP::Parser output objects

=over 4

=item VERSION

=back

=over 4

=item SYNOPSIS

=over 4

=item DESCRIPTION

=item METHODS

=back

=back

=over 4

=item Boolean methods

C<is_plan>, C<is_pragma>, C<is_test>, C<is_comment>, C<is_bailout>,
C<is_version>, C<is_unknown>, C<is_yaml>

=back

=over 4

=item SUBCLASSING

=over 4

=item Example

=back

=item SEE ALSO

=back

=head2 TAP::Parser::Result::Bailout - Bailout result token.

=over 4

=item VERSION

=back

=over 4

=item DESCRIPTION

=item OVERRIDDEN METHODS

C<as_string>

=back

=over 4

=item Instance Methods

=back

=head2 TAP::Parser::Result::Comment - Comment result token.

=over 4

=item VERSION

=back

=over 4

=item DESCRIPTION

=item OVERRIDDEN METHODS

C<as_string>

=back

=over 4

=item Instance Methods

=back

=head2 TAP::Parser::Result::Plan - Plan result token.

=over 4

=item VERSION

=back

=over 4

=item DESCRIPTION

=item OVERRIDDEN METHODS

C<as_string>, C<raw>

=back

=over 4

=item Instance Methods

=back

=head2 TAP::Parser::Result::Pragma - TAP pragma token.

=over 4

=item VERSION

=back

=over 4

=item DESCRIPTION

=item OVERRIDDEN METHODS

C<as_string>, C<raw>

=back

=over 4
