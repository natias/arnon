Patch 7.4.1996
Problem:    Capturing the output of a command takes a few commands.
Solution:   Add evalcmd().
Files:      src/eval.c, runtime/doc/eval.txt, src/testdir/test_alot.vim,
            src/Makefile, src/testdir/test_evalcmd.vim

Patch 7.4.1997
Problem:    Cannot easily scroll the quickfix window.
Solution:   Add ":cbottom".
Files:      src/ex_cmds.h, src/quickfix.c, src/proto/quickfix.pro,
            src/ex_docmd.c, src/testdir/test_quickfix.vim,
            runtime/doc/quickfix.txt

Patch 7.4.1998
Problem:    When writing buffer lines to a job there is no NL to NUL
            conversion.
Solution:   Make it work symmetrical with writing lines from a job into a
            buffer.
Files:      src/channel.c, src/proto/channel.pro, src/netbeans.c

Patch 7.4.1999
Problem:    evalcmd() doesn't work recursively.
Solution:   Use redir_evalcmd instead of redir_vname.
Files:      src/message.c, src/eval.c, src/globals.h, src/proto/eval.pro,
            src/testdir/test_evalcmd.vim

Patch 7.4.2000 (after 7.4.1999)
Problem:    Evalcmd test fails.
Solution:   Add missing piece.
Files:      src/ex_docmd.c

Patch 7.4.2001 (after 7.4.2000)
Problem:    Tiny build fails. (Tony Mechelynck)
Solution:   Add #ifdef.
Files:      src/ex_docmd.c

Patch 7.4.2002
Problem:    Crash when passing number to filter() or map().
Solution:   Convert to a string. (Ozaki Kiichi)
Files:      src/eval.c, src/testdir/test_filter_map.vim

Patch 7.4.2003
Problem:    Still cursor flickering when a callback updates the screen. (David
            Samvelyan)
Solution:   Put the cursor in the right position after updating the screen.
Files:      src/screen.c

Patch 7.4.2004
Problem:    GUI: cursor displayed in the wrong position.
Solution:   Correct screen_cur_col and screen_cur_row.
Files:      src/screen.c

Patch 7.4.2005
Problem:    After using evalcmd() message output is in the wrong position.
            (Christian Brabandt)
Solution:   Reset msg_col.
Files:      src/eval.c

Patch 7.4.2006
Problem:    Crash when using tabnext in BufUnload autocmd. (Norio Takagi)
Solution:   First check that the current buffer is the right one. (Hirohito
            Higashi)
Files:      src/buffer.c, src/testdir/test_autocmd.vim

Patch 7.4.2007
Problem:    Running the tests leaves a viminfo file behind.
Solution:   Make the viminfo option empty.
Files:      src/testdir/runtest.vim

Patch 7.4.2008
Problem:    evalcmd() has a confusing name.
Solution:   Rename to execute().  Make silent optional.  Support a list of
            commands.
Files:      src/eval.c, src/ex_docmd.c, src/message.c, src/globals.h,
            src/proto/eval.pro, src/Makefile, src/testdir/test_evalcmd.vim,
            src/testdir/test_execute_func.vim, src/testdir/test_alot.vim,
            runtime/doc/eval.txt

Patch 7.4.2009 (after 7.4.2008)
Problem:    Messages test fails.
Solution:   Don't set redir_execute before returning.  Add missing version
            number.
Files:      src/eval.c

Patch 7.4.2010
Problem:    There is a :cbottom command but no :lbottom command.
Solution:   Add :lbottom. (Yegappan Lakshmanan)
Files:      runtime/doc/index.txt, runtime/doc/quickfix.txt, src/ex_cmds.h,
            src/quickfix.c, src/testdir/test_quickfix.vim

Patch 7.4.2011
Problem:    It is not easy to get a list of command arguments.
Solution:   Add getcompletion(). (Yegappan Lakshmanan)
Files:      runtime/doc/eval.txt, src/eval.c, src/ex_docmd.c,
            src/proto/ex_docmd.pro, src/testdir/test_cmdline.vim

Patch 7.4.2012 (after 7.4.2011)
Problem:    Test for getcompletion() does not pass on all systems.
Solution:   Only test what is supported.
Files:      src/testdir/test_cmdline.vim

Patch 7.4.2013
Problem:    Using "noinsert" in 'completeopt' breaks redo.
Solution:   Set compl_curr_match. (Shougo Matsu, closes #874)
Files:      src/edit.c, src/testdir/test_popup.vim

Patch 7.4.2014
Problem:    Using "noinsert" in 'completeopt' does not insert match.
Solution:   Set compl_enter_selects. (Shougo Matsu, closes #875)
Files:      src/edit.c, src/testdir/test_popup.vim

Patch 7.4.2015
Problem:    When a file gets a name when writing it 'acd' is not effective.
            (Dan Church)
Solution:   Invoke DO_AUTOCHDIR after writing the file. (Allen Haim, closes
            #777, closes #803)  Add test_autochdir() to enable 'acd' before
            "starting" is reset.
Files:      src/ex_cmds.c, src/buffer.c, src/eval.c, src/globals.h,
            src/Makefile, src/testdir/test_autochdir.vim,
            src/testdir/Make_all.mak

Patch 7.4.2016
Problem:    Warning from MinGW about _WIN32_WINNT redefined. (John Marriott)
Solution:   First undefine it. (Ken Takata)
Files:      src/Make_cyg_ming.mak

Patch 7.4.2017
Problem:    When there are many errors adding them to the quickfix list takes
            a long time.
Solution:   Add BLN_NOOPT.  Don't call buf_valid() in buf_copy_options().
            Remember the last file name used.  When going through the buffer
            list start from the end of the list.  Only call buf_valid() when
            autocommands were executed.
Files:      src/buffer.c, src/option.c, src/quickfix.c, src/vim.h

Patch 7.4.2018
Problem:    buf_valid() can be slow when there are many buffers.
Solution:   Add bufref_valid(), only go through the buffer list when a buffer
            was freed.
Files:      src/structs.h, src/buffer.c, src/quickfix.c, src/proto/buffer.pro

Patch 7.4.2019
Problem:    When ignoring case utf_fold() may consume a lot of time.
Solution:   Optimize for ASCII.
Files:      src/mbyte.c

Patch 7.4.2020
Problem:    Can't build without +autocmd feature.
Solution:   Adjust #ifdefs.
Files:      src/buffer.c

Patch 7.4.2021
Problem:    Still too many buf_valid() calls.
Solution:   Make au_new_curbuf a bufref.  Use bufref_valid() in more places.
Files:      src/ex_cmds.c, src/buffer.c, src/globals.h

Patch 7.4.2022
Problem:    Warnings from 64 bit compiler.
Solution:   Add type casts. (Mike Williams)
Files:      src/eval.c

Patch 7.4.2023
Problem:    buflist_findname_stat() may find a dummy buffer.
Solution:   Set the BF_DUMMY flag after loading a dummy buffer.  Start
            finding buffers from the end of the list.
Files:      src/quickfix.c, src/buffer.c

Patch 7.4.2024
Problem:    More buf_valid() calls can be optimized.
Solution:   Use bufref_valid() instead.
Files:      src/buffer.c, src/ex_cmds.c, src/structs.h, src/channel.c,
            src/diff.c, src/eval.c, src/ex_cmds2.c, src/ex_docmd.c,
            src/ex_getln.c, src/fileio.c, src/main.c, src/misc2.c,
            src/netbeans.c, src/quickfix.c, src/spell.c, src/term.c,
            src/if_py_both.h, src/window.c, src/proto/buffer.pro,
            src/proto/window.pro

Patch 7.4.2025
Problem:    The cursor blinking stops or is irregular when receiving date over
            a channel and writing it in a buffer, and when updating the status
            line. (Ramel Eshed)
Solution:   Make it a bit better by flushing GUI output.  Don't redraw the
            cursor after updating the screen if the blink state is off.
Files:      src/gui_gtk_x11.c, src/screen.c

Patch 7.4.2026
Problem:    Reference counting for callbacks isn't right.
Solution:   Add free_callback(). (Ken Takata)  Fix reference count.
Files:      src/channel.c, src/eval.c, src/ex_cmds2.c, src/proto/eval.pro

Patch 7.4.2027
Problem:    Can't build with +eval but without +menu.
Solution:   Add #ifdef. (John Marriott)
Files:      src/eval.c

Patch 7.4.2028
Problem:    cppcheck warns for using index before limits check.
Solution:   Swap the expressions. (Dominique Pelle)
Files:      src/mbyte.c

Patch 7.4.2029
Problem:    printf() does not work with 64 bit numbers.
Solution:   use the "L" length modifier. (Ken Takata)
Files:      src/message.c, src/testdir/test_expr.vim

Patch 7.4.2030
Problem:    ARCH must be set properly when using MinGW.
Solution:   Detect the default value of ARCH from the current compiler. (Ken
            Takata)
Files:      src/Make_cyg_ming.mak

Patch 7.4.2031
Problem:    The list_lbr_utf8 test fails if ~/.vim/syntax/c.vim sets
            'textwidth' to a non-zero value. (Oyvind A. Holm)
Solution:   Add a setup.vim file that sets 'runtimepath' and $HOME to a safe
            value. (partly by Christian Brabandt, closes #912)
Files:      src/testdir/setup.vim, src/testdir/amiga.vim, src/testdir/dos.vim,
            src/testdir/unix.vim, src/testdir/vms.vim, src/testdir/runtest.vim

Patch 7.4.2032 (after 7.4.2030)
Problem:    Build fails with 64 bit MinGW. (Axel Bender)
Solution:   Handle dash vs. underscore. (Ken Takata, Hirohito Higashi)
Files:      src/Make_cyg_ming.mak

Patch 7.4.2033
Problem:    'cscopequickfix' option does not accept new value "a".
Solution:   Adjust list of command characters. (Ken Takata)
Files:      src/option.h, src/Makefile, src/testdir/test_cscope.vim,
            src/testdir/Make_all.mak

Patch 7.4.2034 (after 7.4.2032)
Problem:    Build fails with some version of MinGW. (illusorypan)
Solution:   Recognize mingw32. (Ken Takata, closes #921)
Files:      src/Make_cyg_ming.mak

Patch 7.4.2035
Problem:    On Solaris with ZFS the ACL may get removed.
Solution:   Always restore the ACL for Solaris ZFS. (Danek Duvall)
Files:      src/fileio.c

Patch 7.4.2036
Problem:    Looking up a buffer by number is slow if there are many.
Solution:   Use a hashtab.
Files:      src/structs.h, src/buffer.c

Patch 7.4.2037 (after 7.4.2036)
Problem:    Small build fails.
Solution:   Adjust #ifdefs.
Files:      src/hashtab.c

Patch 7.4.2038 (after 7.4.2036)
Problem:    Small build still fails.
Solution:   Adjust more #ifdefs.
Files:      src/globals.h, src/buffer.c

Patch 7.4.2039
Problem:    The Netbeans integration is not tested.
Solution:   Add a first Netbeans test.
Files:      src/testdir/test_netbeans.vim, src/testdir/test_netbeans.py,
            src/testdir/Make_all.mak, src/Makefile,
            src/testdir/test_channel.vim, src/testdir/shared.vim

Patch 7.4.2040
Problem:    New files missing from distribution.
Solution:   Add new test scripts.
Files:      Filelist

Patch 7.4.2041
Problem:    Netbeans file authentication not tested.
Solution:   Add a test.
Files:      src/testdir/test_netbeans.vim

Patch 7.4.2042
Problem:    GTK: display updating is not done properly and can be slow.
Solution:   Use gdk_display_flush() instead of gdk_display_sync(). Don't call
            gdk_window_process_updates().  (Kazunobu Kuriyama)
Files:      src/gui_gtk_x11.c

Patch 7.4.2043
Problem:    setbuvfar() causes a screen redraw.
Solution:   Only use aucmd_prepbuf() for options.
Files:      src/eval.c

Patch 7.4.2044
Problem:    filter() and map() either require a string or defining a function.
Solution:   Support lambda, a short way to define a function that evaluates an
            expression. (Yasuhiro Matsumoto, Ken Takata)
Files:      runtime/doc/eval.txt, src/eval.c, src/testdir/test_alot.vim,
            src/Makefile, src/testdir/test_channel.vim,
            src/testdir/test_lambda.vim

Patch 7.4.2045
Problem:    Memory leak when using a function callback.
Solution:   Don't save the function name when it's in the partial.
Files:      src/channel.c

Patch 7.4.2046
Problem:    The qf_init_ext() function is too big.
Solution:   Refactor it. (Yegappan Lakshmanan)
Files:      src/quickfix.c

Patch 7.4.2047
Problem:    Compiler warning for initializing a struct.
Solution:   Initialize in another way. (Anton Lindqvist)
Files:      src/quickfix.c

Patch 7.4.2048
Problem:    There is still code and help for unsupported systems.
Solution:   Remove the code and text. (Hirohito Higashi)
Files:      runtime/doc/eval.txt, runtime/lang/menu_sk_sk.vim,
            runtime/menu.vim, runtime/optwin.vim, src/Make_bc5.mak,
            src/ex_docmd.c, src/feature.h, src/fileio.c, src/globals.h,
            src/main.c, src/memfile.c, src/memline.c, src/misc1.c,
            src/misc2.c, src/option.c, src/option.h, src/os_unix.c,
            src/os_unix.h, src/proto.h, src/term.c, src/undo.c, src/version.c,
            src/vim.h, src/xxd/xxd.c

Patch 7.4.2049
Problem:    There is no way to get a list of the error lists.
Solution:   Add ":chistory" and ":lhistory".
Files:      src/ex_cmds.h, src/quickfix.c, src/ex_docmd.c, src/message.c,
            src/proto/quickfix.pro, src/testdir/test_quickfix.vim

Patch 7.4.2050
Problem:    When using ":vimgrep" may end up with duplicate buffers.
Solution:   When adding an error list entry pass the buffer number if possible.
Files:      src/quickfix.c, src/testdir/test_quickfix.vim

Patch 7.4.2051
Problem:    No proper testing of trunc_string().
Solution:   Add a unittest for message.c.
Files:      src/Makefile, src/message.c, src/message_test.c, src/main.c,
            src/proto/main.pro, src/structs.h

Patch 7.4.2052
Problem:    Coverage report is messed up by the unittests.
Solution:   Add a separate test target for script tests.  Use that when
            collecting coverage information.
Files:      src/Makefile

Patch 7.4.2053
Problem:    Can't run scripttests in the top directory.
Solution:   Add targets to the top Makefile.
Files:      Makefile

Patch 7.4.2054 (after 7.4.2048)
Problem:    Wrong part of #ifdef removed.
Solution:   Use the right part. (Hirohito Higashi)
Files:      src/os_unix.c

Patch 7.4.2055
Problem:    eval.c is too big
Solution:   Move Dictionary functions to dict.c
Files:      src/eval.c, src/dict.c, src/vim.h, src/globals.h,
            src/proto/eval.pro, src/proto/dict.pro, src/Makefile, Filelist

Patch 7.4.2056 (after 7.4.2055)
Problem:    Build fails.
Solution:   Add missing changes.
Files:      src/proto.h

Patch 7.4.2057
Problem:    eval.c is too big.
Solution:   Move List functions to list.c
Files:      src/eval.c, src/dict.c, src/list.c, src/proto.h, src/Makefile,
            src/globals.h, src/proto/eval.pro, src/proto/list.pro, Filelist

Patch 7.4.2058
Problem:    eval.c is too big.
Solution:   Move user functions to userfunc.c
Files:      src/userfunc.c, src/eval.c, src/vim.h, src/globals.h,
            src/structs.h, src/proto.h, src/Makefile, src/proto/eval.pro,
            src/proto/userfunc.pro, Filelist

Patch 7.4.2059
Problem:    Non-Unix builds fail.
Solution:   Update Makefiles for new files.
Files:      src/Make_bc5.mak, src/Make_cyg_ming.mak, src/Make_dice.mak,
            src/Make_ivc.mak, src/Make_manx.mak, src/Make_morph.mak,
            src/Make_mvc.mak, src/Make_sas.mak

Patch 7.4.2060 (after 7.4.2059)
Problem:    Wrong file name.
Solution:   Fix typo.
Files:      src/Make_mvc.mak

Patch 7.4.2061
Problem:    qf_init_ext() is too big.
Solution:   Move code to qf_parse_line() (Yegappan Lakshmanan)
Files:      src/quickfix.c, src/testdir/test_quickfix.vim

Patch 7.4.2062
Problem:    Using dummy variable to compute struct member offset.
Solution:   Use offsetof().
Files:      src/globals.h, src/macros.h, src/vim.h, src/spell.c

Patch 7.4.2063
Problem:    eval.c is still too big.
Solution:   Split off internal functions to evalfunc.c.
Files:      src/eval.c, src/evalfunc.c, src/list.c, src/proto.h,
            src/globals.h, src/vim.h, src/proto/eval.pro,
            src/proto/evalfunc.pro, src/proto/list.pro, src/Makefile, Filelist,
            src/Make_bc5.mak, src/Make_cyg_ming.mak, src/Make_dice.mak,
            src/Make_ivc.mak, src/Make_manx.mak, src/Make_morph.mak,
            src/Make_mvc.mak, src/Make_sas.mak

Patch 7.4.2064
Problem:    Coverity warns for possible buffer overflow.
Solution:   Use vim_strcat() instead of strcat().
Files:      src/quickfix.c

Patch 7.4.2065
Problem:    Compiler warns for uninitialized variable. (John Marriott)
Solution:   Set lnum to the right value.
Files:      src/evalfunc.c

Patch 7.4.2066
Problem:    getcompletion() not well tested.
Solution:   Add more testing.
Files:      src/testdir/test_cmdline.vim

Patch 7.4.2067
Problem:    Compiler warning for char/char_u conversion. (Tony Mechelynck)
            Inefficient code.
Solution:   Use more lines to fill with spaces. (Nikolai Pavlov) Add type cast.
Files:      src/quickfix.c

Patch 7.4.2068
Problem:    Not all arguments of trunc_string() are tested.  Memory access
            error when running the message tests.
Solution:   Add another test case. (Yegappan Lakshmanan)  Make it easy to run
            unittests with valgrind.  Fix the access error.
Files:      src/message.c, src/message_test.c, src/Makefile

Patch 7.4.2069
Problem:    spell.c is too big.
Solution:   Split it in spell file handling and spell checking.
Files:      src/spell.c, src/spellfile.c, src/spell.h, src/Makefile,
            src/proto/spell.pro, src/proto/spellfile.pro, src/proto.h
            Filelist, src/Make_bc5.mak, src/Make_cyg_ming.mak,
            src/Make_dice.mak, src/Make_ivc.mak, src/Make_manx.mak,
            src/Make_morph.mak, src/Make_mvc.mak, src/Make_sas.mak

Patch 7.4.2070 (after 7.4.2069)
Problem:    Missing change to include file.
Solution:   Include the spell header file.
Files:      src/vim.h

Patch 7.4.2071
Problem:    The return value of type() is difficult to use.
Solution:   Define v:t_ constants. (Ken Takata)
Files:      runtime/doc/eval.txt, src/eval.c, src/evalfunc.c,
            src/testdir/test_channel.vim, src/testdir/test_viml.vim, src/vim.h

Patch 7.4.2072
Problem:    substitute() does not support a Funcref argument.
Solution:   Support a Funcref like it supports  a string starting with "\=".
Files:      src/evalfunc.c, src/regexp.c, src/eval.c, src/proto/eval.pro,
            src/proto/regexp.pro, src/testdir/test_expr.vim

Patch 7.4.2073
Problem:    rgb.txt is read for every color name.
Solution:   Load rgb.txt once. (Christian Brabandt)  Add a test.
Files:      runtime/rgb.txt, src/term.c, src/testdir/test_syn_attr.vim

Patch 7.4.2074
Problem:    One more place using a dummy variable.
Solution:   Use offsetof(). (Ken Takata)
Files:      src/userfunc.c

Patch 7.4.2075
Problem:    No autocommand event to initialize a window or tab page.
Solution:   Add WinNew and TabNew events. (partly by Felipe Morales)
Files:      src/fileio.c, src/window.c, src/vim.h,
            src/testdir/test_autocmd.vim, runtime/doc/autocmd.txt

Patch 7.4.2076
Problem:    Syntax error when dict has '>' key.
Solution:   Check for endchar. (Ken Takata)
Files:      src/userfunc.c, src/testdir/test_lambda.vim

Patch 7.4.2077
Problem:    Cannot update 'tabline' when a tab was closed.
Solution:   Add the TabClosed autocmd event. (partly by Felipe Morales)
Files:      src/fileio.c, src/window.c, src/vim.h,
            src/testdir/test_autocmd.vim, runtime/doc/autocmd.txt

Patch 7.4.2078
Problem:    Running checks in po directory fails.
Solution:   Add colors used in syntax.c to the builtin color table.
Files:      src/term.c

Patch 7.4.2079
Problem:    Netbeans test fails on non-Unix systems.
Solution:   Only do the permission check on Unix systems.
Files:      src/testdir/test_netbeans.vim

Patch 7.4.2080
Problem:    When using PERROR() on some systems assert_fails() does not see
            the error.
Solution:   Make PERROR() always report the error.
Files:      src/vim.h, src/message.c, src/proto/message.pro

Patch 7.4.2081
Problem:    Line numbers in the error list are not always adjusted.
Solution:   Set b_has_qf_entry properly. (Yegappan Lakshmanan)
Files:      src/quickfix.c, src/structs.h, src/testdir/test_quickfix.vim

Patch 7.4.2082
Problem:    Not much test coverage for digraphs.
Solution:   Add a new style digraph test. (Christian Brabandt)
Files:      src/Makefile, src/testdir/test_alot.vim,
            src/testdir/test_digraph.vim

Patch 7.4.2083
Problem:    Coverity complains about not restoring a value.
Solution:   Restore the value, although it's not really needed.  Change return
            to jump to cleanup, might leak memory.
Files:      src/userfunc.c

Patch 7.4.2084
Problem:    New digraph test makes testing hang.
Solution:   Don't set "nocp".
Files:      src/testdir/test_digraph.vim

Patch 7.4.2085
Problem:    Digraph tests fails on some systems.
Solution:   Run it separately and set 'encoding' early.
Files:      src/testdir/Make_all.mak, src/testdir/test_alot.vim,
            src/testdir/test_digraph.vim

Patch 7.4.2086
Problem:    Using the system default encoding makes tests unpredictable.
Solution:   Always use utf-8 or latin1 in the new style tests.  Remove setting
            encoding and scriptencoding where it is not needed.
Files:      src/testdir/runtest.vim, src/testdir/test_channel.vim,
            src/testdir/test_digraph.vim, src/testdir/test_expand_dllpath.vim,
            src/testdir/test_expr_utf8.vim, src/testdir/test_json.vim,
            src/testdir/test_matchadd_conceal_utf8.vim,
            src/testdir/test_regexp_utf8.vim, src/testdir/test_visual.vim,
            src/testdir/test_alot_utf8.vim,

Patch 7.4.2087
Problem:    Digraph code test coverage is still low.
Solution:   Add more tests. (Christian Brabandt)
Files:      src/testdir/test_digraph.vim

Patch 7.4.2088 (after 7.4.2087)
Problem:    Keymap test fails with normal features.
Solution:   Bail out if the keymap feature is not supported.
Files:      src/testdir/test_digraph.vim

Patch 7.4.2089
Problem:    Color handling of X11 GUIs is too complicated.
Solution:   Simplify the code.  Use RGBA where appropriate. (Kazunobu
            Kuriyama)
Files:      src/gui.h, src/gui_beval.c, src/gui_gtk_x11.c, src/netbeans.c

Patch 7.4.2090
Problem:    Using submatch() in a lambda passed to substitute() is verbose.
Solution:   Use a static list and pass it as an optional argument to the
            function.  Fix memory leak.
Files:      src/structs.h, src/list.c, src/userfunc.c, src/channel.c,
            src/eval.c, src/evalfunc.c, src/ex_cmds2.c, src/regexp.c,
            src/proto/list.pro, src/proto/userfunc.pro,
            src/testdir/test_expr.vim, runtime/doc/eval.txt

Patch 7.4.2091
Problem:    Coverity reports a resource leak when out of memory.
Solution:   Close the file before returning.
Files:      src/term.c

Patch 7.4.2092
Problem:    GTK 3 build fails with older GTK version.
Solution:   Check the pango version. (Kazunobu Kuriyama)
Files:      src/gui_beval.c

Patch 7.4.2093
Problem:    Netbeans test fails once in a while.  Leaving log file behind.
Solution:   Add it to the list of flaky tests.  Disable logfile.
Files:      src/testdir/runtest.vim, src/testdir/test_channel.vim

Patch 7.4.2094
Problem:    The color allocation in X11 is overly complicated.
Solution:   Remove find_closest_color(), XAllocColor() already does this.
            (Kazunobu Kuriyama)
Files:      src/gui_x11.c

Patch 7.4.2095
Problem:    Man test fails when run with the GUI.
Solution:   Adjust for different behavior of GUI.  Add assert_inrange().
Files:      src/eval.c, src/evalfunc.c, src/proto/eval.pro,
            src/testdir/test_assert.vim, src/testdir/test_man.vim,
            runtime/doc/eval.txt

Patch 7.4.2096
Problem:    Lambda functions show up with completion.
Solution:   Don't show lambda functions. (Ken Takata)
Files:      src/userfunc.c, src/testdir/test_cmdline.vim

Patch 7.4.2097
Problem:    Warning from 64 bit compiler.
Solution:   use size_t instead of int. (Mike Williams)
Files:      src/message.c

Patch 7.4.2098
Problem:    Text object tests are old style.
Solution:   Turn them into new style tests. (James McCoy, closes #941)
Files:      src/testdir/Make_all.mak, src/testdir/test_textobjects.in,
            src/testdir/test_textobjects.ok, src/testdir/test_textobjects.vim,
            src/Makefile

Patch 7.4.2099
Problem:    When a keymap is active only "(lang)" is displayed. (Ilya
            Dogolazky)
Solution:   Show the keymap name. (Dmitri Vereshchagin, closes #933)
Files:      src/buffer.c, src/proto/screen.pro, src/screen.c

Patch 7.4.2100
Problem:    "cgn" and "dgn" do not work correctly with a single character
            match and the replacement includes the searched pattern. (John
            Beckett)
Solution:   If the match is found in the wrong column try in the next column.
            Turn the test into new style. (Christian Brabandt)
Files:      src/search.c, src/testdir/Make_all.mak, src/Makefile,
            src/testdir/test53.in, src/testdir/test53.ok,
            src/testdir/test_gn.vim

Patch 7.4.2101
Problem:    Looping over windows, buffers and tab pages is inconsistent.
Solution:   Use FOR_ALL_ macros everywhere. (Yegappan Lakshmanan)
Files:      src/buffer.c, src/diff.c, src/edit.c, src/eval.c, src/evalfunc.c,
            src/ex_cmds.c, src/ex_cmds2.c, src/ex_docmd.c, src/fileio.c,
            src/globals.h, src/gui.c, src/gui_mac.c, src/if_lua.c,
            src/if_mzsch.c, src/if_perl.xs, src/if_ruby.c, src/if_tcl.c,
            src/main.c, src/mark.c, src/memfile.c, src/memline.c, src/misc1.c,
            src/move.c, src/netbeans.c, src/normal.c, src/option.c,
            src/quickfix.c, src/screen.c, src/spell.c, src/term.c,
            src/window.c, src/workshop.c

Patch 7.4.2102 (after 7.4.2101)
Problem:    Tiny build with GUI fails.
Solution:   Revert one FOR_ALL_ change.
Files:      src/gui.c

Patch 7.4.2103
Problem:    Can't have "augroup END" right after ":au!".
Solution:   Check for the bar character before the command argument.
Files:      src/fileio.c, src/testdir/test_autocmd.vim,
            runtime/doc/autocmd.txt

Patch 7.4.2104
Problem:    Code duplication when unreferencing a function.
Solution:   De-duplicate.
Files:      src/userfunc.c

Patch 7.4.2105
Problem:    Configure reports default features to be "normal" while it is
            "huge".
Solution:   Change the default text.  Build with newer autoconf.
Files:      src/configure.in, src/auto/configure

Patch 7.4.2106
Problem:    Clang warns about missing field in initializer.
Solution:   Define COMMA and use it.  (Kazunobu Kuriyama)
Files:      src/ex_cmds.c, src/globals.h, src/vim.h

Patch 7.4.2107 (after 7.4.2106)
Problem:    Misplaced equal sign.
Solution:   Remove it.
Files:      src/globals.h

Patch 7.4.2108
Problem:    Netbeans test is flaky.
Solution:   Wait for the cursor to be positioned.
Files:      src/testdir/test_netbeans.vim

Patch 7.4.2109
Problem:    Setting 'display' to "lastline" is a drastic change, while
            omitting it results in lots of "@" lines.
Solution:   Add "truncate" to show "@@@" for a truncated line.
Files:      src/option.h, src/screen.c, runtime/doc/options.txt

Patch 7.4.2110
Problem:    When there is an CmdUndefined autocmd then the error for a missing
            command is E464 instead of E492. (Manuel Ortega)
Solution:   Don't let the pointer be NULL.
Files:      src/ex_docmd.c, src/testdir/test_usercommands.vim

Patch 7.4.2111
Problem:    Defaults are very conservative.
Solution:   Move settings from vimrc_example.vim to defaults.vim.  Load
            defaults.vim if no .vimrc was found.
Files:      src/main.c, src/version.c, src/os_amiga.h, src/os_dos.h,
            src/os_mac.h, src/os_unix.h, src/feature.h, src/Makefile,
            runtime/vimrc_example.vim, runtime/defaults.vim,
            runtime/evim.vim, Filelist, runtime/doc/starting.txt

Patch 7.4.2112
Problem:    getcompletion(.., 'dir') returns a match with trailing "*" when
            there are no matches. (Chdiza)
Solution:   Return an empty list when there are no matches.  Add a trailing
            slash to directories. (Yegappan Lakshmanan)  Add tests for no
            matches. (closes #947)
Files:      src/evalfunc.c, src/testdir/test_cmdline.vim

Patch 7.4.2113
Problem:    Test for undo is flaky.
Solution:   Turn it into a new style test.  Use test_settime() to avoid
            flakiness.
Files:      src/Makefile, src/undo.c, src/testdir/test61.in,
            src/testdir/test61.ok, src/testdir/test_undo.vim,
            src/testdir/test_undolevels.vim, src/testdir/Make_all.mak,
            src/testdir/test_alot.vim

Patch 7.4.2114
Problem:    Tiny build fails.
Solution:   Always include vim_time().
Files:      src/ex_cmds.c

Patch 7.4.2115
Problem:    Loading defaults.vim with -C argument.
Solution:   Don't load the defaults script with -C argument.  Test sourcing
            the defaults script.  Set 'display' to "truncate".
Files:      src/main.c, src/Makefile, runtime/defaults.vim,
            src/testdir/test_startup.vim, src/testdir/Make_all.mak

Patch 7.4.2116
Problem:    The default vimrc for Windows is very conservative.
Solution:   Use the defaults.vim in the Windows installer.
Files:      src/dosinst.c

Patch 7.4.2117
Problem:    Deleting an augroup that still has autocmds does not give a
            warning.  The next defined augroup takes its place.
Solution:   Give a warning and prevent the index being used for another group
            name.
Files:      src/fileio.c, src/testdir/test_autocmd.vim

Patch 7.4.2118
Problem:    Mac: can't build with tiny features.
Solution:   Don't define FEAT_CLIPBOARD unconditionally. (Kazunobu Kuriyama)
Files:      src/vim.h

Patch 7.4.2119
Problem:    Closures are not supported.
Solution:   Capture variables in lambdas from the outer scope. (Yasuhiro
            Matsumoto, Ken Takata)
Files:      runtime/doc/eval.txt, src/eval.c, src/ex_cmds2.c, src/globals.h,
            src/proto/eval.pro, src/proto/userfunc.pro,
            src/testdir/test_lambda.vim, src/userfunc.c

Patch 7.4.2120
Problem:    User defined functions can't be a closure.
Solution:   Add the "closure" argument. Allow using :unlet on a bound
            variable. (Yasuhiro Matsumoto, Ken Takata)
Files:      runtime/doc/eval.txt, src/testdir/test_lambda.vim, src/userfunc.c,
            src/eval.c src/proto/userfunc.pro

Patch 7.4.2121
Problem:    No easy way to check if lambda and closure are supported.
Solution:   Add the +lambda feature.
Files:      src/evalfunc.c, src/version.c, src/testdir/test_lambda.vim

Patch 7.4.2122 (after 7.4.2118)
Problem:    Mac: don't get +clipboard in huge build.
Solution:   Move #define down below including feature.h
Files:      src/vim.h

Patch 7.4.2123
Problem:    No new style test for diff mode.
Solution:   Add a test.  Check that folds are in sync.
Files:      src/Makefile, src/testdir/test_diffmode.vim,
            src/testdir/Make_all.mak, src/testdir/test47.in,
            src/testdir/test47.ok

Patch 7.4.2124
Problem:    diffmode test leaves files behind, breaking another test.
Solution:   Delete the files.
Files:      src/testdir/test_diffmode.vim

Patch 7.4.2125
Problem:    Compiler warning for loss of data.
Solution:   Add a type cast. (Christian Brabandt)
Files:      src/message.c

Patch 7.4.2126
Problem:    No tests for :diffget and :diffput
Solution:   Add tests.
Files:      src/testdir/test_diffmode.vim

Patch 7.4.2127
Problem:    The short form of ":noswapfile" is ":noswap" instead of ":nos".
            (Kent Sibilev)
Solution:   Only require three characters.  Add a test for the short forms.
Files:      src/ex_docmd.c, src/testdir/test_usercommands.vim

Patch 7.4.2128
Problem:    Memory leak when saving for undo fails.
Solution:   Free allocated memory. (Hirohito Higashi)
Files:      src/ex_cmds.c

Patch 7.4.2129
Problem:    Memory leak when using timer_start(). (Dominique Pelle)
Solution:   Don't copy the callback when using a partial.
Files:      src/evalfunc.c

Patch 7.4.2130
Problem:    Pending timers cause false memory leak reports.
Solution:   Free all timers on exit.
Files:      src/ex_cmds2.c, src/proto/ex_cmds2.pro, src/misc2.c

Patch 7.4.2131
Problem:    More memory leaks when using partial, e.g. for "exit-cb".
Solution:   Don't copy the callback when using a partial.
Files:      src/channel.c

Patch 7.4.2132
Problem:    test_partial has memory leaks reported.
Solution:   Add a note about why this happens.
Files:      src/testdir/test_partial.vim

Patch 7.4.2133 (after 7.4.2128)
Problem:    Can't build with tiny features.
Solution:   Add #ifdef.
Files:      src/ex_cmds.c

Patch 7.4.2134
Problem:    No error for using function() badly.
Solution:   Check for passing wrong function name. (Ken Takata)
Files:      src/eval.c, src/evalfunc.c, src/proto/userfunc.pro,
            src/testdir/test_expr.vim, src/userfunc.c, src/vim.h

Patch 7.4.2135
Problem:    Various tiny issues.
Solution:   Update comments, white space, etc.
Files:      src/diff.c, src/digraph.c, src/testdir/test80.in,
            src/testdir/test_channel.vim, src/testdir/Makefile,
            runtime/menu.vim, src/INSTALLpc.txt, src/xpm/README.txt

Patch 7.4.2136
Problem:    Closure function fails.
Solution:   Don't reset uf_scoped when it points to another funccal.
Files:      src/userfunc.c, src/testdir/test_lambda.vim

Patch 7.4.2137
Problem:    Using function() with a name will find another function when it is
            redefined.
Solution:   Add funcref().  Refer to lambda using a partial.  Fix several
            reference counting issues.
Files:      src/vim.h, src/structs.h, src/userfunc.c, src/eval.c,
            src/evalfunc.c, src/channel.c, src/proto/eval.pro,
            src/proto/userfunc.pro, src/if_mzsch.c, src/regexp.c, src/misc2.c,
            src/if_py_both.h, src/testdir/test_expr.vim, runtime/doc/eval.txt

Patch 7.4.2138
Problem:    Test 86 and 87 fail.
Solution:   Call func_ref() also for regular functions.
Files:      src/if_py_both.h

Patch 7.4.2139
Problem:    :delfunction causes illegal memory access.
Solution:   Correct logic when deciding to free a function.
Files:      src/userfunc.c, src/testdir/test_lambda.vim

Patch 7.4.2140
Problem:    Tiny build fails.
Solution:   Add dummy typedefs.
Files:      src/structs.h

Patch 7.4.2141
Problem:    Coverity reports bogus NULL check.
Solution:   When checking for a variable in the funccal scope don't pass the
            varname.
Files:      src/userfunc.c, src/proto/userfunc.pro, src/eval.c

Patch 7.4.2142
Problem:    Leaking memory when redefining a function.
Solution:   Don't increment the function reference count when it's found by
            name. Don't remove the wrong function from the hashtab.  More
            reference counting fixes.
Files:      src/structs.h, src/userfunc.c

Patch 7.4.2143
Problem:    A funccal is garbage collected while it can still be used.
Solution:   Set copyID in all referenced functions.  Do not list lambda
            functions with ":function".
Files:      src/userfunc.c, src/proto/userfunc.pro, src/eval.c,
            src/testdir/test_lambda.vim

Patch 7.4.2144
Problem:    On MS-Windows quickfix does not handle a line with 1023 bytes
            ending in CR-LF properly.
Solution:   Don't consider CR a line break. (Ken Takata)
Files:      src/quickfix.c

Patch 7.4.2145
Problem:    Win32: Using CreateThread/ExitThread is not safe.
Solution:   Use _beginthreadex and return from the thread. (Ken Takata)
Files:      src/os_win32.c

Patch 7.4.2146
Problem:    Not enough testing for popup menu.  CTRL-E does not always work
            properly.
Solution:   Add more tests.  When using CTRL-E check if the popup menu is
            visible. (Christian Brabandt)
Files:      src/edit.c, src/testdir/test_popup.vim

Patch 7.4.2147 (after 7.4.2146)
Problem:    test_alot fails.
Solution:   Close window.
Files:      src/testdir/test_popup.vim

Patch 7.4.2148
Problem:    Not much testing for cscope.
Solution:   Add a test that uses the cscope program. (Christian Brabandt)
Files:      src/testdir/test_cscope.vim

Patch 7.4.2149
Problem:    If a test leaves a window open a following test may fail.
Solution:   Always close extra windows after running a test.
Files:      src/testdir/runtest.vim, src/testdir/test_popup.vim

Patch 7.4.2150
Problem:    Warning with MinGW 64. (John Marriott)
Solution:   Change return type. (Ken Takata)
Files:      src/os_win32.c

Patch 7.4.2151
Problem:    Quickfix test fails on MS-Windows.
Solution:   Close the help window. (Christian Brabandt)
Files:      src/testdir/test_quickfix.vim

Patch 7.4.2152
Problem:    No proper translation of messages with a count.
Solution:   Use ngettext(). (Sergey Alyoshin)
Files:      src/evalfunc.c, src/fold.c, src/os_win32.c, src/screen.c, src/vim.h

Patch 7.4.2153
Problem:    GUI test isn't testing much.
Solution:   Turn into a new style test.  Execute a shell command.
Files:      src/testdir/test_gui.vim, src/testdir/test16.in,
            src/testdir/test16.ok, src/testdir/Make_all.mak, src/Makefile,
            src/testdir/Make_vms.mms

Patch 7.4.2154
Problem:    Test_communicate() fails sometimes.
Solution:   Add it to the flaky tests.
Files:      src/testdir/runtest.vim

Patch 7.4.2155
Problem:    Quotes make GUI test fail on MS-Windows.
Solution:   Remove quotes, strip white space.
Files:      src/testdir/test_gui.vim

Patch 7.4.2156
Problem:    Compiler warning.
Solution:   Add type cast. (Ken Takata, Mike Williams)
Files:      src/os_win32.c

Patch 7.4.2157
Problem:    Test_job_start_fails() is expected to report memory leaks, making
            it hard to see other leaks in test_partial.
Solution:   Move Test_job_start_fails() to a separate test file.
Files:      src/testdir/test_partial.vim, src/testdir/test_job_fails.vim,
            src/Makefile, src/testdir/Make_all.mak

Patch 7.4.2158
Problem:    Result of getcompletion('', 'cscope') depends on previous
            completion. (Christian Brabandt)
Solution:   Call set_context_in_cscope_cmd().
Files:      src/evalfunc.c, src/testdir/test_cmdline.vim

Patch 7.4.2159
Problem:    Insufficient testing for cscope.
Solution:   Add more tests. (Dominique Pelle)
Files:      src/testdir/test_cscope.vim

Patch 7.4.2160
Problem:    setmatches() mixes up values. (Nikolai Pavlov)
Solution:   Save the string instead of reusing a shared buffer.
Files:      src/dict.c, src/evalfunc.c, src/testdir/test_expr.vim,

Patch 7.4.2161 (after 7.4.2160)
Problem:    Expression test fails without conceal feature.
Solution:   Only check "conceal" with the conceal feature.
Files:      src/testdir/test_expr.vim

Patch 7.4.2162
Problem:    Result of getcompletion('', 'sign') depends on previous
            completion.
Solution:   Call set_context_in_sign_cmd(). (Dominique Pelle)
Files:      src/evalfunc.c, src/testdir/test_cmdline.vim

Patch 7.4.2163
Problem:    match() and related functions tested with old style test.
Solution:   Convert to new style test. (Hirohito Higashi)
Files:      src/Makefile, src/testdir/Make_all.mak, src/testdir/test63.in,
            src/testdir/test63.ok, src/testdir/test_alot.vim,
            src/testdir/test_match.vim, src/testdir/test_matchstrpos.vim
