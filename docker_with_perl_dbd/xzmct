	0xD4CC,
	0xD4CD,
	0xD4E8,
	0xD4E9,
	0xD504,
	0xD505,
	0xD520,
	0xD521,
	0xD53C,
	0xD53D,
	0xD558,
	0xD559,
	0xD574,
	0xD575,
	0xD590,
	0xD591,
	0xD5AC,
	0xD5AD,
	0xD5C8,
	0xD5C9,
	0xD5E4,
	0xD5E5,
	0xD600,
	0xD601,
	0xD61C,
	0xD61D,
	0xD638,
	0xD639,
	0xD654,
	0xD655,
	0xD670,
	0xD671,
	0xD68C,
	0xD68D,
	0xD6A8,
	0xD6A9,
	0xD6C4,
	0xD6C5,
	0xD6E0,
	0xD6E1,
	0xD6FC,
	0xD6FD,
	0xD718,
	0xD719,
	0xD734,
	0xD735,
	0xD750,
	0xD751,
	0xD76C,
	0xD76D,
	0xD788,
	0xD789,
	0xD7A4,
	0xD7B0,
	0xD7C7,
	0xD7CB,
	0xD7FC,
	0xF900,
	0xFB00,
	0xFB1D,
	0xFB1E,
	0xFB1F,
	0xFB29,
	0xFB2A,
	0xFB37,
	0xFB38,
	0xFB3D,
	0xFB3E,
	0xFB3F,
	0xFB40,
	0xFB42,
	0xFB43,
	0xFB45,
	0xFB46,
	0xFB50,
	0xFD3E,
	0xFD3F,
	0xFD40,
	0xFDFC,
	0xFDFD,
	0xFE00,
	0xFE10,
	0xFE11,
	0xFE13,
	0xFE15,
	0xFE17,
	0xFE18,
	0xFE19,
	0xFE1A,
	0xFE20,
	0xFE30,
	0xFE35,
	0xFE36,
	0xFE37,
	0xFE38,
	0xFE39,
	0xFE3A,
	0xFE3B,
	0xFE3C,
	0xFE3D,
	0xFE3E,
	0xFE3F,
	0xFE40,
	0xFE41,
	0xFE42,
	0xFE43,
	0xFE44,
	0xFE45,
	0xFE47,
	0xFE48,
	0xFE49,
	0xFE50,
	0xFE51,
	0xFE52,
	0xFE53,
	0xFE54,
	0xFE56,
	0xFE58,
	0xFE59,
	0xFE5A,
	0xFE5B,
	0xFE5C,
	0xFE5D,
	0xFE5E,
	0xFE5F,
	0xFE67,
	0xFE68,
	0xFE69,
	0xFE6A,
	0xFE6B,
	0xFE6C,
	0xFEFF,
	0xFF00,
	0xFF01,
	0xFF02,
	0xFF04,
	0xFF05,
	0xFF06,
	0xFF08,
	0xFF09,
	0xFF0A,
	0xFF0C,
	0xFF0D,
	0xFF0E,
	0xFF0F,
	0xFF1A,
	0xFF1C,
	0xFF1F,
	0xFF20,
	0xFF3B,
	0xFF3C,
	0xFF3D,
	0xFF3E,
	0xFF5B,
	0xFF5C,
	0xFF5D,
	0xFF5E,
	0xFF5F,
	0xFF60,
	0xFF62,
	0xFF63,
	0xFF65,
	0xFF66,
	0xFF67,
	0xFF71,
	0xFF9E,
	0xFFA0,
	0xFFBF,
	0xFFC2,
	0xFFC8,
	0xFFCA,
	0xFFD0,
	0xFFD2,
	0xFFD8,
	0xFFDA,
	0xFFDD,
	0xFFE0,
	0xFFE1,
	0xFFE2,
	0xFFE5,
	0xFFE7,
	0xFFF9,
	0xFFFC,
	0xFFFD,
	0x10100,
	0x10103,
	0x101FD,
	0x101FE,
	0x102E0,
	0x102E1,
	0x10376,
	0x1037B,
	0x1039F,
	0x103A0,
	0x103D0,
	0x103D1,
	0x104A0,
	0x104AA,
	0x10857,
	0x10858,
	0x1091F,
	0x10920,
	0x10A01,
	0x10A04,
	0x10A05,
	0x10A07,
	0x10A0C,
	0x10A10,
	0x10A38,
	0x10A3B,
	0x10A3F,
	0x10A40,
	0x10A50,
	0x10A58,
	0x10AE5,
	0x10AE7,
	0x10AF0,
	0x10AF6,
	0x10AF7,
	0x10B39,
	0x10B40,
	0x10D24,
	0x10D28,
	0x10D30,
	0x10D3A,
	0x10EAB,
	0x10EAD,
	0x10EAE,
	0x10EFD,
	0x10F00,
	0x10F46,
	0x10F51,
	0x10F82,
	0x10F86,
	0x11000,
	0x11003,
	0x11038,
	0x11047,
	0x11049,
	0x11066,
	0x11070,
	0x11071,
	0x11073,
	0x11075,
	0x1107F,
	0x11083,
	0x110B0,
	0x110BB,
	0x110BE,
	0x110C2,
	0x110C3,
	0x110F0,
	0x110FA,
	0x11100,
	0x11103,
	0x11127,
	0x11135,
	0x11136,
	0x11140,
	0x11144,
	0x11145,
	0x11147,
	0x11173,
	0x11174,
	0x11175,
	0x11176,
	0x11180,
	0x11183,
	0x111B3,
	0x111C1,
	0x111C5,
	0x111C7,
	0x111C8,
	0x111C9,
	0x111CD,
	0x111CE,
	0x111D0,
	0x111DA,
	0x111DB,
	0x111DC,
	0x111DD,
	0x111E0,
	0x1122C,
	0x11238,
	0x1123A,
	0x1123B,
	0x1123D,
	0x1123E,
	0x1123F,
	0x11241,
	0x11242,
	0x112A9,
	0x112AA,
	0x112DF,
	0x112EB,
	0x112F0,
	0x112FA,
	0x11300,
	0x11304,
	0x1133B,
	0x1133D,
	0x1133E,
	0x11345,
	0x11347,
	0x11349,
	0x1134B,
	0x1134E,
	0x11357,
	0x11358,
	0x11362,
	0x11364,
	0x11366,
	0x1136D,
	0x11370,
	0x11375,
	0x11435,
	0x11447,
	0x1144B,
	0x1144F,
	0x11450,
	0x1145A,
	0x1145C,
	0x1145E,
	0x1145F,
	0x114B0,
	0x114C4,
	0x114D0,
	0x114DA,
	0x115AF,
	0x115B6,
	0x115B8,
	0x115C1,
	0x115C2,
	0x115C4,
	0x115C6,
	0x115C9,
	0x115D8,
	0x115DC,
	0x115DE,
	0x11630,
	0x11641,
	0x11643,
	0x11650,
	0x1165A,
	0x11660,
	0x1166D,
	0x116AB,
	0x116B8,
	0x116C0,
	0x116CA,
	0x1171D,
	0x1172C,
	0x11730,
	0x1173A,
	0x1173C,
	0x1173F,
	0x1182C,
	0x1183B,
	0x118E0,
	0x118EA,
	0x11930,
	0x11936,
	0x11937,
	0x11939,
	0x1193B,
	0x1193F,
	0x11940,
	0x11941,
	0x11942,
	0x11944,
	0x11947,
	0x11950,
	0x1195A,
	0x119D1,
	0x119D8,
	0x119DA,
	0x119E1,
	0x119E2,
	0x119E3,
	0x119E4,
	0x119E5,
	0x11A01,
	0x11A0B,
	0x11A33,
	0x11A3A,
	0x11A3B,
	0x11A3F,
	0x11A40,
	0x11A41,
	0x11A45,
	0x11A46,
	0x11A47,
	0x11A48,
	0x11A51,
	0x11A5C,
	0x11A8A,
	0x11A9A,
	0x11A9D,
	0x11A9E,
	0x11AA1,
	0x11AA3,
	0x11B00,
	0x11B0A,
	0x11C2F,
	0x11C37,
	0x11C38,
	0x11C40,
	0x11C41,
	0x11C46,
	0x11C50,
	0x11C5A,
	0x11C70,
	0x11C71,
	0x11C72,
	0x11C92,
	0x11CA8,
	0x11CA9,
	0x11CB7,
	0x11D31,
	0x11D37,
	0x11D3A,
	0x11D3B,
	0x11D3C,
	0x11D3E,
	0x11D3F,
	0x11D46,
	0x11D47,
	0x11D48,
	0x11D50,
	0x11D5A,
	0x11D8A,
	0x11D8F,
	0x11D90,
	0x11D92,
	0x11D93,
	0x11D98,
	0x11DA0,
	0x11DAA,
	0x11EF3,
	0x11EF7,
	0x11F00,
	0x11F02,
	0x11F03,
	0x11F04,
	0x11F34,
	0x11F3B,
	0x11F3E,
	0x11F43,
	0x11F45,
	0x11F50,
	0x11F5A,
	0x11FDD,
	0x11FE1,
	0x11FFF,
	0x12000,
	0x12470,
	0x12475,
	0x13258,
	0x1325B,
	0x1325E,
	0x13282,
	0x13283,
	0x13286,
	0x13287,
	0x13288,
	0x13289,
	0x1328A,
	0x13379,
	0x1337A,
	0x1337C,
	0x13430,
	0x13437,
	0x13438,
	0x13439,
	0x1343C,
	0x1343D,
	0x1343E,
	0x1343F,
	0x13440,
	0x13441,
	0x13447,
	0x13456,
	0x145CE,
	0x145CF,
	0x145D0,
	0x16A60,
	0x16A6A,
	0x16A6E,
	0x16A70,
	0x16AC0,
	0x16ACA,
	0x16AF0,
	0x16AF5,
	0x16AF6,
	0x16B30,
	0x16B37,
	0x16B3A,
	0x16B44,
	0x16B45,
	0x16B50,
	0x16B5A,
	0x16E97,
	0x16E99,
	0x16F4F,
	0x16F50,
	0x16F51,
	0x16F88,
	0x16F8F,
	0x16F93,
	0x16FE0,
	0x16FE4,
	0x16FE5,
	0x16FF0,
	0x16FF2,
	0x17000,
	0x187F8,
	0x18800,
	0x18B00,
	0x18D00,
	0x18D09,
	0x1B000,
	0x1B123,
	0x1B132,
	0x1B133,
	0x1B150,
	0x1B153,
	0x1B155,
	0x1B156,
	0x1B164,
	0x1B168,
	0x1B170,
	0x1B2FC,
	0x1BC9D,
	0x1BC9F,
	0x1BCA0,
	0x1BCA4,
	0x1CF00,
	0x1CF2E,
	0x1CF30,
	0x1CF47,
	0x1D165,
	0x1D16A,
	0x1D16D,
	0x1D183,
	0x1D185,
	0x1D18C,
	0x1D1AA,
	0x1D1AE,
	0x1D242,
	0x1D245,
	0x1D7CE,
	0x1D800,
	0x1DA00,
	0x1DA37,
	0x1DA3B,
	0x1DA6D,
	0x1DA75,
	0x1DA76,
	0x1DA84,
	0x1DA85,
	0x1DA87,
	0x1DA8B,
	0x1DA9B,
	0x1DAA0,
	0x1DAA1,
	0x1DAB0,
	0x1E000,
	0x1E007,
	0x1E008,
	0x1E019,
	0x1E01B,
	0x1E022,
	0x1E023,
	0x1E025,
	0x1E026,
	0x1E02B,
	0x1E08F,
	0x1E090,
	0x1E130,
	0x1E137,
	0x1E140,
	0x1E14A,
	0x1E2AE,
	0x1E2AF,
	0x1E2EC,
	0x1E2F0,
	0x1E2FA,
	0x1E2FF,
	0x1E300,
	0x1E4EC,
	0x1E4F0,
	0x1E4FA,
	0x1E8D0,
	0x1E8D7,
	0x1E944,
	0x1E94B,
	0x1E950,
	0x1E95A,
	0x1E95E,
	0x1E960,
	0x1ECAC,
	0x1ECAD,
	0x1ECB0,
	0x1ECB1,
	0x1F000,
	0x1F02C,
	0x1F030,
	0x1F094,
	0x1F0A0,
	0x1F0AF,
	0x1F0B1,
	0x1F0C0,
	0x1F0C1,
	0x1F0D0,
	0x1F0D1,
	0x1F0F6,
	0x1F100,
	0x1F10D,
	0x1F110,
	0x1F16D,
	0x1F170,
	0x1F1AD,
	0x1F1AE,
	0x1F1E6,
	0x1F200,
	0x1F203,
	0x1F210,
	0x1F23C,
	0x1F240,
	0x1F249,
	0x1F250,
	0x1F252,
	0x1F260,
	0x1F266,
	0x1F300,
	0x1F385,
	0x1F386,
	0x1F39C,
	0x1F39E,
	0x1F3B5,
	0x1F3B7,
	0x1F3BC,
	0x1F3BD,
	0x1F3C2,
	0x1F3C5,
	0x1F3C7,
	0x1F3C8,
	0x1F3CA,
	0x1F3CD,
	0x1F3FB,
	0x1F400,
	0x1F442,
	0x1F444,
	0x1F446,
	0x1F451,
	0x1F466,
	0x1F479,
	0x1F47C,
	0x1F47D,
	0x1F481,
	0x1F484,
	0x1F485,
	0x1F488,
	0x1F48F,
	0x1F490,
	0x1F491,
	0x1F492,
	0x1F4A0,
	0x1F4A1,
	0x1F4A2,
	0x1F4A3,
	0x1F4A4,
	0x1F4A5,
	0x1F4AA,
	0x1F4AB,
	0x1F4AF,
	0x1F4B0,
	0x1F4B1,
	0x1F4B3,
	0x1F500,
	0x1F507,
	0x1F517,
	0x1F525,
	0x1F532,
	0x1F54A,
	0x1F574,
	0x1F576,
	0x1F57A,
	0x1F57B,
	0x1F590,
	0x1F591,
	0x1F595,
	0x1F597,
	0x1F5D4,
	0x1F5DC,
	0x1F5F4,
	0x1F5FA,
	0x1F645,
	0x1F648,
	0x1F64B,
	0x1F650,
	0x1F676,
	0x1F679,
	0x1F67C,
	0x1F680,
	0x1F6A3,
	0x1F6A4,
	0x1F6B4,
	0x1F6B7,
	0x1F6C0,
	0x1F6C1,
	0x1F6CC,
	0x1F6CD,
	0x1F6D8,
	0x1F6DC,
	0x1F6ED,
	0x1F6F0,
	0x1F6FD,
	0x1F700,
	0x1F774,
	0x1F777,
	0x1F77B,
	0x1F780,
	0x1F7D5,
	0x1F7DA,
	0x1F7E0,
	0x1F7EC,
	0x1F7F0,
	0x1F7F1,
	0x1F800,
	0x1F80C,
	0x1F810,
	0x1F848,
	0x1F850,
	0x1F85A,
	0x1F860,
	0x1F888,
	0x1F890,
	0x1F8AE,
	0x1F8B0,
	0x1F8B2,
	0x1F900,
	0x1F90C,
	0x1F90D,
	0x1F90F,
	0x1F910,
	0x1F918,
	0x1F920,
	0x1F926,
	0x1F927,
	0x1F930,
	0x1F93A,
	0x1F93C,
	0x1F93F,
	0x1F977,
	0x1F978,
	0x1F9B5,
	0x1F9B7,
	0x1F9B8,
	0x1F9BA,
	0x1F9BB,
	0x1F9BC,
	0x1F9CD,
	0x1F9D0,
	0x1F9D1,
	0x1F9DE,
	0x1FA00,
	0x1FA54,
	0x1FA60,
	0x1FA6E,
	0x1FA70,
	0x1FA7D,
	0x1FA80,
	0x1FA89,
	0x1FA90,
	0x1FABE,
	0x1FABF,
	0x1FAC3,
	0x1FAC6,
	0x1FACE,
	0x1FADC,
	0x1FAE0,
	0x1FAE9,
	0x1FAF0,
	0x1FAF9,
	0x1FB00,
	0x1FBF0,
	0x1FBFA,
	0x1FC00,
	0x1FFFE,
	0x20000,
	0x2FFFE,
	0x30000,
	0x3FFFE,
	0xE0001,
	0xE0002,
	0xE0020,
	0xE0080,
	0xE0100,
	0xE01F0
};

#  endif	/* EBCDIC 037 */

#endif	/* (defined(PERL_IN_REGCOMP_C) && ! defined(PERL_IN_XSUB_RE)) */

#if defined(PERL_IN_REGEXEC_C)

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

typedef enum {
	LB_Alphabetic = 0,
	LB_Break_Both = 1,
	LB_Break_After = 2,
	LB_Break_Before = 3,
	LB_Mandatory_Break = 4,
	LB_Contingent_Break = 5,
	LB_Close_Punctuation = 6,
	LB_Combining_Mark = 7,
	LB_Close_Parenthesis = 8,
	LB_Carriage_Return = 9,
	LB_East_Asian_OP = 10,
	LB_E_Base = 11,
	LB_EDGE = 12,
	LB_E_Modifier = 13,
	LB_Exclamation = 14,
	LB_Glue = 15,
	LB_H2 = 16,
	LB_H3 = 17,
	LB_Hebrew_Letter = 18,
	LB_Hyphen = 19,
	LB_Ideographic = 20,
	LB_Inseparable = 21,
	LB_Infix_Numeric = 22,
	LB_JL = 23,
	LB_JT = 24,
	LB_JV = 25,
	LB_Line_Feed = 26,
	LB_Next_Line = 27,
	LB_Nonstarter = 28,
	LB_Numeric = 29,
	LB_Open_Punctuation = 30,
	LB_Postfix_Numeric = 31,
	LB_Prefix_Numeric = 32,
	LB_Quotation = 33,
	LB_Regional_Indicator = 34,
	LB_Space = 35,
	LB_Break_Symbols = 36,
	LB_Unassigned_Extended_Pictographic_Ideographic = 37,
	LB_Word_Joiner = 38,
	LB_ZWSpace = 39,
	LB_ZWJ = 40,
	LB_East_Asian_CP = 41
} LB_enum;

static const LB_enum _Perl_LB_invmap[] = {  /* for EBCDIC 037 */
	LB_Combining_Mark,
	LB_Break_After,
	LB_Combining_Mark,
	LB_Mandatory_Break,
	LB_Carriage_Return,
	LB_Combining_Mark,
	LB_Next_Line,
	LB_Combining_Mark,
	LB_Line_Feed,
	LB_Combining_Mark,
	LB_Space,
	LB_Glue,
	LB_Alphabetic,
	LB_Postfix_Numeric,
	LB_Infix_Numeric,
	LB_Alphabetic,
	LB_Open_Punctuation,
	LB_Prefix_Numeric,
	LB_Break_After,
	LB_Alphabetic,
	LB_Exclamation,
	LB_Prefix_Numeric,
	LB_Alphabetic,
	LB_Close_Parenthesis,
	LB_Infix_Numeric,
	LB_Alphabetic,
	LB_Hyphen,
	LB_Break_Symbols,
	LB_Alphabetic,
	LB_Infix_Numeric,
	LB_Postfix_Numeric,
	LB_Alphabetic,
	LB_Exclamation,
	LB_Alphabetic,
	LB_Infix_Numeric,
	LB_Alphabetic,
	LB_Quotation,
	LB_Alphabetic,
	LB_Quotation,
	LB_Alphabetic,
	LB_Quotation,
	LB_Alphabetic,
	LB_Prefix_Numeric,
	LB_Postfix_Numeric,
	LB_Alphabetic,
	LB_Prefix_Numeric,
	LB_Alphabetic,
	LB_Open_Punctuation,
	LB_Alphabetic,
	LB_Prefix_Numeric,
	LB_Alphabetic,
	LB_Open_Punctuation,
	LB_Close_Parenthesis,
	LB_Alphabetic,
	LB_Break_Before,
	LB_Alphabetic,
	LB_Open_Punctuation,
	LB_Alphabetic,
	LB_Break_After,
	LB_Alphabetic,
	LB_Close_Punctuation,
	LB_Alphabetic,
	LB_Prefix_Numeric,
	LB_Alphabetic,
	LB_Numeric,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Alphabetic,
	LB_Break_Before,
	LB_Alphabetic,
	LB_Break_Before,
	LB_Alphabetic,
	LB_Break_Before,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Glue,
	LB_Combining_Mark,
	LB_Glue,
	LB_Combining_Mark,
	LB_Alphabetic,
	LB_Infix_Numeric,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Alphabetic,
	LB_Infix_Numeric,
	LB_Break_After,
	LB_Alphabetic,
	LB_Prefix_Numeric,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Break_After,
	LB_Combining_Mark,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Exclamation,
	LB_Combining_Mark,
	LB_Alphabetic,
	LB_Hebrew_Letter,
	LB_Alphabetic,
	LB_Hebrew_Letter,
	LB_Alphabetic,
	LB_Postfix_Numeric,
	LB_Infix_Numeric,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Exclamation,
	LB_Combining_Mark,
	LB_Exclamation,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Numeric,
	LB_Postfix_Numeric,
	LB_Numeric,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Alphabetic,
	LB_Exclamation,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Alphabetic,
	LB_Numeric,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Alphabetic,
	LB_Numeric,
	LB_Alphabetic,
	LB_Combining_Mark,
	LB_Alphabetic,
	LB_Infix_Numeric,
