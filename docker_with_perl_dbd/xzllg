X<SvIV_set>, C<SvIVX> X<SvIVX>, C<SvLEN> X<SvLEN>, C<sv_len> X<sv_len>,
C<SvLEN_set> X<SvLEN_set>, C<sv_len_utf8>, C<sv_len_utf8_nomg>
X<sv_len_utf8>X<sv_len_utf8_nomg>, C<SvLOCK> X<SvLOCK>, C<sv_magic>
X<sv_magic>, C<sv_magicext> X<sv_magicext>, C<SvMAGIC_set> X<SvMAGIC_set>,
C<sv_2mortal> X<sv_2mortal>, C<sv_mortalcopy> X<sv_mortalcopy>,
C<sv_mortalcopy_flags> X<sv_mortalcopy_flags>, C<sv_newmortal>
X<sv_newmortal>, C<SvNIOK> X<SvNIOK>, C<SvNIOK_off> X<SvNIOK_off>,
C<SvNIOKp> X<SvNIOKp>, C<SvNOK> X<SvNOK>, C<SvNOK_off> X<SvNOK_off>,
C<SvNOK_on> X<SvNOK_on>, C<SvNOK_only> X<SvNOK_only>, C<SvNOKp> X<SvNOKp>,
C<sv_nolocking> X<sv_nolocking>, C<sv_nounlocking> X<sv_nounlocking>,
C<sv_numeq> X<sv_numeq>, C<sv_numeq_flags> X<sv_numeq_flags>, C<SvNV>,
C<SvNV_nomg>, C<SvNVx> X<SvNV>X<SvNV_nomg>X<SvNVx>, C<sv_2nv_flags>
X<sv_2nv_flags>, C<SvNV_set> X<SvNV_set>, C<SvNVX> X<SvNVX>, C<SvOK>
X<SvOK>, C<SvOOK> X<SvOOK>, C<SvOOK_off> X<SvOOK_off>, C<SvOOK_offset>
X<SvOOK_offset>, C<SvPOK> X<SvPOK>, C<SvPOK_off> X<SvPOK_off>, C<SvPOK_on>
X<SvPOK_on>, C<SvPOK_only> X<SvPOK_only>, C<SvPOK_only_UTF8>
X<SvPOK_only_UTF8>, C<SvPOKp> X<SvPOKp>, C<sv_pos_b2u> X<sv_pos_b2u>,
C<sv_pos_b2u_flags> X<sv_pos_b2u_flags>, C<sv_pos_u2b> X<sv_pos_u2b>,
C<sv_pos_u2b_flags> X<sv_pos_u2b_flags>, C<SvPV>, C<SvPV_const>,
C<SvPV_flags>, C<SvPV_flags_const>, C<SvPV_flags_mutable>, C<SvPV_mutable>,
C<SvPV_nolen>, C<SvPV_nolen_const>, C<SvPV_nomg>, C<SvPV_nomg_const>,
C<SvPV_nomg_const_nolen>, C<SvPV_nomg_nolen>, C<SvPVbyte>,
C<SvPVbyte_nolen>, C<SvPVbyte_nomg>, C<SvPVbyte_or_null>,
C<SvPVbyte_or_null_nomg>, C<SvPVbytex>, C<SvPVbytex_nolen>, C<SvPVutf8>,
C<SvPVutf8_nolen>, C<SvPVutf8_nomg>, C<SvPVutf8_or_null>,
C<SvPVutf8_or_null_nomg>, C<SvPVutf8x>, C<SvPVx>, C<SvPVx_const>,
C<SvPVx_nolen>, C<SvPVx_nolen_const>
X<SvPV>X<SvPV_const>X<SvPV_flags>X<SvPV_flags_const>X<SvPV_flags_mutable>X<
SvPV_mutable>X<SvPV_nolen>X<SvPV_nolen_const>X<SvPV_nomg>X<SvPV_nomg_const>
X<SvPV_nomg_const_nolen>X<SvPV_nomg_nolen>X<SvPVbyte>X<SvPVbyte_nolen>X<SvP
Vbyte_nomg>X<SvPVbyte_or_null>X<SvPVbyte_or_null_nomg>X<SvPVbytex>X<SvPVbyt
ex_nolen>X<SvPVutf8>X<SvPVutf8_nolen>X<SvPVutf8_nomg>X<SvPVutf8_or_null>X<S
vPVutf8_or_null_nomg>X<SvPVutf8x>X<SvPVx>X<SvPVx_const>X<SvPVx_nolen>X<SvPV
x_nolen_const>, C<sv_2pv>, C<sv_2pv_flags> X<sv_2pv>X<sv_2pv_flags>,
C<sv_2pvbyte>, C<sv_2pvbyte_flags> X<sv_2pvbyte>X<sv_2pvbyte_flags>,
C<SvPVCLEAR> X<SvPVCLEAR>, C<SvPVCLEAR_FRESH> X<SvPVCLEAR_FRESH>,
C<SvPV_force>, C<SvPV_force_flags>, C<SvPV_force_flags_mutable>,
C<SvPV_force_flags_nolen>, C<SvPV_force_mutable>, C<SvPV_force_nolen>,
C<SvPV_force_nomg>, C<SvPV_force_nomg_nolen>, C<SvPVbyte_force>,
C<SvPVbytex_force>, C<SvPVutf8_force>, C<SvPVutf8x_force>, C<SvPVx_force>
X<SvPV_force>X<SvPV_force_flags>X<SvPV_force_flags_mutable>X<SvPV_force_fla
gs_nolen>X<SvPV_force_mutable>X<SvPV_force_nolen>X<SvPV_force_nomg>X<SvPV_f
orce_nomg_nolen>X<SvPVbyte_force>X<SvPVbytex_force>X<SvPVutf8_force>X<SvPVu
tf8x_force>X<SvPVx_force>, C<SvPV_free> X<SvPV_free>, C<sv_pvn_force_flags>
X<sv_pvn_force_flags>, C<SvPV_renew> X<SvPV_renew>, C<SvPV_set>
X<SvPV_set>, C<SvPV_shrink_to_cur> X<SvPV_shrink_to_cur>, C<sv_2pvutf8>,
C<sv_2pvutf8_flags> X<sv_2pvutf8>X<sv_2pvutf8_flags>, C<SvPVX>,
C<SvPVX_const>, C<SvPVX_mutable>, C<SvPVXx>
X<SvPVX>X<SvPVX_const>X<SvPVX_mutable>X<SvPVXx>, C<SvPVXtrue> X<SvPVXtrue>,
C<SvREADONLY> X<SvREADONLY>, C<SvREADONLY_off> X<SvREADONLY_off>,
C<SvREADONLY_on> X<SvREADONLY_on>, C<sv_ref> X<sv_ref>, C<SvREFCNT>
X<SvREFCNT>, C<SvREFCNT_dec>, C<SvREFCNT_dec_set_NULL>,
C<SvREFCNT_dec_ret_NULL>, C<SvREFCNT_dec_NN>
X<SvREFCNT_dec>X<SvREFCNT_dec_set_NULL>X<SvREFCNT_dec_ret_NULL>X<SvREFCNT_d
ec_NN>, C<SvREFCNT_inc>, C<SvREFCNT_inc_NN>, C<SvREFCNT_inc_simple>,
C<SvREFCNT_inc_simple_NN>, C<SvREFCNT_inc_simple_void>,
C<SvREFCNT_inc_simple_void_NN>, C<SvREFCNT_inc_void>,
C<SvREFCNT_inc_void_NN>
X<SvREFCNT_inc>X<SvREFCNT_inc_NN>X<SvREFCNT_inc_simple>X<SvREFCNT_inc_simpl
e_NN>X<SvREFCNT_inc_simple_void>X<SvREFCNT_inc_simple_void_NN>X<SvREFCNT_in
c_void>X<SvREFCNT_inc_void_NN>, C<sv_reftype> X<sv_reftype>, C<sv_replace>
X<sv_replace>, C<sv_report_used> X<sv_report_used>, C<sv_reset>
X<sv_reset>, C<SvROK> X<SvROK>, C<SvROK_off> X<SvROK_off>, C<SvROK_on>
X<SvROK_on>, C<SvRV> X<SvRV>, C<SvRV_set> X<SvRV_set>, C<sv_rvunweaken>
X<sv_rvunweaken>, C<sv_rvweaken> X<sv_rvweaken>, C<sv_setbool>,
C<sv_setbool_mg> X<sv_setbool>X<sv_setbool_mg>, C<sv_set_bool>
X<sv_set_bool>, C<sv_set_false> X<sv_set_false>, C<sv_setiv>,
C<sv_setiv_mg> X<sv_setiv>X<sv_setiv_mg>, C<SvSETMAGIC> X<SvSETMAGIC>,
C<SvSetMagicSV>, C<SvSetMagicSV_nosteal>, C<SvSetSV>, C<SvSetSV_nosteal>
X<SvSetMagicSV>X<SvSetMagicSV_nosteal>X<SvSetSV>X<SvSetSV_nosteal>,
C<sv_setnv>, C<sv_setnv_mg> X<sv_setnv>X<sv_setnv_mg>, C<sv_setpv>,
C<sv_setpv_mg>, C<sv_setpvn>, C<sv_setpvn_fresh>, C<sv_setpvn_mg>,
C<sv_setpvs>, C<sv_setpvs_mg>
X<sv_setpv>X<sv_setpv_mg>X<sv_setpvn>X<sv_setpvn_fresh>X<sv_setpvn_mg>X<sv_
setpvs>X<sv_setpvs_mg>, C<sv_setpv_bufsize> X<sv_setpv_bufsize>,
C<sv_setpvf>, C<sv_setpvf_mg>, C<sv_setpvf_mg_nocontext>,
C<sv_setpvf_nocontext>
X<sv_setpvf>X<sv_setpvf_mg>X<sv_setpvf_mg_nocontext>X<sv_setpvf_nocontext>,
C<sv_setref_iv> X<sv_setref_iv>, C<sv_setref_nv> X<sv_setref_nv>,
C<sv_setref_pv> X<sv_setref_pv>, C<sv_setref_pvn> X<sv_setref_pvn>,
C<sv_setref_pvs> X<sv_setref_pvs>, C<sv_setref_uv> X<sv_setref_uv>,
C<sv_setrv_inc>, C<sv_setrv_inc_mg> X<sv_setrv_inc>X<sv_setrv_inc_mg>,
C<sv_setrv_noinc>, C<sv_setrv_noinc_mg>
X<sv_setrv_noinc>X<sv_setrv_noinc_mg>, C<sv_setsv>, C<sv_setsv_flags>,
C<sv_setsv_mg>, C<sv_setsv_nomg>
X<sv_setsv>X<sv_setsv_flags>X<sv_setsv_mg>X<sv_setsv_nomg>, C<sv_set_true>
X<sv_set_true>, C<sv_set_undef> X<sv_set_undef>, C<sv_setuv>,
C<sv_setuv_mg> X<sv_setuv>X<sv_setuv_mg>, C<SvSHARE> X<SvSHARE>,
C<SvSHARED_HASH> X<SvSHARED_HASH>, C<SvSTASH> X<SvSTASH>, C<SvSTASH_set>
X<SvSTASH_set>, C<sv_streq> X<sv_streq>, C<sv_streq_flags>
X<sv_streq_flags>, C<SvTRUE>, C<SvTRUE_NN>, C<SvTRUE_nomg>,
C<SvTRUE_nomg_NN>, C<SvTRUEx>
X<SvTRUE>X<SvTRUE_NN>X<SvTRUE_nomg>X<SvTRUE_nomg_NN>X<SvTRUEx>, C<SvTYPE>
X<SvTYPE>, C<SvUNLOCK> X<SvUNLOCK>, C<sv_unmagic> X<sv_unmagic>,
C<sv_unmagicext> X<sv_unmagicext>, C<sv_unref> X<sv_unref>,
C<sv_unref_flags> X<sv_unref_flags>, C<SvUOK> X<SvUOK>, C<SvUPGRADE>
X<SvUPGRADE>, C<sv_upgrade> X<sv_upgrade>, C<sv_usepvn>,
C<sv_usepvn_flags>, C<sv_usepvn_mg>
X<sv_usepvn>X<sv_usepvn_flags>X<sv_usepvn_mg>, C<sv_utf8_decode>
X<sv_utf8_decode>, C<sv_utf8_downgrade>, C<sv_utf8_downgrade_flags>,
C<sv_utf8_downgrade_nomg>
X<sv_utf8_downgrade>X<sv_utf8_downgrade_flags>X<sv_utf8_downgrade_nomg>,
C<sv_utf8_encode> X<sv_utf8_encode>, C<SvUTF8_off> X<SvUTF8_off>,
C<SvUTF8_on> X<SvUTF8_on>, C<sv_utf8_upgrade>, C<sv_utf8_upgrade_flags>,
C<sv_utf8_upgrade_flags_grow>, C<sv_utf8_upgrade_nomg>
X<sv_utf8_upgrade>X<sv_utf8_upgrade_flags>X<sv_utf8_upgrade_flags_grow>X<sv
_utf8_upgrade_nomg>, C<SvUTF8> X<SvUTF8>, C<SvUV>, C<SvUV_nomg>, C<SvUVx>
X<SvUV>X<SvUV_nomg>X<SvUVx>, C<sv_2uv_flags> X<sv_2uv_flags>, C<SvUV_set>
X<SvUV_set>, C<SvUVX> X<SvUVX>, C<SvUVXx> X<SvUVXx>, C<sv_vcatpvf>,
C<sv_vcatpvf_mg> X<sv_vcatpvf>X<sv_vcatpvf_mg>, C<sv_vcatpvfn>,
C<sv_vcatpvfn_flags> X<sv_vcatpvfn>X<sv_vcatpvfn_flags>, C<SvVOK> X<SvVOK>,
C<sv_vsetpvf>, C<sv_vsetpvf_mg> X<sv_vsetpvf>X<sv_vsetpvf_mg>,
C<sv_vsetpvfn> X<sv_vsetpvfn>, C<SvVSTRING_mg> X<SvVSTRING_mg>,
C<vnewSVpvf> X<vnewSVpvf>

=item Tainting

C<SvTAINT> X<SvTAINT>, C<SvTAINTED> X<SvTAINTED>, C<SvTAINTED_off>
X<SvTAINTED_off>, C<SvTAINTED_on> X<SvTAINTED_on>

=item Time

C<ASCTIME_R_PROTO> X<ASCTIME_R_PROTO>, C<CTIME_R_PROTO> X<CTIME_R_PROTO>,
C<GMTIME_MAX> X<GMTIME_MAX>, C<GMTIME_MIN> X<GMTIME_MIN>, C<GMTIME_R_PROTO>
X<GMTIME_R_PROTO>, C<HAS_ASCTIME_R> X<HAS_ASCTIME_R>, C<HAS_ASCTIME64>
X<HAS_ASCTIME64>, C<HAS_CTIME_R> X<HAS_CTIME_R>, C<HAS_CTIME64>
X<HAS_CTIME64>, C<HAS_DIFFTIME> X<HAS_DIFFTIME>, C<HAS_DIFFTIME64>
X<HAS_DIFFTIME64>, C<HAS_FUTIMES> X<HAS_FUTIMES>, C<HAS_GETITIMER>
X<HAS_GETITIMER>, C<HAS_GETTIMEOFDAY> X<HAS_GETTIMEOFDAY>, C<HAS_GMTIME_R>
X<HAS_GMTIME_R>, C<HAS_GMTIME64> X<HAS_GMTIME64>, C<HAS_LOCALTIME_R>
X<HAS_LOCALTIME_R>, C<HAS_LOCALTIME64> X<HAS_LOCALTIME64>, C<HAS_MKTIME>
X<HAS_MKTIME>, C<HAS_MKTIME64> X<HAS_MKTIME64>, C<HAS_NANOSLEEP>
X<HAS_NANOSLEEP>, C<HAS_SETITIMER> X<HAS_SETITIMER>, C<HAS_STRFTIME>
X<HAS_STRFTIME>, C<HAS_TIME> X<HAS_TIME>, C<HAS_TIMEGM> X<HAS_TIMEGM>,
C<HAS_TIMES> X<HAS_TIMES>, C<HAS_TM_TM_GMTOFF> X<HAS_TM_TM_GMTOFF>,
C<HAS_TM_TM_ZONE> X<HAS_TM_TM_ZONE>, C<HAS_TZNAME> X<HAS_TZNAME>,
C<HAS_USLEEP> X<HAS_USLEEP>, C<HAS_USLEEP_PROTO> X<HAS_USLEEP_PROTO>,
C<I_TIME> X<I_TIME>, C<I_UTIME> X<I_UTIME>, C<LOCALTIME_MAX>
X<LOCALTIME_MAX>, C<LOCALTIME_MIN> X<LOCALTIME_MIN>,
C<LOCALTIME_R_NEEDS_TZSET> X<LOCALTIME_R_NEEDS_TZSET>, C<LOCALTIME_R_PROTO>
X<LOCALTIME_R_PROTO>, C<L_R_TZSET> X<L_R_TZSET>, C<mini_mktime>
X<mini_mktime>, C<sv_strftime_tm>, C<my_strftime>
X<sv_strftime_tm>X<my_strftime>

=item Typedef names

C<DB_Hash_t> X<DB_Hash_t>, C<DB_Prefix_t> X<DB_Prefix_t>, C<Direntry_t>
X<Direntry_t>, C<Fpos_t> X<Fpos_t>, C<Free_t> X<Free_t>, C<Gid_t> X<Gid_t>,
C<Gid_t_f> X<Gid_t_f>, C<Gid_t_sign> X<Gid_t_sign>, C<Gid_t_size>
X<Gid_t_size>, C<Groups_t> X<Groups_t>, C<Malloc_t> X<Malloc_t>, C<Mmap_t>
X<Mmap_t>, C<Mode_t> X<Mode_t>, C<Netdb_hlen_t> X<Netdb_hlen_t>,
C<Netdb_host_t> X<Netdb_host_t>, C<Netdb_name_t> X<Netdb_name_t>,
C<Netdb_net_t> X<Netdb_net_t>, C<Off_t> X<Off_t>, C<Off_t_size>
X<Off_t_size>, C<Pid_t> X<Pid_t>, C<Rand_seed_t> X<Rand_seed_t>,
C<Select_fd_set_t> X<Select_fd_set_t>, C<Shmat_t> X<Shmat_t>, C<Signal_t>
X<Signal_t>, C<Size_t> X<Size_t>, C<Size_t_size> X<Size_t_size>,
C<Sock_size_t> X<Sock_size_t>, C<SSize_t> X<SSize_t>, C<Time_t> X<Time_t>,
C<Uid_t> X<Uid_t>, C<Uid_t_f> X<Uid_t_f>, C<Uid_t_sign> X<Uid_t_sign>,
C<Uid_t_size> X<Uid_t_size>

=item Unicode Support
X<UNICODE_DISALLOW_ABOVE_31_BIT>X<UNICODE_DISALLOW_ILLEGAL_C9_INTERCHANGE>X
<UNICODE_DISALLOW_ILLEGAL_INTERCHANGE>X<UNICODE_DISALLOW_NONCHAR>X<UNICODE_
DISALLOW_PERL_EXTENDED>X<UNICODE_DISALLOW_SUPER>X<UNICODE_DISALLOW_SURROGAT
E>X<UNICODE_WARN_ABOVE_31_BIT>X<UNICODE_WARN_ILLEGAL_C9_INTERCHANGE>X<UNICO
DE_WARN_ILLEGAL_INTERCHANGE>X<UNICODE_WARN_NONCHAR>X<UNICODE_WARN_PERL_EXTE
NDED>X<UNICODE_WARN_SUPER>X<UNICODE_WARN_SURROGATE>X<UNI_DISPLAY_BACKSLASH>
X<UNI_DISPLAY_BACKSPACE>X<UNI_DISPLAY_ISPRINT>X<UNI_DISPLAY_QQ>X<UNI_DISPLA
Y_REGEX>X<UTF8_CHECK_ONLY>X<UTF8_DISALLOW_ILLEGAL_C9_INTERCHANGE>X<UTF8_DIS
ALLOW_ILLEGAL_INTERCHANGE>X<UTF8_DISALLOW_NONCHAR>X<UTF8_DISALLOW_PERL_EXTE
NDED>X<UTF8_DISALLOW_SUPER>X<UTF8_DISALLOW_SURROGATE>X<UTF8_GOT_CONTINUATIO
N>X<UTF8_GOT_EMPTY>X<UTF8_GOT_LONG>X<UTF8_GOT_NONCHAR>X<UTF8_GOT_NON_CONTIN
UATION>X<UTF8_GOT_OVERFLOW>X<UTF8_GOT_PERL_EXTENDED>X<UTF8_GOT_SHORT>X<UTF8
_GOT_SUPER>X<UTF8_GOT_SURROGATE>X<UTF8_WARN_ILLEGAL_C9_INTERCHANGE>X<UTF8_W
ARN_ILLEGAL_INTERCHANGE>X<UTF8_WARN_NONCHAR>X<UTF8_WARN_PERL_EXTENDED>X<UTF
8_WARN_SUPER>X<UTF8_WARN_SURROGATE>

C<BOM_UTF8> X<BOM_UTF8>, C<bytes_cmp_utf8> X<bytes_cmp_utf8>,
C<bytes_from_utf8> X<bytes_from_utf8>, C<bytes_to_utf8> X<bytes_to_utf8>,
C<DO_UTF8> X<DO_UTF8>, C<foldEQ_utf8> X<foldEQ_utf8>, C<is_ascii_string>
X<is_ascii_string>, C<isC9_STRICT_UTF8_CHAR> X<isC9_STRICT_UTF8_CHAR>,
C<is_c9strict_utf8_string> X<is_c9strict_utf8_string>,
C<is_c9strict_utf8_string_loc> X<is_c9strict_utf8_string_loc>,
C<is_c9strict_utf8_string_loclen> X<is_c9strict_utf8_string_loclen>,
C<is_invariant_string> X<is_invariant_string>, C<isSTRICT_UTF8_CHAR>
X<isSTRICT_UTF8_CHAR>, C<is_strict_utf8_string> X<is_strict_utf8_string>,
C<is_strict_utf8_string_loc> X<is_strict_utf8_string_loc>,
C<is_strict_utf8_string_loclen> X<is_strict_utf8_string_loclen>,
C<isUTF8_CHAR> X<isUTF8_CHAR>, C<is_utf8_char_buf> X<is_utf8_char_buf>,
C<isUTF8_CHAR_flags> X<isUTF8_CHAR_flags>, C<is_utf8_fixed_width_buf_flags>
X<is_utf8_fixed_width_buf_flags>, C<is_utf8_fixed_width_buf_loc_flags>
X<is_utf8_fixed_width_buf_loc_flags>,
C<is_utf8_fixed_width_buf_loclen_flags>
X<is_utf8_fixed_width_buf_loclen_flags>, C<is_utf8_invariant_string>
X<is_utf8_invariant_string>, C<is_utf8_invariant_string_loc>
X<is_utf8_invariant_string_loc>, C<is_utf8_string> X<is_utf8_string>,
C<is_utf8_string_flags> X<is_utf8_string_flags>, C<is_utf8_string_loc>
X<is_utf8_string_loc>, C<is_utf8_string_loc_flags>
X<is_utf8_string_loc_flags>, C<is_utf8_string_loclen>
X<is_utf8_string_loclen>, C<is_utf8_string_loclen_flags>
X<is_utf8_string_loclen_flags>, C<is_utf8_valid_partial_char>
X<is_utf8_valid_partial_char>, C<is_utf8_valid_partial_char_flags>
X<is_utf8_valid_partial_char_flags>, C<LATIN1_TO_NATIVE>
X<LATIN1_TO_NATIVE>, C<NATIVE_TO_LATIN1> X<NATIVE_TO_LATIN1>,
C<NATIVE_TO_UNI> X<NATIVE_TO_UNI>, C<pv_uni_display> X<pv_uni_display>,
C<REPLACEMENT_CHARACTER_UTF8> X<REPLACEMENT_CHARACTER_UTF8>,
C<sv_cat_decode> X<sv_cat_decode>, C<sv_recode_to_utf8>
X<sv_recode_to_utf8>, C<sv_uni_display> X<sv_uni_display>,
C<UNICODE_IS_NONCHAR> X<UNICODE_IS_NONCHAR>, C<UNICODE_IS_REPLACEMENT>
X<UNICODE_IS_REPLACEMENT>, C<UNICODE_IS_SUPER> X<UNICODE_IS_SUPER>,
C<UNICODE_IS_SURROGATE> X<UNICODE_IS_SURROGATE>, C<UNICODE_REPLACEMENT>
X<UNICODE_REPLACEMENT>, C<UNI_TO_NATIVE> X<UNI_TO_NATIVE>, C<UTF8_CHK_SKIP>
X<UTF8_CHK_SKIP>, C<utf8_distance> X<utf8_distance>, C<utf8_hop>
X<utf8_hop>, C<utf8_hop_back> X<utf8_hop_back>, C<utf8_hop_forward>
X<utf8_hop_forward>, C<utf8_hop_safe> X<utf8_hop_safe>,
C<UTF8_IS_INVARIANT> X<UTF8_IS_INVARIANT>, C<UTF8_IS_NONCHAR>
X<UTF8_IS_NONCHAR>, C<UTF8_IS_REPLACEMENT> X<UTF8_IS_REPLACEMENT>,
C<UTF8_IS_SUPER> X<UTF8_IS_SUPER>, C<UTF8_IS_SURROGATE>
X<UTF8_IS_SURROGATE>, C<utf8_length> X<utf8_length>, C<UTF8_MAXBYTES>
X<UTF8_MAXBYTES>, C<UTF8_MAXBYTES_CASE> X<UTF8_MAXBYTES_CASE>,
C<utf8ness_t> X<utf8ness_t>, C<UTF8NESS_YES>, C<UTF8NESS_NO>,
C<UTF8NESS_IMMATERIAL>, C<UTF8NESS_UNKNOWN>, S<C<0 E<lt>= I<enum value>
E<lt>= UTF8NESS_IMMATERIAL>>, S<C<UTF8NESS_IMMATERIAL E<lt>= <I<enum
value>>>, C<utf8n_to_uvchr> X<utf8n_to_uvchr>, C<utf8n_to_uvchr_error>
X<utf8n_to_uvchr_error>, C<UTF8_GOT_PERL_EXTENDED>,
C<UTF8_GOT_CONTINUATION>, C<UTF8_GOT_EMPTY>, C<UTF8_GOT_LONG>,
C<UTF8_GOT_NONCHAR>, C<UTF8_GOT_NON_CONTINUATION>, C<UTF8_GOT_OVERFLOW>,
C<UTF8_GOT_SHORT>, C<UTF8_GOT_SUPER>, C<UTF8_GOT_SURROGATE>,
C<utf8n_to_uvchr_msgs> X<utf8n_to_uvchr_msgs>, C<text>, C<warn_categories>,
C<flag>, C<UTF8_SAFE_SKIP> X<UTF8_SAFE_SKIP>, C<UTF8SKIP> X<UTF8SKIP>,
C<L<perlapi/UTF8_SAFE_SKIP>> if you know the maximum ending pointer in the
buffer pointed to by C<s>; or, C<L<perlapi/UTF8_CHK_SKIP>> if you don't
know it, C<UTF8_SKIP> X<UTF8_SKIP>, C<utf8_to_bytes> X<utf8_to_bytes>,
C<utf8_to_uvchr> X<utf8_to_uvchr>, C<utf8_to_uvchr_buf>
X<utf8_to_uvchr_buf>, C<UVCHR_IS_INVARIANT> X<UVCHR_IS_INVARIANT>,
C<UVCHR_SKIP> X<UVCHR_SKIP>, C<uvchr_to_utf8_flags> X<uvchr_to_utf8_flags>,
C<uvchr_to_utf8_flags_msgs> X<uvchr_to_utf8_flags_msgs>, C<text>,
C<warn_categories>, C<flag>, C<uvchr_to_utf8> X<uvchr_to_utf8>

=item Utility Functions

C<C_ARRAY_END> X<C_ARRAY_END>, C<C_ARRAY_LENGTH> X<C_ARRAY_LENGTH>,
C<getcwd_sv> X<getcwd_sv>, C<IN_PERL_COMPILETIME> X<IN_PERL_COMPILETIME>,
C<IN_PERL_RUNTIME> X<IN_PERL_RUNTIME>, C<IS_SAFE_SYSCALL>
X<IS_SAFE_SYSCALL>, C<is_safe_syscall> X<is_safe_syscall>, C<my_setenv>
X<my_setenv>, C<newPADxVOP> X<newPADxVOP>, C<phase_name> X<phase_name>,
C<Poison> X<Poison>, C<PoisonFree> X<PoisonFree>, C<PoisonNew>
X<PoisonNew>, C<PoisonWith> X<PoisonWith>, C<StructCopy> X<StructCopy>,
C<sv_destroyable> X<sv_destroyable>, C<sv_nosharing> X<sv_nosharing>

=item Versioning

C<new_version> X<new_version>, C<PERL_REVISION> X<PERL_REVISION>,
C<PERL_SUBVERSION> X<PERL_SUBVERSION>, C<PERL_VERSION> X<PERL_VERSION>,
C<PERL_VERSION_EQ>, C<PERL_VERSION_GE>, C<PERL_VERSION_GT>,
C<PERL_VERSION_LE>, C<PERL_VERSION_LT>, C<PERL_VERSION_NE>
X<PERL_VERSION_EQ>X<PERL_VERSION_GE>X<PERL_VERSION_GT>X<PERL_VERSION_LE>X<P
ERL_VERSION_LT>X<PERL_VERSION_NE>, C<prescan_version> X<prescan_version>,
C<scan_version> X<scan_version>, C<upg_version> X<upg_version>, C<vcmp>
X<vcmp>, C<vnormal> X<vnormal>, C<vnumify> X<vnumify>, C<vstringify>
X<vstringify>, C<vverify> X<vverify>, The SV is an HV or a reference to an
HV, The hash contains a "version" key, The "version" key has a reference to
an AV as its value

=item Warning and Dieing
X<WARN_ALL>X<WARN_AMBIGUOUS>X<WARN_BAREWORD>X<WARN_CLOSED>X<WARN_CLOSURE>X<
WARN_DEBUGGING>X<WARN_DEPRECATED>X<WARN_DEPRECATED__APOSTROPHE_AS_PACKAGE_S
EPARATOR>X<WARN_DEPRECATED__DELIMITER_WILL_BE_PAIRED>X<WARN_DEPRECATED__DOT
_IN_INC>X<WARN_DEPRECATED__GOTO_CONSTRUCT>X<WARN_DEPRECATED__MISSING_IMPORT
_CALLED_WITH_ARGS>X<WARN_DEPRECATED__SMARTMATCH>X<WARN_DEPRECATED__SUBSEQUE
NT_USE_VERSION>X<WARN_DEPRECATED__UNICODE_PROPERTY_NAME>X<WARN_DEPRECATED__
VERSION_DOWNGRADE>X<WARN_DIGIT>X<WARN_EXEC>X<WARN_EXITING>X<WARN_EXPERIMENT
AL>X<WARN_EXPERIMENTAL__ARGS_ARRAY_WITH_SIGNATURES>X<WARN_EXPERIMENTAL__BUI
LTIN>X<WARN_EXPERIMENTAL__CLASS>X<WARN_EXPERIMENTAL__DECLARED_REFS>X<WARN_E
XPERIMENTAL__DEFER>X<WARN_EXPERIMENTAL__EXTRA_PAIRED_DELIMITERS>X<WARN_EXPE
RIMENTAL__PRIVATE_USE>X<WARN_EXPERIMENTAL__REFALIASING>X<WARN_EXPERIMENTAL_
_REGEX_SETS>X<WARN_EXPERIMENTAL__RE_STRICT>X<WARN_EXPERIMENTAL__TRY>X<WARN_
EXPERIMENTAL__UNIPROP_WILDCARDS>X<WARN_EXPERIMENTAL__VLB>X<WARN_GLOB>X<WARN
_ILLEGALPROTO>X<WARN_IMPRECISION>X<WARN_INPLACE>X<WARN_INTERNAL>X<WARN_IO>X
<WARN_LAYER>X<WARN_LOCALE>X<WARN_MALLOC>X<WARN_MISC>X<WARN_MISSING>X<WARN_N
EWLINE>X<WARN_NONCHAR>X<WARN_NON_UNICODE>X<WARN_NUMERIC>X<WARN_ONCE>X<WARN_
OVERFLOW>X<WARN_PACK>X<WARN_PARENTHESIS>X<WARN_PIPE>X<WARN_PORTABLE>X<WARN_
PRECEDENCE>X<WARN_PRINTF>X<WARN_PROTOTYPE>X<WARN_QW>X<WARN_RECURSION>X<WARN
_REDEFINE>X<WARN_REDUNDANT>X<WARN_REGEXP>X<WARN_RESERVED>X<WARN_SCALAR>X<WA
RN_SEMICOLON>X<WARN_SEVERE>X<WARN_SHADOW>X<WARN_SIGNAL>X<WARN_SUBSTR>X<WARN
_SURROGATE>X<WARN_SYNTAX>X<WARN_SYSCALLS>X<WARN_TAINT>X<WARN_THREADS>X<WARN
_UNINITIALIZED>X<WARN_UNOPENED>X<WARN_UNPACK>X<WARN_UNTIE>X<WARN_UTF8>X<WAR
N_VOID>

C<ckWARN>, C<ckWARN2>, C<ckWARN3>, C<ckWARN4>
X<ckWARN>X<ckWARN2>X<ckWARN3>X<ckWARN4>, C<ckWARN_d>, C<ckWARN2_d>,
C<ckWARN3_d>, C<ckWARN4_d> X<ckWARN_d>X<ckWARN2_d>X<ckWARN3_d>X<ckWARN4_d>,
C<ck_warner>, C<ck_warner_d> X<ck_warner>X<ck_warner_d>, C<CLEAR_ERRSV>
X<CLEAR_ERRSV>, C<croak>, C<croak_nocontext> X<croak>X<croak_nocontext>,
C<croak_no_modify> X<croak_no_modify>, C<croak_sv> X<croak_sv>, C<die>,
C<die_nocontext> X<die>X<die_nocontext>, C<die_sv> X<die_sv>, C<ERRSV>
X<ERRSV>, C<fatal_warner> X<fatal_warner>, C<packWARN>, C<packWARN2>,
C<packWARN3>, C<packWARN4> X<packWARN>X<packWARN2>X<packWARN3>X<packWARN4>,
C<SANE_ERRSV> X<SANE_ERRSV>, C<vcroak> X<vcroak>, C<vfatal_warner>
X<vfatal_warner>, C<vwarn> X<vwarn>, C<vwarner> X<vwarner>, C<warn>,
C<warn_nocontext> X<warn>X<warn_nocontext>, C<warner>, C<warner_nocontext>
X<warner>X<warner_nocontext>, C<warn_sv> X<warn_sv>

=item XS

C<aMY_CXT>, C<_aMY_CXT>, C<aMY_CXT_>, C<ax> X<ax>, C<CLASS> X<CLASS>,
C<dAX> X<dAX>, C<dAXMARK> X<dAXMARK>, C<dITEMS> X<dITEMS>, C<dMY_CXT>,
C<dMY_CXT_SV> X<dMY_CXT_SV>, C<dUNDERBAR> X<dUNDERBAR>, C<dXSARGS>
X<dXSARGS>, C<dXSI32> X<dXSI32>, C<items> X<items>, C<ix> X<ix>, C<MY_CXT>,
C<MY_CXT_CLONE>, C<MY_CXT_INIT>, C<pMY_CXT>, C<_pMY_CXT>, C<pMY_CXT_>,
C<RETVAL> X<RETVAL>, C<ST> X<ST>, C<START_MY_CXT>, C<THIS> X<THIS>,
C<UNDERBAR> X<UNDERBAR>, C<XS> X<XS>, C<XS_EXTERNAL> X<XS_EXTERNAL>,
C<XS_INTERNAL> X<XS_INTERNAL>, C<XSPROTO> X<XSPROTO>

=item Undocumented elements

=item AUTHORS

=item SEE ALSO

=back

=head2 perlintern - autogenerated documentation of purely B<internal>
Perl functions

=over 4

=item DESCRIPTION
X<internal Perl functions> X<interpreter functions>

=item AV Handling

C<av_fetch_simple> X<av_fetch_simple>, C<AvFILLp> X<AvFILLp>,
C<av_new_alloc> X<av_new_alloc>, C<av_store_simple> X<av_store_simple>

=item Callback Functions

C<dowantarray> X<dowantarray>, C<leave_scope> X<leave_scope>,
C<magic_freedestruct> X<magic_freedestruct>, C<mortal_svfunc_x>
X<mortal_svfunc_x>, C<pop_scope> X<pop_scope>, C<push_scope> X<push_scope>,
C<save_adelete> X<save_adelete>, C<save_freercpv> X<save_freercpv>,
C<save_generic_pvref> X<save_generic_pvref>, C<save_generic_svref>
X<save_generic_svref>, C<save_hdelete> X<save_hdelete>, C<save_hints>
X<save_hints>, C<save_op> X<save_op>, C<save_padsv_and_mortalize>
X<save_padsv_and_mortalize>, C<save_pushptr> X<save_pushptr>, C<save_rcpv>
X<save_rcpv>, C<save_scalar_at> X<save_scalar_at>, C<save_set_svflags>
X<save_set_svflags>, C<save_shared_pvref> X<save_shared_pvref>,
C<save_vptr> X<save_vptr>

=item Casting
X<NUM2PTR>

=item Character case changing

=item Character classification

=item Compiler and Preprocessor information

=item Compiler directives

=item Compile-time scope hooks

C<BhkENTRY> X<BhkENTRY>, C<BhkFLAGS> X<BhkFLAGS>, C<CALL_BLOCK_HOOKS>
X<CALL_BLOCK_HOOKS>

=item Concurrency

C<CVf_SLABBED>, C<CvROOT>, C<CvSTART>, C<CX_CUR>, C<CXINC>,
C<CX_LEAVE_SCOPE>, C<CX_POP>, C<cxstack>, C<cxstack_ix>, C<CXt_BLOCK>,
C<CXt_EVAL>, C<CXt_FORMAT>, C<CXt_GIVEN>, C<CXt_LOOP_ARY>,
C<CXt_LOOP_LAZYIV>, C<CXt_LOOP_LAZYSV>, C<CXt_LOOP_LIST>,
C<CXt_LOOP_PLAIN>, C<CXt_NULL>, C<CXt_SUB>, C<CXt_SUBST>, C<CXt_WHEN>,
C<cx_type>, C<dounwind>, C<my_fork> X<my_fork>, C<PERL_CONTEXT>

=item COPs and Hint Hashes

=item Custom Operators

C<core_prototype> X<core_prototype>

=item CV Handling

C<CvREFCOUNTED_ANYSV> X<CvREFCOUNTED_ANYSV>, C<CvREFCOUNTED_ANYSV_off>
X<CvREFCOUNTED_ANYSV_off>, C<CvREFCOUNTED_ANYSV_on>
X<CvREFCOUNTED_ANYSV_on>, C<CvWEAKOUTSIDE> X<CvWEAKOUTSIDE>, C<docatch>
X<docatch>

=item Debugging

C<comma_aDEPTH> X<comma_aDEPTH>, C<comma_pDEPTH> X<comma_pDEPTH>, C<debop>
X<debop>, C<debprof> X<debprof>, C<debprofdump> X<debprofdump>,
C<debug_aDEPTH> X<debug_aDEPTH>, C<debug_pDEPTH> X<debug_pDEPTH>,
C<free_c_backtrace> X<free_c_backtrace>, C<get_c_backtrace>
X<get_c_backtrace>, C<PL_DBsingle> X<PL_DBsingle>, C<PL_DBsub> X<PL_DBsub>,
C<PL_DBtrace> X<PL_DBtrace>, C<runops_debug>, C<runops_standard>

=item Display functions
X<PERL_PV_PRETTY_DUMP>X<PERL_PV_PRETTY_NOCLEAR>X<PERL_PV_PRETTY_REGPROP>

C<sv_peek> X<sv_peek>

=item Embedding, Threads, and Interpreter Cloning

C<cv_dump> X<cv_dump>, C<cv_forget_slab> X<cv_forget_slab>, C<do_dump_pad>
X<do_dump_pad>, C<get_context> X<get_context>, C<pad_alloc_name>
X<pad_alloc_name>, C<pad_block_start> X<pad_block_start>, C<pad_check_dup>
X<pad_check_dup>, C<pad_findlex> X<pad_findlex>, C<pad_fixup_inner_anons>
X<pad_fixup_inner_anons>, C<pad_free> X<pad_free>, C<pad_leavemy>
X<pad_leavemy>, C<padlist_dup> X<padlist_dup>, C<padname_dup>
X<padname_dup>, C<padnamelist_dup> X<padnamelist_dup>, C<pad_push>
X<pad_push>, C<pad_reset> X<pad_reset>, C<pad_setsv> X<pad_setsv>,
C<pad_sv> X<pad_sv>, C<pad_swipe> X<pad_swipe>, C<set_context>
X<set_context>, C<si_dup> X<si_dup>, C<ss_dup> X<ss_dup>

=item Errno

C<dSAVEDERRNO> X<dSAVEDERRNO>, C<dSAVE_ERRNO> X<dSAVE_ERRNO>,
C<RESTORE_ERRNO> X<RESTORE_ERRNO>, C<SAVE_ERRNO> X<SAVE_ERRNO>, C<SETERRNO>
X<SETERRNO>

=item Exception Handling (simple) Macros

=item Filesystem configuration values

=item Floating point

=item General Configuration

=item Global Variables

=item GV Handling and Stashes
X<GV_CACHE_ONLY>

C<amagic_applies> X<amagic_applies>, C<gp_dup> X<gp_dup>, C<gv_handler>
X<gv_handler>, C<gv_stashsvpvn_cached> X<gv_stashsvpvn_cached>,
C<gv_try_downgrade> X<gv_try_downgrade>

=item Hook manipulation

=item HV Handling
X<HvNAME_get>

C<hv_eiter_p> X<hv_eiter_p>, C<hv_eiter_set> X<hv_eiter_set>,
C<hv_ename_add> X<hv_ename_add>, C<hv_ename_delete> X<hv_ename_delete>,
C<hv_fill> X<hv_fill>, C<hv_placeholders_get> X<hv_placeholders_get>,
C<hv_placeholders_set> X<hv_placeholders_set>, C<hv_riter_p> X<hv_riter_p>,
C<hv_riter_set> X<hv_riter_set>, C<refcounted_he_chain_2hv>
X<refcounted_he_chain_2hv>, C<refcounted_he_fetch_pv>
X<refcounted_he_fetch_pv>, C<refcounted_he_fetch_pvn>
X<refcounted_he_fetch_pvn>, C<refcounted_he_fetch_pvs>
X<refcounted_he_fetch_pvs>, C<refcounted_he_fetch_sv>
X<refcounted_he_fetch_sv>, C<refcounted_he_free> X<refcounted_he_free>,
C<refcounted_he_inc> X<refcounted_he_inc>, C<refcounted_he_new_pv>
X<refcounted_he_new_pv>, C<refcounted_he_new_pvn> X<refcounted_he_new_pvn>,
C<refcounted_he_new_pvs> X<refcounted_he_new_pvs>, C<refcounted_he_new_sv>
X<refcounted_he_new_sv>, C<unsharepvn> X<unsharepvn>

=item Input/Output

C<dirp_dup> X<dirp_dup>, C<fp_dup> X<fp_dup>, C<my_fflush_all>
X<my_fflush_all>, C<my_mkostemp> X<my_mkostemp>, C<my_mkstemp>
X<my_mkstemp>, C<PL_last_in_gv> X<PL_last_in_gv>, C<PL_ofsgv> X<PL_ofsgv>,
C<PL_rs> X<PL_rs>, C<start_glob> X<start_glob>

=item Integer

=item I/O Formats

=item Lexer interface

C<resume_compcv_and_save> X<resume_compcv_and_save>, C<resume_compcv_final>
X<resume_compcv_final>, C<validate_proto> X<validate_proto>

=item Locales

=item Magic

C<magic_clearhint> X<magic_clearhint>, C<magic_clearhints>
X<magic_clearhints>, C<magic_methcall> X<magic_methcall>, C<magic_sethint>
X<magic_sethint>, C<mg_dup> X<mg_dup>, C<mg_localize> X<mg_localize>

=item Memory Management

C<calloc> X<calloc>, C<malloc> X<malloc>, C<mfree> X<mfree>, C<realloc>
X<realloc>

=item MRO

C<mro_get_linear_isa_dfs> X<mro_get_linear_isa_dfs>, C<mro_isa_changed_in>
X<mro_isa_changed_in>, C<mro_package_moved> X<mro_package_moved>

=item Multicall Functions

=item Numeric Functions

C<isinfnansv> X<isinfnansv>

=item Optrees

C<newATTRSUB_x> X<newATTRSUB_x>, C<newMYSUB> X<newMYSUB>,
C<newXS_len_flags> X<newXS_len_flags>, C<op_refcnt_lock> X<op_refcnt_lock>,
C<op_refcnt_unlock> X<op_refcnt_unlock>, C<traverse_op_tree>
X<traverse_op_tree>

=item Pack and Unpack

=item Pad Data Structures

C<CX_CURPAD_SAVE> X<CX_CURPAD_SAVE>, C<CX_CURPAD_SV> X<CX_CURPAD_SV>,
C<PAD_BASE_SV> X<PAD_BASE_SV>, C<PAD_CLONE_VARS> X<PAD_CLONE_VARS>,
C<PAD_COMPNAME_FLAGS> X<PAD_COMPNAME_FLAGS>, C<PAD_COMPNAME_GEN>
X<PAD_COMPNAME_GEN>, C<PAD_COMPNAME_GEN_set> X<PAD_COMPNAME_GEN_set>,
C<PAD_COMPNAME_OURSTASH> X<PAD_COMPNAME_OURSTASH>, C<PAD_COMPNAME_PV>
X<PAD_COMPNAME_PV>, C<PAD_COMPNAME_TYPE> X<PAD_COMPNAME_TYPE>,
C<PadnameIsFIELD> X<PadnameIsFIELD>, C<PadnameIsOUR> X<PadnameIsOUR>,
C<PadnameIsSTATE> X<PadnameIsSTATE>, C<PadnameOURSTASH> X<PadnameOURSTASH>,
C<PadnameOUTER> X<PadnameOUTER>, C<PadnameTYPE> X<PadnameTYPE>,
C<PAD_RESTORE_LOCAL> X<PAD_RESTORE_LOCAL>, C<PAD_SAVE_LOCAL>
X<PAD_SAVE_LOCAL>, C<PAD_SAVE_SETNULLPAD> X<PAD_SAVE_SETNULLPAD>,
C<PAD_SET_CUR> X<PAD_SET_CUR>, C<PAD_SET_CUR_NOSAVE> X<PAD_SET_CUR_NOSAVE>,
C<PAD_SETSV> X<PAD_SETSV>, C<PAD_SV> X<PAD_SV>, C<PAD_SVl> X<PAD_SVl>,
C<SAVECLEARSV> X<SAVECLEARSV>, C<SAVECOMPPAD> X<SAVECOMPPAD>, C<SAVEPADSV>
X<SAVEPADSV>

=item Password and Group access

=item Paths to system commands

=item Prototype information

=item Reference-counted stack manipulation

=item REGEXP Functions
X<RX_OFFSp>

C<regnode>

=item Reports and Formats

=item Signals

=item Site configuration

=item Sockets configuration values

=item Source Filters

=item Stack Manipulation Macros

C<djSP> X<djSP>, C<LVRET> X<LVRET>, C<save_alloc> X<save_alloc>

=item String Handling

C<delimcpy_no_escape> X<delimcpy_no_escape>, C<my_cxt_init> X<my_cxt_init>,
C<quadmath_format_needed> X<quadmath_format_needed>,
C<quadmath_format_valid> X<quadmath_format_valid>

=item SV Flags

C<SVt_INVLIST> X<SVt_INVLIST>

=item SV Handling

C<PL_Sv> X<PL_Sv>, C<sv_add_arena> X<sv_add_arena>, C<sv_2bool>
X<sv_2bool>, C<sv_2bool_flags> X<sv_2bool_flags>, C<sv_clean_all>
X<sv_clean_all>, C<sv_clean_objs> X<sv_clean_objs>, C<sv_free_arenas>
X<sv_free_arenas>, C<sv_grow> X<sv_grow>, C<sv_grow_fresh>
X<sv_grow_fresh>, C<sv_newref> X<sv_newref>, C<sv_2num> X<sv_2num>,
C<sv_pv> X<sv_pv>, C<sv_pvbyte> X<sv_pvbyte>, C<sv_pvbyten_force>
X<sv_pvbyten_force>, C<sv_2pvbyte_nolen> X<sv_2pvbyte_nolen>,
C<sv_pvn_force> X<sv_pvn_force>, C<sv_2pv_nolen> X<sv_2pv_nolen>,
C<sv_pvutf8n_force> X<sv_pvutf8n_force>, C<sv_2pvutf8_nolen>
X<sv_2pvutf8_nolen>, C<sv_pvutf8> X<sv_pvutf8>, C<sv_tainted>
X<sv_tainted>, C<SvTHINKFIRST> X<SvTHINKFIRST>, C<sv_true> X<sv_true>,
C<sv_untaint> X<sv_untaint>

=item Tainting

C<sv_taint> X<sv_taint>, C<TAINT> X<TAINT>, C<TAINT_ENV> X<TAINT_ENV>,
C<taint_env> X<taint_env>, C<TAINT_get> X<TAINT_get>, C<TAINT_IF>
X<TAINT_IF>, C<TAINTING_get> X<TAINTING_get>, C<TAINTING_set>
X<TAINTING_set>, C<TAINT_NOT> X<TAINT_NOT>, C<TAINT_PROPER>
X<TAINT_PROPER>, C<taint_proper> X<taint_proper>, C<TAINT_set>
X<TAINT_set>, C<TAINT_WARN_get> X<TAINT_WARN_get>, C<TAINT_WARN_set>
X<TAINT_WARN_set>

=item Time

=item Typedef names

=item Unicode Support
X<FOLDEQ_LOCALE>X<FOLDEQ_S1_ALREADY_FOLDED>X<FOLDEQ_S1_FOLDS_SANE>X<FOLDEQ_
S2_ALREADY_FOLDED>X<FOLDEQ_S2_FOLDS_SANE>X<FOLDEQ_UTF8_NOMIX_ASCII>

C<bytes_from_utf8_loc> X<bytes_from_utf8_loc>, C<find_uninit_var>
X<find_uninit_var>, C<isSCRIPT_RUN> X<isSCRIPT_RUN>,
C<is_utf8_non_invariant_string> X<is_utf8_non_invariant_string>,
C<utf8n_to_uvuni> X<utf8n_to_uvuni>, C<utf8_to_uvuni> X<utf8_to_uvuni>,
C<uvoffuni_to_utf8_flags> X<uvoffuni_to_utf8_flags>, C<valid_utf8_to_uvchr>
X<valid_utf8_to_uvchr>, C<variant_under_utf8_count>
X<variant_under_utf8_count>

=item Utility Functions

C<my_popen_list> X<my_popen_list>, C<my_socketpair> X<my_socketpair>

=item Versioning

=item Warning and Dieing

C<deprecate> X<deprecate>, C<deprecate_disappears_in>
X<deprecate_disappears_in>, C<deprecate_fatal_in> X<deprecate_fatal_in>,
C<PL_dowarn> X<PL_dowarn>, C<report_uninit> X<report_uninit>

=item XS

=item Undocumented elements

=item AUTHORS

=item SEE ALSO

=back

=head2 perliol - C API for Perl's implementation of IO in Layers.

=over 4

=item SYNOPSIS

=item DESCRIPTION

=over 4

=item History and Background

=item Basic Structure

=item Layers vs Disciplines

=item Data Structures

=item Functions and Attributes

=item Per-instance Data

=item Layers in action

=item Per-instance flag bits

PERLIO_F_EOF, PERLIO_F_CANWRITE,  PERLIO_F_CANREAD, PERLIO_F_ERROR,
PERLIO_F_TRUNCATE, PERLIO_F_APPEND, PERLIO_F_CRLF, PERLIO_F_UTF8,
PERLIO_F_UNBUF, PERLIO_F_WRBUF, PERLIO_F_RDBUF, PERLIO_F_LINEBUF,
PERLIO_F_TEMP, PERLIO_F_OPEN, PERLIO_F_FASTGETS

=item Methods in Detail

fsize, name, size, kind, PERLIO_K_BUFFERED, PERLIO_K_RAW, PERLIO_K_CANCRLF,
PERLIO_K_FASTGETS, PERLIO_K_MULTIARG, Pushed, Popped, Open, Binmode,
Getarg, Fileno, Dup, Read, Write, Seek, Tell, Close, Flush, Fill, Eof,
Error,	Clearerr, Setlinebuf, Get_base, Get_bufsiz, Get_ptr, Get_cnt,
Set_ptrcnt

=item Utilities

=item Implementing PerlIO Layers

C implementations, Perl implementations

=item Core Layers

"unix", "perlio", "stdio", "crlf", "mmap", "pending", "raw", "utf8"

=item Extension Layers

":encoding", ":scalar", ":via"

=back

=item TODO

=back

=head2 perlapio - perl's IO abstraction interface.

=over 4

=item SYNOPSIS

=item DESCRIPTION

1. USE_STDIO, 2. USE_PERLIO, B<PerlIO_stdin()>, B<PerlIO_stdout()>,
B<PerlIO_stderr()>, B<PerlIO_open(path, mode)>, B<PerlIO_fdopen(fd,mode)>,
B<PerlIO_reopen(path,mode,f)>, B<PerlIO_printf(f,fmt,...)>,
B<PerlIO_vprintf(f,fmt,a)>, B<PerlIO_stdoutf(fmt,...)>,
B<PerlIO_read(f,buf,count)>, B<PerlIO_write(f,buf,count)>,
B<PerlIO_fill(f)>, B<PerlIO_close(f)>, B<PerlIO_puts(f,s)>,
B<PerlIO_putc(f,c)>, B<PerlIO_ungetc(f,c)>, B<PerlIO_unread(f,buf,count)>,
B<PerlIO_getc(f)>, B<PerlIO_eof(f)>, B<PerlIO_error(f)>,
B<PerlIO_fileno(f)>, B<PerlIO_clearerr(f)>, B<PerlIO_flush(f)>,
B<PerlIO_seek(f,offset,whence)>, B<PerlIO_tell(f)>, B<PerlIO_getpos(f,p)>,
B<PerlIO_setpos(f,p)>, B<PerlIO_rewind(f)>, B<PerlIO_tmpfile()>,
B<PerlIO_setlinebuf(f)>

=over 4

=item Co-existence with stdio

B<PerlIO_importFILE(f,mode)>, B<PerlIO_exportFILE(f,mode)>,
B<PerlIO_releaseFILE(p,f)>, B<PerlIO_findFILE(f)>

=item "Fast gets" Functions

B<PerlIO_fast_gets(f)>, B<PerlIO_has_cntptr(f)>, B<PerlIO_get_cnt(f)>,
B<PerlIO_get_ptr(f)>, B<PerlIO_set_ptrcnt(f,p,c)>, B<PerlIO_canset_cnt(f)>,
B<PerlIO_set_cnt(f,c)>, B<PerlIO_has_base(f)>, B<PerlIO_get_base(f)>,
B<PerlIO_get_bufsiz(f)>

=item Other Functions

PerlIO_apply_layers(aTHX_ f,mode,layers), PerlIO_binmode(aTHX_
f,ptype,imode,layers), 'E<lt>' read, 'E<gt>' write, '+' read/write,
PerlIO_debug(fmt,...)

=back

=back

=head2 perlhack - How to hack on Perl

=over 4

=item DESCRIPTION

=item SUPER QUICK PATCH GUIDE

Check out the source repository, Ensure you're following the latest advice,
Create a branch for your change, Make your change, Test your change, Commit
your change, Send your change to the Perl issue tracker, Thank you,
Acknowledgement, Next time

=item BUG REPORTING

=item PERL 5 PORTERS

=over 4

=item perl-changes mailing list

=item #p5p on IRC

=back

=item GETTING THE PERL SOURCE

=over 4

=item Read access via Git

=item Read access via the web

=item Write access via git

=back

=item PATCHING PERL

=over 4

=item Submitting patches

=item Getting your patch accepted

Why, What, How

=item Patching a core module

=item Updating perldelta

=item What makes for a good patch?

=back

=item TESTING

F<t/base>, F<t/comp> and F<t/opbasic>, All other subdirectories of F<t/>,
Test files not found under F<t/>

=over 4

=item Special C<make test> targets

test_porting, minitest, test.valgrind check.valgrind, test_harness,
test-notty test_notty

=item Parallel tests

=item Running tests by hand

=item Using F<t/harness> for testing

-v, -torture, -re=PATTERN, -re LIST OF PATTERNS, PERL_CORE=1,
PERL_DESTRUCT_LEVEL=2, PERL, PERL_SKIP_TTY_TEST, PERL_TEST_Net_Ping,
PERL_TEST_NOVREXX, PERL_TEST_NUMCONVERTS, PERL_TEST_MEMORY

=item Performance testing

=item Building perl at older commits

=back

=item MORE READING FOR GUTS HACKERS

L<perlsource>, L<perlinterp>, L<perlhacktut>, L<perlhacktips>, L<perlguts>,
L<perlxstut> and L<perlxs>, L<perlapi>, F<Porting/pumpkin.pod>

=item CPAN TESTERS AND PERL SMOKERS

=item WHAT NEXT?

=over 4

=item "The Road goes ever on and on, down from the door where it began."

=item Metaphoric Quotations

=back

=item AUTHOR

=back

=head2 perlsource - A guide to the Perl source tree

=over 4

=item DESCRIPTION

=item FINDING YOUR WAY AROUND

=over 4

=item C code

=item Core modules

F<lib/>, F<ext/>, F<dist/>, F<cpan/>

=item Tests

Module tests, F<t/base/>, F<t/cmd/>, F<t/comp/>, F<t/io/>, F<t/mro/>,
F<t/op/>, F<t/opbasic/>, F<t/re/>, F<t/run/>, F<t/uni/>, F<t/win32/>,
F<t/porting/>, F<t/lib/>

=item Documentation

=item Hacking tools and documentation

F<check*>, F<Maintainers>, F<Maintainers.pl>, and F<Maintainers.pm>,
F<podtidy>

=item Build system

=item F<AUTHORS>

=item F<MANIFEST>

=back

=back

=head2 perlinterp - An overview of the Perl interpreter

=over 4

=item DESCRIPTION

=item ELEMENTS OF THE INTERPRETER

=over 4

=item Startup

=item Parsing

=item Optimization

=item Running

=item Exception handing

level 2: perl-level exit() and internals my_exit(), level 3: perl-level
die() and internals croak(), level 1: unused, level 0: normal return

=item INTERNAL VARIABLE TYPES

=back

=item OP TREES

=item STACKS

=over 4

=item Argument stack

=item Mark stack

=item Save stack

=back

=item MILLIONS OF MACROS

=item FURTHER READING

=back

=head2 perlhacktut - Walk through the creation of a simple C code patch

=over 4

=item DESCRIPTION

=item EXAMPLE OF A SIMPLE PATCH

=over 4

=item Writing the patch

=item Testing the patch

=item Documenting the patch

=item Submit

=back

=item AUTHOR

=back

=head2 perlhacktips - Tips for Perl core C code hacking

=over 4

=item DESCRIPTION

=item COMMON PROBLEMS

=over 4

=item Perl environment problems

=item C99

AIX, HP/UX, Solaris

=item Symbol Names and Namespace Pollution

B<Don't begin a symbol name with an underscore>; (I<e.g.>, don't use:
C<_FOOBAR>), B<Don't use two consecutive underscores in a symbol name>;
(I<e.g.>, don't use C<FOO__BAR>)

=item Writing safer macros

=item Portability problems

=item Problematic System Interfaces

=item Security problems

=back

=item DEBUGGING

=over 4

=item Poking at Perl

=item Using a source-level debugger

run [args], break function_name, break source.c:xxx, step, next, continue,
finish, 'enter', ptype, print

=item gdb macro support

=item Dumping Perl Data Structures

=item Using gdb to look at specific parts of a program

=item Using gdb to look at what the parser/lexer are doing

=back

=item SOURCE CODE STATIC ANALYSIS

=over 4

=item lint
