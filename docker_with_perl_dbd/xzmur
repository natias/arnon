#define REFF_t8                        149     /*      0x095 */
#define REFF_tb_pb                        296  /*      0x128 */
#define REFF_tb_p8                        297  /*      0x129 */
#define REFF_t8_pb                        298  /*      0x12a */
#define REFF_t8_p8                        299  /*      0x12b */

#define REFFL                        75        /* 0x4b Match already matched
                                                  string, using /li rules. */
#define REFFL_tb                       150     /*      0x096 */
#define REFFL_t8                       151     /*      0x097 */
#define REFFL_tb_pb                       300  /*      0x12c */
#define REFFL_tb_p8                       301  /*      0x12d */
#define REFFL_t8_pb                       302  /*      0x12e */
#define REFFL_t8_p8                       303  /*      0x12f */

#define REFFU                        76        /* 0x4c Match already matched
                                                  string, usng /ui. */
#define REFFU_tb                       152     /*      0x098 */
#define REFFU_t8                       153     /*      0x099 */
#define REFFU_tb_pb                       304  /*      0x130 */
#define REFFU_tb_p8                       305  /*      0x131 */
#define REFFU_t8_pb                       306  /*      0x132 */
#define REFFU_t8_p8                       307  /*      0x133 */

#define REFFA                        77        /* 0x4d Match already matched
                                                  string, using /aai rules. */
#define REFFA_tb                       154     /*      0x09a */
#define REFFA_t8                       155     /*      0x09b */
#define REFFA_tb_pb                       308  /*      0x134 */
#define REFFA_tb_p8                       309  /*      0x135 */
#define REFFA_t8_pb                       310  /*      0x136 */
#define REFFA_t8_p8                       311  /*      0x137 */

#define REFN                         78        /* 0x4e Match some already
                                                  matched string */
#define REFN_tb                        156     /*      0x09c */
#define REFN_t8                        157     /*      0x09d */
#define REFN_tb_pb                        312  /*      0x138 */
#define REFN_tb_p8                        313  /*      0x139 */
#define REFN_t8_pb                        314  /*      0x13a */
#define REFN_t8_p8                        315  /*      0x13b */

#define REFFN                        79        /* 0x4f Match already matched
                                                  string, using /di rules. */
#define REFFN_tb                       158     /*      0x09e */
#define REFFN_t8                       159     /*      0x09f */
#define REFFN_tb_pb                       316  /*      0x13c */
#define REFFN_tb_p8                       317  /*      0x13d */
#define REFFN_t8_pb                       318  /*      0x13e */
#define REFFN_t8_p8                       319  /*      0x13f */

#define REFFLN                       80        /* 0x50 Match already matched
                                                  string, using /li rules. */
#define REFFLN_tb                      160     /*      0x0a0 */
#define REFFLN_t8                      161     /*      0x0a1 */
#define REFFLN_tb_pb                      320  /*      0x140 */
#define REFFLN_tb_p8                      321  /*      0x141 */
#define REFFLN_t8_pb                      322  /*      0x142 */
#define REFFLN_t8_p8                      323  /*      0x143 */

#define REFFUN                       81        /* 0x51 Match already matched
                                                  string, using /ui rules. */
#define REFFUN_tb                      162     /*      0x0a2 */
#define REFFUN_t8                      163     /*      0x0a3 */
#define REFFUN_tb_pb                      324  /*      0x144 */
#define REFFUN_tb_p8                      325  /*      0x145 */
#define REFFUN_t8_pb                      326  /*      0x146 */
#define REFFUN_t8_p8                      327  /*      0x147 */

#define REFFAN                       82        /* 0x52 Match already matched
                                                  string, using /aai rules. */
#define REFFAN_tb                      164     /*      0x0a4 */
#define REFFAN_t8                      165     /*      0x0a5 */
#define REFFAN_tb_pb                      328  /*      0x148 */
#define REFFAN_tb_p8                      329  /*      0x149 */
#define REFFAN_t8_pb                      330  /*      0x14a */
#define REFFAN_t8_p8                      331  /*      0x14b */

#define LONGJMP                      83        /* 0x53 Jump far away. */
#define LONGJMP_tb                     166     /*      0x0a6 */
#define LONGJMP_t8                     167     /*      0x0a7 */
#define LONGJMP_tb_pb                     332  /*      0x14c */
#define LONGJMP_tb_p8                     333  /*      0x14d */
#define LONGJMP_t8_pb                     334  /*      0x14e */
#define LONGJMP_t8_p8                     335  /*      0x14f */

#define BRANCHJ                      84        /* 0x54 BRANCH with long
                                                  offset. */
#define BRANCHJ_tb                     168     /*      0x0a8 */
#define BRANCHJ_t8                     169     /*      0x0a9 */
#define BRANCHJ_tb_pb                     336  /*      0x150 */
#define BRANCHJ_tb_p8                     337  /*      0x151 */
#define BRANCHJ_t8_pb                     338  /*      0x152 */
#define BRANCHJ_t8_p8                     339  /*      0x153 */

#define IFMATCH                      85        /* 0x55 Succeeds if the
                                                  following matches; non-zero
                                                  flags "f", next_off "o"
                                                  means lookbehind assertion
                                                  starting "f..(f-o)"
                                                  characters before current */
#define IFMATCH_tb                     170     /*      0x0aa */
#define IFMATCH_t8                     171     /*      0x0ab */
#define IFMATCH_tb_pb                     340  /*      0x154 */
#define IFMATCH_tb_p8                     341  /*      0x155 */
#define IFMATCH_t8_pb                     342  /*      0x156 */
#define IFMATCH_t8_p8                     343  /*      0x157 */

#define UNLESSM                      86        /* 0x56 Fails if the following
                                                  matches; non-zero flags "f",
                                                  next_off "o" means
                                                  lookbehind assertion
                                                  starting "f..(f-o)"
                                                  characters before current */
#define UNLESSM_tb                     172     /*      0x0ac */
#define UNLESSM_t8                     173     /*      0x0ad */
#define UNLESSM_tb_pb                     344  /*      0x158 */
#define UNLESSM_tb_p8                     345  /*      0x159 */
#define UNLESSM_t8_pb                     346  /*      0x15a */
#define UNLESSM_t8_p8                     347  /*      0x15b */

#define SUSPEND                      87        /* 0x57 "Independent" sub-RE.
                                               */
#define SUSPEND_tb                     174     /*      0x0ae */
#define SUSPEND_t8                     175     /*      0x0af */
#define SUSPEND_tb_pb                     348  /*      0x15c */
#define SUSPEND_tb_p8                     349  /*      0x15d */
#define SUSPEND_t8_pb                     350  /*      0x15e */
#define SUSPEND_t8_p8                     351  /*      0x15f */

#define IFTHEN                       88        /* 0x58 Switch, should be
                                                  preceded by switcher. */
#define IFTHEN_tb                      176     /*      0x0b0 */
#define IFTHEN_t8                      177     /*      0x0b1 */
#define IFTHEN_tb_pb                      352  /*      0x160 */
#define IFTHEN_tb_p8                      353  /*      0x161 */
#define IFTHEN_t8_pb                      354  /*      0x162 */
#define IFTHEN_t8_p8                      355  /*      0x163 */

#define GROUPP                       89        /* 0x59 Whether the group
                                                  matched. */
#define GROUPP_tb                      178     /*      0x0b2 */
#define GROUPP_t8                      179     /*      0x0b3 */
#define GROUPP_tb_pb                      356  /*      0x164 */
#define GROUPP_tb_p8                      357  /*      0x165 */
#define GROUPP_t8_pb                      358  /*      0x166 */
#define GROUPP_t8_p8                      359  /*      0x167 */

#define EVAL                         90        /* 0x5a Execute some Perl code.
                                               */
#define EVAL_tb                        180     /*      0x0b4 */
#define EVAL_t8                        181     /*      0x0b5 */
#define EVAL_tb_pb                        360  /*      0x168 */
#define EVAL_tb_p8                        361  /*      0x169 */
#define EVAL_t8_pb                        362  /*      0x16a */
#define EVAL_t8_p8                        363  /*      0x16b */

#define MINMOD                       91        /* 0x5b Next operator is not
                                                  greedy. */
#define MINMOD_tb                      182     /*      0x0b6 */
#define MINMOD_t8                      183     /*      0x0b7 */
#define MINMOD_tb_pb                      364  /*      0x16c */
#define MINMOD_tb_p8                      365  /*      0x16d */
#define MINMOD_t8_pb                      366  /*      0x16e */
#define MINMOD_t8_p8                      367  /*      0x16f */

#define LOGICAL                      92        /* 0x5c Next opcode should set
                                                  the flag only. */
#define LOGICAL_tb                     184     /*      0x0b8 */
#define LOGICAL_t8                     185     /*      0x0b9 */
#define LOGICAL_tb_pb                     368  /*      0x170 */
#define LOGICAL_tb_p8                     369  /*      0x171 */
#define LOGICAL_t8_pb                     370  /*      0x172 */
#define LOGICAL_t8_p8                     371  /*      0x173 */

#define RENUM                        93        /* 0x5d Group with
                                                  independently numbered
                                                  parens. */
#define RENUM_tb                       186     /*      0x0ba */
#define RENUM_t8                       187     /*      0x0bb */
#define RENUM_tb_pb                       372  /*      0x174 */
#define RENUM_tb_p8                       373  /*      0x175 */
#define RENUM_t8_pb                       374  /*      0x176 */
#define RENUM_t8_p8                       375  /*      0x177 */

#define GOSUB                        94        /* 0x5e recurse to paren arg1
                                                  at (signed) ofs arg2 */
#define GOSUB_tb                       188     /*      0x0bc */
#define GOSUB_t8                       189     /*      0x0bd */
#define GOSUB_tb_pb                       376  /*      0x178 */
#define GOSUB_tb_p8                       377  /*      0x179 */
#define GOSUB_t8_pb                       378  /*      0x17a */
#define GOSUB_t8_p8                       379  /*      0x17b */

#define GROUPPN                      95        /* 0x5f Whether the group
                                                  matched. */
#define GROUPPN_tb                     190     /*      0x0be */
#define GROUPPN_t8                     191     /*      0x0bf */
#define GROUPPN_tb_pb                     380  /*      0x17c */
#define GROUPPN_tb_p8                     381  /*      0x17d */
#define GROUPPN_t8_pb                     382  /*      0x17e */
#define GROUPPN_t8_p8                     383  /*      0x17f */

#define INSUBP                       96        /* 0x60 Whether we are in a
                                                  specific recurse. */
#define INSUBP_tb                      192     /*      0x0c0 */
#define INSUBP_t8                      193     /*      0x0c1 */
#define INSUBP_tb_pb                      384  /*      0x180 */
#define INSUBP_tb_p8                      385  /*      0x181 */
#define INSUBP_t8_pb                      386  /*      0x182 */
#define INSUBP_t8_p8                      387  /*      0x183 */

#define DEFINEP                      97        /* 0x61 Never execute directly.
                                               */
#define DEFINEP_tb                     194     /*      0x0c2 */
#define DEFINEP_t8                     195     /*      0x0c3 */
#define DEFINEP_tb_pb                     388  /*      0x184 */
#define DEFINEP_tb_p8                     389  /*      0x185 */
#define DEFINEP_t8_pb                     390  /*      0x186 */
#define DEFINEP_t8_p8                     391  /*      0x187 */

#define ENDLIKE                      98        /* 0x62 Used only for the type
                                                  field of verbs */
#define ENDLIKE_tb                     196     /*      0x0c4 */
#define ENDLIKE_t8                     197     /*      0x0c5 */
#define ENDLIKE_tb_pb                     392  /*      0x188 */
#define ENDLIKE_tb_p8                     393  /*      0x189 */
#define ENDLIKE_t8_pb                     394  /*      0x18a */
#define ENDLIKE_t8_p8                     395  /*      0x18b */

#define OPFAIL                       99        /* 0x63 Same as (?!), but with
                                                  verb arg */
#define OPFAIL_tb                      198     /*      0x0c6 */
#define OPFAIL_t8                      199     /*      0x0c7 */
#define OPFAIL_tb_pb                      396  /*      0x18c */
#define OPFAIL_tb_p8                      397  /*      0x18d */
#define OPFAIL_t8_pb                      398  /*      0x18e */
#define OPFAIL_t8_p8                      399  /*      0x18f */

#define ACCEPT                      100        /* 0x64 Accepts the current
                                                  matched string, with verbar
                                               */
#define ACCEPT_tb                      200     /*      0x0c8 */
#define ACCEPT_t8                      201     /*      0x0c9 */
#define ACCEPT_tb_pb                      400  /*      0x190 */
#define ACCEPT_tb_p8                      401  /*      0x191 */
#define ACCEPT_t8_pb                      402  /*      0x192 */
#define ACCEPT_t8_p8                      403  /*      0x193 */

#define VERB                        101        /* 0x65 Used only for the type
                                                  field of verbs */
#define VERB_tb                        202     /*      0x0ca */
#define VERB_t8                        203     /*      0x0cb */
#define VERB_tb_pb                        404  /*      0x194 */
#define VERB_tb_p8                        405  /*      0x195 */
#define VERB_t8_pb                        406  /*      0x196 */
#define VERB_t8_p8                        407  /*      0x197 */

#define PRUNE                       102        /* 0x66 Pattern fails at this
                                                  startpoint if
                                                  no-backtracking through this
                                               */
#define PRUNE_tb                       204     /*      0x0cc */
#define PRUNE_t8                       205     /*      0x0cd */
#define PRUNE_tb_pb                       408  /*      0x198 */
#define PRUNE_tb_p8                       409  /*      0x199 */
#define PRUNE_t8_pb                       410  /*      0x19a */
#define PRUNE_t8_p8                       411  /*      0x19b */

#define MARKPOINT                   103        /* 0x67 Push the current
                                                  location for rollback by
                                                  cut. */
#define MARKPOINT_tb                   206     /*      0x0ce */
#define MARKPOINT_t8                   207     /*      0x0cf */
#define MARKPOINT_tb_pb                   412  /*      0x19c */
#define MARKPOINT_tb_p8                   413  /*      0x19d */
#define MARKPOINT_t8_pb                   414  /*      0x19e */
#define MARKPOINT_t8_p8                   415  /*      0x19f */

#define SKIP                        104        /* 0x68 On failure skip forward
                                                  (to the mark) before
                                                  retrying */
#define SKIP_tb                        208     /*      0x0d0 */
#define SKIP_t8                        209     /*      0x0d1 */
#define SKIP_tb_pb                        416  /*      0x1a0 */
#define SKIP_tb_p8                        417  /*      0x1a1 */
#define SKIP_t8_pb                        418  /*      0x1a2 */
#define SKIP_t8_p8                        419  /*      0x1a3 */

#define COMMIT                      105        /* 0x69 Pattern fails outright
                                                  if backtracking through this
                                               */
#define COMMIT_tb                      210     /*      0x0d2 */
#define COMMIT_t8                      211     /*      0x0d3 */
#define COMMIT_tb_pb                      420  /*      0x1a4 */
#define COMMIT_tb_p8                      421  /*      0x1a5 */
#define COMMIT_t8_pb                      422  /*      0x1a6 */
#define COMMIT_t8_p8                      423  /*      0x1a7 */

#define CUTGROUP                    106        /* 0x6a On failure go to the
                                                  next alternation in the
                                                  group */
#define CUTGROUP_tb                    212     /*      0x0d4 */
#define CUTGROUP_t8                    213     /*      0x0d5 */
#define CUTGROUP_tb_pb                    424  /*      0x1a8 */
#define CUTGROUP_tb_p8                    425  /*      0x1a9 */
#define CUTGROUP_t8_pb                    426  /*      0x1aa */
#define CUTGROUP_t8_p8                    427  /*      0x1ab */

#define KEEPS                       107        /* 0x6b $& begins here. */
#define KEEPS_tb                       214     /*      0x0d6 */
#define KEEPS_t8                       215     /*      0x0d7 */
#define KEEPS_tb_pb                       428  /*      0x1ac */
#define KEEPS_tb_p8                       429  /*      0x1ad */
#define KEEPS_t8_pb                       430  /*      0x1ae */
#define KEEPS_t8_p8                       431  /*      0x1af */

#define LOOKBEHIND_END              108        /* 0x6c Return from lookbehind
                                                  (IFMATCH/UNLESSM) and
                                                  validate position */
#define LOOKBEHIND_END_tb              216     /*      0x0d8 */
#define LOOKBEHIND_END_t8              217     /*      0x0d9 */
#define LOOKBEHIND_END_tb_pb              432  /*      0x1b0 */
#define LOOKBEHIND_END_tb_p8              433  /*      0x1b1 */
#define LOOKBEHIND_END_t8_pb              434  /*      0x1b2 */
#define LOOKBEHIND_END_t8_p8              435  /*      0x1b3 */

#define OPTIMIZED                   109        /* 0x6d Placeholder for dump.
                                               */
#define OPTIMIZED_tb                   218     /*      0x0da */
#define OPTIMIZED_t8                   219     /*      0x0db */
#define OPTIMIZED_tb_pb                   436  /*      0x1b4 */
#define OPTIMIZED_tb_p8                   437  /*      0x1b5 */
#define OPTIMIZED_t8_pb                   438  /*      0x1b6 */
#define OPTIMIZED_t8_p8                   439  /*      0x1b7 */

#define PSEUDO                      110        /* 0x6e Pseudo opcode for
                                                  internal use. */
#define PSEUDO_tb                      220     /*      0x0dc */
#define PSEUDO_t8                      221     /*      0x0dd */
#define PSEUDO_tb_pb                      440  /*      0x1b8 */
#define PSEUDO_tb_p8                      441  /*      0x1b9 */
#define PSEUDO_t8_pb                      442  /*      0x1ba */
#define PSEUDO_t8_p8                      443  /*      0x1bb */

#define REGEX_SET                   111        /* 0x6f Regex set, temporary
                                                  node used in
                                                  pre-optimization compilation
                                               */
#define REGEX_SET_tb                   222     /*      0x0de */
#define REGEX_SET_t8                   223     /*      0x0df */
#define REGEX_SET_tb_pb                   444  /*      0x1bc */
#define REGEX_SET_tb_p8                   445  /*      0x1bd */
#define REGEX_SET_t8_pb                   446  /*      0x1be */
#define REGEX_SET_t8_p8                   447  /*      0x1bf */

	/* ------------ States ------------- */
#define TRIE_next                   112        /* 0x70 state for TRIE */
#define TRIE_next_tb                   224     /*      0x0e0 */
#define TRIE_next_t8                   225     /*      0x0e1 */
#define TRIE_next_tb_pb                   448  /*      0x1c0 */
#define TRIE_next_tb_p8                   449  /*      0x1c1 */
#define TRIE_next_t8_pb                   450  /*      0x1c2 */
#define TRIE_next_t8_p8                   451  /*      0x1c3 */

#define TRIE_next_fail              113        /* 0x71 state for TRIE */
#define TRIE_next_fail_tb              226     /*      0x0e2 */
#define TRIE_next_fail_t8              227     /*      0x0e3 */
#define TRIE_next_fail_tb_pb              452  /*      0x1c4 */
#define TRIE_next_fail_tb_p8              453  /*      0x1c5 */
#define TRIE_next_fail_t8_pb              454  /*      0x1c6 */
#define TRIE_next_fail_t8_p8              455  /*      0x1c7 */

#define EVAL_B                      114        /* 0x72 state for EVAL */
#define EVAL_B_tb                      228     /*      0x0e4 */
#define EVAL_B_t8                      229     /*      0x0e5 */
#define EVAL_B_tb_pb                      456  /*      0x1c8 */
#define EVAL_B_tb_p8                      457  /*      0x1c9 */
#define EVAL_B_t8_pb                      458  /*      0x1ca */
#define EVAL_B_t8_p8                      459  /*      0x1cb */

#define EVAL_B_fail                 115        /* 0x73 state for EVAL */
#define EVAL_B_fail_tb                 230     /*      0x0e6 */
#define EVAL_B_fail_t8                 231     /*      0x0e7 */
#define EVAL_B_fail_tb_pb                 460  /*      0x1cc */
#define EVAL_B_fail_tb_p8                 461  /*      0x1cd */
#define EVAL_B_fail_t8_pb                 462  /*      0x1ce */
#define EVAL_B_fail_t8_p8                 463  /*      0x1cf */

#define EVAL_postponed_AB           116        /* 0x74 state for EVAL */
#define EVAL_postponed_AB_tb           232     /*      0x0e8 */
#define EVAL_postponed_AB_t8           233     /*      0x0e9 */
#define EVAL_postponed_AB_tb_pb           464  /*      0x1d0 */
#define EVAL_postponed_AB_tb_p8           465  /*      0x1d1 */
#define EVAL_postponed_AB_t8_pb           466  /*      0x1d2 */
#define EVAL_postponed_AB_t8_p8           467  /*      0x1d3 */

#define EVAL_postponed_AB_fail      117        /* 0x75 state for EVAL */
#define EVAL_postponed_AB_fail_tb      234     /*      0x0ea */
#define EVAL_postponed_AB_fail_t8      235     /*      0x0eb */
#define EVAL_postponed_AB_fail_tb_pb      468  /*      0x1d4 */
#define EVAL_postponed_AB_fail_tb_p8      469  /*      0x1d5 */
#define EVAL_postponed_AB_fail_t8_pb      470  /*      0x1d6 */
#define EVAL_postponed_AB_fail_t8_p8      471  /*      0x1d7 */

#define CURLYX_end                  118        /* 0x76 state for CURLYX */
#define CURLYX_end_tb                  236     /*      0x0ec */
#define CURLYX_end_t8                  237     /*      0x0ed */
#define CURLYX_end_tb_pb                  472  /*      0x1d8 */
#define CURLYX_end_tb_p8                  473  /*      0x1d9 */
#define CURLYX_end_t8_pb                  474  /*      0x1da */
#define CURLYX_end_t8_p8                  475  /*      0x1db */

#define CURLYX_end_fail             119        /* 0x77 state for CURLYX */
#define CURLYX_end_fail_tb             238     /*      0x0ee */
#define CURLYX_end_fail_t8             239     /*      0x0ef */
#define CURLYX_end_fail_tb_pb             476  /*      0x1dc */
#define CURLYX_end_fail_tb_p8             477  /*      0x1dd */
#define CURLYX_end_fail_t8_pb             478  /*      0x1de */
#define CURLYX_end_fail_t8_p8             479  /*      0x1df */

#define WHILEM_A_pre                120        /* 0x78 state for WHILEM */
#define WHILEM_A_pre_tb                240     /*      0x0f0 */
#define WHILEM_A_pre_t8                241     /*      0x0f1 */
#define WHILEM_A_pre_tb_pb                480  /*      0x1e0 */
#define WHILEM_A_pre_tb_p8                481  /*      0x1e1 */
#define WHILEM_A_pre_t8_pb                482  /*      0x1e2 */
#define WHILEM_A_pre_t8_p8                483  /*      0x1e3 */

#define WHILEM_A_pre_fail           121        /* 0x79 state for WHILEM */
#define WHILEM_A_pre_fail_tb           242     /*      0x0f2 */
#define WHILEM_A_pre_fail_t8           243     /*      0x0f3 */
#define WHILEM_A_pre_fail_tb_pb           484  /*      0x1e4 */
#define WHILEM_A_pre_fail_tb_p8           485  /*      0x1e5 */
#define WHILEM_A_pre_fail_t8_pb           486  /*      0x1e6 */
#define WHILEM_A_pre_fail_t8_p8           487  /*      0x1e7 */

#define WHILEM_A_min                122        /* 0x7a state for WHILEM */
#define WHILEM_A_min_tb                244     /*      0x0f4 */
#define WHILEM_A_min_t8                245     /*      0x0f5 */
#define WHILEM_A_min_tb_pb                488  /*      0x1e8 */
#define WHILEM_A_min_tb_p8                489  /*      0x1e9 */
#define WHILEM_A_min_t8_pb                490  /*      0x1ea */
#define WHILEM_A_min_t8_p8                491  /*      0x1eb */

#define WHILEM_A_min_fail           123        /* 0x7b state for WHILEM */
#define WHILEM_A_min_fail_tb           246     /*      0x0f6 */
#define WHILEM_A_min_fail_t8           247     /*      0x0f7 */
#define WHILEM_A_min_fail_tb_pb           492  /*      0x1ec */
#define WHILEM_A_min_fail_tb_p8           493  /*      0x1ed */
#define WHILEM_A_min_fail_t8_pb           494  /*      0x1ee */
#define WHILEM_A_min_fail_t8_p8           495  /*      0x1ef */

#define WHILEM_A_max                124        /* 0x7c state for WHILEM */
#define WHILEM_A_max_tb                248     /*      0x0f8 */
#define WHILEM_A_max_t8                249     /*      0x0f9 */
#define WHILEM_A_max_tb_pb                496  /*      0x1f0 */
#define WHILEM_A_max_tb_p8                497  /*      0x1f1 */
#define WHILEM_A_max_t8_pb                498  /*      0x1f2 */
#define WHILEM_A_max_t8_p8                499  /*      0x1f3 */

#define WHILEM_A_max_fail           125        /* 0x7d state for WHILEM */
#define WHILEM_A_max_fail_tb           250     /*      0x0fa */
#define WHILEM_A_max_fail_t8           251     /*      0x0fb */
#define WHILEM_A_max_fail_tb_pb           500  /*      0x1f4 */
#define WHILEM_A_max_fail_tb_p8           501  /*      0x1f5 */
#define WHILEM_A_max_fail_t8_pb           502  /*      0x1f6 */
#define WHILEM_A_max_fail_t8_p8           503  /*      0x1f7 */

#define WHILEM_B_min                126        /* 0x7e state for WHILEM */
#define WHILEM_B_min_tb                252     /*      0x0fc */
#define WHILEM_B_min_t8                253     /*      0x0fd */
#define WHILEM_B_min_tb_pb                504  /*      0x1f8 */
#define WHILEM_B_min_tb_p8                505  /*      0x1f9 */
#define WHILEM_B_min_t8_pb                506  /*      0x1fa */
#define WHILEM_B_min_t8_p8                507  /*      0x1fb */

#define WHILEM_B_min_fail           127        /* 0x7f state for WHILEM */
#define WHILEM_B_min_fail_tb           254     /*      0x0fe */
#define WHILEM_B_min_fail_t8           255     /*      0x0ff */
#define WHILEM_B_min_fail_tb_pb           508  /*      0x1fc */
#define WHILEM_B_min_fail_tb_p8           509  /*      0x1fd */
#define WHILEM_B_min_fail_t8_pb           510  /*      0x1fe */
#define WHILEM_B_min_fail_t8_p8           511  /*      0x1ff */

#define WHILEM_B_max                128        /* 0x80 state for WHILEM */
#define WHILEM_B_max_tb                256     /*      0x100 */
#define WHILEM_B_max_t8                257     /*      0x101 */
#define WHILEM_B_max_tb_pb                512  /*      0x200 */
#define WHILEM_B_max_tb_p8                513  /*      0x201 */
#define WHILEM_B_max_t8_pb                514  /*      0x202 */
#define WHILEM_B_max_t8_p8                515  /*      0x203 */

#define WHILEM_B_max_fail           129        /* 0x81 state for WHILEM */
#define WHILEM_B_max_fail_tb           258     /*      0x102 */
#define WHILEM_B_max_fail_t8           259     /*      0x103 */
#define WHILEM_B_max_fail_tb_pb           516  /*      0x204 */
#define WHILEM_B_max_fail_tb_p8           517  /*      0x205 */
#define WHILEM_B_max_fail_t8_pb           518  /*      0x206 */
#define WHILEM_B_max_fail_t8_p8           519  /*      0x207 */

#define BRANCH_next                 130        /* 0x82 state for BRANCH */
#define BRANCH_next_tb                 260     /*      0x104 */
#define BRANCH_next_t8                 261     /*      0x105 */
#define BRANCH_next_tb_pb                 520  /*      0x208 */
#define BRANCH_next_tb_p8                 521  /*      0x209 */
#define BRANCH_next_t8_pb                 522  /*      0x20a */
#define BRANCH_next_t8_p8                 523  /*      0x20b */

#define BRANCH_next_fail            131        /* 0x83 state for BRANCH */
#define BRANCH_next_fail_tb            262     /*      0x106 */
#define BRANCH_next_fail_t8            263     /*      0x107 */
#define BRANCH_next_fail_tb_pb            524  /*      0x20c */
#define BRANCH_next_fail_tb_p8            525  /*      0x20d */
#define BRANCH_next_fail_t8_pb            526  /*      0x20e */
#define BRANCH_next_fail_t8_p8            527  /*      0x20f */

#define CURLYM_A                    132        /* 0x84 state for CURLYM */
#define CURLYM_A_tb                    264     /*      0x108 */
#define CURLYM_A_t8                    265     /*      0x109 */
#define CURLYM_A_tb_pb                    528  /*      0x210 */
#define CURLYM_A_tb_p8                    529  /*      0x211 */
#define CURLYM_A_t8_pb                    530  /*      0x212 */
#define CURLYM_A_t8_p8                    531  /*      0x213 */

#define CURLYM_A_fail               133        /* 0x85 state for CURLYM */
#define CURLYM_A_fail_tb               266     /*      0x10a */
#define CURLYM_A_fail_t8               267     /*      0x10b */
#define CURLYM_A_fail_tb_pb               532  /*      0x214 */
#define CURLYM_A_fail_tb_p8               533  /*      0x215 */
#define CURLYM_A_fail_t8_pb               534  /*      0x216 */
#define CURLYM_A_fail_t8_p8               535  /*      0x217 */

#define CURLYM_B                    134        /* 0x86 state for CURLYM */
#define CURLYM_B_tb                    268     /*      0x10c */
#define CURLYM_B_t8                    269     /*      0x10d */
#define CURLYM_B_tb_pb                    536  /*      0x218 */
#define CURLYM_B_tb_p8                    537  /*      0x219 */
#define CURLYM_B_t8_pb                    538  /*      0x21a */
#define CURLYM_B_t8_p8                    539  /*      0x21b */

#define CURLYM_B_fail               135        /* 0x87 state for CURLYM */
#define CURLYM_B_fail_tb               270     /*      0x10e */
#define CURLYM_B_fail_t8               271     /*      0x10f */
#define CURLYM_B_fail_tb_pb               540  /*      0x21c */
#define CURLYM_B_fail_tb_p8               541  /*      0x21d */
#define CURLYM_B_fail_t8_pb               542  /*      0x21e */
#define CURLYM_B_fail_t8_p8               543  /*      0x21f */

#define IFMATCH_A                   136        /* 0x88 state for IFMATCH */
#define IFMATCH_A_tb                   272     /*      0x110 */
#define IFMATCH_A_t8                   273     /*      0x111 */
#define IFMATCH_A_tb_pb                   544  /*      0x220 */
#define IFMATCH_A_tb_p8                   545  /*      0x221 */
#define IFMATCH_A_t8_pb                   546  /*      0x222 */
#define IFMATCH_A_t8_p8                   547  /*      0x223 */

#define IFMATCH_A_fail              137        /* 0x89 state for IFMATCH */
#define IFMATCH_A_fail_tb              274     /*      0x112 */
#define IFMATCH_A_fail_t8              275     /*      0x113 */
#define IFMATCH_A_fail_tb_pb              548  /*      0x224 */
#define IFMATCH_A_fail_tb_p8              549  /*      0x225 */
#define IFMATCH_A_fail_t8_pb              550  /*      0x226 */
#define IFMATCH_A_fail_t8_p8              551  /*      0x227 */

#define CURLY_B_min                 138        /* 0x8a state for CURLY */
#define CURLY_B_min_tb                 276     /*      0x114 */
#define CURLY_B_min_t8                 277     /*      0x115 */
#define CURLY_B_min_tb_pb                 552  /*      0x228 */
#define CURLY_B_min_tb_p8                 553  /*      0x229 */
#define CURLY_B_min_t8_pb                 554  /*      0x22a */
#define CURLY_B_min_t8_p8                 555  /*      0x22b */

#define CURLY_B_min_fail            139        /* 0x8b state for CURLY */
#define CURLY_B_min_fail_tb            278     /*      0x116 */
#define CURLY_B_min_fail_t8            279     /*      0x117 */
#define CURLY_B_min_fail_tb_pb            556  /*      0x22c */
#define CURLY_B_min_fail_tb_p8            557  /*      0x22d */
#define CURLY_B_min_fail_t8_pb            558  /*      0x22e */
#define CURLY_B_min_fail_t8_p8            559  /*      0x22f */

#define CURLY_B_max                 140        /* 0x8c state for CURLY */
#define CURLY_B_max_tb                 280     /*      0x118 */
#define CURLY_B_max_t8                 281     /*      0x119 */
#define CURLY_B_max_tb_pb                 560  /*      0x230 */
#define CURLY_B_max_tb_p8                 561  /*      0x231 */
#define CURLY_B_max_t8_pb                 562  /*      0x232 */
#define CURLY_B_max_t8_p8                 563  /*      0x233 */

#define CURLY_B_max_fail            141        /* 0x8d state for CURLY */
#define CURLY_B_max_fail_tb            282     /*      0x11a */
#define CURLY_B_max_fail_t8            283     /*      0x11b */
#define CURLY_B_max_fail_tb_pb            564  /*      0x234 */
#define CURLY_B_max_fail_tb_p8            565  /*      0x235 */
#define CURLY_B_max_fail_t8_pb            566  /*      0x236 */
#define CURLY_B_max_fail_t8_p8            567  /*      0x237 */

#define COMMIT_next                 142        /* 0x8e state for COMMIT */
#define COMMIT_next_tb                 284     /*      0x11c */
#define COMMIT_next_t8                 285     /*      0x11d */
#define COMMIT_next_tb_pb                 568  /*      0x238 */
#define COMMIT_next_tb_p8                 569  /*      0x239 */
#define COMMIT_next_t8_pb                 570  /*      0x23a */
#define COMMIT_next_t8_p8                 571  /*      0x23b */

#define COMMIT_next_fail            143        /* 0x8f state for COMMIT */
#define COMMIT_next_fail_tb            286     /*      0x11e */
#define COMMIT_next_fail_t8            287     /*      0x11f */
#define COMMIT_next_fail_tb_pb            572  /*      0x23c */
#define COMMIT_next_fail_tb_p8            573  /*      0x23d */
#define COMMIT_next_fail_t8_pb            574  /*      0x23e */
#define COMMIT_next_fail_t8_p8            575  /*      0x23f */

#define MARKPOINT_next              144        /* 0x90 state for MARKPOINT */
#define MARKPOINT_next_tb              288     /*      0x120 */
#define MARKPOINT_next_t8              289     /*      0x121 */
#define MARKPOINT_next_tb_pb              576  /*      0x240 */
#define MARKPOINT_next_tb_p8              577  /*      0x241 */
#define MARKPOINT_next_t8_pb              578  /*      0x242 */
#define MARKPOINT_next_t8_p8              579  /*      0x243 */

#define MARKPOINT_next_fail         145        /* 0x91 state for MARKPOINT */
#define MARKPOINT_next_fail_tb         290     /*      0x122 */
#define MARKPOINT_next_fail_t8         291     /*      0x123 */
#define MARKPOINT_next_fail_tb_pb         580  /*      0x244 */
#define MARKPOINT_next_fail_tb_p8         581  /*      0x245 */
#define MARKPOINT_next_fail_t8_pb         582  /*      0x246 */
#define MARKPOINT_next_fail_t8_p8         583  /*      0x247 */

#define SKIP_next                   146        /* 0x92 state for SKIP */
#define SKIP_next_tb                   292     /*      0x124 */
#define SKIP_next_t8                   293     /*      0x125 */
#define SKIP_next_tb_pb                   584  /*      0x248 */
#define SKIP_next_tb_p8                   585  /*      0x249 */
#define SKIP_next_t8_pb                   586  /*      0x24a */
#define SKIP_next_t8_p8                   587  /*      0x24b */

#define SKIP_next_fail              147        /* 0x93 state for SKIP */
#define SKIP_next_fail_tb              294     /*      0x126 */
#define SKIP_next_fail_t8              295     /*      0x127 */
#define SKIP_next_fail_tb_pb              588  /*      0x24c */
#define SKIP_next_fail_tb_p8              589  /*      0x24d */
#define SKIP_next_fail_t8_pb              590  /*      0x24e */
#define SKIP_next_fail_t8_p8              591  /*      0x24f */

#define CUTGROUP_next               148        /* 0x94 state for CUTGROUP */
#define CUTGROUP_next_tb               296     /*      0x128 */
#define CUTGROUP_next_t8               297     /*      0x129 */
#define CUTGROUP_next_tb_pb               592  /*      0x250 */
#define CUTGROUP_next_tb_p8               593  /*      0x251 */
#define CUTGROUP_next_t8_pb               594  /*      0x252 */
#define CUTGROUP_next_t8_p8               595  /*      0x253 */

#define CUTGROUP_next_fail          149        /* 0x95 state for CUTGROUP */
#define CUTGROUP_next_fail_tb          298     /*      0x12a */
#define CUTGROUP_next_fail_t8          299     /*      0x12b */
#define CUTGROUP_next_fail_tb_pb          596  /*      0x254 */
#define CUTGROUP_next_fail_tb_p8          597  /*      0x255 */
#define CUTGROUP_next_fail_t8_pb          598  /*      0x256 */
#define CUTGROUP_next_fail_t8_p8          599  /*      0x257 */

#define KEEPS_next                  150        /* 0x96 state for KEEPS */
#define KEEPS_next_tb                  300     /*      0x12c */
#define KEEPS_next_t8                  301     /*      0x12d */
#define KEEPS_next_tb_pb                  600  /*      0x258 */
#define KEEPS_next_tb_p8                  601  /*      0x259 */
#define KEEPS_next_t8_pb                  602  /*      0x25a */
#define KEEPS_next_t8_p8                  603  /*      0x25b */

#define KEEPS_next_fail             151        /* 0x97 state for KEEPS */
#define KEEPS_next_fail_tb             302     /*      0x12e */
#define KEEPS_next_fail_t8             303     /*      0x12f */
#define KEEPS_next_fail_tb_pb             604  /*      0x25c */
#define KEEPS_next_fail_tb_p8             605  /*      0x25d */
#define KEEPS_next_fail_t8_pb             606  /*      0x25e */
#define KEEPS_next_fail_t8_p8             607  /*      0x25f */

#define REF_next                    152        /* 0x98 state for REF */
#define REF_next_tb                    304     /*      0x130 */
#define REF_next_t8                    305     /*      0x131 */
#define REF_next_tb_pb                    608  /*      0x260 */
#define REF_next_tb_p8                    609  /*      0x261 */
#define REF_next_t8_pb                    610  /*      0x262 */
#define REF_next_t8_p8                    611  /*      0x263 */

#define REF_next_fail               153        /* 0x99 state for REF */
#define REF_next_fail_tb               306     /*      0x132 */
#define REF_next_fail_t8               307     /*      0x133 */
#define REF_next_fail_tb_pb               612  /*      0x264 */
#define REF_next_fail_tb_p8               613  /*      0x265 */
#define REF_next_fail_t8_pb               614  /*      0x266 */
#define REF_next_fail_t8_p8               615  /*      0x267 */


/* PL_regnode_name[] - Opcode/state names in string form, for debugging */

#ifndef DOINIT
EXTCONST char * PL_regnode_name[];
#else
EXTCONST char * const PL_regnode_name[] = {
	"END",                   	/* 0000 */
	"SUCCEED",               	/* 0x01 */
	"SBOL",                  	/* 0x02 */
	"MBOL",                  	/* 0x03 */
	"SEOL",                  	/* 0x04 */
	"MEOL",                  	/* 0x05 */
	"EOS",                   	/* 0x06 */
	"GPOS",                  	/* 0x07 */
	"BOUND",                 	/* 0x08 */
	"BOUNDL",                	/* 0x09 */
	"BOUNDU",                	/* 0x0a */
	"BOUNDA",                	/* 0x0b */
	"NBOUND",                	/* 0x0c */
	"NBOUNDL",               	/* 0x0d */
	"NBOUNDU",               	/* 0x0e */
	"NBOUNDA",               	/* 0x0f */
	"REG_ANY",               	/* 0x10 */
	"SANY",                  	/* 0x11 */
	"ANYOF",                 	/* 0x12 */
	"ANYOFD",                	/* 0x13 */
	"ANYOFL",                	/* 0x14 */
	"ANYOFPOSIXL",           	/* 0x15 */
	"ANYOFH",                	/* 0x16 */
	"ANYOFHb",               	/* 0x17 */
	"ANYOFHr",               	/* 0x18 */
	"ANYOFHs",               	/* 0x19 */
	"ANYOFR",                	/* 0x1a */
	"ANYOFRb",               	/* 0x1b */
	"ANYOFHbbm",             	/* 0x1c */
	"ANYOFM",                	/* 0x1d */
	"NANYOFM",               	/* 0x1e */
	"POSIXD",                	/* 0x1f */
	"POSIXL",                	/* 0x20 */
	"POSIXU",                	/* 0x21 */
	"POSIXA",                	/* 0x22 */
	"NPOSIXD",               	/* 0x23 */
	"NPOSIXL",               	/* 0x24 */
	"NPOSIXU",               	/* 0x25 */
	"NPOSIXA",               	/* 0x26 */
	"CLUMP",                 	/* 0x27 */
	"BRANCH",                	/* 0x28 */
	"EXACT",                 	/* 0x29 */
	"LEXACT",                	/* 0x2a */
	"EXACTL",                	/* 0x2b */
	"EXACTF",                	/* 0x2c */
	"EXACTFL",               	/* 0x2d */
	"EXACTFU",               	/* 0x2e */
	"EXACTFAA",              	/* 0x2f */
	"EXACTFAA_NO_TRIE",      	/* 0x30 */
	"EXACTFUP",              	/* 0x31 */
	"EXACTFLU8",             	/* 0x32 */
	"EXACT_REQ8",            	/* 0x33 */
	"LEXACT_REQ8",           	/* 0x34 */
	"EXACTFU_REQ8",          	/* 0x35 */
	"EXACTFU_S_EDGE",        	/* 0x36 */
	"LNBREAK",               	/* 0x37 */
	"TRIE",                  	/* 0x38 */
	"TRIEC",                 	/* 0x39 */
	"AHOCORASICK",           	/* 0x3a */
	"AHOCORASICKC",          	/* 0x3b */
	"NOTHING",               	/* 0x3c */
	"TAIL",                  	/* 0x3d */
	"STAR",                  	/* 0x3e */
	"PLUS",                  	/* 0x3f */
	"CURLY",                 	/* 0x40 */
	"CURLYN",                	/* 0x41 */
	"CURLYM",                	/* 0x42 */
	"CURLYX",                	/* 0x43 */
	"WHILEM",                	/* 0x44 */
	"OPEN",                  	/* 0x45 */
	"CLOSE",                 	/* 0x46 */
	"SROPEN",                	/* 0x47 */
	"SRCLOSE",               	/* 0x48 */
	"REF",                   	/* 0x49 */
	"REFF",                  	/* 0x4a */
	"REFFL",                 	/* 0x4b */
	"REFFU",                 	/* 0x4c */
	"REFFA",                 	/* 0x4d */
	"REFN",                  	/* 0x4e */
	"REFFN",                 	/* 0x4f */
	"REFFLN",                	/* 0x50 */
	"REFFUN",                	/* 0x51 */
	"REFFAN",                	/* 0x52 */
	"LONGJMP",               	/* 0x53 */
	"BRANCHJ",               	/* 0x54 */
	"IFMATCH",               	/* 0x55 */
	"UNLESSM",               	/* 0x56 */
	"SUSPEND",               	/* 0x57 */
	"IFTHEN",                	/* 0x58 */
	"GROUPP",                	/* 0x59 */
	"EVAL",                  	/* 0x5a */
	"MINMOD",                	/* 0x5b */
	"LOGICAL",               	/* 0x5c */
	"RENUM",                 	/* 0x5d */
	"GOSUB",                 	/* 0x5e */
	"GROUPPN",               	/* 0x5f */
	"INSUBP",                	/* 0x60 */
	"DEFINEP",               	/* 0x61 */
	"ENDLIKE",               	/* 0x62 */
	"OPFAIL",                	/* 0x63 */
	"ACCEPT",                	/* 0x64 */
	"VERB",                  	/* 0x65 */
	"PRUNE",                 	/* 0x66 */
	"MARKPOINT",             	/* 0x67 */
	"SKIP",                  	/* 0x68 */
	"COMMIT",                	/* 0x69 */
	"CUTGROUP",              	/* 0x6a */
	"KEEPS",                 	/* 0x6b */
	"LOOKBEHIND_END",        	/* 0x6c */
	"OPTIMIZED",             	/* 0x6d */
	"PSEUDO",                	/* 0x6e */
	"REGEX_SET",             	/* 0x6f */
	/* ------------ States ------------- */
	"TRIE_next",             	/* REGNODE_MAX +0x01 */
	"TRIE_next_fail",        	/* REGNODE_MAX +0x02 */
	"EVAL_B",                	/* REGNODE_MAX +0x03 */
	"EVAL_B_fail",           	/* REGNODE_MAX +0x04 */
	"EVAL_postponed_AB",     	/* REGNODE_MAX +0x05 */
	"EVAL_postponed_AB_fail",	/* REGNODE_MAX +0x06 */
	"CURLYX_end",            	/* REGNODE_MAX +0x07 */
	"CURLYX_end_fail",       	/* REGNODE_MAX +0x08 */
	"WHILEM_A_pre",          	/* REGNODE_MAX +0x09 */
	"WHILEM_A_pre_fail",     	/* REGNODE_MAX +0x0a */
	"WHILEM_A_min",          	/* REGNODE_MAX +0x0b */
	"WHILEM_A_min_fail",     	/* REGNODE_MAX +0x0c */
	"WHILEM_A_max",          	/* REGNODE_MAX +0x0d */
	"WHILEM_A_max_fail",     	/* REGNODE_MAX +0x0e */
	"WHILEM_B_min",          	/* REGNODE_MAX +0x0f */
	"WHILEM_B_min_fail",     	/* REGNODE_MAX +0x10 */
	"WHILEM_B_max",          	/* REGNODE_MAX +0x11 */
	"WHILEM_B_max_fail",     	/* REGNODE_MAX +0x12 */
	"BRANCH_next",           	/* REGNODE_MAX +0x13 */
	"BRANCH_next_fail",      	/* REGNODE_MAX +0x14 */
	"CURLYM_A",              	/* REGNODE_MAX +0x15 */
	"CURLYM_A_fail",         	/* REGNODE_MAX +0x16 */
	"CURLYM_B",              	/* REGNODE_MAX +0x17 */
	"CURLYM_B_fail",         	/* REGNODE_MAX +0x18 */
	"IFMATCH_A",             	/* REGNODE_MAX +0x19 */
	"IFMATCH_A_fail",        	/* REGNODE_MAX +0x1a */
	"CURLY_B_min",           	/* REGNODE_MAX +0x1b */
	"CURLY_B_min_fail",      	/* REGNODE_MAX +0x1c */
	"CURLY_B_max",           	/* REGNODE_MAX +0x1d */
	"CURLY_B_max_fail",      	/* REGNODE_MAX +0x1e */
	"COMMIT_next",           	/* REGNODE_MAX +0x1f */
	"COMMIT_next_fail",      	/* REGNODE_MAX +0x20 */
	"MARKPOINT_next",        	/* REGNODE_MAX +0x21 */
	"MARKPOINT_next_fail",   	/* REGNODE_MAX +0x22 */
	"SKIP_next",             	/* REGNODE_MAX +0x23 */
	"SKIP_next_fail",        	/* REGNODE_MAX +0x24 */
	"CUTGROUP_next",         	/* REGNODE_MAX +0x25 */
	"CUTGROUP_next_fail",    	/* REGNODE_MAX +0x26 */
	"KEEPS_next",            	/* REGNODE_MAX +0x27 */
	"KEEPS_next_fail",       	/* REGNODE_MAX +0x28 */
	"REF_next",              	/* REGNODE_MAX +0x29 */
	"REF_next_fail",         	/* REGNODE_MAX +0x2a */
};
#endif /* DOINIT */


/* PL_regnode_info[] - Opcode/state names in string form, for debugging */

#ifndef DOINIT
EXTCONST struct regnode_meta PL_regnode_info[];
#else
EXTCONST struct regnode_meta PL_regnode_info[] = {
    {
        /* #0 op END */
        .type = END,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #1 op SUCCEED */
        .type = END,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #2 op SBOL */
        .type = BOL,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #3 op MBOL */
        .type = BOL,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #4 op SEOL */
        .type = EOL,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #5 op MEOL */
        .type = EOL,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #6 op EOS */
        .type = EOL,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #7 op GPOS */
        .type = GPOS,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #8 op BOUND */
        .type = BOUND,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #9 op BOUNDL */
        .type = BOUND,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #10 op BOUNDU */
        .type = BOUND,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #11 op BOUNDA */
        .type = BOUND,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #12 op NBOUND */
        .type = NBOUND,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #13 op NBOUNDL */
        .type = NBOUND,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #14 op NBOUNDU */
        .type = NBOUND,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #15 op NBOUNDA */
        .type = NBOUND,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #16 op REG_ANY */
        .type = REG_ANY,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #17 op SANY */
        .type = REG_ANY,
        .arg_len = 0,
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #18 op ANYOF */
        .type = ANYOF,
        .arg_len = EXTRA_SIZE(tregnode_ANYOF),
        .arg_len_varies = 0,
        .off_by_arg = 0
    },
    {
        /* #19 op ANYOFD */
