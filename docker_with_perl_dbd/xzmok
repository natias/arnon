	0x16B30,
	0x16B37,
	0x16F4F,
	0x16F50,
	0x16F8F,
	0x16F93,
	0x16FE4,
	0x16FE5,
	0x1BC9D,
	0x1BC9F,
	0x1CF00,
	0x1CF2E,
	0x1CF30,
	0x1CF47,
	0x1D167,
	0x1D16A,
	0x1D17B,
	0x1D183,
	0x1D185,
	0x1D18C,
	0x1D1AA,
	0x1D1AE,
	0x1D242,
	0x1D245,
	0x1DA00,
	0x1DA37,
	0x1DA3B,
	0x1DA6D,
	0x1DA75,
	0x1DA76,
	0x1DA84,
	0x1DA85,
	0x1DA9B,
	0x1DAA0,
	0x1DAA1,
	0x1DAB0,
	0x1E000,
	0x1E007,
	0x1E008,
	0x1E019,
	0x1E01B,
	0x1E022,
	0x1E023,
	0x1E025,
	0x1E026,
	0x1E02B,
	0x1E08F,
	0x1E090,
	0x1E130,
	0x1E137,
	0x1E2AE,
	0x1E2AF,
	0x1E2EC,
	0x1E2F0,
	0x1E4EC,
	0x1E4F0,
	0x1E8D0,
	0x1E8D7,
	0x1E944,
	0x1E94B,
	0xE0100,
	0xE01F0
};

static const UV UNI_MODI_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA830,
	0xA83A,
	0x11600,
	0x11645,
	0x11650,
	0x1165A
};

static const UV UNI_MODIFIERLETTERS_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2B0,
	0x300
};

static const UV UNI_MODIFIERTONELETTERS_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA700,
	0xA720
};

static const UV UNI_MONG_invlist[] = {  /* for all charsets */
	11,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1800,
	0x181A,
	0x1820,
	0x1879,
	0x1880,
	0x18AB,
	0x202F,
	0x2030,
	0x11660,
	0x1166D
};

static const UV UNI_MONGOLIANSUP_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11660,
	0x11680
};

static const UV UNI_MRO_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x16A40,
	0x16A5F,
	0x16A60,
	0x16A6A,
	0x16A6E,
	0x16A70
};

static const UV UNI_MTEI_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xAAE0,
	0xAAF7,
	0xABC0,
	0xABEE,
	0xABF0,
	0xABFA
};

static const UV UNI_MULT_invlist[] = {  /* for all charsets */
	13,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA66,
	0xA70,
	0x11280,
	0x11287,
	0x11288,
	0x11289,
	0x1128A,
	0x1128E,
	0x1128F,
	0x1129E,
	0x1129F,
	0x112AA
};

static const UV UNI_MUSIC_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1D100,
	0x1D200
};

static const UV UNI_MYANMAREXTA_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xAA60,
	0xAA80
};

static const UV UNI_MYANMAREXTB_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA9E0,
	0xAA00
};

static const UV UNI_MYMR_invlist[] = {  /* for all charsets */
	9,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1000,
	0x10A0,
	0xA92E,
	0xA92F,
	0xA9E0,
	0xA9FF,
	0xAA60,
	0xAA80
};

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_N_invlist[] = {  /* for ASCII/Latin1 */
	275,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x30,
	0x3A,
	0xB2,
	0xB4,
	0xB9,
	0xBA,
	0xBC,
	0xBF,
	0x660,
	0x66A,
	0x6F0,
	0x6FA,
	0x7C0,
	0x7CA,
	0x966,
	0x970,
	0x9E6,
	0x9F0,
	0x9F4,
	0x9FA,
	0xA66,
	0xA70,
	0xAE6,
	0xAF0,
	0xB66,
	0xB70,
	0xB72,
	0xB78,
	0xBE6,
	0xBF3,
	0xC66,
	0xC70,
	0xC78,
	0xC7F,
	0xCE6,
	0xCF0,
	0xD58,
	0xD5F,
	0xD66,
	0xD79,
	0xDE6,
	0xDF0,
	0xE50,
	0xE5A,
	0xED0,
	0xEDA,
	0xF20,
	0xF34,
	0x1040,
	0x104A,
	0x1090,
	0x109A,
	0x1369,
	0x137D,
	0x16EE,
	0x16F1,
	0x17E0,
	0x17EA,
	0x17F0,
	0x17FA,
	0x1810,
	0x181A,
	0x1946,
	0x1950,
	0x19D0,
	0x19DB,
	0x1A80,
	0x1A8A,
	0x1A90,
	0x1A9A,
	0x1B50,
	0x1B5A,
	0x1BB0,
	0x1BBA,
	0x1C40,
	0x1C4A,
	0x1C50,
	0x1C5A,
	0x2070,
	0x2071,
	0x2074,
	0x207A,
	0x2080,
	0x208A,
	0x2150,
	0x2183,
	0x2185,
	0x218A,
	0x2460,
	0x249C,
	0x24EA,
	0x2500,
	0x2776,
	0x2794,
	0x2CFD,
	0x2CFE,
	0x3007,
	0x3008,
	0x3021,
	0x302A,
	0x3038,
	0x303B,
	0x3192,
	0x3196,
	0x3220,
	0x322A,
	0x3248,
	0x3250,
	0x3251,
	0x3260,
	0x3280,
	0x328A,
	0x32B1,
	0x32C0,
	0xA620,
	0xA62A,
	0xA6E6,
	0xA6F0,
	0xA830,
	0xA836,
	0xA8D0,
	0xA8DA,
	0xA900,
	0xA90A,
	0xA9D0,
	0xA9DA,
	0xA9F0,
	0xA9FA,
	0xAA50,
	0xAA5A,
	0xABF0,
	0xABFA,
	0xFF10,
	0xFF1A,
	0x10107,
	0x10134,
	0x10140,
	0x10179,
	0x1018A,
	0x1018C,
	0x102E1,
	0x102FC,
	0x10320,
	0x10324,
	0x10341,
	0x10342,
	0x1034A,
	0x1034B,
	0x103D1,
	0x103D6,
	0x104A0,
	0x104AA,
	0x10858,
	0x10860,
	0x10879,
	0x10880,
	0x108A7,
	0x108B0,
	0x108FB,
	0x10900,
	0x10916,
	0x1091C,
	0x109BC,
	0x109BE,
	0x109C0,
	0x109D0,
	0x109D2,
	0x10A00,
	0x10A40,
	0x10A49,
	0x10A7D,
	0x10A7F,
	0x10A9D,
	0x10AA0,
	0x10AEB,
	0x10AF0,
	0x10B58,
	0x10B60,
	0x10B78,
	0x10B80,
	0x10BA9,
	0x10BB0,
	0x10CFA,
	0x10D00,
	0x10D30,
	0x10D3A,
	0x10E60,
	0x10E7F,
	0x10F1D,
	0x10F27,
	0x10F51,
	0x10F55,
	0x10FC5,
	0x10FCC,
	0x11052,
	0x11070,
	0x110F0,
	0x110FA,
	0x11136,
	0x11140,
	0x111D0,
	0x111DA,
	0x111E1,
	0x111F5,
	0x112F0,
	0x112FA,
	0x11450,
	0x1145A,
	0x114D0,
	0x114DA,
	0x11650,
	0x1165A,
	0x116C0,
	0x116CA,
	0x11730,
	0x1173C,
	0x118E0,
	0x118F3,
	0x11950,
	0x1195A,
	0x11C50,
	0x11C6D,
	0x11D50,
	0x11D5A,
	0x11DA0,
	0x11DAA,
	0x11F50,
	0x11F5A,
	0x11FC0,
	0x11FD5,
	0x12400,
	0x1246F,
	0x16A60,
	0x16A6A,
	0x16AC0,
	0x16ACA,
	0x16B50,
	0x16B5A,
	0x16B5B,
	0x16B62,
	0x16E80,
	0x16E97,
	0x1D2C0,
	0x1D2D4,
	0x1D2E0,
	0x1D2F4,
	0x1D360,
	0x1D379,
	0x1D7CE,
	0x1D800,
	0x1E140,
	0x1E14A,
	0x1E2F0,
	0x1E2FA,
	0x1E4F0,
	0x1E4FA,
	0x1E8C7,
	0x1E8D0,
	0x1E950,
	0x1E95A,
	0x1EC71,
	0x1ECAC,
	0x1ECAD,
	0x1ECB0,
	0x1ECB1,
	0x1ECB5,
	0x1ED01,
	0x1ED2E,
	0x1ED2F,
	0x1ED3E,
	0x1F100,
	0x1F10D,
	0x1FBF0,
	0x1FBFA
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_N_invlist[] = {  /* for EBCDIC 1047 */
	275,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xB7,
	0xBA,
	0xDA,
	0xDB,
	0xEA,
	0xEB,
	0xF0,
	0xFB,
	0x660,
	0x66A,
	0x6F0,
	0x6FA,
	0x7C0,
	0x7CA,
	0x966,
	0x970,
	0x9E6,
	0x9F0,
	0x9F4,
	0x9FA,
	0xA66,
	0xA70,
	0xAE6,
	0xAF0,
	0xB66,
	0xB70,
	0xB72,
	0xB78,
	0xBE6,
	0xBF3,
	0xC66,
	0xC70,
	0xC78,
	0xC7F,
	0xCE6,
	0xCF0,
	0xD58,
	0xD5F,
	0xD66,
	0xD79,
	0xDE6,
	0xDF0,
	0xE50,
	0xE5A,
	0xED0,
	0xEDA,
	0xF20,
	0xF34,
	0x1040,
	0x104A,
	0x1090,
	0x109A,
	0x1369,
	0x137D,
	0x16EE,
	0x16F1,
	0x17E0,
	0x17EA,
	0x17F0,
	0x17FA,
	0x1810,
	0x181A,
	0x1946,
	0x1950,
	0x19D0,
	0x19DB,
	0x1A80,
	0x1A8A,
	0x1A90,
	0x1A9A,
	0x1B50,
	0x1B5A,
	0x1BB0,
	0x1BBA,
	0x1C40,
	0x1C4A,
	0x1C50,
	0x1C5A,
	0x2070,
	0x2071,
	0x2074,
	0x207A,
	0x2080,
	0x208A,
	0x2150,
	0x2183,
	0x2185,
	0x218A,
	0x2460,
	0x249C,
	0x24EA,
	0x2500,
	0x2776,
	0x2794,
	0x2CFD,
	0x2CFE,
	0x3007,
	0x3008,
	0x3021,
	0x302A,
	0x3038,
	0x303B,
	0x3192,
	0x3196,
	0x3220,
	0x322A,
	0x3248,
	0x3250,
	0x3251,
	0x3260,
	0x3280,
	0x328A,
	0x32B1,
	0x32C0,
	0xA620,
	0xA62A,
	0xA6E6,
	0xA6F0,
	0xA830,
	0xA836,
	0xA8D0,
	0xA8DA,
	0xA900,
	0xA90A,
	0xA9D0,
	0xA9DA,
	0xA9F0,
	0xA9FA,
	0xAA50,
	0xAA5A,
	0xABF0,
	0xABFA,
	0xFF10,
	0xFF1A,
	0x10107,
	0x10134,
	0x10140,
	0x10179,
	0x1018A,
	0x1018C,
	0x102E1,
	0x102FC,
	0x10320,
	0x10324,
	0x10341,
	0x10342,
	0x1034A,
	0x1034B,
	0x103D1,
	0x103D6,
	0x104A0,
	0x104AA,
	0x10858,
	0x10860,
	0x10879,
	0x10880,
	0x108A7,
	0x108B0,
	0x108FB,
	0x10900,
	0x10916,
	0x1091C,
	0x109BC,
	0x109BE,
	0x109C0,
	0x109D0,
	0x109D2,
	0x10A00,
	0x10A40,
	0x10A49,
	0x10A7D,
	0x10A7F,
	0x10A9D,
	0x10AA0,
	0x10AEB,
	0x10AF0,
	0x10B58,
	0x10B60,
	0x10B78,
	0x10B80,
	0x10BA9,
	0x10BB0,
	0x10CFA,
	0x10D00,
	0x10D30,
	0x10D3A,
	0x10E60,
	0x10E7F,
	0x10F1D,
	0x10F27,
	0x10F51,
	0x10F55,
	0x10FC5,
	0x10FCC,
	0x11052,
	0x11070,
	0x110F0,
	0x110FA,
	0x11136,
	0x11140,
	0x111D0,
	0x111DA,
	0x111E1,
	0x111F5,
	0x112F0,
	0x112FA,
	0x11450,
	0x1145A,
	0x114D0,
	0x114DA,
	0x11650,
	0x1165A,
	0x116C0,
	0x116CA,
	0x11730,
	0x1173C,
	0x118E0,
	0x118F3,
	0x11950,
	0x1195A,
	0x11C50,
	0x11C6D,
	0x11D50,
	0x11D5A,
	0x11DA0,
	0x11DAA,
	0x11F50,
	0x11F5A,
	0x11FC0,
	0x11FD5,
	0x12400,
	0x1246F,
	0x16A60,
	0x16A6A,
	0x16AC0,
	0x16ACA,
	0x16B50,
	0x16B5A,
	0x16B5B,
	0x16B62,
	0x16E80,
	0x16E97,
	0x1D2C0,
	0x1D2D4,
	0x1D2E0,
	0x1D2F4,
	0x1D360,
	0x1D379,
	0x1D7CE,
	0x1D800,
	0x1E140,
	0x1E14A,
	0x1E2F0,
	0x1E2FA,
	0x1E4F0,
	0x1E4FA,
	0x1E8C7,
	0x1E8D0,
	0x1E950,
	0x1E95A,
	0x1EC71,
	0x1ECAC,
	0x1ECAD,
	0x1ECB0,
	0x1ECB1,
	0x1ECB5,
	0x1ED01,
	0x1ED2E,
	0x1ED2F,
	0x1ED3E,
	0x1F100,
	0x1F10D,
	0x1FBF0,
	0x1FBFA
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_N_invlist[] = {  /* for EBCDIC 037 */
	275,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xB7,
	0xBA,
	0xDA,
	0xDB,
	0xEA,
	0xEB,
	0xF0,
	0xFB,
	0x660,
	0x66A,
	0x6F0,
	0x6FA,
	0x7C0,
	0x7CA,
	0x966,
	0x970,
	0x9E6,
	0x9F0,
	0x9F4,
	0x9FA,
	0xA66,
	0xA70,
	0xAE6,
	0xAF0,
	0xB66,
	0xB70,
	0xB72,
	0xB78,
	0xBE6,
	0xBF3,
	0xC66,
	0xC70,
	0xC78,
	0xC7F,
	0xCE6,
	0xCF0,
	0xD58,
	0xD5F,
	0xD66,
	0xD79,
	0xDE6,
	0xDF0,
	0xE50,
	0xE5A,
	0xED0,
	0xEDA,
	0xF20,
	0xF34,
	0x1040,
	0x104A,
	0x1090,
	0x109A,
	0x1369,
	0x137D,
	0x16EE,
	0x16F1,
	0x17E0,
	0x17EA,
	0x17F0,
	0x17FA,
	0x1810,
	0x181A,
	0x1946,
	0x1950,
	0x19D0,
	0x19DB,
	0x1A80,
	0x1A8A,
	0x1A90,
	0x1A9A,
	0x1B50,
	0x1B5A,
	0x1BB0,
	0x1BBA,
	0x1C40,
	0x1C4A,
	0x1C50,
	0x1C5A,
	0x2070,
	0x2071,
	0x2074,
	0x207A,
	0x2080,
	0x208A,
	0x2150,
	0x2183,
	0x2185,
	0x218A,
	0x2460,
	0x249C,
	0x24EA,
	0x2500,
	0x2776,
	0x2794,
	0x2CFD,
	0x2CFE,
	0x3007,
	0x3008,
	0x3021,
	0x302A,
	0x3038,
	0x303B,
	0x3192,
	0x3196,
	0x3220,
	0x322A,
	0x3248,
	0x3250,
	0x3251,
	0x3260,
	0x3280,
	0x328A,
	0x32B1,
	0x32C0,
	0xA620,
	0xA62A,
	0xA6E6,
	0xA6F0,
	0xA830,
	0xA836,
	0xA8D0,
	0xA8DA,
	0xA900,
	0xA90A,
	0xA9D0,
	0xA9DA,
	0xA9F0,
	0xA9FA,
	0xAA50,
	0xAA5A,
	0xABF0,
	0xABFA,
	0xFF10,
	0xFF1A,
	0x10107,
	0x10134,
	0x10140,
	0x10179,
	0x1018A,
	0x1018C,
	0x102E1,
	0x102FC,
	0x10320,
	0x10324,
	0x10341,
	0x10342,
	0x1034A,
	0x1034B,
	0x103D1,
	0x103D6,
	0x104A0,
	0x104AA,
	0x10858,
	0x10860,
	0x10879,
	0x10880,
	0x108A7,
	0x108B0,
	0x108FB,
	0x10900,
	0x10916,
	0x1091C,
	0x109BC,
	0x109BE,
	0x109C0,
	0x109D0,
	0x109D2,
	0x10A00,
	0x10A40,
	0x10A49,
	0x10A7D,
	0x10A7F,
	0x10A9D,
	0x10AA0,
	0x10AEB,
	0x10AF0,
	0x10B58,
	0x10B60,
	0x10B78,
	0x10B80,
	0x10BA9,
	0x10BB0,
	0x10CFA,
	0x10D00,
	0x10D30,
	0x10D3A,
	0x10E60,
	0x10E7F,
	0x10F1D,
	0x10F27,
	0x10F51,
	0x10F55,
	0x10FC5,
	0x10FCC,
