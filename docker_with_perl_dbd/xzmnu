	0x10A10,
	0x10A14,
	0x10A15,
	0x10A18,
	0x10A19,
	0x10A36,
	0x10A40,
	0x10A49,
	0x10A58,
	0x10A59,
	0x10A60,
	0x10AA0,
	0x10AC0,
	0x10AE5,
	0x10AEB,
	0x10AF0,
	0x10B00,
	0x10B36,
	0x10B40,
	0x10B56,
	0x10B58,
	0x10B73,
	0x10B78,
	0x10B92,
	0x10B99,
	0x10B9D,
	0x10BA9,
	0x10BB0,
	0x10C00,
	0x10C49,
	0x10C80,
	0x10CB3,
	0x10CC0,
	0x10CF3,
	0x10CFA,
	0x10D24,
	0x10E60,
	0x10E7F,
	0x10E80,
	0x10EAA,
	0x10EB0,
	0x10EB2,
	0x10F00,
	0x10F28,
	0x10F30,
	0x10F46,
	0x10F51,
	0x10F5A,
	0x10F70,
	0x10F82,
	0x10F86,
	0x10F8A,
	0x10FB0,
	0x10FCC,
	0x10FE0,
	0x10FF7,
	0x11003,
	0x11038,
	0x11049,
	0x1104E,
	0x11052,
	0x11066,
	0x11071,
	0x11073,
	0x11075,
	0x11076,
	0x11083,
	0x110B0,
	0x110BB,
	0x110BE,
	0x110CD,
	0x110CE,
	0x110D0,
	0x110E9,
	0x11103,
	0x11127,
	0x11144,
	0x11145,
	0x11147,
	0x11148,
	0x11150,
	0x11173,
	0x11174,
	0x11175,
	0x11176,
	0x11177,
	0x11183,
	0x111B3,
	0x111C1,
	0x111C5,
	0x111C7,
	0x111C8,
	0x111CD,
	0x111CE,
	0x111DA,
	0x111DB,
	0x111DC,
	0x111DD,
	0x111E1,
	0x111F5,
	0x11200,
	0x11212,
	0x11213,
	0x1122C,
	0x1123A,
	0x1123B,
	0x1123D,
	0x1123E,
	0x1123F,
	0x11241,
	0x11280,
	0x11287,
	0x11288,
	0x11289,
	0x1128A,
	0x1128E,
	0x1128F,
	0x1129E,
	0x1129F,
	0x112A9,
	0x112B0,
	0x112DF,
	0x11305,
	0x1130D,
	0x1130F,
	0x11311,
	0x11313,
	0x11329,
	0x1132A,
	0x11331,
	0x11332,
	0x11334,
	0x11335,
	0x1133A,
	0x1133D,
	0x1133E,
	0x11350,
	0x11351,
	0x1135D,
	0x11362,
	0x11400,
	0x11435,
	0x11447,
	0x1144B,
	0x1144F,
	0x11450,
	0x1145D,
	0x1145E,
	0x1145F,
	0x11462,
	0x11480,
	0x114B0,
	0x114C4,
	0x114C8,
	0x11580,
	0x115AF,
	0x115C6,
	0x115C9,
	0x115D8,
	0x115DC,
	0x11600,
	0x11630,
	0x11643,
	0x11645,
	0x11680,
	0x116AB,
	0x116B8,
	0x116BA,
	0x11800,
	0x1182C,
	0x1183B,
	0x1183C,
	0x118A0,
	0x118E0,
	0x118EA,
	0x118F3,
	0x118FF,
	0x11907,
	0x11909,
	0x1190A,
	0x1190C,
	0x11914,
	0x11915,
	0x11917,
	0x11918,
	0x11930,
	0x1193F,
	0x11940,
	0x11941,
	0x11942,
	0x119A0,
	0x119A8,
	0x119AA,
	0x119D1,
	0x119E1,
	0x119E2,
	0x119E3,
	0x119E4,
	0x11A00,
	0x11A01,
	0x11A0B,
	0x11A33,
	0x11A3A,
	0x11A3B,
	0x11A40,
	0x11A41,
	0x11A46,
	0x11A47,
	0x11A50,
	0x11A51,
	0x11A5C,
	0x11A8A,
	0x11A9D,
	0x11A9E,
	0x11AB0,
	0x11AF9,
	0x11C00,
	0x11C09,
	0x11C0A,
	0x11C2F,
	0x11C40,
	0x11C41,
	0x11C5A,
	0x11C6D,
	0x11C72,
	0x11C90,
	0x11D00,
	0x11D07,
	0x11D08,
	0x11D0A,
	0x11D0B,
	0x11D31,
	0x11D46,
	0x11D47,
	0x11D60,
	0x11D66,
	0x11D67,
	0x11D69,
	0x11D6A,
	0x11D8A,
	0x11D98,
	0x11D99,
	0x11EE0,
	0x11EF3,
	0x11EF7,
	0x11EF9,
	0x11F02,
	0x11F03,
	0x11F04,
	0x11F11,
	0x11F12,
	0x11F34,
	0x11FB0,
	0x11FB1,
	0x11FC0,
	0x11FDD,
	0x11FE1,
	0x11FF2,
	0x12000,
	0x1239A,
	0x12400,
	0x1246F,
	0x12480,
	0x12544,
	0x12F90,
	0x12FF3,
	0x13000,
	0x13258,
	0x1325E,
	0x13282,
	0x13283,
	0x13286,
	0x1328A,
	0x13379,
	0x1337C,
	0x13430,
	0x13441,
	0x13447,
	0x14400,
	0x145CE,
	0x145D0,
	0x14647,
	0x16800,
	0x16A39,
	0x16A40,
	0x16A5F,
	0x16A70,
	0x16ABF,
	0x16AD0,
	0x16AEE,
	0x16B00,
	0x16B30,
	0x16B3A,
	0x16B44,
	0x16B45,
	0x16B46,
	0x16B5B,
	0x16B62,
	0x16B63,
	0x16B78,
	0x16B7D,
	0x16B90,
	0x16E40,
	0x16E97,
	0x16E99,
	0x16E9B,
	0x16F00,
	0x16F4B,
	0x16F50,
	0x16F51,
	0x16F93,
	0x16FA0,
	0x18B00,
	0x18CD6,
	0x1AFF0,
	0x1AFF4,
	0x1AFF5,
	0x1AFFC,
	0x1AFFD,
	0x1AFFF,
	0x1BC00,
	0x1BC6B,
	0x1BC70,
	0x1BC7D,
	0x1BC80,
	0x1BC89,
	0x1BC90,
	0x1BC9A,
	0x1BC9C,
	0x1BC9D,
	0x1CF50,
	0x1CFC4,
	0x1D000,
	0x1D0F6,
	0x1D100,
	0x1D127,
	0x1D129,
	0x1D165,
	0x1D16A,
	0x1D16D,
	0x1D183,
	0x1D185,
	0x1D18C,
	0x1D1AA,
	0x1D1AE,
	0x1D1EB,
	0x1D200,
	0x1D242,
	0x1D245,
	0x1D246,
	0x1D2C0,
	0x1D2D4,
	0x1D2E0,
	0x1D2F4,
	0x1D300,
	0x1D357,
	0x1D360,
	0x1D379,
	0x1D400,
	0x1D455,
	0x1D456,
	0x1D49D,
	0x1D49E,
	0x1D4A0,
	0x1D4A2,
	0x1D4A3,
	0x1D4A5,
	0x1D4A7,
	0x1D4A9,
	0x1D4AD,
	0x1D4AE,
	0x1D4BA,
	0x1D4BB,
	0x1D4BC,
	0x1D4BD,
	0x1D4C4,
	0x1D4C5,
	0x1D506,
	0x1D507,
	0x1D50B,
	0x1D50D,
	0x1D515,
	0x1D516,
	0x1D51D,
	0x1D51E,
	0x1D53A,
	0x1D53B,
	0x1D53F,
	0x1D540,
	0x1D545,
	0x1D546,
	0x1D547,
	0x1D54A,
	0x1D551,
	0x1D552,
	0x1D6A6,
	0x1D6A8,
	0x1D7CC,
	0x1D800,
	0x1DA00,
	0x1DA37,
	0x1DA3B,
	0x1DA6D,
	0x1DA75,
	0x1DA76,
	0x1DA84,
	0x1DA85,
	0x1DA87,
	0x1DA8B,
	0x1DA8C,
	0x1DF00,
	0x1DF1F,
	0x1DF25,
	0x1DF2B,
	0x1E030,
	0x1E06E,
	0x1E100,
	0x1E12D,
	0x1E137,
	0x1E13E,
	0x1E14E,
	0x1E150,
	0x1E290,
	0x1E2AE,
	0x1E2C0,
	0x1E2EC,
	0x1E4D0,
	0x1E4EC,
	0x1E7E0,
	0x1E7E7,
	0x1E7E8,
	0x1E7EC,
	0x1E7ED,
	0x1E7EF,
	0x1E7F0,
	0x1E7FF,
	0x1E800,
	0x1E8C5,
	0x1E8C7,
	0x1E8D0,
	0x1E900,
	0x1E944,
	0x1E94B,
	0x1E94C,
	0x1EC71,
	0x1ECAC,
	0x1ECAD,
	0x1ECB0,
	0x1ECB1,
	0x1ECB5,
	0x1ED01,
	0x1ED3E,
	0x1EE00,
	0x1EE04,
	0x1EE05,
	0x1EE20,
	0x1EE21,
	0x1EE23,
	0x1EE24,
	0x1EE25,
	0x1EE27,
	0x1EE28,
	0x1EE29,
	0x1EE33,
	0x1EE34,
	0x1EE38,
	0x1EE39,
	0x1EE3A,
	0x1EE3B,
	0x1EE3C,
	0x1EE42,
	0x1EE43,
	0x1EE47,
	0x1EE48,
	0x1EE49,
	0x1EE4A,
	0x1EE4B,
	0x1EE4C,
	0x1EE4D,
	0x1EE50,
	0x1EE51,
	0x1EE53,
	0x1EE54,
	0x1EE55,
	0x1EE57,
	0x1EE58,
	0x1EE59,
	0x1EE5A,
	0x1EE5B,
	0x1EE5C,
	0x1EE5D,
	0x1EE5E,
	0x1EE5F,
	0x1EE60,
	0x1EE61,
	0x1EE63,
	0x1EE64,
	0x1EE65,
	0x1EE67,
	0x1EE6B,
	0x1EE6C,
	0x1EE73,
	0x1EE74,
	0x1EE78,
	0x1EE79,
	0x1EE7D,
	0x1EE7E,
	0x1EE7F,
	0x1EE80,
	0x1EE8A,
	0x1EE8B,
	0x1EE9C,
	0x1EEA1,
	0x1EEA4,
	0x1EEA5,
	0x1EEAA,
	0x1EEAB,
	0x1EEBC,
	0x1EEF0,
	0x1EEF2,
	0x1F12E,
	0x1F130,
	0x1F16A,
	0x1F16D,
	0x1F39C,
	0x1F39E,
	0x1F3B5,
	0x1F3B7,
	0x1F3BC,
	0x1F3BD,
	0x1F4A0,
	0x1F4A1,
	0x1F4A2,
	0x1F4A3,
	0x1F4A4,
	0x1F4A5,
	0x1F4AF,
	0x1F4B0,
	0x1F4B1,
	0x1F4B3,
	0x1F500,
	0x1F507,
	0x1F517,
	0x1F525,
	0x1F532,
	0x1F54A,
	0x1F5D4,
	0x1F5DC,
	0x1F5F4,
	0x1F5FA,
	0x1F650,
	0x1F676,
	0x1F67C,
	0x1F680,
	0x1F700,
	0x1F774,
	0x1F780,
	0x1F7D5,
	0x1F800,
	0x1F80C,
	0x1F810,
	0x1F848,
	0x1F850,
	0x1F85A,
	0x1F860,
	0x1F888,
	0x1F890,
	0x1F8AE,
	0x1F900,
	0x1F90C,
	0x1FA00,
	0x1FA54,
	0x1FB00,
	0x1FB93,
	0x1FB94,
	0x1FBCB
};

#  endif	/* EBCDIC 037 */

static const UV UNI_LB__B2_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2014,
	0x2015,
	0x2E3A,
	0x2E3C
};

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_LB__BA_invlist[] = {  /* for ASCII/Latin1 */
	203,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x9,
	0xA,
	0x7C,
	0x7D,
	0xAD,
	0xAE,
	0x58A,
	0x58B,
	0x5BE,
	0x5BF,
	0x964,
	0x966,
	0xE5A,
	0xE5C,
	0xF0B,
	0xF0C,
	0xF34,
	0xF35,
	0xF7F,
	0xF80,
	0xF85,
	0xF86,
	0xFBE,
	0xFC0,
	0xFD2,
	0xFD3,
	0x104A,
	0x104C,
	0x1361,
	0x1362,
	0x1400,
	0x1401,
	0x1680,
	0x1681,
	0x16EB,
	0x16EE,
	0x1735,
	0x1737,
	0x17D4,
	0x17D6,
	0x17D8,
	0x17D9,
	0x17DA,
	0x17DB,
	0x1804,
	0x1806,
	0x1B5A,
	0x1B5C,
	0x1B5D,
	0x1B61,
	0x1B7D,
	0x1B7F,
	0x1C3B,
	0x1C40,
	0x1C7E,
	0x1C80,
	0x2000,
	0x2007,
	0x2008,
	0x200B,
	0x2010,
	0x2011,
	0x2012,
	0x2014,
	0x2027,
	0x2028,
	0x2056,
	0x2057,
	0x2058,
	0x205C,
	0x205D,
	0x2060,
	0x2CFA,
	0x2CFD,
	0x2CFF,
	0x2D00,
	0x2D70,
	0x2D71,
	0x2E0E,
	0x2E16,
	0x2E17,
	0x2E18,
	0x2E19,
	0x2E1A,
	0x2E2A,
	0x2E2E,
	0x2E30,
	0x2E32,
	0x2E33,
	0x2E35,
	0x2E3C,
	0x2E3F,
	0x2E40,
	0x2E42,
	0x2E43,
	0x2E4B,
	0x2E4C,
	0x2E4D,
	0x2E4E,
	0x2E50,
	0x2E5D,
	0x2E5E,
	0x3000,
	0x3001,
	0xA4FE,
	0xA500,
	0xA60D,
	0xA60E,
	0xA60F,
	0xA610,
	0xA6F3,
	0xA6F8,
	0xA8CE,
	0xA8D0,
	0xA92E,
	0xA930,
	0xA9C7,
	0xA9CA,
	0xAA5D,
	0xAA60,
	0xAAF0,
	0xAAF2,
	0xABEB,
	0xABEC,
	0x10100,
	0x10103,
	0x1039F,
	0x103A0,
	0x103D0,
	0x103D1,
	0x10857,
	0x10858,
	0x1091F,
	0x10920,
	0x10A50,
	0x10A58,
	0x10AF0,
	0x10AF6,
	0x10B39,
	0x10B40,
	0x10EAD,
	0x10EAE,
	0x11047,
	0x11049,
	0x110BE,
	0x110C2,
	0x11140,
	0x11144,
	0x111C5,
	0x111C7,
	0x111C8,
	0x111C9,
	0x111DD,
	0x111E0,
	0x11238,
	0x1123A,
	0x1123B,
	0x1123D,
	0x112A9,
	0x112AA,
	0x1144B,
	0x1144F,
	0x1145A,
	0x1145C,
	0x115C2,
	0x115C4,
	0x115C9,
	0x115D8,
	0x11641,
	0x11643,
	0x1173C,
	0x1173F,
	0x11944,
	0x11947,
	0x11A41,
	0x11A45,
	0x11A9A,
	0x11A9D,
	0x11AA1,
	0x11AA3,
	0x11C41,
	0x11C46,
	0x11F43,
	0x11F45,
	0x11FFF,
	0x12000,
	0x12470,
	0x12475,
	0x16A6E,
	0x16A70,
	0x16AF5,
	0x16AF6,
	0x16B37,
	0x16B3A,
	0x16B44,
	0x16B45,
	0x16E97,
	0x16E99,
	0x1BC9F,
	0x1BCA0,
	0x1DA87,
	0x1DA8B
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_LB__BA_invlist[] = {  /* for EBCDIC 1047 */
	203,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5,
	0x6,
	0x4F,
	0x50,
	0xCA,
	0xCB,
	0x58A,
	0x58B,
	0x5BE,
	0x5BF,
	0x964,
	0x966,
	0xE5A,
	0xE5C,
	0xF0B,
	0xF0C,
	0xF34,
	0xF35,
	0xF7F,
	0xF80,
	0xF85,
	0xF86,
	0xFBE,
	0xFC0,
	0xFD2,
	0xFD3,
	0x104A,
	0x104C,
	0x1361,
	0x1362,
	0x1400,
	0x1401,
	0x1680,
	0x1681,
	0x16EB,
	0x16EE,
	0x1735,
	0x1737,
	0x17D4,
	0x17D6,
	0x17D8,
	0x17D9,
	0x17DA,
	0x17DB,
	0x1804,
	0x1806,
	0x1B5A,
	0x1B5C,
	0x1B5D,
	0x1B61,
	0x1B7D,
	0x1B7F,
	0x1C3B,
	0x1C40,
	0x1C7E,
	0x1C80,
	0x2000,
	0x2007,
	0x2008,
	0x200B,
	0x2010,
	0x2011,
	0x2012,
	0x2014,
	0x2027,
	0x2028,
	0x2056,
	0x2057,
	0x2058,
	0x205C,
	0x205D,
	0x2060,
	0x2CFA,
	0x2CFD,
	0x2CFF,
	0x2D00,
	0x2D70,
	0x2D71,
	0x2E0E,
	0x2E16,
	0x2E17,
	0x2E18,
	0x2E19,
	0x2E1A,
	0x2E2A,
	0x2E2E,
	0x2E30,
	0x2E32,
	0x2E33,
	0x2E35,
	0x2E3C,
	0x2E3F,
	0x2E40,
	0x2E42,
	0x2E43,
	0x2E4B,
	0x2E4C,
	0x2E4D,
	0x2E4E,
	0x2E50,
	0x2E5D,
	0x2E5E,
	0x3000,
	0x3001,
	0xA4FE,
	0xA500,
	0xA60D,
	0xA60E,
	0xA60F,
	0xA610,
	0xA6F3,
	0xA6F8,
	0xA8CE,
	0xA8D0,
	0xA92E,
	0xA930,
	0xA9C7,
	0xA9CA,
	0xAA5D,
	0xAA60,
	0xAAF0,
	0xAAF2,
	0xABEB,
	0xABEC,
	0x10100,
	0x10103,
	0x1039F,
	0x103A0,
	0x103D0,
	0x103D1,
	0x10857,
	0x10858,
	0x1091F,
	0x10920,
	0x10A50,
	0x10A58,
	0x10AF0,
	0x10AF6,
	0x10B39,
	0x10B40,
	0x10EAD,
	0x10EAE,
	0x11047,
	0x11049,
	0x110BE,
	0x110C2,
	0x11140,
	0x11144,
	0x111C5,
	0x111C7,
	0x111C8,
	0x111C9,
	0x111DD,
	0x111E0,
	0x11238,
	0x1123A,
	0x1123B,
	0x1123D,
	0x112A9,
	0x112AA,
	0x1144B,
	0x1144F,
	0x1145A,
	0x1145C,
	0x115C2,
	0x115C4,
	0x115C9,
	0x115D8,
	0x11641,
	0x11643,
	0x1173C,
	0x1173F,
	0x11944,
	0x11947,
	0x11A41,
	0x11A45,
	0x11A9A,
	0x11A9D,
	0x11AA1,
	0x11AA3,
	0x11C41,
	0x11C46,
	0x11F43,
