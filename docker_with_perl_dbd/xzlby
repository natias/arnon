
L<I18N::LangTags> has been upgraded from version 0.35 to 0.35_01.

=item *

L<if> has been upgraded from version 0.05 to 0.0601.

=item *

L<IO> has been upgraded from version 1.25_02 to 1.25_04.

This version of L<IO> includes a new L<IO::Select>, which now allows L<IO::Handle>
objects (and objects in derived classes) to be removed from an L<IO::Select> set
even if the underlying file descriptor is closed or invalid.

=item *

L<IPC::Cmd> has been upgraded from version 0.54 to 0.70.

Resolves an issue with splitting Win32 command lines.  An argument
consisting of the single character "0" used to be omitted (CPAN RT #62961).

=item *

L<IPC::Open3> has been upgraded from 1.05 to 1.09.

open3() now produces an error if the C<exec> call fails, allowing this
condition to be distinguished from a child process that exited with a
non-zero status [perl #72016].

The internal xclose() routine now knows how to handle file descriptors as
documented, so duplicating C<STDIN> in a child process using its file
descriptor now works [perl #76474].

=item *

L<IPC::SysV> has been upgraded from version 2.01 to 2.03.

=item *

L<lib> has been upgraded from version 0.62 to 0.63.

=item *

L<Locale::Maketext> has been upgraded from version 1.14 to 1.19.

L<Locale::Maketext> now supports external caches.

This upgrade also fixes an infinite loop in
C<Locale::Maketext::Guts::_compile()> when
working with tainted values (CPAN RT #40727).

C<< ->maketext >> calls now back up and restore C<$@> so error
messages are not suppressed (CPAN RT #34182).

=item *

L<Log::Message> has been upgraded from version 0.02 to 0.04.

=item *

L<Log::Message::Simple> has been upgraded from version 0.06 to 0.08.

=item *

L<Math::BigInt> has been upgraded from version 1.89_01 to 1.994.

This fixes, among other things, incorrect results when computing binomial
coefficients [perl #77640].

It also prevents C<sqrt($int)> from crashing under C<use bigrat>.
[perl #73534].

=item *

L<Math::BigInt::FastCalc> has been upgraded from version 0.19 to 0.28.

=item *

L<Math::BigRat> has been upgraded from version 0.24 to 0.26_02.

=item *

L<Memoize> has been upgraded from version 1.01_03 to 1.02.

=item *

L<MIME::Base64> has been upgraded from 3.08 to 3.13.

Includes new functions to calculate the length of encoded and decoded
base64 strings.

Now provides encode_base64url() and decode_base64url() functions to process
the base64 scheme for "URL applications".

=item *

L<Module::Build> has been upgraded from version 0.3603 to 0.3800.

A notable change is the deprecation of several modules.
L<Module::Build::Version> has been deprecated and L<Module::Build> now
relies on the L<version> pragma directly.  L<Module::Build::ModuleInfo> has
been deprecated in favor of a standalone copy called L<Module::Metadata>.
L<Module::Build::YAML> has been deprecated in favor of L<CPAN::Meta::YAML>.

L<Module::Build> now also generates F<META.json> and F<MYMETA.json> files
in accordance with version 2 of the CPAN distribution metadata specification,
L<CPAN::Meta::Spec>.  The older format F<META.yml> and F<MYMETA.yml> files are
still generated.

=item *

L<Module::CoreList> has been upgraded from version 2.29 to 2.47.

Besides listing the updated core modules of this release, it also stops listing
the C<Filespec> module.  That module never existed in core.  The scripts
generating L<Module::CoreList> confused it with L<VMS::Filespec>, which actually
is a core module as of Perl 5.8.7.

=item *

L<Module::Load> has been upgraded from version 0.16 to 0.18.

=item *

L<Module::Load::Conditional> has been upgraded from version 0.34 to 0.44.

=item *

The L<mro> pragma has been upgraded from version 1.02 to 1.07.

=item *

L<NDBM_File> has been upgraded from version 1.08 to 1.12.

This fixes a memory leak when DBM filters are used.

=item *

L<Net::Ping> has been upgraded from version 2.36 to 2.38.

=item *

L<NEXT> has been upgraded from version 0.64 to 0.65.

=item *

L<Object::Accessor> has been upgraded from version 0.36 to 0.38.

=item *

L<ODBM_File> has been upgraded from version 1.07 to 1.10.

This fixes a memory leak when DBM filters are used.

=item *

L<Opcode> has been upgraded from version 1.15 to 1.18.

=item *

The L<overload> pragma has been upgraded from 1.10 to 1.13.

C<overload::Method> can now handle subroutines that are themselves blessed
into overloaded classes [perl #71998].

The documentation has greatly improved.  See L</Documentation> below.

=item *

L<Params::Check> has been upgraded from version 0.26 to 0.28.

=item *

The L<parent> pragma has been upgraded from version 0.223 to 0.225.

=item *

L<Parse::CPAN::Meta> has been upgraded from version 1.40 to 1.4401.

The latest Parse::CPAN::Meta can now read YAML and JSON files using
L<CPAN::Meta::YAML> and L<JSON::PP>, which are now part of the Perl core.

=item *

L<PerlIO::encoding> has been upgraded from version 0.12 to 0.14.

=item *

L<PerlIO::scalar> has been upgraded from 0.07 to 0.11.

A read() after a seek() beyond the end of the string no longer thinks it
has data to read [perl #78716].

=item *

L<PerlIO::via> has been upgraded from version 0.09 to 0.11.

=item *

L<Pod::Html> has been upgraded from version 1.09 to 1.11.

=item *

L<Pod::LaTeX> has been upgraded from version 0.58 to 0.59.

=item *

L<Pod::Perldoc> has been upgraded from version 3.15_02 to 3.15_03.

=item *

L<Pod::Simple> has been upgraded from version 3.13 to 3.16.

=item *

L<POSIX> has been upgraded from 1.19 to 1.24.

It now includes constants for POSIX signal constants.

=item *

The L<re> pragma has been upgraded from version 0.11 to 0.18.

The C<use re '/flags'> subpragma is new.

The regmust() function used to crash when called on a regular expression
belonging to a pluggable engine.  Now it croaks instead.

regmust() no longer leaks memory.

=item *

L<Safe> has been upgraded from version 2.25 to 2.29.

Coderefs returned by reval() and rdo() are now wrapped via
wrap_code_refs() (5.12.1).

This fixes a possible infinite loop when looking for coderefs.

It adds several C<version::vxs::*> routines to the default share.

=item *

L<SDBM_File> has been upgraded from version 1.06 to 1.09.

=item *

L<SelfLoader> has been upgraded from 1.17 to 1.18.

It now works in taint mode [perl #72062].

=item *

The L<sigtrap> pragma has been upgraded from version 1.04 to 1.05.

It no longer tries to modify read-only arguments when generating a
backtrace [perl #72340].

=item *

L<Socket> has been upgraded from version 1.87 to 1.94.

See L</Improved IPv6 support> above.

=item *

L<Storable> has been upgraded from version 2.22 to 2.27.

Includes performance improvement for overloaded classes.

This adds support for serialising code references that contain UTF-8 strings
correctly.  The L<Storable> minor version
number changed as a result, meaning that
L<Storable> users who set C<$Storable::accept_future_minor> to a C<FALSE> value
will see errors (see L<Storable/FORWARD COMPATIBILITY> for more details).

Freezing no longer gets confused if the Perl stack gets reallocated
during freezing [perl #80074].

=item *

L<Sys::Hostname> has been upgraded from version 1.11 to 1.16.

=item *

L<Term::ANSIColor> has been upgraded from version 2.02 to 3.00.

=item *

L<Term::UI> has been upgraded from version 0.20 to 0.26.

=item *

L<Test::Harness> has been upgraded from version 3.17 to 3.23.

=item *

L<Test::Simple> has been upgraded from version 0.94 to 0.98.

Among many other things, subtests without a C<plan> or C<no_plan> now have an
implicit done_testing() added to them.

=item *

L<Thread::Semaphore> has been upgraded from version 2.09 to 2.12.

It provides two new methods that give more control over the decrementing of
semaphores: C<down_nb> and C<down_force>.

=item *

L<Thread::Queue> has been upgraded from version 2.11 to 2.12.

=item *

The L<threads> pragma has been upgraded from version 1.75 to 1.83.

=item *

The L<threads::shared> pragma has been upgraded from version 1.32 to 1.37.

=item *

L<Tie::Hash> has been upgraded from version 1.03 to 1.04.

Calling C<< Tie::Hash->TIEHASH() >> used to loop forever.  Now it C<croak>s.

=item *

L<Tie::Hash::NamedCapture> has been upgraded from version 0.06 to 0.08.

=item *

L<Tie::RefHash> has been upgraded from version 1.38 to 1.39.

=item *

L<Time::HiRes> has been upgraded from version 1.9719 to 1.9721_01.

=item *

L<Time::Local> has been upgraded from version 1.1901_01 to 1.2000.

=item *

L<Time::Piece> has been upgraded from version 1.15_01 to 1.20_01.

=item *

L<Unicode::Collate> has been upgraded from version 0.52_01 to 0.73.

L<Unicode::Collate> has been updated to use Unicode 6.0.0.

L<Unicode::Collate::Locale> now supports a plethora of new locales: I<ar, be,
bg, de__phonebook, hu, hy, kk, mk, nso, om, tn, vi, hr, ig, ja, ko, ru, sq, 
se, sr, to, uk, zh, zh__big5han, zh__gb2312han, zh__pinyin>, and I<zh__stroke>.

The following modules have been added:

L<Unicode::Collate::CJK::Big5> for C<zh__big5han> which makes 
tailoring of CJK Unified Ideographs in the order of CLDR's big5han ordering.

L<Unicode::Collate::CJK::GB2312> for C<zh__gb2312han> which makes
tailoring of CJK Unified Ideographs in the order of CLDR's gb2312han ordering.

L<Unicode::Collate::CJK::JISX0208> which makes tailoring of 6355 kanji 
(CJK Unified Ideographs) in the JIS X 0208 order.

L<Unicode::Collate::CJK::Korean> which makes tailoring of CJK Unified Ideographs 
in the order of CLDR's Korean ordering.

L<Unicode::Collate::CJK::Pinyin> for C<zh__pinyin> which makes
tailoring of CJK Unified Ideographs in the order of CLDR's pinyin ordering.

L<Unicode::Collate::CJK::Stroke> for C<zh__stroke> which makes
tailoring of CJK Unified Ideographs in the order of CLDR's stroke ordering.

This also sees the switch from using the pure-Perl version of this
module to the XS version.

=item *

L<Unicode::Normalize> has been upgraded from version 1.03 to 1.10.

=item *

L<Unicode::UCD> has been upgraded from version 0.27 to 0.32.

A new function, Unicode::UCD::num(), has been added.  This function
returns the numeric value of the string passed it or C<undef> if the string
in its entirety has no "safe" numeric value.  (For more detail, and for the
definition of "safe", see L<Unicode::UCD/num()>.)

This upgrade also includes several bug fixes:

=over 4

=item charinfo()

=over 4

=item *

It is now updated to Unicode Version 6.0.0 with I<Corrigendum #8>, 
excepting that, just as with Perl 5.14, the code point at U+1F514 has no name.

=item *

Hangul syllable code points have the correct names, and their
decompositions are always output without requiring L<Lingua::KO::Hangul::Util>
to be installed.

=item *

CJK (Chinese-Japanese-Korean) code points U+2A700 to U+2B734
and U+2B740 to U+2B81D are now properly handled.

=item *

Numeric values are now output for those CJK code points that have them.

=item *

Names output for code points with multiple aliases are now the
corrected ones.

=back

=item charscript()

This now correctly returns "Unknown" instead of C<undef> for the script
of a code point that hasn't been assigned another one.

=item charblock()

This now correctly returns "No_Block" instead of C<undef> for the block
of a code point that hasn't been assigned to another one.

=back

=item *

The L<version> pragma has been upgraded from 0.82 to 0.88.

Because of a bug, now fixed, the is_strict() and is_lax() functions did not
work when exported (5.12.1).

=item *

The L<warnings> pragma has been upgraded from version 1.09 to 1.12.

Calling C<use warnings> without arguments is now significantly more efficient.

=item *

The L<warnings::register> pragma has been upgraded from version 1.01 to 1.02.

It is now possible to register warning categories other than the names of
packages using L<warnings::register>.  See L<perllexwarn(1)> for more information.

=item *

L<XSLoader> has been upgraded from version 0.10 to 0.13.

=item *

L<VMS::DCLsym> has been upgraded from version 1.03 to 1.05.

Two bugs have been fixed [perl #84086]:

The symbol table name was lost when tying a hash, due to a thinko in
C<TIEHASH>.  The result was that all tied hashes interacted with the
local symbol table.

Unless a symbol table name had been explicitly specified in the call
to the constructor, querying the special key C<:LOCAL> failed to
identify objects connected to the local symbol table.

=item *

The L<Win32> module has been upgraded from version 0.39 to 0.44.

This release has several new functions: Win32::GetSystemMetrics(),
Win32::GetProductInfo(), Win32::GetOSDisplayName().

The names returned by Win32::GetOSName() and Win32::GetOSDisplayName()
have been corrected.

=item *

L<XS::Typemap> has been upgraded from version 0.03 to 0.05.

=back

=head2 Removed Modules and Pragmata

As promised in Perl 5.12.0's release notes, the following modules have
been removed from the core distribution, and if needed should be installed
from CPAN instead.

=over

=item *

L<Class::ISA> has been removed from the Perl core.  Prior version was 0.36.

=item *

L<Pod::Plainer> has been removed from the Perl core.  Prior version was 1.02.

=item *

L<Switch> has been removed from the Perl core.  Prior version was 2.16.

=back

The removal of L<Shell> has been deferred until after 5.14, as the
implementation of L<Shell> shipped with 5.12.0 did not correctly issue the
warning that it was to be removed from core.

=head1 Documentation

=head2 New Documentation

=head3 L<perlgpl>

L<perlgpl> has been updated to contain GPL version 1, as is included in the
F<README> distributed with Perl (5.12.1).

=head3 Perl 5.12.x delta files

The perldelta files for Perl 5.12.1 to 5.12.3 have been added from the
maintenance branch: L<perl5121delta>, L<perl5122delta>, L<perl5123delta>.

=head3 L<perlpodstyle>

New style guide for POD documentation,
split mostly from the NOTES section of the L<pod2man(1)> manpage.

=head3 L<perlsource>, L<perlinterp>, L<perlhacktut>, and L<perlhacktips>

See L</perlhack and perlrepository revamp>, below.

=head2 Changes to Existing Documentation

=head3 L<perlmodlib> is now complete

The L<perlmodlib> manpage that came with Perl 5.12.0 was missing several
modules due to a bug in the script that generates the list.  This has been
fixed [perl #74332] (5.12.1).

=head3 Replace incorrect tr/// table in L<perlebcdic>

L<perlebcdic> contains a helpful table to use in C<tr///> to convert
between EBCDIC and Latin1/ASCII.  The table was the inverse of the one
it describes, though the code that used the table worked correctly for
the specific example given.

The table has been corrected and the sample code changed to correspond.

The table has also been changed to hex from octal, and the recipes in the
pod have been altered to print out leading zeros to make all values
the same length.

=head3 Tricks for user-defined casing

L<perlunicode> now contains an explanation of how to override, mangle
and otherwise tweak the way Perl handles upper-, lower- and other-case
conversions on Unicode data, and how to provide scoped changes to alter
one's own code's behaviour without stomping on anybody else's.

=head3 INSTALL explicitly states that Perl requires a C89 compiler

This was already true, but it's now Officially Stated For The Record
(5.12.2).

=head3 Explanation of C<\xI<HH>> and C<\oI<OOO>> escapes

L<perlop> has been updated with more detailed explanation of these two
character escapes.

=head3 B<-0I<NNN>> switch

In L<perlrun>, the behaviour of the B<-0NNN> switch for B<-0400> or higher
has been clarified (5.12.2).

=head3 Maintenance policy

L<perlpolicy> now contains the policy on what patches are acceptable for
maintenance branches (5.12.1).

=head3 Deprecation policy

L<perlpolicy> now contains the policy on compatibility and deprecation
along with definitions of terms like "deprecation" (5.12.2).

=head3 New descriptions in L<perldiag>

The following existing diagnostics are now documented:

=over 4

=item *

L<Ambiguous use of %c resolved as operator %c|perldiag/"Ambiguous use of %c resolved as operator %c">

=item *

L<Ambiguous use of %c{%s} resolved to %c%s|perldiag/"Ambiguous use of %c{%s} resolved to %c%s">

=item *

L<Ambiguous use of %c{%s[...]} resolved to %c%s[...]|perldiag/"Ambiguous use of %c{%s[...]} resolved to %c%s[...]">

=item *

L<Ambiguous use of %c{%s{...}} resolved to %c%s{...}|perldiag/"Ambiguous use of %c{%s{...}} resolved to %c%s{...}">

=item *

L<Ambiguous use of -%s resolved as -&%s()|perldiag/"Ambiguous use of -%s resolved as -&%s()">

=item *

L<Invalid strict version format (%s)|perldiag/"Invalid strict version format (%s)">

=item *

L<Invalid version format (%s)|perldiag/"Invalid version format (%s)">

=item *

L<Invalid version object|perldiag/"Invalid version object">

=back

=head3 L<perlbook>

L<perlbook> has been expanded to cover many more popular books.

=head3 C<SvTRUE> macro

The documentation for the C<SvTRUE> macro in
L<perlapi> was simply wrong in stating that
get-magic is not processed.  It has been corrected.

=head3 op manipulation functions

Several API functions that process optrees have been newly documented.

=head3 L<perlvar> revamp

L<perlvar> reorders the variables and groups them by topic.  Each variable
introduced after Perl 5.000 notes the first version in which it is 
available.  L<perlvar> also has a new section for deprecated variables to
note when they were removed.

=head3 Array and hash slices in scalar context

These are now documented in L<perldata>.

=head3 C<use locale> and formats

L<perlform> and L<perllocale> have been corrected to state that
C<use locale> affects formats.

=head3 L<overload>

L<overload>'s documentation has practically undergone a rewrite.  It
is now much more straightforward and clear.

=head3 perlhack and perlrepository revamp

The L<perlhack> document is now much shorter, and focuses on the Perl 5
development process and submitting patches to Perl.  The technical content
has been moved to several new documents, L<perlsource>, L<perlinterp>,
L<perlhacktut>, and L<perlhacktips>.  This technical content has 
been only lightly edited.

The perlrepository document has been renamed to L<perlgit>.  This new
document is just a how-to on using git with the Perl source code.
Any other content that used to be in perlrepository has been moved
to L<perlhack>.

=head3 Time::Piece examples

Examples in L<perlfaq4> have been updated to show the use of
L<Time::Piece>.

=head1 Diagnostics

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

=head2 New Diagnostics

=head3 New Errors

=over

=item Closure prototype called

This error occurs when a subroutine reference passed to an attribute
handler is called, if the subroutine is a closure [perl #68560].

=item Insecure user-defined property %s

Perl detected tainted data when trying to compile a regular
expression that contains a call to a user-defined character property
function, meaning C<\p{IsFoo}> or C<\p{InFoo}>.
See L<perlunicode/User-Defined Character Properties> and L<perlsec>.

=item panic: gp_free failed to free glob pointer - something is repeatedly re-creating entries

This new error is triggered if a destructor called on an object in a
typeglob that is being freed creates a new typeglob entry containing an
object with a destructor that creates a new entry containing an object etc.

=item Parsing code internal error (%s)

This new fatal error is produced when parsing
code supplied by an extension violates the
parser's API in a detectable way.

=item refcnt: fd %d%s

This new error only occurs if an internal consistency check fails when a
pipe is about to be closed.

=item Regexp modifier "/%c" may not appear twice

The regular expression pattern has one of the
mutually exclusive modifiers repeated.

=item Regexp modifiers "/%c" and "/%c" are mutually exclusive

The regular expression pattern has more than one of the mutually
exclusive modifiers.

=item Using !~ with %s doesn't make sense

This error occurs when C<!~> is used with C<s///r> or C<y///r>.

=back

=head3 New Warnings

=over

=item "\b{" is deprecated; use "\b\{" instead

=item "\B{" is deprecated; use "\B\{" instead

Use of an unescaped "{" immediately following a C<\b> or C<\B> is now
deprecated in order to reserve its use for Perl itself in a future release.

=item Operation "%s" returns its argument for ...

Performing an operation requiring Unicode semantics (such as case-folding)
on a Unicode surrogate or a non-Unicode character now triggers this
warning.

=item Use of qw(...) as parentheses is deprecated

See L</"Use of qw(...) as parentheses">, above, for details.

=back

=head2 Changes to Existing Diagnostics

=over 4

=item *

The "Variable $foo is not imported" warning that precedes a
C<strict 'vars'> error has now been assigned the "misc" category, so that
C<no warnings> will suppress it [perl #73712].

=item *

warn() and die() now produce "Wide character" warnings when fed a
character outside the byte range if C<STDERR> is a byte-sized handle.

=item *

The "Layer does not match this perl" error message has been replaced with
these more helpful messages [perl #73754]:

=over 4

=item *

PerlIO layer function table size (%d) does not match size expected by this
perl (%d)

=item *

PerlIO layer instance size (%d) does not match size expected by this perl
(%d)

=back

=item *

The "Found = in conditional" warning that is emitted when a constant is
assigned to a variable in a condition is now withheld if the constant is
actually a subroutine or one generated by C<use constant>, since the value
of the constant may not be known at the time the program is written
[perl #77762].

=item *

Previously, if none of the gethostbyaddr(), gethostbyname() and
gethostent() functions were implemented on a given platform, they would
all die with the message "Unsupported socket function 'gethostent' called",
with analogous messages for getnet*() and getserv*().  This has been
corrected.

=item *

The warning message about unrecognized regular expression escapes passed
through has been changed to include any literal "{" following the
two-character escape.  For example, "\q{" is now emitted instead of "\q".

=back

=head1 Utility Changes

=head3 L<perlbug(1)>

=over 4

=item *

L<perlbug> now looks in the EMAIL environment variable for a return address
if the REPLY-TO and REPLYTO variables are empty.

=item *

L<perlbug> did not previously generate a "From:" header, potentially
resulting in dropped mail; it now includes that header.

=item *

The user's address is now used as the Return-Path.

Many systems these days don't have a valid Internet domain name, and
perlbug@perl.org does not accept email with a return-path that does
not resolve.  So the user's address is now passed to sendmail so it's
less likely to get stuck in a mail queue somewhere [perl #82996].

=item *

L<perlbug> now always gives the reporter a chance to change the email
address it guesses for them (5.12.2).

=item *

L<perlbug> should no longer warn about uninitialized values when using the B<-d>
and B<-v> options (5.12.2).

=back

=head3 L<perl5db.pl>

=over

=item *

The remote terminal works after forking and spawns new sessions, one
per forked process.

=back

=head3 L<ptargrep>

=over 4

=item *

L<ptargrep> is a new utility to apply pattern matching to the contents of
files  in a tar archive.  It comes with C<Archive::Tar>.

=back

=head1 Configuration and Compilation

See also L</"Naming fixes in Policy_sh.SH may invalidate Policy.sh">,
above.

=over 4

=item *

CCINCDIR and CCLIBDIR for the mingw64 cross-compiler are now correctly
under F<$(CCHOME)\mingw\include> and F<\lib> rather than immediately below
F<$(CCHOME)>.

This means the "incpath", "libpth", "ldflags", "lddlflags" and
"ldflags_nolargefiles" values in F<Config.pm> and F<Config_heavy.pl> are now
set correctly.

=item *

C<make test.valgrind> has been adjusted to account for F<cpan/dist/ext>
separation.

=item *

On compilers that support it, B<-Wwrite-strings> is now added to cflags by
default.

=item *

The L<Encode> module can now (once again) be included in a static Perl
build.  The special-case handling for this situation got broken in Perl
5.11.0, and has now been repaired.

=item *

The previous default size of a PerlIO buffer (4096 bytes) has been increased
to the larger of 8192 bytes and your local BUFSIZ.  Benchmarks show that doubling
this decade-old default increases read and write performance by around
25% to 50% when using the default layers of perlio on top of unix.  To choose
a non-default size, such as to get back the old value or to obtain an even
larger value, configure with:

     ./Configure -Accflags=-DPERLIOBUF_DEFAULT_BUFSIZ=N

where N is the desired size in bytes; it should probably be a multiple of
your page size.

=item *

An "incompatible operand types" error in ternary expressions when building
with C<clang> has been fixed (5.12.2).

=item *

Perl now skips setuid L<File::Copy> tests on partitions it detects mounted
as C<nosuid> (5.12.2).

=back

=head1 Platform Support

=head2 New Platforms

=over 4

=item AIX

Perl now builds on AIX 4.2 (5.12.1).

=back

=head2 Discontinued Platforms

=over 4

=item Apollo DomainOS

The last vestiges of support for this platform have been excised from
the Perl distribution.  It was officially discontinued in version 5.12.0.
It had not worked for years before that.

=item MacOS Classic

The last vestiges of support for this platform have been excised from the
Perl distribution.  It was officially discontinued in an earlier version.

=back

=head2 Platform-Specific Notes

=head3 AIX

=over

=item *

F<README.aix> has been updated with information about the XL C/C++ V11 compiler
suite (5.12.2).

=back

=head3 ARM

=over

=item *

The C<d_u32align> configuration probe on ARM has been fixed (5.12.2).

=back

=head3 Cygwin

