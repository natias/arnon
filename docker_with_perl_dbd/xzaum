	0xA0000,
	0xAFFFE,
	0xB0000,
	0xBFFFE,
	0xC0000,
	0xCFFFE,
	0xD0000,
	0xDFFFE,
	0xE0100,
	0xE01F0,
	0xE1000,
	0xEFFFE,
	0xF0000,
	0xFFFFE,
	0x100000,
	0x10FFFE,
	0x110000
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_BC__BN_invlist[] = {  /* for EBCDIC 1047 */
	70,	/* Number of elements */
	148565664, /* Version and data structure type */
	0,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5,
	0x6,
	0xB,
	0xE,
	0x15,
	0x16,
	0x1C,
	0x20,
	0x25,
	0x26,
	0x40,
	0xCA,
	0xCB,
	0xFF,
	0x100,
	0x180E,
	0x180F,
	0x200B,
	0x200E,
	0x2060,
	0x2066,
	0x206A,
	0x2070,
	0xFDD0,
	0xFDF0,
	0xFEFF,
	0xFF00,
	0xFFF0,
	0xFFF9,
	0xFFFE,
	0x10000,
	0x1BCA0,
	0x1BCA4,
	0x1D173,
	0x1D17B,
	0x1FFFE,
	0x20000,
	0x2FFFE,
	0x30000,
	0x3FFFE,
	0x40000,
	0x4FFFE,
	0x50000,
	0x5FFFE,
	0x60000,
	0x6FFFE,
	0x70000,
	0x7FFFE,
	0x80000,
	0x8FFFE,
	0x90000,
	0x9FFFE,
	0xA0000,
	0xAFFFE,
	0xB0000,
	0xBFFFE,
	0xC0000,
	0xCFFFE,
	0xD0000,
	0xDFFFE,
	0xE0100,
	0xE01F0,
	0xE1000,
	0xEFFFE,
	0xF0000,
	0xFFFFE,
	0x100000,
	0x10FFFE,
	0x110000
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_BC__BN_invlist[] = {  /* for EBCDIC 037 */
	70,	/* Number of elements */
	148565664, /* Version and data structure type */
	0,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x5,
	0x6,
	0xB,
	0xE,
	0x15,
	0x16,
	0x1C,
	0x20,
	0x25,
	0x26,
	0x40,
	0xCA,
	0xCB,
	0xFF,
	0x100,
	0x180E,
	0x180F,
	0x200B,
	0x200E,
	0x2060,
	0x2066,
	0x206A,
	0x2070,
	0xFDD0,
	0xFDF0,
	0xFEFF,
	0xFF00,
	0xFFF0,
	0xFFF9,
	0xFFFE,
	0x10000,
	0x1BCA0,
	0x1BCA4,
	0x1D173,
	0x1D17B,
	0x1FFFE,
	0x20000,
	0x2FFFE,
	0x30000,
	0x3FFFE,
	0x40000,
	0x4FFFE,
	0x50000,
	0x5FFFE,
	0x60000,
	0x6FFFE,
	0x70000,
	0x7FFFE,
	0x80000,
	0x8FFFE,
	0x90000,
	0x9FFFE,
	0xA0000,
	0xAFFFE,
	0xB0000,
	0xBFFFE,
	0xC0000,
	0xCFFFE,
	0xD0000,
	0xDFFFE,
	0xE0100,
	0xE01F0,
	0xE1000,
	0xEFFFE,
	0xF0000,
	0xFFFFE,
	0x100000,
	0x10FFFE,
	0x110000
};

#  endif	/* EBCDIC 037 */

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_BC__CS_invlist[] = {  /* for ASCII/Latin1 */
	27,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2C,
	0x2D,
	0x2E,
	0x30,
	0x3A,
	0x3B,
	0xA0,
	0xA1,
	0x60C,
	0x60D,
	0x202F,
	0x2030,
	0x2044,
	0x2045,
	0xFE50,
	0xFE51,
	0xFE52,
	0xFE53,
	0xFE55,
	0xFE56,
	0xFF0C,
	0xFF0D,
	0xFF0E,
	0xFF10,
	0xFF1A,
	0xFF1B
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_BC__CS_invlist[] = {  /* for EBCDIC 1047 */
	29,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x41,
	0x42,
	0x4B,
	0x4C,
	0x61,
	0x62,
	0x6B,
	0x6C,
	0x7A,
	0x7B,
	0x60C,
	0x60D,
	0x202F,
	0x2030,
	0x2044,
	0x2045,
	0xFE50,
	0xFE51,
	0xFE52,
	0xFE53,
	0xFE55,
	0xFE56,
	0xFF0C,
	0xFF0D,
	0xFF0E,
	0xFF10,
	0xFF1A,
	0xFF1B
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_BC__CS_invlist[] = {  /* for EBCDIC 037 */
	29,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x41,
	0x42,
	0x4B,
	0x4C,
	0x61,
	0x62,
	0x6B,
	0x6C,
	0x7A,
	0x7B,
	0x60C,
	0x60D,
	0x202F,
	0x2030,
	0x2044,
	0x2045,
	0xFE50,
	0xFE51,
	0xFE52,
	0xFE53,
	0xFE55,
	0xFE56,
	0xFF0C,
	0xFF0D,
	0xFF0E,
	0xFF10,
	0xFF1A,
	0xFF1B
};

#  endif	/* EBCDIC 037 */

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_BC__EN_invlist[] = {  /* for ASCII/Latin1 */
	27,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x30,
	0x3A,
	0xB2,
	0xB4,
	0xB9,
	0xBA,
	0x6F0,
	0x6FA,
	0x2070,
	0x2071,
	0x2074,
	0x207A,
	0x2080,
	0x208A,
	0x2488,
	0x249C,
	0xFF10,
	0xFF1A,
	0x102E1,
	0x102FC,
	0x1D7CE,
	0x1D800,
	0x1F100,
	0x1F10B,
	0x1FBF0,
	0x1FBFA
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_BC__EN_invlist[] = {  /* for EBCDIC 1047 */
	27,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xDA,
	0xDB,
	0xEA,
	0xEB,
	0xF0,
	0xFB,
	0x6F0,
	0x6FA,
	0x2070,
	0x2071,
	0x2074,
	0x207A,
	0x2080,
	0x208A,
	0x2488,
	0x249C,
	0xFF10,
	0xFF1A,
	0x102E1,
	0x102FC,
	0x1D7CE,
	0x1D800,
	0x1F100,
	0x1F10B,
	0x1FBF0,
	0x1FBFA
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_BC__EN_invlist[] = {  /* for EBCDIC 037 */
	27,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xDA,
	0xDB,
	0xEA,
	0xEB,
	0xF0,
	0xFB,
	0x6F0,
	0x6FA,
	0x2070,
	0x2071,
	0x2074,
	0x207A,
	0x2080,
	0x208A,
	0x2488,
	0x249C,
	0xFF10,
	0xFF1A,
	0x102E1,
	0x102FC,
	0x1D7CE,
	0x1D800,
	0x1F100,
	0x1F10B,
	0x1FBF0,
	0x1FBFA
};

#  endif	/* EBCDIC 037 */

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_BC__ES_invlist[] = {  /* for ASCII/Latin1 */
	19,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2B,
	0x2C,
	0x2D,
	0x2E,
	0x207A,
	0x207C,
	0x208A,
	0x208C,
	0x2212,
	0x2213,
	0xFB29,
	0xFB2A,
	0xFE62,
	0xFE64,
	0xFF0B,
	0xFF0C,
	0xFF0D,
	0xFF0E
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_BC__ES_invlist[] = {  /* for EBCDIC 1047 */
	19,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x4E,
	0x4F,
	0x60,
	0x61,
	0x207A,
	0x207C,
	0x208A,
	0x208C,
	0x2212,
	0x2213,
	0xFB29,
	0xFB2A,
	0xFE62,
	0xFE64,
	0xFF0B,
	0xFF0C,
	0xFF0D,
	0xFF0E
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_BC__ES_invlist[] = {  /* for EBCDIC 037 */
	19,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x4E,
	0x4F,
	0x60,
	0x61,
	0x207A,
	0x207C,
	0x208A,
	0x208C,
	0x2212,
	0x2213,
	0xFB29,
	0xFB2A,
	0xFE62,
	0xFE64,
	0xFF0B,
	0xFF0C,
	0xFF0D,
	0xFF0E
};

#  endif	/* EBCDIC 037 */

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_BC__ET_invlist[] = {  /* for ASCII/Latin1 */
	49,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x23,
	0x26,
	0xA2,
	0xA6,
	0xB0,
	0xB2,
	0x58F,
	0x590,
	0x609,
	0x60B,
	0x66A,
	0x66B,
	0x9F2,
	0x9F4,
	0x9FB,
	0x9FC,
	0xAF1,
	0xAF2,
	0xBF9,
	0xBFA,
	0xE3F,
	0xE40,
	0x17DB,
	0x17DC,
	0x2030,
	0x2035,
	0x20A0,
	0x20D0,
	0x212E,
	0x212F,
	0x2213,
	0x2214,
	0xA838,
	0xA83A,
	0xFE5F,
	0xFE60,
	0xFE69,
	0xFE6B,
	0xFF03,
	0xFF06,
	0xFFE0,
	0xFFE2,
	0xFFE5,
	0xFFE7,
	0x11FDD,
	0x11FE1,
	0x1E2FF,
	0x1E300
};

#  endif	/* ASCII/Latin1 */

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_BC__ET_invlist[] = {  /* for EBCDIC 1047 */
	57,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x4A,
	0x4B,
	0x5B,
	0x5C,
	0x6C,
	0x6D,
	0x7B,
	0x7C,
	0x8F,
	0x91,
	0x9F,
	0xA0,
	0xB1,
	0xB3,
	0x58F,
	0x590,
	0x609,
	0x60B,
	0x66A,
	0x66B,
	0x9F2,
	0x9F4,
	0x9FB,
	0x9FC,
	0xAF1,
	0xAF2,
	0xBF9,
	0xBFA,
	0xE3F,
	0xE40,
	0x17DB,
	0x17DC,
	0x2030,
	0x2035,
	0x20A0,
	0x20D0,
	0x212E,
	0x212F,
	0x2213,
	0x2214,
	0xA838,
	0xA83A,
	0xFE5F,
	0xFE60,
	0xFE69,
	0xFE6B,
	0xFF03,
	0xFF06,
	0xFFE0,
	0xFFE2,
	0xFFE5,
	0xFFE7,
	0x11FDD,
	0x11FE1,
	0x1E2FF,
	0x1E300
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_BC__ET_invlist[] = {  /* for EBCDIC 037 */
	57,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x4A,
	0x4B,
	0x5B,
	0x5C,
	0x6C,
	0x6D,
	0x7B,
	0x7C,
	0x8F,
	0x91,
	0x9F,
	0xA0,
	0xB1,
	0xB3,
	0x58F,
	0x590,
	0x609,
	0x60B,
	0x66A,
	0x66B,
	0x9F2,
	0x9F4,
	0x9FB,
	0x9FC,
	0xAF1,
	0xAF2,
	0xBF9,
	0xBFA,
	0xE3F,
	0xE40,
	0x17DB,
	0x17DC,
	0x2030,
	0x2035,
	0x20A0,
	0x20D0,
	0x212E,
	0x212F,
	0x2213,
	0x2214,
	0xA838,
	0xA83A,
	0xFE5F,
	0xFE60,
	0xFE69,
	0xFE6B,
	0xFF03,
	0xFF06,
	0xFFE0,
	0xFFE2,
	0xFFE5,
	0xFFE7,
	0x11FDD,
	0x11FE1,
	0x1E2FF,
	0x1E300
};

#  endif	/* EBCDIC 037 */

static const UV UNI_BC__FSI_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2068,
	0x2069
};

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_BC__L_invlist[] = {  /* for ASCII/Latin1 */
	942,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x41,
	0x5B,
	0x61,
	0x7B,
	0xAA,
	0xAB,
	0xB5,
	0xB6,
	0xBA,
	0xBB,
	0xC0,
	0xD7,
	0xD8,
	0xF7,
	0xF8,
	0x2B9,
	0x2BB,
	0x2C2,
	0x2D0,
	0x2D2,
	0x2E0,
	0x2E5,
	0x2EE,
	0x2EF,
	0x370,
	0x374,
	0x376,
	0x37E,
	0x37F,
	0x384,
	0x386,
	0x387,
	0x388,
	0x3F6,
	0x3F7,
	0x483,
	0x48A,
	0x58A,
	0x58B,
	0x58D,
	0x903,
	0x93A,
	0x93B,
	0x93C,
	0x93D,
	0x941,
	0x949,
	0x94D,
	0x94E,
	0x951,
	0x958,
	0x962,
	0x964,
	0x981,
	0x982,
	0x9BC,
	0x9BD,
	0x9C1,
	0x9C5,
	0x9CD,
	0x9CE,
	0x9E2,
	0x9E4,
	0x9F2,
	0x9F4,
	0x9FB,
	0x9FC,
	0x9FE,
	0x9FF,
	0xA01,
	0xA03,
	0xA3C,
	0xA3D,
	0xA41,
	0xA43,
	0xA47,
	0xA49,
	0xA4B,
	0xA4E,
	0xA51,
	0xA52,
	0xA70,
	0xA72,
	0xA75,
	0xA76,
	0xA81,
	0xA83,
	0xABC,
	0xABD,
	0xAC1,
	0xAC6,
	0xAC7,
	0xAC9,
	0xACD,
	0xACE,
	0xAE2,
	0xAE4,
	0xAF1,
	0xAF2,
	0xAFA,
	0xB00,
	0xB01,
	0xB02,
	0xB3C,
	0xB3D,
	0xB3F,
	0xB40,
	0xB41,
	0xB45,
	0xB4D,
	0xB4E,
	0xB55,
	0xB57,
	0xB62,
	0xB64,
	0xB82,
	0xB83,
	0xBC0,
	0xBC1,
	0xBCD,
	0xBCE,
	0xBF3,
	0xBFB,
	0xC00,
	0xC01,
	0xC04,
	0xC05,
	0xC3C,
	0xC3D,
	0xC3E,
	0xC41,
	0xC46,
	0xC49,
	0xC4A,
	0xC4E,
	0xC55,
	0xC57,
	0xC62,
	0xC64,
	0xC78,
	0xC7F,
	0xC81,
	0xC82,
	0xCBC,
	0xCBD,
	0xCCC,
	0xCCE,
	0xCE2,
	0xCE4,
	0xD00,
	0xD02,
	0xD3B,
	0xD3D,
	0xD41,
	0xD45,
	0xD4D,
	0xD4E,
	0xD62,
	0xD64,
	0xD81,
	0xD82,
	0xDCA,
	0xDCB,
	0xDD2,
	0xDD5,
	0xDD6,
	0xDD7,
	0xE31,
	0xE32,
	0xE34,
	0xE3B,
	0xE3F,
	0xE40,
	0xE47,
	0xE4F,
	0xEB1,
	0xEB2,
	0xEB4,
	0xEBD,
	0xEC8,
	0xECE,
	0xF18,
	0xF1A,
	0xF35,
	0xF36,
	0xF37,
	0xF38,
	0xF39,
	0xF3E,
	0xF71,
	0xF7F,
	0xF80,
	0xF85,
	0xF86,
	0xF88,
	0xF8D,
	0xF98,
	0xF99,
	0xFBD,
	0xFC6,
	0xFC7,
	0x102D,
	0x1031,
	0x1032,
	0x1038,
	0x1039,
	0x103B,
	0x103D,
	0x103F,
	0x1058,
	0x105A,
	0x105E,
	0x1061,
	0x1071,
	0x1075,
	0x1082,
	0x1083,
	0x1085,
	0x1087,
	0x108D,
	0x108E,
	0x109D,
	0x109E,
	0x135D,
	0x1360,
	0x1390,
	0x139A,
	0x1400,
	0x1401,
	0x1680,
	0x1681,
	0x169B,
	0x169D,
	0x1712,
	0x1715,
	0x1732,
	0x1734,
	0x1752,
	0x1754,
	0x1772,
	0x1774,
	0x17B4,
	0x17B6,
	0x17B7,
	0x17BE,
	0x17C6,
	0x17C7,
	0x17C9,
	0x17D4,
	0x17DB,
	0x17DC,
