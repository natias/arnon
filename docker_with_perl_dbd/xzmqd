     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

static const UV UNI_SC_invlist[] = {  /* for EBCDIC 1047 */
	47,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x4A,
	0x4B,
	0x5B,
	0x5C,
	0x9F,
	0xA0,
	0xB1,
	0xB3,
	0x58F,
	0x590,
	0x60B,
	0x60C,
	0x7FE,
	0x800,
	0x9F2,
	0x9F4,
	0x9FB,
	0x9FC,
	0xAF1,
	0xAF2,
	0xBF9,
	0xBFA,
	0xE3F,
	0xE40,
	0x17DB,
	0x17DC,
	0x20A0,
	0x20C1,
	0xA838,
	0xA839,
	0xFDFC,
	0xFDFD,
	0xFE69,
	0xFE6A,
	0xFF04,
	0xFF05,
	0xFFE0,
	0xFFE2,
	0xFFE5,
	0xFFE7,
	0x11FDD,
	0x11FE1,
	0x1E2FF,
	0x1E300,
	0x1ECB0,
	0x1ECB1
};

#  endif	/* EBCDIC 1047 */

#  if 'A' == 193 /* EBCDIC 037 */ \
     && '\\' == 224 && '[' == 186 && ']' == 187 && '{' == 192 && '}' == 208 \
     && '^' == 176 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 37

static const UV UNI_SC_invlist[] = {  /* for EBCDIC 037 */
	47,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x4A,
	0x4B,
	0x5B,
	0x5C,
	0x9F,
	0xA0,
	0xB1,
	0xB3,
	0x58F,
	0x590,
	0x60B,
	0x60C,
	0x7FE,
	0x800,
	0x9F2,
	0x9F4,
	0x9FB,
	0x9FC,
	0xAF1,
	0xAF2,
	0xBF9,
	0xBFA,
	0xE3F,
	0xE40,
	0x17DB,
	0x17DC,
	0x20A0,
	0x20C1,
	0xA838,
	0xA839,
	0xFDFC,
	0xFDFD,
	0xFE69,
	0xFE6A,
	0xFF04,
	0xFF05,
	0xFFE0,
	0xFFE2,
	0xFFE5,
	0xFFE7,
	0x11FDD,
	0x11FE1,
	0x1E2FF,
	0x1E300,
	0x1ECB0,
	0x1ECB1
};

#  endif	/* EBCDIC 037 */

static const UV UNI_SC__ADLM_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1E900,
	0x1E94C,
	0x1E950,
	0x1E95A,
	0x1E95E,
	0x1E960
};

static const UV UNI_SC__ARAB_invlist[] = {  /* for all charsets */
	117,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x600,
	0x605,
	0x606,
	0x60C,
	0x60D,
	0x61B,
	0x61C,
	0x61F,
	0x620,
	0x640,
	0x641,
	0x64B,
	0x656,
	0x670,
	0x671,
	0x6DD,
	0x6DE,
	0x700,
	0x750,
	0x780,
	0x870,
	0x88F,
	0x890,
	0x892,
	0x898,
	0x8E2,
	0x8E3,
	0x900,
	0xFB50,
	0xFBC3,
	0xFBD3,
	0xFD3E,
	0xFD40,
	0xFD90,
	0xFD92,
	0xFDC8,
	0xFDCF,
	0xFDD0,
	0xFDF0,
	0xFE00,
	0xFE70,
	0xFE75,
	0xFE76,
	0xFEFD,
	0x10E60,
	0x10E7F,
	0x10EFD,
	0x10F00,
	0x1EE00,
	0x1EE04,
	0x1EE05,
	0x1EE20,
	0x1EE21,
	0x1EE23,
	0x1EE24,
	0x1EE25,
	0x1EE27,
	0x1EE28,
	0x1EE29,
	0x1EE33,
	0x1EE34,
	0x1EE38,
	0x1EE39,
	0x1EE3A,
	0x1EE3B,
	0x1EE3C,
	0x1EE42,
	0x1EE43,
	0x1EE47,
	0x1EE48,
	0x1EE49,
	0x1EE4A,
	0x1EE4B,
	0x1EE4C,
	0x1EE4D,
	0x1EE50,
	0x1EE51,
	0x1EE53,
	0x1EE54,
	0x1EE55,
	0x1EE57,
	0x1EE58,
	0x1EE59,
	0x1EE5A,
	0x1EE5B,
	0x1EE5C,
	0x1EE5D,
	0x1EE5E,
	0x1EE5F,
	0x1EE60,
	0x1EE61,
	0x1EE63,
	0x1EE64,
	0x1EE65,
	0x1EE67,
	0x1EE6B,
	0x1EE6C,
	0x1EE73,
	0x1EE74,
	0x1EE78,
	0x1EE79,
	0x1EE7D,
	0x1EE7E,
	0x1EE7F,
	0x1EE80,
	0x1EE8A,
	0x1EE8B,
	0x1EE9C,
	0x1EEA1,
	0x1EEA4,
	0x1EEA5,
	0x1EEAA,
	0x1EEAB,
	0x1EEBC,
	0x1EEF0,
	0x1EEF2
};

static const UV UNI_SC__BENG_invlist[] = {  /* for all charsets */
	29,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x980,
	0x984,
	0x985,
	0x98D,
	0x98F,
	0x991,
	0x993,
	0x9A9,
	0x9AA,
	0x9B1,
	0x9B2,
	0x9B3,
	0x9B6,
	0x9BA,
	0x9BC,
	0x9C5,
	0x9C7,
	0x9C9,
	0x9CB,
	0x9CF,
	0x9D7,
	0x9D8,
	0x9DC,
	0x9DE,
	0x9DF,
	0x9E4,
	0x9E6,
	0x9FF
};

static const UV UNI_SC__BOPO_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2EA,
	0x2EC,
	0x3105,
	0x3130,
	0x31A0,
	0x31C0
};

static const UV UNI_SC__BUGI_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1A00,
	0x1A1C,
	0x1A1E,
	0x1A20
};

static const UV UNI_SC__BUHD_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1740,
	0x1754
};

static const UV UNI_SC__CAKM_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11100,
	0x11135,
	0x11136,
	0x11148
};

static const UV UNI_SC__COPT_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x3E2,
	0x3F0,
	0x2C80,
	0x2CF4,
	0x2CF9,
	0x2D00
};

static const UV UNI_SC__CPMN_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x12F90,
	0x12FF3
};

static const UV UNI_SC__CPRT_invlist[] = {  /* for all charsets */
	13,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10800,
	0x10806,
	0x10808,
	0x10809,
	0x1080A,
	0x10836,
	0x10837,
	0x10839,
	0x1083C,
	0x1083D,
	0x1083F,
	0x10840
};

static const UV UNI_SC__CYRL_invlist[] = {  /* for all charsets */
	21,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x400,
	0x485,
	0x487,
	0x530,
	0x1C80,
	0x1C89,
	0x1D2B,
	0x1D2C,
	0x1D78,
	0x1D79,
	0x2DE0,
	0x2E00,
	0xA640,
	0xA6A0,
	0xFE2E,
	0xFE30,
	0x1E030,
	0x1E06E,
	0x1E08F,
	0x1E090
};

static const UV UNI_SC__DEVA_invlist[] = {  /* for all charsets */
	11,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x900,
	0x951,
	0x955,
	0x964,
	0x966,
	0x980,
	0xA8E0,
	0xA900,
	0x11B00,
	0x11B0A
};

static const UV UNI_SC__DOGR_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11800,
	0x1183C
};

static const UV UNI_SC__DUPL_invlist[] = {  /* for all charsets */
	11,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1BC00,
	0x1BC6B,
	0x1BC70,
	0x1BC7D,
	0x1BC80,
	0x1BC89,
	0x1BC90,
	0x1BC9A,
	0x1BC9C,
	0x1BCA0
};

static const UV UNI_SC__GEOR_invlist[] = {  /* for all charsets */
	21,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x10A0,
	0x10C6,
	0x10C7,
	0x10C8,
	0x10CD,
	0x10CE,
	0x10D0,
	0x10FB,
	0x10FC,
	0x1100,
	0x1C90,
	0x1CBB,
	0x1CBD,
	0x1CC0,
	0x2D00,
	0x2D26,
	0x2D27,
	0x2D28,
	0x2D2D,
	0x2D2E
};

static const UV UNI_SC__GLAG_invlist[] = {  /* for all charsets */
	13,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2C00,
	0x2C60,
	0x1E000,
	0x1E007,
	0x1E008,
	0x1E019,
	0x1E01B,
	0x1E022,
	0x1E023,
	0x1E025,
	0x1E026,
	0x1E02B
};

static const UV UNI_SC__GONG_invlist[] = {  /* for all charsets */
	13,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11D60,
	0x11D66,
	0x11D67,
	0x11D69,
	0x11D6A,
	0x11D8F,
	0x11D90,
	0x11D92,
	0x11D93,
	0x11D99,
	0x11DA0,
	0x11DAA
};

static const UV UNI_SC__GONM_invlist[] = {  /* for all charsets */
	15,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11D00,
	0x11D07,
	0x11D08,
	0x11D0A,
	0x11D0B,
	0x11D37,
	0x11D3A,
	0x11D3B,
	0x11D3C,
	0x11D3E,
	0x11D3F,
	0x11D48,
	0x11D50,
	0x11D5A
};

static const UV UNI_SC__GRAN_invlist[] = {  /* for all charsets */
	31,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11300,
	0x11304,
	0x11305,
	0x1130D,
	0x1130F,
	0x11311,
	0x11313,
	0x11329,
	0x1132A,
	0x11331,
	0x11332,
	0x11334,
	0x11335,
	0x1133A,
	0x1133C,
	0x11345,
	0x11347,
	0x11349,
	0x1134B,
	0x1134E,
	0x11350,
	0x11351,
	0x11357,
	0x11358,
	0x1135D,
	0x11364,
	0x11366,
	0x1136D,
	0x11370,
	0x11375
};

static const UV UNI_SC__GREK_invlist[] = {  /* for all charsets */
	73,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x370,
	0x374,
	0x375,
	0x378,
	0x37A,
	0x37E,
	0x37F,
	0x380,
	0x384,
	0x385,
	0x386,
	0x387,
	0x388,
	0x38B,
	0x38C,
	0x38D,
	0x38E,
	0x3A2,
	0x3A3,
	0x3E2,
	0x3F0,
	0x400,
	0x1D26,
	0x1D2B,
	0x1D5D,
	0x1D62,
	0x1D66,
	0x1D6B,
	0x1DBF,
	0x1DC0,
	0x1F00,
	0x1F16,
	0x1F18,
	0x1F1E,
	0x1F20,
	0x1F46,
	0x1F48,
	0x1F4E,
	0x1F50,
	0x1F58,
	0x1F59,
	0x1F5A,
	0x1F5B,
	0x1F5C,
	0x1F5D,
	0x1F5E,
	0x1F5F,
	0x1F7E,
	0x1F80,
	0x1FB5,
	0x1FB6,
	0x1FC5,
	0x1FC6,
	0x1FD4,
	0x1FD6,
	0x1FDC,
	0x1FDD,
	0x1FF0,
	0x1FF2,
	0x1FF5,
	0x1FF6,
	0x1FFF,
	0x2126,
	0x2127,
	0xAB65,
	0xAB66,
	0x10140,
	0x1018F,
	0x101A0,
	0x101A1,
	0x1D200,
	0x1D246
};

static const UV UNI_SC__GUJR_invlist[] = {  /* for all charsets */
	29,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA81,
	0xA84,
	0xA85,
	0xA8E,
	0xA8F,
	0xA92,
	0xA93,
	0xAA9,
	0xAAA,
	0xAB1,
	0xAB2,
	0xAB4,
	0xAB5,
	0xABA,
	0xABC,
	0xAC6,
	0xAC7,
	0xACA,
	0xACB,
	0xACE,
	0xAD0,
	0xAD1,
	0xAE0,
	0xAE4,
	0xAE6,
	0xAF2,
	0xAF9,
	0xB00
};

static const UV UNI_SC__GURU_invlist[] = {  /* for all charsets */
	33,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA01,
	0xA04,
	0xA05,
	0xA0B,
	0xA0F,
	0xA11,
	0xA13,
	0xA29,
	0xA2A,
	0xA31,
	0xA32,
	0xA34,
	0xA35,
	0xA37,
	0xA38,
	0xA3A,
	0xA3C,
	0xA3D,
	0xA3E,
	0xA43,
	0xA47,
	0xA49,
	0xA4B,
	0xA4E,
	0xA51,
	0xA52,
	0xA59,
	0xA5D,
	0xA5E,
	0xA5F,
	0xA66,
	0xA77
};

static const UV UNI_SC__HAN_invlist[] = {  /* for all charsets */
	43,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x2E80,
	0x2E9A,
	0x2E9B,
	0x2EF4,
	0x2F00,
	0x2FD6,
	0x3005,
	0x3006,
	0x3007,
	0x3008,
	0x3021,
	0x302A,
	0x3038,
	0x303C,
	0x3400,
	0x4DC0,
	0x4E00,
	0xA000,
	0xF900,
	0xFA6E,
	0xFA70,
	0xFADA,
	0x16FE2,
	0x16FE4,
	0x16FF0,
	0x16FF2,
	0x20000,
	0x2A6E0,
	0x2A700,
	0x2B73A,
	0x2B740,
	0x2B81E,
	0x2B820,
	0x2CEA2,
	0x2CEB0,
	0x2EBE1,
	0x2F800,
	0x2FA1E,
	0x30000,
	0x3134B,
	0x31350,
	0x323B0
};

static const UV UNI_SC__HANG_invlist[] = {  /* for all charsets */
	29,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1100,
	0x1200,
	0x302E,
	0x3030,
	0x3131,
	0x318F,
	0x3200,
	0x321F,
	0x3260,
	0x327F,
	0xA960,
	0xA97D,
	0xAC00,
	0xD7A4,
	0xD7B0,
	0xD7C7,
	0xD7CB,
	0xD7FC,
	0xFFA0,
	0xFFBF,
	0xFFC2,
	0xFFC8,
	0xFFCA,
	0xFFD0,
	0xFFD2,
	0xFFD8,
	0xFFDA,
	0xFFDD
};

static const UV UNI_SC__HANO_invlist[] = {  /* for all charsets */
	3,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x1720,
	0x1735
};

static const UV UNI_SC__HIRA_invlist[] = {  /* for all charsets */
	13,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x3041,
	0x3097,
	0x309D,
	0x30A0,
	0x1B001,
	0x1B120,
	0x1B132,
	0x1B133,
	0x1B150,
	0x1B153,
	0x1F200,
	0x1F201
};

static const UV UNI_SC__JAVA_invlist[] = {  /* for all charsets */
	7,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA980,
	0xA9CE,
	0xA9D0,
	0xA9DA,
	0xA9DE,
	0xA9E0
};

static const UV UNI_SC__KALI_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xA900,
	0xA92E,
	0xA92F,
	0xA930
};

static const UV UNI_SC__KANA_invlist[] = {  /* for all charsets */
	29,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x30A1,
	0x30FB,
	0x30FD,
	0x3100,
	0x31F0,
	0x3200,
	0x32D0,
	0x32FF,
	0x3300,
	0x3358,
	0xFF66,
	0xFF70,
	0xFF71,
	0xFF9E,
	0x1AFF0,
	0x1AFF4,
	0x1AFF5,
	0x1AFFC,
	0x1AFFD,
	0x1AFFF,
	0x1B000,
	0x1B001,
	0x1B120,
	0x1B123,
	0x1B155,
	0x1B156,
	0x1B164,
	0x1B168
};

static const UV UNI_SC__KHOJ_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11200,
	0x11212,
	0x11213,
	0x11242
};

static const UV UNI_SC__KNDA_invlist[] = {  /* for all charsets */
	27,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0xC80,
	0xC8D,
	0xC8E,
	0xC91,
	0xC92,
	0xCA9,
	0xCAA,
	0xCB4,
	0xCB5,
	0xCBA,
	0xCBC,
	0xCC5,
	0xCC6,
	0xCC9,
	0xCCA,
	0xCCE,
	0xCD5,
	0xCD7,
	0xCDD,
	0xCDF,
	0xCE0,
	0xCE4,
	0xCE6,
	0xCF0,
	0xCF1,
	0xCF4
};

static const UV UNI_SC__KTHI_invlist[] = {  /* for all charsets */
	5,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x11080,
	0x110C3,
	0x110CD,
	0x110CE
};

#  if 'A' == 65 /* ASCII/Latin1 */

static const UV UNI_SC__LATN_invlist[] = {  /* for ASCII/Latin1 */
	79,	/* Number of elements */
	148565664, /* Version and data structure type */
	1,	/* 0 if the list starts at 0;
		   1 if it starts at the element beyond 0 */
	0x0,
	0x41,
	0x5B,
	0x61,
	0x7B,
	0xAA,
	0xAB,
	0xBA,
	0xBB,
	0xC0,
	0xD7,
	0xD8,
	0xF7,
	0xF8,
