	0x2C82,
	0x2C83,
	0x2C84,
	0x2C85,
	0x2C86,
	0x2C87,
	0x2C88,
	0x2C89,
	0x2C8A,
	0x2C8B,
	0x2C8C,
	0x2C8D,
	0x2C8E,
	0x2C8F,
	0x2C90,
	0x2C91,
	0x2C92,
	0x2C93,
	0x2C94,
	0x2C95,
	0x2C96,
	0x2C97,
	0x2C98,
	0x2C99,
	0x2C9A,
	0x2C9B,
	0x2C9C,
	0x2C9D,
	0x2C9E,
	0x2C9F,
	0x2CA0,
	0x2CA1,
	0x2CA2,
	0x2CA3,
	0x2CA4,
	0x2CA5,
	0x2CA6,
	0x2CA7,
	0x2CA8,
	0x2CA9,
	0x2CAA,
	0x2CAB,
	0x2CAC,
	0x2CAD,
	0x2CAE,
	0x2CAF,
	0x2CB0,
	0x2CB1,
	0x2CB2,
	0x2CB3,
	0x2CB4,
	0x2CB5,
	0x2CB6,
	0x2CB7,
	0x2CB8,
	0x2CB9,
	0x2CBA,
	0x2CBB,
	0x2CBC,
	0x2CBD,
	0x2CBE,
	0x2CBF,
	0x2CC0,
	0x2CC1,
	0x2CC2,
	0x2CC3,
	0x2CC4,
	0x2CC5,
	0x2CC6,
	0x2CC7,
	0x2CC8,
	0x2CC9,
	0x2CCA,
	0x2CCB,
	0x2CCC,
	0x2CCD,
	0x2CCE,
	0x2CCF,
	0x2CD0,
	0x2CD1,
	0x2CD2,
	0x2CD3,
	0x2CD4,
	0x2CD5,
	0x2CD6,
	0x2CD7,
	0x2CD8,
	0x2CD9,
	0x2CDA,
	0x2CDB,
	0x2CDC,
	0x2CDD,
	0x2CDE,
	0x2CDF,
	0x2CE0,
	0x2CE1,
	0x2CE2,
	0x2CE3,
	0x2CEB,
	0x2CEC,
	0x2CED,
	0x2CEE,
	0x2CF2,
	0x2CF3,
	0xA640,
	0xA641,
	0xA642,
	0xA643,
	0xA644,
	0xA645,
	0xA646,
	0xA647,
	0xA648,
	0xA649,
	0xA64A,
	0xA64B,
	0xA64C,
	0xA64D,
	0xA64E,
	0xA64F,
	0xA650,
	0xA651,
	0xA652,
	0xA653,
	0xA654,
	0xA655,
	0xA656,
	0xA657,
	0xA658,
	0xA659,
	0xA65A,
	0xA65B,
	0xA65C,
	0xA65D,
	0xA65E,
	0xA65F,
	0xA660,
	0xA661,
	0xA662,
	0xA663,
	0xA664,
	0xA665,
	0xA666,
	0xA667,
	0xA668,
	0xA669,
	0xA66A,
	0xA66B,
	0xA66C,
	0xA66D,
	0xA680,
	0xA681,
	0xA682,
	0xA683,
	0xA684,
	0xA685,
	0xA686,
	0xA687,
	0xA688,
	0xA689,
	0xA68A,
	0xA68B,
	0xA68C,
	0xA68D,
	0xA68E,
	0xA68F,
	0xA690,
	0xA691,
	0xA692,
	0xA693,
	0xA694,
	0xA695,
	0xA696,
	0xA697,
	0xA698,
	0xA699,
	0xA69A,
	0xA69B,
	0xA722,
	0xA723,
	0xA724,
	0xA725,
	0xA726,
	0xA727,
	0xA728,
	0xA729,
	0xA72A,
	0xA72B,
	0xA72C,
	0xA72D,
	0xA72E,
	0xA72F,
	0xA732,
	0xA733,
	0xA734,
	0xA735,
	0xA736,
	0xA737,
	0xA738,
	0xA739,
	0xA73A,
	0xA73B,
	0xA73C,
	0xA73D,
	0xA73E,
	0xA73F,
	0xA740,
	0xA741,
	0xA742,
	0xA743,
	0xA744,
	0xA745,
	0xA746,
	0xA747,
	0xA748,
	0xA749,
	0xA74A,
	0xA74B,
	0xA74C,
	0xA74D,
	0xA74E,
	0xA74F,
	0xA750,
	0xA751,
	0xA752,
	0xA753,
	0xA754,
	0xA755,
	0xA756,
	0xA757,
	0xA758,
	0xA759,
	0xA75A,
	0xA75B,
	0xA75C,
	0xA75D,
	0xA75E,
	0xA75F,
	0xA760,
	0xA761,
	0xA762,
	0xA763,
	0xA764,
	0xA765,
	0xA766,
	0xA767,
	0xA768,
	0xA769,
	0xA76A,
	0xA76B,
	0xA76C,
	0xA76D,
	0xA76E,
	0xA76F,
	0xA779,
	0xA77A,
	0xA77B,
	0xA77C,
	0xA77D,
	0xA77E,
	0xA77F,
	0xA780,
	0xA781,
	0xA782,
	0xA783,
	0xA784,
	0xA785,
	0xA786,
	0xA787,
	0xA78B,
	0xA78C,
	0xA78D,
	0xA78E,
	0xA790,
	0xA791,
	0xA792,
	0xA793,
	0xA796,
	0xA797,
	0xA798,
	0xA799,
	0xA79A,
	0xA79B,
	0xA79C,
	0xA79D,
	0xA79E,
	0xA79F,
	0xA7A0,
	0xA7A1,
	0xA7A2,
	0xA7A3,
	0xA7A4,
	0xA7A5,
	0xA7A6,
	0xA7A7,
	0xA7A8,
	0xA7A9,
	0xA7AA,
	0xA7AB,
	0xA7AC,
	0xA7AD,
	0xA7AE,
	0xA7AF,
	0xA7B0,
	0xA7B1,
	0xA7B2,
	0xA7B3,
	0xA7B4,
	0xA7B5,
	0xA7B6,
	0xA7B7,
	0xA7B8,
	0xA7B9,
	0xA7BA,
	0xA7BB,
	0xA7BC,
	0xA7BD,
	0xA7BE,
	0xA7BF,
	0xA7C0,
	0xA7C1,
	0xA7C2,
	0xA7C3,
	0xA7C4,
	0xA7C5,
	0xA7C6,
	0xA7C7,
	0xA7C8,
	0xA7C9,
	0xA7CA,
	0xA7D0,
	0xA7D1,
	0xA7D6,
	0xA7D7,
	0xA7D8,
	0xA7D9,
	0xA7F5,
	0xA7F6,
	0xAB70,
	0xABC0,
	0xFB00,
	0xFB01,
	0xFB02,
	0xFB03,
	0xFB04,
	0xFB05,
	0xFB07,
	0xFB13,
	0xFB14,
	0xFB15,
	0xFB16,
	0xFB17,
	0xFB18,
	0xFF21,
	0xFF3B,
	0x10400,
	0x10428,
	0x104B0,
	0x104D4,
	0x10570,
	0x1057B,
	0x1057C,
	0x1058B,
	0x1058C,
	0x10593,
	0x10594,
	0x10596,
	0x10C80,
	0x10CB3,
	0x118A0,
	0x118C0,
	0x16E40,
	0x16E60,
	0x1E900,
	0x1E922
};

#  endif	/* ASCII/Latin1 */

#endif	/* (defined(PERL_IN_REGCOMP_C) && ! defined(PERL_IN_XSUB_RE)) */

#if defined(PERL_IN_UTF8_C)

#  if 'A' == 65 /* ASCII/Latin1 */

/* Negative enum values indicate the need to use an auxiliary table
 * consisting of the list of enums this one expands to.  The absolute
 * values of the negative enums are indices into a table of the auxiliary
 * tables' addresses */
typedef enum {
	CF_0 = 0,
	CF_use_AUX_TABLE_1 = -1,
	CF_use_AUX_TABLE_2 = -2,
	CF_use_AUX_TABLE_3 = -3,
	CF_use_AUX_TABLE_4 = -4,
	CF_use_AUX_TABLE_5 = -5,
	CF_use_AUX_TABLE_6 = -6,
	CF_use_AUX_TABLE_7 = -7,
	CF_use_AUX_TABLE_8 = -8,
	CF_use_AUX_TABLE_9 = -9,
	CF_use_AUX_TABLE_10 = -10,
	CF_use_AUX_TABLE_11 = -11,
	CF_use_AUX_TABLE_12 = -12,
	CF_use_AUX_TABLE_13 = -13,
	CF_use_AUX_TABLE_14 = -14,
	CF_use_AUX_TABLE_15 = -15,
	CF_use_AUX_TABLE_16 = -16,
	CF_use_AUX_TABLE_17 = -17,
	CF_use_AUX_TABLE_18 = -18,
	CF_use_AUX_TABLE_19 = -19,
	CF_use_AUX_TABLE_20 = -20,
	CF_use_AUX_TABLE_21 = -21,
	CF_use_AUX_TABLE_22 = -22,
	CF_use_AUX_TABLE_23 = -23,
	CF_use_AUX_TABLE_24 = -24,
	CF_use_AUX_TABLE_25 = -25,
	CF_use_AUX_TABLE_26 = -26,
	CF_use_AUX_TABLE_27 = -27,
	CF_use_AUX_TABLE_28 = -28,
	CF_use_AUX_TABLE_29 = -29,
	CF_use_AUX_TABLE_30 = -30,
	CF_use_AUX_TABLE_31 = -31,
	CF_use_AUX_TABLE_32 = -32,
	CF_use_AUX_TABLE_33 = -33,
	CF_use_AUX_TABLE_34 = -34,
	CF_use_AUX_TABLE_35 = -35,
	CF_use_AUX_TABLE_36 = -36,
	CF_use_AUX_TABLE_37 = -37,
	CF_use_AUX_TABLE_38 = -38,
	CF_use_AUX_TABLE_39 = -39,
	CF_use_AUX_TABLE_40 = -40,
	CF_use_AUX_TABLE_41 = -41,
	CF_use_AUX_TABLE_42 = -42,
	CF_use_AUX_TABLE_43 = -43,
	CF_use_AUX_TABLE_44 = -44,
	CF_use_AUX_TABLE_45 = -45,
	CF_use_AUX_TABLE_46 = -46,
	CF_use_AUX_TABLE_47 = -47,
	CF_use_AUX_TABLE_48 = -48,
	CF_use_AUX_TABLE_49 = -49,
	CF_use_AUX_TABLE_50 = -50,
	CF_use_AUX_TABLE_51 = -51,
	CF_use_AUX_TABLE_52 = -52,
	CF_use_AUX_TABLE_53 = -53,
	CF_use_AUX_TABLE_54 = -54,
	CF_use_AUX_TABLE_55 = -55,
	CF_use_AUX_TABLE_56 = -56,
	CF_use_AUX_TABLE_57 = -57,
	CF_use_AUX_TABLE_58 = -58,
	CF_use_AUX_TABLE_59 = -59,
	CF_use_AUX_TABLE_60 = -60,
	CF_use_AUX_TABLE_61 = -61,
	CF_use_AUX_TABLE_62 = -62,
	CF_use_AUX_TABLE_63 = -63,
	CF_use_AUX_TABLE_64 = -64,
	CF_use_AUX_TABLE_65 = -65,
	CF_use_AUX_TABLE_66 = -66,
	CF_use_AUX_TABLE_67 = -67,
	CF_use_AUX_TABLE_68 = -68,
	CF_use_AUX_TABLE_69 = -69,
	CF_use_AUX_TABLE_70 = -70,
	CF_use_AUX_TABLE_71 = -71,
	CF_use_AUX_TABLE_72 = -72,
	CF_use_AUX_TABLE_73 = -73
} CF_enum;

#define HAS_CF_AUX_TABLES

static const U32 CF_AUX_TABLE_1[] = {
	0x73,
	0x73
};

static const U32 CF_AUX_TABLE_2[] = {
	0x69,
	0x307
};

static const U32 CF_AUX_TABLE_3[] = {
	0x2BC,
	0x6E
};

static const U32 CF_AUX_TABLE_4[] = {
	0x6A,
	0x30C
};

static const U32 CF_AUX_TABLE_5[] = {
	0x3B9,
	0x308,
	0x301
};

static const U32 CF_AUX_TABLE_6[] = {
	0x3C5,
	0x308,
	0x301
};

static const U32 CF_AUX_TABLE_7[] = {
	0x565,
	0x582
};

static const U32 CF_AUX_TABLE_8[] = {
	0x68,
	0x331
};

static const U32 CF_AUX_TABLE_9[] = {
	0x74,
	0x308
};

static const U32 CF_AUX_TABLE_10[] = {
	0x77,
	0x30A
};

static const U32 CF_AUX_TABLE_11[] = {
	0x79,
	0x30A
};

static const U32 CF_AUX_TABLE_12[] = {
	0x61,
	0x2BE
};

static const U32 CF_AUX_TABLE_13[] = {
	0x3C5,
	0x313
};

static const U32 CF_AUX_TABLE_14[] = {
	0x3C5,
	0x313,
	0x300
};

static const U32 CF_AUX_TABLE_15[] = {
	0x3C5,
	0x313,
	0x301
};

static const U32 CF_AUX_TABLE_16[] = {
	0x3C5,
	0x313,
	0x342
};

static const U32 CF_AUX_TABLE_17[] = {
	0x1F00,
	0x3B9
};

static const U32 CF_AUX_TABLE_18[] = {
	0x1F01,
	0x3B9
};

static const U32 CF_AUX_TABLE_19[] = {
	0x1F02,
	0x3B9
};

static const U32 CF_AUX_TABLE_20[] = {
	0x1F03,
	0x3B9
};

static const U32 CF_AUX_TABLE_21[] = {
	0x1F04,
	0x3B9
};

static const U32 CF_AUX_TABLE_22[] = {
	0x1F05,
	0x3B9
};

static const U32 CF_AUX_TABLE_23[] = {
	0x1F06,
	0x3B9
};

static const U32 CF_AUX_TABLE_24[] = {
	0x1F07,
	0x3B9
};

static const U32 CF_AUX_TABLE_25[] = {
	0x1F20,
	0x3B9
};

static const U32 CF_AUX_TABLE_26[] = {
	0x1F21,
	0x3B9
};

static const U32 CF_AUX_TABLE_27[] = {
	0x1F22,
	0x3B9
};

static const U32 CF_AUX_TABLE_28[] = {
	0x1F23,
	0x3B9
};

static const U32 CF_AUX_TABLE_29[] = {
	0x1F24,
	0x3B9
};

static const U32 CF_AUX_TABLE_30[] = {
	0x1F25,
	0x3B9
};

static const U32 CF_AUX_TABLE_31[] = {
	0x1F26,
	0x3B9
};

static const U32 CF_AUX_TABLE_32[] = {
	0x1F27,
	0x3B9
};

static const U32 CF_AUX_TABLE_33[] = {
	0x1F60,
	0x3B9
};

static const U32 CF_AUX_TABLE_34[] = {
	0x1F61,
	0x3B9
};

static const U32 CF_AUX_TABLE_35[] = {
	0x1F62,
	0x3B9
};

static const U32 CF_AUX_TABLE_36[] = {
	0x1F63,
	0x3B9
};

static const U32 CF_AUX_TABLE_37[] = {
	0x1F64,
	0x3B9
};

static const U32 CF_AUX_TABLE_38[] = {
	0x1F65,
	0x3B9
};

static const U32 CF_AUX_TABLE_39[] = {
	0x1F66,
	0x3B9
};

static const U32 CF_AUX_TABLE_40[] = {
	0x1F67,
	0x3B9
};

static const U32 CF_AUX_TABLE_41[] = {
	0x1F70,
	0x3B9
};

static const U32 CF_AUX_TABLE_42[] = {
	0x3B1,
	0x3B9
};

static const U32 CF_AUX_TABLE_43[] = {
	0x3AC,
	0x3B9
};

static const U32 CF_AUX_TABLE_44[] = {
	0x3B1,
	0x342
};

static const U32 CF_AUX_TABLE_45[] = {
	0x3B1,
	0x342,
	0x3B9
};

static const U32 CF_AUX_TABLE_46[] = {
	0x1F74,
	0x3B9
};

static const U32 CF_AUX_TABLE_47[] = {
	0x3B7,
	0x3B9
};

static const U32 CF_AUX_TABLE_48[] = {
	0x3AE,
	0x3B9
};

static const U32 CF_AUX_TABLE_49[] = {
	0x3B7,
	0x342
};

static const U32 CF_AUX_TABLE_50[] = {
	0x3B7,
	0x342,
	0x3B9
};

static const U32 CF_AUX_TABLE_51[] = {
	0x3B9,
	0x308,
	0x300
};

static const U32 CF_AUX_TABLE_52[] = {
	0x3B9,
	0x342
};

static const U32 CF_AUX_TABLE_53[] = {
	0x3B9,
	0x308,
	0x342
};

static const U32 CF_AUX_TABLE_54[] = {
	0x3C5,
	0x308,
	0x300
};

static const U32 CF_AUX_TABLE_55[] = {
	0x3C1,
	0x313
};

static const U32 CF_AUX_TABLE_56[] = {
	0x3C5,
	0x342
};

static const U32 CF_AUX_TABLE_57[] = {
	0x3C5,
	0x308,
	0x342
};

static const U32 CF_AUX_TABLE_58[] = {
	0x1F7C,
	0x3B9
};

static const U32 CF_AUX_TABLE_59[] = {
	0x3C9,
	0x3B9
};

static const U32 CF_AUX_TABLE_60[] = {
	0x3CE,
	0x3B9
};

static const U32 CF_AUX_TABLE_61[] = {
	0x3C9,
	0x342
};

static const U32 CF_AUX_TABLE_62[] = {
	0x3C9,
	0x342,
	0x3B9
};

static const U32 CF_AUX_TABLE_63[] = {
	0x66,
	0x66
};

static const U32 CF_AUX_TABLE_64[] = {
	0x66,
	0x69
};

static const U32 CF_AUX_TABLE_65[] = {
	0x66,
	0x6C
};

static const U32 CF_AUX_TABLE_66[] = {
	0x66,
	0x66,
	0x69
};

static const U32 CF_AUX_TABLE_67[] = {
	0x66,
	0x66,
	0x6C
};

static const U32 CF_AUX_TABLE_68[] = {
	0x73,
	0x74
};

static const U32 CF_AUX_TABLE_69[] = {
	0x574,
	0x576
};

static const U32 CF_AUX_TABLE_70[] = {
	0x574,
	0x565
};

static const U32 CF_AUX_TABLE_71[] = {
	0x574,
	0x56B
};

static const U32 CF_AUX_TABLE_72[] = {
	0x57E,
	0x576
};

static const U32 CF_AUX_TABLE_73[] = {
	0x574,
	0x56D
};

static const U32 * const CF_AUX_TABLE_ptrs[] = {
	NULL,	/* Placeholder */
	CF_AUX_TABLE_1,
	CF_AUX_TABLE_2,
	CF_AUX_TABLE_3,
	CF_AUX_TABLE_4,
	CF_AUX_TABLE_5,
	CF_AUX_TABLE_6,
	CF_AUX_TABLE_7,
	CF_AUX_TABLE_8,
	CF_AUX_TABLE_9,
	CF_AUX_TABLE_10,
	CF_AUX_TABLE_11,
	CF_AUX_TABLE_12,
	CF_AUX_TABLE_13,
	CF_AUX_TABLE_14,
	CF_AUX_TABLE_15,
	CF_AUX_TABLE_16,
	CF_AUX_TABLE_17,
	CF_AUX_TABLE_18,
	CF_AUX_TABLE_19,
	CF_AUX_TABLE_20,
	CF_AUX_TABLE_21,
	CF_AUX_TABLE_22,
	CF_AUX_TABLE_23,
	CF_AUX_TABLE_24,
	CF_AUX_TABLE_25,
	CF_AUX_TABLE_26,
	CF_AUX_TABLE_27,
	CF_AUX_TABLE_28,
	CF_AUX_TABLE_29,
	CF_AUX_TABLE_30,
	CF_AUX_TABLE_31,
	CF_AUX_TABLE_32,
	CF_AUX_TABLE_33,
	CF_AUX_TABLE_34,
	CF_AUX_TABLE_35,
	CF_AUX_TABLE_36,
	CF_AUX_TABLE_37,
	CF_AUX_TABLE_38,
	CF_AUX_TABLE_39,
	CF_AUX_TABLE_40,
	CF_AUX_TABLE_41,
	CF_AUX_TABLE_42,
	CF_AUX_TABLE_43,
	CF_AUX_TABLE_44,
	CF_AUX_TABLE_45,
	CF_AUX_TABLE_46,
	CF_AUX_TABLE_47,
	CF_AUX_TABLE_48,
	CF_AUX_TABLE_49,
	CF_AUX_TABLE_50,
	CF_AUX_TABLE_51,
	CF_AUX_TABLE_52,
	CF_AUX_TABLE_53,
	CF_AUX_TABLE_54,
	CF_AUX_TABLE_55,
	CF_AUX_TABLE_56,
	CF_AUX_TABLE_57,
	CF_AUX_TABLE_58,
	CF_AUX_TABLE_59,
	CF_AUX_TABLE_60,
	CF_AUX_TABLE_61,
	CF_AUX_TABLE_62,
	CF_AUX_TABLE_63,
	CF_AUX_TABLE_64,
	CF_AUX_TABLE_65,
	CF_AUX_TABLE_66,
	CF_AUX_TABLE_67,
	CF_AUX_TABLE_68,
	CF_AUX_TABLE_69,
	CF_AUX_TABLE_70,
	CF_AUX_TABLE_71,
	CF_AUX_TABLE_72,
	CF_AUX_TABLE_73
};

/* Parallel table to the above, giving the number of elements in each table
 * pointed to */

static const U8 CF_AUX_TABLE_lengths[] = {
	0,	/* Placeholder */
	2	/* CF_AUX_TABLE_1 */,
	2	/* CF_AUX_TABLE_2 */,
	2	/* CF_AUX_TABLE_3 */,
	2	/* CF_AUX_TABLE_4 */,
	3	/* CF_AUX_TABLE_5 */,
	3	/* CF_AUX_TABLE_6 */,
	2	/* CF_AUX_TABLE_7 */,
	2	/* CF_AUX_TABLE_8 */,
	2	/* CF_AUX_TABLE_9 */,
	2	/* CF_AUX_TABLE_10 */,
	2	/* CF_AUX_TABLE_11 */,
	2	/* CF_AUX_TABLE_12 */,
	2	/* CF_AUX_TABLE_13 */,
	3	/* CF_AUX_TABLE_14 */,
	3	/* CF_AUX_TABLE_15 */,
	3	/* CF_AUX_TABLE_16 */,
	2	/* CF_AUX_TABLE_17 */,
	2	/* CF_AUX_TABLE_18 */,
	2	/* CF_AUX_TABLE_19 */,
	2	/* CF_AUX_TABLE_20 */,
	2	/* CF_AUX_TABLE_21 */,
	2	/* CF_AUX_TABLE_22 */,
	2	/* CF_AUX_TABLE_23 */,
	2	/* CF_AUX_TABLE_24 */,
	2	/* CF_AUX_TABLE_25 */,
	2	/* CF_AUX_TABLE_26 */,
	2	/* CF_AUX_TABLE_27 */,
	2	/* CF_AUX_TABLE_28 */,
	2	/* CF_AUX_TABLE_29 */,
	2	/* CF_AUX_TABLE_30 */,
	2	/* CF_AUX_TABLE_31 */,
	2	/* CF_AUX_TABLE_32 */,
	2	/* CF_AUX_TABLE_33 */,
	2	/* CF_AUX_TABLE_34 */,
	2	/* CF_AUX_TABLE_35 */,
	2	/* CF_AUX_TABLE_36 */,
	2	/* CF_AUX_TABLE_37 */,
	2	/* CF_AUX_TABLE_38 */,
	2	/* CF_AUX_TABLE_39 */,
	2	/* CF_AUX_TABLE_40 */,
	2	/* CF_AUX_TABLE_41 */,
	2	/* CF_AUX_TABLE_42 */,
	2	/* CF_AUX_TABLE_43 */,
	2	/* CF_AUX_TABLE_44 */,
	3	/* CF_AUX_TABLE_45 */,
	2	/* CF_AUX_TABLE_46 */,
	2	/* CF_AUX_TABLE_47 */,
	2	/* CF_AUX_TABLE_48 */,
	2	/* CF_AUX_TABLE_49 */,
	3	/* CF_AUX_TABLE_50 */,
	3	/* CF_AUX_TABLE_51 */,
	2	/* CF_AUX_TABLE_52 */,
	3	/* CF_AUX_TABLE_53 */,
	3	/* CF_AUX_TABLE_54 */,
	2	/* CF_AUX_TABLE_55 */,
	2	/* CF_AUX_TABLE_56 */,
	3	/* CF_AUX_TABLE_57 */,
	2	/* CF_AUX_TABLE_58 */,
	2	/* CF_AUX_TABLE_59 */,
	2	/* CF_AUX_TABLE_60 */,
	2	/* CF_AUX_TABLE_61 */,
	3	/* CF_AUX_TABLE_62 */,
	2	/* CF_AUX_TABLE_63 */,
	2	/* CF_AUX_TABLE_64 */,
	2	/* CF_AUX_TABLE_65 */,
	3	/* CF_AUX_TABLE_66 */,
	3	/* CF_AUX_TABLE_67 */,
	2	/* CF_AUX_TABLE_68 */,
	2	/* CF_AUX_TABLE_69 */,
	2	/* CF_AUX_TABLE_70 */,
	2	/* CF_AUX_TABLE_71 */,
