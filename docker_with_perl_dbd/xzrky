  AC_DEFINE_UNQUOTED([LSTAT_FOLLOWS_SLASHED_SYMLINK], [1],
		     [Define to 1 if `lstat' dereferences a symlink specified
		      with a trailing slash.])

if test "x$ac_cv_func_lstat_dereferences_slashed_symlink" = xno; then
  AC_LIBOBJ([lstat])
fi
[]_m4_defun_epi([$0])
T7,111
AS_EXIT_m4_defun_pro([$0])AS_REQUIRE([_AS_EXIT_PREPARE])[]as_fn_exit m4_ifval([$1], [$1], [$][?])[]_m4_defun_epi([$0])
T16,838
_AS_LN_S_PREPARE_m4_defun_pro([$0])rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null
[]_m4_defun_epi([$0])
F3,3
lenlen
T7,119
m4_casem4_if([$#], 0, [],
       [$#], 1, [],
       [$#], 2, [$2],
       [$1], [$2], [$3],
       [$0([$1], m4_shift3($@))])
T13,192
AC_GETLOADAVG_m4_defun_pro([$0])m4_warn([obsolete], [The macro `AC_GETLOADAVG' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AC_FUNC_GETLOADAVG], [AC_FUNC_GETLOADAVG($@)])[]_m4_defun_epi([$0])
T41,29
m4_location(AC_LANG_COMPILER(Fortran 77))./lib/autoconf/fortran.m4:255
F8,8
errprinterrprint
T10,211
m4_dumpdefm4_if([$#], [0], [m4_fatal([$0: missing argument])],
       [$#], [1], [m4_ifdef([$1], [m4_errprintn(
  [$1:	]m4_dquote(_m4_defn([$1])))], [m4_fatal([$0: undefined macro: $1])])],
       [m4_map_args([$0], $@)])
T31,30
m4_location(_AC_RUN_LOG_STDERR)./lib/autoconf/general.m4:2548
T22,147
AC_F77_LIBRARY_LDFLAGS_m4_defun_pro([$0])AC_REQUIRE([AC_PROG_F77])dnl
AC_LANG_PUSH(Fortran 77)dnl
_AC_FC_LIBRARY_LDFLAGS
AC_LANG_POP(Fortran 77)dnl
[]_m4_defun_epi([$0])
T29,27
m4_location(AC_CHECK_MEMBERS)./lib/autoconf/types.m4:948
T11,25
AN_FUNCTIONAN_OUTPUT([function], $@)
T19,210
AC_SETVBUF_REVERSED_m4_defun_pro([$0])m4_warn([obsolete], [The macro `AC_SETVBUF_REVERSED' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AC_FUNC_SETVBUF_REVERSED], [AC_FUNC_SETVBUF_REVERSED($@)])[]_m4_defun_epi([$0])
T33,36
AC_LANG_FUNC_LINK_TRY(Fortran 77)AC_LANG_PROGRAM([],
[      call $1])
T8,177
AC_PID_T_m4_defun_pro([$0])m4_warn([obsolete], [The macro `AC_PID_T' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AC_TYPE_PID_T], [AC_TYPE_PID_T($@)])[]_m4_defun_epi([$0])
T24,77
AC_LANG_BOOL_COMPILE_TRY_m4_defun_pro([$0])_AC_LANG_DISPATCH([$0], _AC_LANG, $@)[]_m4_defun_epi([$0])
T22,1791
_AC_C_C89_TEST_GLOBALS_m4_defun_pro([$0])m4_divert_text([INIT_PREPARE],
[[# Test code for whether the C compiler supports C89 (global declarations)
ac_c_conftest_c89_globals='
/* Does the compiler advertise C89 conformance?
   Do not test the value of __STDC__, because some compilers set it to 0
   while being otherwise adequately conformant. */
#if !defined __STDC__
# error "Compiler does not advertise C89 conformance"
#endif

#include <stddef.h>
#include <stdarg.h>
struct stat;
/* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */
struct buf { int x; };
struct buf * (*rcsopen) (struct buf *, struct stat *, int);
static char *e (p, i)
     char **p;
     int i;
{
  return p[i];
}
static char *f (char * (*g) (char **, int), char **p, ...)
{
  char *s;
  va_list v;
  va_start (v,p);
  s = g (p, va_arg (v,int));
  va_end (v);
  return s;
}

/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
   function prototypes and stuff, but not \xHH hex character constants.
   These do not provoke an error unfortunately, instead are silently treated
   as an "x".  The following induces an error, until -std is added to get
   proper ANSI mode.  Curiously \x00 != x always comes out true, for an
   array size at least.  It is necessary to write \x00 == 0 to get something
   that is true only with -std.  */
int osf4_cc_array ['\''\x00'\'' == 0 ? 1 : -1];

/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
   inside strings and character constants.  */
#define FOO(x) '\''x'\''
int xlc6_cc_array[FOO(a) == '\''x'\'' ? 1 : -1];

int test (int i, double x);
struct s1 {int (*f) (int a);};
struct s2 {int (*f) (double a);};
int pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),
               int, int);'
]])[]_m4_defun_epi([$0])
T22,2505
_AC_C_C99_TEST_GLOBALS_m4_defun_pro([$0])m4_divert_text([INIT_PREPARE],
[[# Test code for whether the C compiler supports C99 (global declarations)
ac_c_conftest_c99_globals='
// Does the compiler advertise C99 conformance?
#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L
# error "Compiler does not advertise C99 conformance"
#endif

#include <stdbool.h>
extern int puts (const char *);
extern int printf (const char *, ...);
extern int dprintf (int, const char *, ...);
extern void *malloc (size_t);

// Check varargs macros.  These examples are taken from C99 6.10.3.5.
// dprintf is used instead of fprintf to avoid needing to declare
// FILE and stderr.
#define debug(...) dprintf (2, __VA_ARGS__)
#define showlist(...) puts (#__VA_ARGS__)
#define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
static void
test_varargs_macros (void)
{
  int x = 1234;
  int y = 5678;
  debug ("Flag");
  debug ("X = %d\n", x);
  showlist (The first, second, and third items.);
  report (x>y, "x is %d but y is %d", x, y);
}

// Check long long types.
#define BIG64 18446744073709551615ull
#define BIG32 4294967295ul
#define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
#if !BIG_OK
  #error "your preprocessor is broken"
#endif
#if BIG_OK
#else
  #error "your preprocessor is broken"
#endif
static long long int bignum = -9223372036854775807LL;
static unsigned long long int ubignum = BIG64;

struct incomplete_array
{
  int datasize;
  double data[];
};

struct named_init {
  int number;
  const wchar_t *name;
  double average;
};

typedef const char *ccp;

static inline int
test_restrict (ccp restrict text)
{
  // See if C++-style comments work.
  // Iterate through items via the restricted pointer.
  // Also check for declarations in for loops.
  for (unsigned int i = 0; *(text+i) != '\''\0'\''; ++i)
    continue;
  return 0;
}

// Check varargs and va_copy.
static bool
test_varargs (const char *format, ...)
{
  va_list args;
  va_start (args, format);
  va_list args_copy;
  va_copy (args_copy, args);

  const char *str = "";
  int number = 0;
  float fnumber = 0;

  while (*format)
    {
      switch (*format++)
	{
	case '\''s'\'': // string
	  str = va_arg (args_copy, const char *);
	  break;
	case '\''d'\'': // int
	  number = va_arg (args_copy, int);
	  break;
	case '\''f'\'': // float
	  fnumber = va_arg (args_copy, double);
	  break;
	default:
	  break;
	}
    }
  va_end (args_copy);
  va_end (args);

  return *str && number && fnumber;
}
'
]])[]_m4_defun_epi([$0])
T18,47
_AC_OUTPUT_COMMAND  AC_MSG_NOTICE([executing $ac_file commands])

T28,90
AC_LANG_BOOL_COMPILE_TRY(Go)AC_LANG_PROGRAM([$1], [var test_array @<:@1 - 2 * !($2)@:>@int
test_array @<:@0@:>@ = 0
])
T24,1536
AC_FC_MODULE_OUTPUT_FLAG_m4_defun_pro([$0])
AC_CACHE_CHECK([Fortran 90 module output flag], [ac_cv_fc_module_output_flag],
[AC_LANG_PUSH([Fortran])
mkdir conftest.dir conftest.dir/sub
cd conftest.dir
ac_cv_fc_module_output_flag=unknown
ac_fc_module_output_flag_FCFLAGS_save=$FCFLAGS
# Flag ordering is significant: put flags late which some compilers use
# for the search path.
for ac_flag in -J '-J ' -fmod= -moddir= +moddir= -qmoddir= '-mdir ' '-mod ' \
	      '-module ' -M '-Am -M' '-e m -J '; do
  FCFLAGS="$ac_fc_module_output_flag_FCFLAGS_save ${ac_flag}sub"
  AC_COMPILE_IFELSE([[
      module conftest_module
      contains
      subroutine conftest_routine
      write(*,'(a)') 'gotcha!'
      end subroutine
      end module]],
    [cd sub
     AC_COMPILE_IFELSE([[
      program main
      use conftest_module
      call conftest_routine
      end program]],
       [ac_cv_fc_module_output_flag=$ac_flag])
     cd ..
     AS_IF([test x"$ac_cv_fc_module_output_flag" != xunknown],[break])])
done
FCFLAGS=$ac_fc_module_output_flag_FCFLAGS_save
cd ..
rm -rf conftest.dir
AC_LANG_POP([Fortran])
])
AS_IF([test x"$ac_cv_fc_module_output_flag" != xunknown],
  [FC_MODOUT=$ac_cv_fc_module_output_flag
   $1],
  [FC_MODOUT=
   m4_default([$2],
    [AC_MSG_ERROR([unable to find compiler flag to write module information to])])])
AC_SUBST([FC_MODOUT])
# Ensure trailing whitespace is preserved in a Makefile.
AC_SUBST([ac_empty], [""])
AC_CONFIG_COMMANDS_PRE([case $FC_MODOUT in #(
  *\ ) FC_MODOUT=$FC_MODOUT'${ac_empty}' ;;
esac])dnl
[]_m4_defun_epi([$0])
T32,28
m4_location(AC_ERLANG_CHECK_LIB)./lib/autoconf/erlang.m4:170
T15,95
_AC_LANG_OPENMP_m4_defun_pro([$0])AC_LANG_SOURCE([_AC_LANG_DISPATCH([$0], _AC_LANG, $@)])[]_m4_defun_epi([$0])
T26,30
m4_location(AC_PATH_PROGS)./lib/autoconf/programs.m4:165
T22,282
AC_LANG(Objective C++)ac_ext=mm
ac_cpp='$OBJCXXCPP $CPPFLAGS'
ac_compile='$OBJCXX -c $OBJCXXFLAGS $CPPFLAGS conftest.$ac_ext >&AS_MESSAGE_LOG_FD'
ac_link='$OBJCXX -o conftest$ac_exeext $OBJCXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&AS_MESSAGE_LOG_FD'
ac_compiler_gnu=$ac_cv_objcxx_compiler_gnu

T15,218
m4_map_args_sepm4_if([$#], [0], [m4_fatal([$0: too few arguments: $#])],
       [$#], [1], [],
       [$#], [2], [],
       [$#], [3], [],
       [$#], [4], [$1[$4]$2[]],
       [$1[$4]$2[]_m4_foreach([$3[]$1], [$2], m4_shift3($@))])
T21,1492
_AC_LIBOBJ_GETLOADAVGAC_LIBOBJ(getloadavg)
AC_DEFINE(C_GETLOADAVG, 1, [Define to 1 if using `getloadavg.c'.])
# Figure out what our getloadavg.c needs.
AC_CHECK_FUNCS_ONCE([setlocale])
ac_have_func=no
AC_CHECK_HEADER(sys/dg_sys_info.h,
[ac_have_func=yes
 AC_DEFINE(DGUX, 1, [Define to 1 for DGUX with <sys/dg_sys_info.h>.])
 AC_CHECK_LIB(dgc, dg_sys_info)])

# We cannot check for <dwarf.h>, because Solaris 2 does not use dwarf (it
# uses stabs), but it is still SVR4.  We cannot check for <elf.h> because
# Irix 4.0.5F has the header but not the library.
if test $ac_have_func = no && test "$ac_cv_lib_elf_elf_begin" = yes \
    && test "$ac_cv_lib_kvm_kvm_open" = yes; then
  ac_have_func=yes
  AC_DEFINE(SVR4, 1, [Define to 1 on System V Release 4.])
fi

if test $ac_have_func = no; then
  AC_CHECK_HEADER(inq_stats/cpustats.h,
  [ac_have_func=yes
   AC_DEFINE(UMAX, 1, [Define to 1 for Encore UMAX.])
   AC_DEFINE(UMAX4_3, 1,
	     [Define to 1 for Encore UMAX 4.3 that has <inq_status/cpustats.h>
	      instead of <sys/cpustats.h>.])])
fi

if test $ac_have_func = no; then
  AC_CHECK_HEADER(sys/cpustats.h,
  [ac_have_func=yes; AC_DEFINE(UMAX)])
fi

if test $ac_have_func = no; then
  AC_CHECK_HEADERS(mach/mach.h)
fi

AC_CHECK_HEADERS(nlist.h,
[AC_CHECK_MEMBERS([struct nlist.n_un.n_name],
		  [AC_DEFINE(NLIST_NAME_UNION, 1,
			     [Define to 1 if your `struct nlist' has an
			      `n_un' member.  Obsolete, depend on
			      `HAVE_STRUCT_NLIST_N_UN_N_NAME])], [],
		  [@%:@include <nlist.h>])
])dnl

F3,3
dnldnl
T17,245
AS_SHELL_SANITIZE_AS_SHELL_SANITIZE
m4_provide_if([AS_INIT], [],
[m4_provide([AS_INIT])
_AS_DETECT_REQUIRED([_AS_SHELL_FN_WORK])
_AS_DETECT_REQUIRED([_AS_MODERN_CMDSUBST_WORKS])
_AS_DETECT_REQUIRED([_AS_TEST_X_WORKS])
_AS_DETECT_BETTER_SHELL
_AS_UNSET_PREPARE
])
T28,26
m4_location(_AC_LANG_ABBREV)./lib/autoconf/lang.m4:147
T18,937
AC_FUNC_UTIME_NULL_m4_defun_pro([$0])AC_CHECK_HEADERS_ONCE([utime.h])
AC_CACHE_CHECK(whether utime accepts a null argument, ac_cv_func_utime_null,
[rm -f conftest.data; >conftest.data
# Sequent interprets utime(file, 0) to mean use start of epoch.  Wrong.
AC_RUN_IFELSE([AC_LANG_PROGRAM([AC_INCLUDES_DEFAULT
	       #ifdef HAVE_UTIME_H
	       # include <utime.h>
	       #endif],
[[struct stat s, t;
  return ! (stat ("conftest.data", &s) == 0
	    && utime ("conftest.data", 0) == 0
	    && stat ("conftest.data", &t) == 0
	    && t.st_mtime >= s.st_mtime
	    && t.st_mtime - s.st_mtime < 120);]])],
	      ac_cv_func_utime_null=yes,
	      ac_cv_func_utime_null=no,
	      ac_cv_func_utime_null='guessing yes')])
if test "x$ac_cv_func_utime_null" != xno; then
  ac_cv_func_utime_null=yes
  AC_DEFINE(HAVE_UTIME_NULL, 1,
	    [Define to 1 if `utime(file, NULL)' sets file's timestamp to the
	     present.])
fi
rm -f conftest.data
[]_m4_defun_epi([$0])
T24,29
m4_location(AC_CYGWIN32)./lib/autoconf/oldnames.m4:86
T23,30
m4_location(AC_FC_FUNC)./lib/autoconf/fortran.m4:1126
T31,29
m4_location(AC_MINUS_C_MINUS_O)./lib/autoconf/oldnames.m4:66
T15,55
_AS_TR_SH_INDIR`AS_ECHO(["_AS_ESCAPE([[$1]], [`], [\])"]) | $as_tr_sh`
T19,336
_AS_MKDIR_P_PREPARE_m4_defun_pro([$0])AS_REQUIRE_SHELL_FN([as_fn_mkdir_p],
  [AS_FUNCTION_DESCRIBE([as_fn_mkdir_p], [],
    [Create "$as_dir" as a directory, including parents if necessary.])],
[
  _AS_MKDIR_P
])if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi
[]_m4_defun_epi([$0])
T20,1874
_AC_ARG_VAR_VALIDATEm4_divert_text([INIT_PREPARE],
[# Check that the precious variables saved in the cache have kept the same
# value.
ac_cache_corrupted=false
for ac_var in $ac_precious_vars; do
  eval ac_old_set=\$ac_cv_env_${ac_var}_set
  eval ac_new_set=\$ac_env_${ac_var}_set
  eval ac_old_val=\$ac_cv_env_${ac_var}_value
  eval ac_new_val=\$ac_env_${ac_var}_value
  case $ac_old_set,$ac_new_set in
    set,)
      AS_MESSAGE([error: `$ac_var' was set to `$ac_old_val' in the previous run], 2)
      ac_cache_corrupted=: ;;
    ,set)
      AS_MESSAGE([error: `$ac_var' was not set in the previous run], 2)
      ac_cache_corrupted=: ;;
    ,);;
    *)
      if test "x$ac_old_val" != "x$ac_new_val"; then
	# differences in whitespace do not lead to failure.
	ac_old_val_w=`echo x $ac_old_val`
	ac_new_val_w=`echo x $ac_new_val`
	if test "$ac_old_val_w" != "$ac_new_val_w"; then
	  AS_MESSAGE([error: `$ac_var' has changed since the previous run:], 2)
	  ac_cache_corrupted=:
	else
	  AS_MESSAGE([warning: ignoring whitespace changes in `$ac_var' since the previous run:], 2)
	  eval $ac_var=\$ac_old_val
	fi
	AS_MESSAGE([  former value:  `$ac_old_val'], 2)
	AS_MESSAGE([  current value: `$ac_new_val'], 2)
      fi;;
  esac
  # Pass precious variables to config.status.
  if test "$ac_new_set" = set; then
    case $ac_new_val in
    *\'*) ac_arg=$ac_var=`AS_ECHO(["$ac_new_val"]) | sed "s/'/'\\\\\\\\''/g"` ;;
    *) ac_arg=$ac_var=$ac_new_val ;;
    esac
    case " $ac_configure_args " in
      *" '$ac_arg' "*) ;; # Avoid dups.  Use of quotes ensures accuracy.
      *) AS_VAR_APPEND([ac_configure_args], [" '$ac_arg'"]) ;;
    esac
  fi
done
if $ac_cache_corrupted; then
  AS_MESSAGE([error: in `$ac_pwd':], 2)
  AS_MESSAGE([error: changes in the environment can compromise the build], 2)
  AS_ERROR([run `${MAKE-make} distclean' and/or `rm $cache_file'
	    and start over])
fi])dnl

T6,158
popdefm4_if([$#], [0], [[$0]],
       [$#], [1], [m4_ifdef([$1], [_m4_popdef([$1])],
			    [m4_fatal([$0: undefined macro: $1])])],
       [m4_map_args([$0], $@)])
T32,0
m4_include(autoconf/autotest.m4)
T30,27
m4_location(AC_TYPE_MBSTATE_T)./lib/autoconf/types.m4:572
T29,27
m4_location(AC_CHECK_ALIGNOF)./lib/autoconf/types.m4:830
T16,222
_AS_BASENAME_SED_m4_defun_pro([$0])AS_ECHO([X/[]$1]) |
    sed ['/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'][]_m4_defun_epi([$0])
T22,30
m4_location(AC_LIBOBJ)./lib/autoconf/general.m4:3240
T38,29
m4_location(AC_LANG_COMPILER(Fortran))./lib/autoconf/fortran.m4:262
T21,1
_m4_divert(M4SH-INIT)6
T24,29
m4_location(AM_CYGWIN32)./lib/autoconf/oldnames.m4:85
T41,23
m4_location(AC_LANG_PREPROC(Objective C))./lib/autoconf/c.m4:823
T21,32
m4_location(AC_WAIT3)./lib/autoconf/functions.m4:2108
T24,23
m4_location(AC_PROG_CPP)./lib/autoconf/c.m4:392
T37,125
AC_LANG_BOOL_COMPILE_TRY(Objective C)AC_LANG_PROGRAM([$1], [static int test_array @<:@1 - 2 * !($2)@:>@;
test_array @<:@0@:>@ = 0;
return test_array @<:@0@:>@;
])
T25,25
m4_location(AC_LANG_PUSH)./lib/autoconf/lang.m4:98
T18,206
_m4_text_wrap_wordm4_define([m4_Cursor], m4_eval(m4_Cursor + m4_qlen([$1]) + 1))m4_if(m4_eval(m4_Cursor > ([$3])),
      [1], [m4_define([m4_Cursor], m4_eval(m4_Indent + m4_qlen([$1]) + 1))
[$2]],
      [m4_Separator[]])[$1]
T21,76
_m4_set_add_all_checkm4_if([$#], [2], [],
       [m4_set_add([$1], [$3])$0([$1], m4_shift2($@))])
T24,30
m4_location(AC_TRY_EVAL)./lib/autoconf/general.m4:2685
T21,145
AC_LANG_FUNC_LINK_TRY_m4_defun_pro([$0])m4_ifval([$1], [], [m4_warn([syntax], [$0: no function given])])dnl
_AC_LANG_DISPATCH([$0], _AC_LANG, $@)[]_m4_defun_epi([$0])
T14,107
m4_set_map_sepm4_ifdef([_m4_set_cleanup($1)], [_m4_set_contents_1c],
	  [_m4_set_contents_1])([$1])_m4_set_contents_2($@)
T13,42
AS_VAR_SET_IFAS_IF([AS_VAR_TEST_SET([$1])], [$2], [$3])
F10,7
m4_mkstempmkstemp
F10,7
m4_esyscmdesyscmd
T31,31
m4_location(AC_REPLACE_FNMATCH)./lib/autoconf/functions.m4:623
T16,514
AC_HEADER_DIRENT_m4_defun_pro([$0])m4_map_args([_AH_CHECK_HEADER_DIRENT], [dirent.h], [sys/ndir.h],
	     [sys/dir.h], [ndir.h])ac_header_dirent=no
for ac_hdr in dirent.h sys/ndir.h sys/dir.h ndir.h; do
  _AC_CHECK_HEADER_DIRENT($ac_hdr,
			  [AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_$ac_hdr), 1)
ac_header_dirent=$ac_hdr; break])
done
# Two versions of opendir et al. are in -ldir and -lx on SCO Xenix.
if test $ac_header_dirent = dirent.h; then
  AC_SEARCH_LIBS(opendir, dir)
else
  AC_SEARCH_LIBS(opendir, x)
fi
[]_m4_defun_epi([$0])
T10,54
m4_ifblankm4_if(m4_translit([[$1]],  [ ][	][
]), [], [$2], [$3])
T29,27
m4_location(AC_TYPE_UINT64_T)./lib/autoconf/types.m4:661
T14,824
_AC_PROG_CXX_Gac_test_CXXFLAGS=${CXXFLAGS+y}
ac_save_CXXFLAGS=$CXXFLAGS
AC_CACHE_CHECK(whether $CXX accepts -g, ac_cv_prog_cxx_g,
  [ac_save_cxx_werror_flag=$ac_cxx_werror_flag
   ac_cxx_werror_flag=yes
   ac_cv_prog_cxx_g=no
   CXXFLAGS="-g"
   _AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],
     [ac_cv_prog_cxx_g=yes],
     [CXXFLAGS=""
      _AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],
	[],
	[ac_cxx_werror_flag=$ac_save_cxx_werror_flag
	 CXXFLAGS="-g"
	 _AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],
	   [ac_cv_prog_cxx_g=yes])])])
   ac_cxx_werror_flag=$ac_save_cxx_werror_flag])
if test $ac_test_CXXFLAGS; then
  CXXFLAGS=$ac_save_CXXFLAGS
elif test $ac_cv_prog_cxx_g = yes; then
  if test "$GXX" = yes; then
    CXXFLAGS="-g -O2"
  else
    CXXFLAGS="-g"
  fi
else
  if test "$GXX" = yes; then
    CXXFLAGS="-O2"
  else
    CXXFLAGS=
  fi
fi[]dnl

F11,8
m4_traceofftraceoff
T10,91
AS_VAR_SETAS_LITERAL_WORD_IF([$1],
	       [$1=$2],
	       [eval "$1=_AS_ESCAPE([$2], [`], [\"$])"])
T28,24
m4_location(_AC_LANG_OPENMP)./lib/autoconf/c.m4:2288
T10,115
AS_VAR_GETAS_LITERAL_WORD_IF([$1],
	       [$$1],
  [`eval 'as_val=${'_AS_ESCAPE([[$1]], [`], [\])'};AS_ECHO(["$as_val"])'`])
T19,2
AC_LANG_SOURCE(C++)$1
T44,28
m4_location(AC_ERLANG_SUBST_INSTALL_LIB_DIR)./lib/autoconf/erlang.m4:228
T29,29
m4_location(AC_HEADER_RESOLV)./lib/autoconf/headers.m4:522
T25,30
m4_location(AC_PROG_GREP)./lib/autoconf/programs.m4:389
T14,103
AC_LANG_SOURCE_m4_defun_pro([$0])AC_LANG_DEFINES_PROVIDED[]_AC_LANG_DISPATCH([$0], _AC_LANG, $@)[]_m4_defun_epi([$0])
T39,24
m4_location(_AS_PATH_SEPARATOR_PREPARE)lib/m4sugar/m4sh.m4:1368
T25,30
m4_location(AC_PATH_PROG)./lib/autoconf/programs.m4:156
T24,23
m4_location(AC_PROG_CXX)./lib/autoconf/c.m4:701
T14,199
AS_SET_CATFILEcase $2 in @%:@((
.) AS_VAR_SET([$1], [$3]);;
*)
  case $3 in @%:@(((
  .) AS_VAR_SET([$1], [$2]);;
  [[\\/]]* | ?:[[\\/]]* ) AS_VAR_SET([$1], [$3]);;
  *) AS_VAR_SET([$1], [$2/$3]);;
  esac;;
esac[]
T34,0
m4_include(autoconf/autoheader.m4)
T19,147
AS_REQUIRE_SHELL_FNm4_provide_if([AS_SHELL_FN_$1], [],
[AS_REQUIRE([AS_SHELL_FN_$1],
[m4_provide([AS_SHELL_FN_$1])_$0($@)],
m4_default_quoted([$4], [M4SH-INIT-FN]))])
T42,23
m4_location(AC_LANG_COMPILER(Objective C))./lib/autoconf/c.m4:861
T27,31
m4_location(AC_FUNC_MALLOC)./lib/autoconf/functions.m4:978
T17,310
_AC_CHECK_HEADERSm4_if([$2$3]AS_LITERAL_IF([$1], [[yes]], [[no]]), [yes],
       [m4_map_args_w([$1], [_AC_CHECK_HEADERS_ONE_S(], [, [$4])])],
       [m4_map_args_w([$1], [_AC_CHECK_HEADERS_ONE_U(], [)])]dnl
       [AS_FOR([AC_header], [ac_header], [$1],
               [_AC_CHECK_HEADERS_ONE_C(AC_header, [$2], [$3], [$4])])])
T9,22
m4_shift2m4_shift(m4_shift($@))
T9,32
m4_shift3m4_shift(m4_shift(m4_shift($@)))
T16,82
AC_CHECK_HEADERS_m4_defun_pro([$0])_$0(m4_validate_w([$1]), [$2], [$3], [$4])[]_m4_defun_epi([$0])
T9,35
m4_shiftnm4_assert(0 < $1 && $1 < $#)_$0($@)
T16,73
AH_CHECK_HEADERSm4_foreach_w([AC_Header], [$1], [_AH_CHECK_HEADER(m4_defn([AC_Header]))])
T27,27
m4_location(AC_TYPE_SIZE_T)./lib/autoconf/types.m4:607
T30,23
m4_location(_AS_UNSET_PREPARE)lib/m4sugar/m4sh.m4:728
T10,32
m4_set_mapm4_set_map_sep([$1], [$2(], [)])
T28,30
m4_location(_AC_EVAL_STDERR)./lib/autoconf/general.m4:2665
T28,24
m4_location(AC_C_PROTOTYPES)./lib/autoconf/c.m4:2139
T8,150
m4_defunm4_define([m4_location($1)], m4_location)m4_default([$3], [m4_define])([$1],
  [_m4_defun_pro(]m4_dquote($[0])[)$2[]_m4_defun_epi(]m4_dquote($[0])[)])
T26,2
_AS_LITERAL_HEREDOC_IF_YES$1
T27,32
m4_location(AC_FUNC_MKTIME)./lib/autoconf/functions.m4:1053
T19,577
_AC_CHECK_DECL_BODY  AS_LINENO_PUSH([$[]1])
  as_decl_name=`echo $[]2|sed 's/ *(.*//'`
  AC_CACHE_CHECK([whether $][as_decl_name is declared], [$[]3],
  [as_decl_use=`echo $[]2|sed -e 's/(/((/' -e 's/)/) 0&/' -e 's/,/) 0& (/g'`
  AS_VAR_COPY([ac_save_FLAGS], [$[]6])
  AS_VAR_APPEND([$[]6], [" $[]5"])
  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[$][4]],
[[#ifndef $][as_decl_name
#ifdef __cplusplus
  (void) $][as_decl_use;
#else
  (void) $][as_decl_name;
#endif
#endif
]])],
		   [AS_VAR_SET([$[]3], [yes])],
		   [AS_VAR_SET([$[]3], [no])])
  AS_VAR_COPY([$[]6], [ac_save_FLAGS])
])
  AS_LINENO_POP

T14,185
AM_FUNC_MKTIME_m4_defun_pro([$0])m4_warn([obsolete], [The macro `AM_FUNC_MKTIME' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AC_FUNC_MKTIME], [AC_FUNC_MKTIME($@)])[]_m4_defun_epi([$0])
T32,32
m4_location(AC_SETVBUF_REVERSED)./lib/autoconf/functions.m4:1775
T10,280
m4_set_addm4_ifdef([_m4_set([$1],$2)],
	  [m4_if(m4_indir([_m4_set([$1],$2)]), [0],
		 [m4_define([_m4_set([$1],$2)],
			    [1])_m4_set_size([$1], [m4_incr])$3], [$4])],
	  [m4_define([_m4_set([$1],$2)],
		     [1])m4_pushdef([_m4_set([$1])],
				    [$2])_m4_set_size([$1], [m4_incr])$3])
T19,4
AC_AUTOCONF_VERSION2.71
T14,4951
AC_FUNC_MKTIME_m4_defun_pro([$0])AC_CHECK_HEADERS_ONCE([sys/time.h unistd.h])
AC_CHECK_FUNCS_ONCE([alarm])
AC_CACHE_CHECK([for working mktime], ac_cv_func_working_mktime,
[AC_RUN_IFELSE([AC_LANG_SOURCE(
[[/* Test program from Paul Eggert and Tony Leneis.  */
#include <time.h>
#ifdef HAVE_SYS_TIME_H
# include <sys/time.h>
#endif

#include <limits.h>
#include <stdlib.h>

#ifdef HAVE_UNISTD_H
# include <unistd.h>
#endif

#ifndef HAVE_ALARM
# define alarm(X) /* empty */
#endif

/* Work around redefinition to rpl_putenv by other config tests.  */
#undef putenv

static time_t time_t_max;
static time_t time_t_min;

/* Values we'll use to set the TZ environment variable.  */
static const char *tz_strings[] = {
  (const char *) 0, "TZ=GMT0", "TZ=JST-9",
  "TZ=EST+3EDT+2,M10.1.0/00:00:00,M2.3.0/00:00:00"
};
#define N_STRINGS (sizeof (tz_strings) / sizeof (tz_strings[0]))

/* Return 0 if mktime fails to convert a date in the spring-forward gap.
   Based on a problem report from Andreas Jaeger.  */
static int
spring_forward_gap ()
{
  /* glibc (up to about 1998-10-07) failed this test. */
  struct tm tm;

  /* Use the portable POSIX.1 specification "TZ=PST8PDT,M4.1.0,M10.5.0"
     instead of "TZ=America/Vancouver" in order to detect the bug even
     on systems that don't support the Olson extension, or don't have the
     full zoneinfo tables installed.  */
  putenv ((char*) "TZ=PST8PDT,M4.1.0,M10.5.0");

  tm.tm_year = 98;
  tm.tm_mon = 3;
  tm.tm_mday = 5;
  tm.tm_hour = 2;
  tm.tm_min = 0;
  tm.tm_sec = 0;
  tm.tm_isdst = -1;
  return mktime (&tm) != (time_t) -1;
}

static int
mktime_test1 (time_t now)
{
  struct tm *lt;
  return ! (lt = localtime (&now)) || mktime (lt) == now;
}

static int
mktime_test (time_t now)
{
  return (mktime_test1 (now)
	  && mktime_test1 ((time_t) (time_t_max - now))
	  && mktime_test1 ((time_t) (time_t_min + now)));
}

static int
irix_6_4_bug ()
{
  /* Based on code from Ariel Faigon.  */
  struct tm tm;
  tm.tm_year = 96;
  tm.tm_mon = 3;
  tm.tm_mday = 0;
  tm.tm_hour = 0;
  tm.tm_min = 0;
  tm.tm_sec = 0;
  tm.tm_isdst = -1;
  mktime (&tm);
  return tm.tm_mon == 2 && tm.tm_mday == 31;
}

static int
bigtime_test (int j)
{
  struct tm tm;
  time_t now;
  tm.tm_year = tm.tm_mon = tm.tm_mday = tm.tm_hour = tm.tm_min = tm.tm_sec = j;
  now = mktime (&tm);
  if (now != (time_t) -1)
    {
      struct tm *lt = localtime (&now);
      if (! (lt
	     && lt->tm_year == tm.tm_year
	     && lt->tm_mon == tm.tm_mon
	     && lt->tm_mday == tm.tm_mday
	     && lt->tm_hour == tm.tm_hour
	     && lt->tm_min == tm.tm_min
	     && lt->tm_sec == tm.tm_sec
	     && lt->tm_yday == tm.tm_yday
	     && lt->tm_wday == tm.tm_wday
	     && ((lt->tm_isdst < 0 ? -1 : 0 < lt->tm_isdst)
		  == (tm.tm_isdst < 0 ? -1 : 0 < tm.tm_isdst))))
	return 0;
    }
  return 1;
}

static int
year_2050_test ()
{
  /* The correct answer for 2050-02-01 00:00:00 in Pacific time,
     ignoring leap seconds.  */
  unsigned long int answer = 2527315200UL;

  struct tm tm;
  time_t t;
  tm.tm_year = 2050 - 1900;
  tm.tm_mon = 2 - 1;
  tm.tm_mday = 1;
  tm.tm_hour = tm.tm_min = tm.tm_sec = 0;
  tm.tm_isdst = -1;

  /* Use the portable POSIX.1 specification "TZ=PST8PDT,M4.1.0,M10.5.0"
     instead of "TZ=America/Vancouver" in order to detect the bug even
     on systems that don't support the Olson extension, or don't have the
     full zoneinfo tables installed.  */
  putenv ((char*) "TZ=PST8PDT,M4.1.0,M10.5.0");

  t = mktime (&tm);

  /* Check that the result is either a failure, or close enough
     to the correct answer that we can assume the discrepancy is
     due to leap seconds.  */
  return (t == (time_t) -1
	  || (0 < t && answer - 120 <= t && t <= answer + 120));
}

int
main (void)
{
  time_t t, delta;
  int i, j;

  /* This test makes some buggy mktime implementations loop.
     Give up after 60 seconds; a mktime slower than that
     isn't worth using anyway.  */
  alarm (60);

  for (;;)
    {
      t = (time_t_max << 1) + 1;
      if (t <= time_t_max)
	break;
      time_t_max = t;
    }
  time_t_min = - ((time_t) ~ (time_t) 0 == (time_t) -1) - time_t_max;

  delta = time_t_max / 997; /* a suitable prime number */
  for (i = 0; i < N_STRINGS; i++)
    {
      if (tz_strings[i])
	putenv ((char*) tz_strings[i]);

      for (t = 0; t <= time_t_max - delta; t += delta)
	if (! mktime_test (t))
	  return 1;
      if (! (mktime_test ((time_t) 1)
	     && mktime_test ((time_t) (60 * 60))
	     && mktime_test ((time_t) (60 * 60 * 24))))
	return 1;

      for (j = 1; ; j <<= 1)
	if (! bigtime_test (j))
	  return 1;
	else if (INT_MAX / 2 < j)
	  break;
      if (! bigtime_test (INT_MAX))
	return 1;
    }
  return ! (irix_6_4_bug () && spring_forward_gap () && year_2050_test ());
}]])],
	       [ac_cv_func_working_mktime=yes],
	       [ac_cv_func_working_mktime=no],
	       [ac_cv_func_working_mktime=no])])
if test $ac_cv_func_working_mktime = no; then
  AC_LIBOBJ([mktime])
fi
[]_m4_defun_epi([$0])
T18,145
AC_ERLANG_PATH_ERL_m4_defun_pro([$0])AC_ARG_VAR([ERL], [Erlang/OTP interpreter command [autodetected]])dnl
AC_PATH_TOOL(ERL, erl, [$1], [$2])
[]_m4_defun_epi([$0])
T13,192
AC_UTIME_NULL_m4_defun_pro([$0])m4_warn([obsolete], [The macro `AC_UTIME_NULL' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AC_FUNC_UTIME_NULL], [AC_FUNC_UTIME_NULL($@)])[]_m4_defun_epi([$0])
T14,28
AS_VAR_PUSHDEF_$0([$1], m4_expand([$2]))[]
T14,130
AS_VAR_PUSHDEF_m4_defun_pro([$0])AS_REQUIRE([_AS_TR_SH_PREPARE])[]_m4_popdef([$0])m4_indir([$0]m4_if([$#], [0], [], [,$@]))[]_m4_defun_epi([$0])
T14,189
AC_LONG_DOUBLE_m4_defun_pro([$0])m4_warn([obsolete], [The macro `AC_LONG_DOUBLE' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AC_C_LONG_DOUBLE], [AC_C_LONG_DOUBLE($@)])[]_m4_defun_epi([$0])
T13,174
_AC_PROG_GREP_AC_PATH_PROGS_FEATURE_CHECK([$1], [$2],
	[_AC_FEATURE_CHECK_LENGTH([ac_path_$1], [ac_cv_path_$1],
		["$ac_path_$1" $3], [$1])], [],
	[$PATH$PATH_SEPARATOR/usr/xpg4/bin])dnl

T15,56
AC_TYPE_INT64_T_m4_defun_pro([$0])_AC_TYPE_INT(64)[]_m4_defun_epi([$0])
T15,140
_AS_VAR_PUSHDEF_AS_LITERAL_IF([$2], [	 ][
])([], [as_$1=_AS_TR_SH_INDIR([$2])
m4_pushdef([$1], [$as_[$1]])],
[m4_pushdef([$1], [_AS_TR_SH_LITERAL([$2])])])
T31,29
m4_location(AC_WORDS_BIGENDIAN)./lib/autoconf/oldnames.m4:83
T21,669
_AC_LIBOBJS_NORMALIZE_m4_defun_pro([$0])ac_libobjs=
ac_ltlibobjs=
m4_ifndef([AM_C_PROTOTYPES], [U=
])dnl
for ac_i in : $LIB@&t@OBJS; do test "x$ac_i" = x: && continue
  # 1. Remove the extension, and $U if already installed.
  ac_script='s/\$U\././;s/\.o$//;s/\.obj$//'
  ac_i=`AS_ECHO(["$ac_i"]) | sed "$ac_script"`
  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR
  #    will be set to the directory where LIBOBJS objects are built.
  AS_VAR_APPEND([ac_libobjs], [" \${LIBOBJDIR}$ac_i\$U.$ac_objext"])
  AS_VAR_APPEND([ac_ltlibobjs], [" \${LIBOBJDIR}$ac_i"'$U.lo'])
done
AC_SUBST([LIB@&t@OBJS], [$ac_libobjs])
AC_SUBST([LTLIBOBJS], [$ac_ltlibobjs])
[]_m4_defun_epi([$0])
T11,70
_m4_foreachm4_if([$#], [3], [],
       [$1[$4]$2[]$0([$1], [$2], m4_shift3($@))])
T10,86
m4_tolowerm4_translit([[$1]], [ABCDEFGHIJKLMNOPQRSTUVWXYZ],
		     [abcdefghijklmnopqrstuvwxyz])
T23,117
AC_DEFINE_TRACE_LITERALm4_pattern_allow([^$1$])dnl
AS_IDENTIFIER_IF([$1], [],
  [m4_warn([syntax], [AC_DEFINE: not an identifier: $1])])dnl

T27,23
m4_location(AS_LINENO_PUSH)lib/m4sugar/m4sh.m4:979
T15,131
_AC_EVAL_STDERR_m4_defun_pro([$0])_AC_RUN_LOG_STDERR([eval $1],
		    [eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$1\""])[]_m4_defun_epi([$0])
T11,85
AS_BASENAME$as_basename -- $1 ||
_AS_BASENAME_EXPR([$1]) 2>/dev/null ||
_AS_BASENAME_SED([$1])[]
T11,124
AS_BASENAME_m4_defun_pro([$0])AS_REQUIRE([_$0_PREPARE])[]_m4_popdef([$0])m4_indir([$0]m4_if([$#], [0], [], [,$@]))[]_m4_defun_epi([$0])
T18,813
_AC_FUNC_MALLOC_IF_m4_defun_pro([$0])AC_REQUIRE([AC_CANONICAL_HOST])dnl for cross-compiles
AC_CACHE_CHECK([for GNU libc compatible malloc], ac_cv_func_malloc_0_nonnull,
[AC_RUN_IFELSE(
[AC_LANG_PROGRAM([[#include <stdlib.h>
                 ]],
		 [[void *p = malloc (0);
