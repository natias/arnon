	0x1BC9A,
	0x1BC9D,
	0x1BC9F,
	0x1BCA0,
	0x1BCA4,
	0x1CF00,
	0x1CF2E,
	0x1CF30,
	0x1CF47,
	0x1D165,
	0x1D16A,
	0x1D16D,
	0x1D173,
	0x1D17B,
	0x1D183,
	0x1D185,
	0x1D18C,
	0x1D1AA,
	0x1D1AE,
	0x1D242,
	0x1D245,
	0x1D400,
	0x1D41A,
	0x1D434,
	0x1D44E,
	0x1D455,
	0x1D456,
	0x1D468,
	0x1D482,
	0x1D49C,
	0x1D49D,
	0x1D49E,
	0x1D4A0,
	0x1D4A2,
	0x1D4A3,
	0x1D4A5,
	0x1D4A7,
	0x1D4A9,
	0x1D4AD,
	0x1D4AE,
	0x1D4B6,
	0x1D4BA,
	0x1D4BB,
	0x1D4BC,
	0x1D4BD,
	0x1D4C4,
	0x1D4C5,
	0x1D4D0,
	0x1D4EA,
	0x1D504,
	0x1D506,
	0x1D507,
	0x1D50B,
	0x1D50D,
	0x1D515,
	0x1D516,
	0x1D51D,
	0x1D51E,
	0x1D538,
	0x1D53A,
	0x1D53B,
	0x1D53F,
	0x1D540,
	0x1D545,
	0x1D546,
	0x1D547,
	0x1D54A,
	0x1D551,
	0x1D552,
	0x1D56C,
	0x1D586,
	0x1D5A0,
	0x1D5BA,
	0x1D5D4,
	0x1D5EE,
	0x1D608,
	0x1D622,
	0x1D63C,
	0x1D656,
	0x1D670,
	0x1D68A,
	0x1D6A6,
	0x1D6A8,
	0x1D6C1,
	0x1D6C2,
	0x1D6DB,
	0x1D6DC,
	0x1D6E2,
	0x1D6FB,
	0x1D6FC,
	0x1D715,
	0x1D716,
	0x1D71C,
	0x1D735,
	0x1D736,
	0x1D74F,
	0x1D750,
	0x1D756,
	0x1D76F,
	0x1D770,
	0x1D789,
	0x1D78A,
	0x1D790,
	0x1D7A9,
	0x1D7AA,
	0x1D7C3,
	0x1D7C4,
	0x1D7CA,
	0x1D7CB,
	0x1D7CC,
	0x1D7CE,
	0x1D800,
	0x1DA00,
	0x1DA37,
	0x1DA3B,
	0x1DA6D,
	0x1DA75,
	0x1DA76,
	0x1DA84,
	0x1DA85,
	0x1DA88,
	0x1DA89,
	0x1DA9B,
	0x1DAA0,
	0x1DAA1,
	0x1DAB0,
	0x1DF00,
	0x1DF0A,
	0x1DF0B,
	0x1DF1F,
	0x1DF25,
	0x1DF2B,
	0x1E000,
	0x1E007,
	0x1E008,
	0x1E019,
	0x1E01B,
	0x1E022,
	0x1E023,
	0x1E025,
	0x1E026,
	0x1E02B,
	0x1E030,
	0x1E06E,
	0x1E08F,
	0x1E090,
	0x1E100,
	0x1E12D,
	0x1E130,
	0x1E137,
	0x1E13E,
	0x1E140,
	0x1E14A,
	0x1E14E,
	0x1E14F,
	0x1E290,
	0x1E2AE,
	0x1E2AF,
	0x1E2C0,
	0x1E2EC,
	0x1E2F0,
	0x1E2FA,
	0x1E4D0,
	0x1E4EC,
	0x1E4F0,
	0x1E4FA,
	0x1E7E0,
	0x1E7E7,
	0x1E7E8,
	0x1E7EC,
	0x1E7ED,
	0x1E7EF,
	0x1E7F0,
	0x1E7FF,
	0x1E800,
	0x1E8C5,
	0x1E8D0,
	0x1E8D7,
	0x1E900,
	0x1E922,
	0x1E944,
	0x1E94B,
	0x1E94C,
	0x1E950,
	0x1E95A,
	0x1EE00,
	0x1EE04,
	0x1EE05,
	0x1EE20,
	0x1EE21,
	0x1EE23,
	0x1EE24,
	0x1EE25,
	0x1EE27,
	0x1EE28,
	0x1EE29,
	0x1EE33,
	0x1EE34,
	0x1EE38,
	0x1EE39,
	0x1EE3A,
	0x1EE3B,
	0x1EE3C,
	0x1EE42,
	0x1EE43,
	0x1EE47,
	0x1EE48,
	0x1EE49,
	0x1EE4A,
	0x1EE4B,
	0x1EE4C,
	0x1EE4D,
	0x1EE50,
	0x1EE51,
	0x1EE53,
	0x1EE54,
	0x1EE55,
	0x1EE57,
	0x1EE58,
	0x1EE59,
	0x1EE5A,
	0x1EE5B,
	0x1EE5C,
	0x1EE5D,
	0x1EE5E,
	0x1EE5F,
	0x1EE60,
	0x1EE61,
	0x1EE63,
	0x1EE64,
	0x1EE65,
	0x1EE67,
	0x1EE6B,
	0x1EE6C,
	0x1EE73,
	0x1EE74,
	0x1EE78,
	0x1EE79,
	0x1EE7D,
	0x1EE7E,
	0x1EE7F,
	0x1EE80,
	0x1EE8A,
	0x1EE8B,
	0x1EE9C,
	0x1EEA1,
	0x1EEA4,
	0x1EEA5,
	0x1EEAA,
	0x1EEAB,
	0x1EEBC,
	0x1F130,
	0x1F14A,
	0x1F150,
	0x1F16A,
	0x1F170,
	0x1F18A,
	0x1F676,
	0x1F679,
	0x1FBF0,
	0x1FBFA,
	0x20000,
	0x2A6E0,
	0x2A700,
	0x2B73A,
	0x2B740,
	0x2B81E,
	0x2B820,
	0x2CEA2,
	0x2CEB0,
	0x2EBE1,
	0x2F800,
	0x2FA1E,
	0x30000,
	0x3134B,
	0x31350,
	0x323B0,
	0xE0001,
	0xE0002,
	0xE0020,
	0xE0080,
	0xE0100,
	0xE01F0
};

#  endif	/* EBCDIC 1047 */

#endif	/* (defined(PERL_IN_REGCOMP_C) && ! defined(PERL_IN_XSUB_RE)) */

#if defined(PERL_IN_REGEXEC_C)

#  if 'A' == 193 /* EBCDIC 1047 */ \
     && '\\' == 224 && '[' == 173 && ']' == 189 && '{' == 192 && '}' == 208 \
     && '^' == 95 && '~' == 161 && '!' == 90 && '#' == 123 && '|' == 79 \
     && '$' == 91 && '@' == 124 && '`' == 121 && '\n' == 21

typedef enum {
	SB_Other = 0,
	SB_ATerm = 1,
	SB_Close = 2,
	SB_CR = 3,
	SB_EDGE = 4,
	SB_Extend = 5,
	SB_Format = 6,
	SB_LF = 7,
	SB_Lower = 8,
	SB_Numeric = 9,
	SB_OLetter = 10,
	SB_SContinue = 11,
	SB_Sep = 12,
	SB_Sp = 13,
	SB_STerm = 14,
	SB_Upper = 15
} SB_enum;

static const SB_enum _Perl_SB_invmap[] = {  /* for EBCDIC 1047 */
	SB_Other,
	SB_Sp,
	SB_Other,
	SB_Sp,
	SB_CR,
	SB_Other,
	SB_LF,
	SB_Other,
	SB_Sep,
	SB_Other,
	SB_Sp,
	SB_Lower,
	SB_Other,
	SB_ATerm,
	SB_Other,
	SB_Close,
	SB_Other,
	SB_Lower,
	SB_STerm,
	SB_Other,
	SB_Close,
	SB_Other,
	SB_SContinue,
	SB_Other,
	SB_Upper,
	SB_Other,
	SB_SContinue,
	SB_Other,
	SB_STerm,
	SB_Lower,
	SB_Upper,
	SB_Other,
	SB_SContinue,
	SB_Other,
	SB_Close,
	SB_Other,
	SB_Close,
	SB_Upper,
	SB_Lower,
	SB_Close,
	SB_Lower,
	SB_Other,
	SB_Lower,
	SB_Other,
	SB_Upper,
	SB_Other,
	SB_Lower,
	SB_Other,
	SB_Lower,
	SB_Other,
	SB_Upper,
	SB_Close,
	SB_Upper,
	SB_Other,
	SB_Upper,
	SB_Other,
	SB_Close,
	SB_Other,
	SB_Close,
	SB_Upper,
	SB_Format,
	SB_Lower,
	SB_Close,
	SB_Upper,
	SB_Other,
	SB_Lower,
	SB_Other,
	SB_Upper,
	SB_Other,
	SB_Upper,
	SB_Numeric,
	SB_Other,
	SB_Upper,
	SB_Other,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_OLetter,
	SB_Upper,
	SB_Lower,
	SB_OLetter,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_OLetter,
	SB_Lower,
	SB_OLetter,
	SB_Lower,
	SB_Other,
	SB_OLetter,
	SB_Other,
	SB_Lower,
	SB_Other,
	SB_OLetter,
	SB_Other,
	SB_OLetter,
	SB_Other,
	SB_Extend,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_OLetter,
	SB_Other,
	SB_Upper,
	SB_Lower,
	SB_Other,
	SB_Lower,
	SB_Other,
	SB_Upper,
	SB_Other,
	SB_Upper,
	SB_Other,
	SB_Upper,
	SB_Other,
	SB_Upper,
	SB_Other,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Other,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Other,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Other,
	SB_Extend,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Upper,
	SB_Lower,
	SB_Other,
	SB_Upper,
	SB_Other,
	SB_OLetter,
	SB_Other,
	SB_SContinue,
	SB_Other,
	SB_Lower,
	SB_STerm,
	SB_Other,
	SB_Extend,
	SB_Other,
	SB_Extend,
	SB_Other,
	SB_Extend,
	SB_Other,
	SB_Extend,
	SB_Other,
	SB_Extend,
	SB_Other,
	SB_OLetter,
	SB_Other,
	SB_OLetter,
	SB_Other,
	SB_Format,
	SB_Other,
	SB_SContinue,
	SB_Other,
	SB_Extend,
	SB_Other,
	SB_Format,
	SB_STerm,
	SB_OLetter,
	SB_Extend,
	SB_Numeric,
	SB_Other,
	SB_Numeric,
	SB_Other,
	SB_OLetter,
	SB_Extend,
	SB_OLetter,
	SB_STerm,
	SB_OLetter,
	SB_Extend,
	SB_Format,
	SB_Other,
	SB_Extend,
	SB_OLetter,
	SB_Extend,
	SB_Other,
